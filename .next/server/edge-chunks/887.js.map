{"version":3,"file":"edge-chunks/887.js","mappings":"wHAeO,SAASA,EAAgB,CAGV,EAHU,OAC9BC,CAAE,QACFC,CAAM,CACc,CAHU,EAI9B,OAAQC,IACN,IAAMC,EAAaH,EAAGI,IAAI,CAACF,GAC3B,GAAI,CAACC,EAAY,OAAO,EAExB,IAAME,EAAS,IACb,GAAI,CACF,OAAOC,mBAAmBC,EAC5B,CAAE,QAAM,CACN,MAAM,qBAAyC,CAAzC,IAAIC,EAAAA,EAAWA,CAAC,0BAAhB,+DAAwC,EAChD,CACF,EAEMC,EAAiB,CAAC,EACxB,IAAK,GAAM,CAACC,EAAKC,EAAM,GAAIC,OAAOC,OAAO,CAACZ,GAAS,CACjD,IAAMa,EAAQX,CAAU,CAACQ,EAAMI,GAAG,CAAC,MACrBC,IAAVF,IACEH,EAAMM,CADa,KACP,CACdR,CADgB,CACTC,EAAI,CAAGI,EAAMI,KAAK,CAAC,KAAKC,GAAG,CAAC,GAAWd,EAAOe,IAErDX,CAAM,CAACC,EAAI,CAAGL,EAAOS,GAG3B,CAEA,OAAOL,CACT,CACF,uEC3CO,IAAMY,EAURC,QAAAA,aAAmB,CAAC,CAAC,GAAE,+DCFjB,UAAgC,EAYhC,IAZwD,EAYvB,EAMjC,IANyD,EAMvB,MAAwB,sDCRrE,iDACA,EAoBA,oBAEA,gBACA,OAAe,GAAI,CACnB,mBArBA,WAGA,IAFA,EACA,EACA,IACA,EAEA,KADA,YACA,QACA,EACA,IAGA,UAEM,YAfN,MAgBA,IAfA,GAeA,CACA,SACA,EAKA,WAEA,oCACA,+kDE/CA,yBACA,wBACA,qBACA,SACA,iBACA,WACA,WACA,gBACA,UACA,EAAU,CACV,gBACA,YAEA,CAEA,eACA,SACA,4BAEA,CAEA,yBACA,UACA,CACA,aACA,6BAIA,MADA,qBACA,GAIA,wBAEA,CACA,CAIO,kBACP,eACA,MACA,wDACA,uBAMA,cACA,gCAAwC,IAAkB,EAC1D,qBACS,uBACT,aACA,cACA,eACA,CAAS,CACT,CAKA,cACA,gCAAwC,IAAkB,EAC1D,oBACA,CAAS,uBACT,aACA,cACA,eACA,CAAS,CACT,CACA,6CCpEA,kCACA,WACA,IACA,IACA,IACA,IACA,IACA,EACA,gBACA,MACA,kDACA,2CACA,yGACA,aACA,cACA,eACA,CAAa,EAEb,SACA,iCACA,mCACA,UAEA,kDACA,CACA,CAKW,yBACX,kBAA+B,EAC/B,WACA,mBAEA,YADA,IAA4B,IAAe,IAC3C,CACA,WACA,UACA,aACA,UAEA,eACA,8BACA,iBAKA,OAJA,aAAsD,IAAe,EACrE,kDAAyG,QAAe,gBAExH,OACA,CACA,CAEA,SACA,OAA+B,GAAc,WAC7C,CACA,CACA,CAAS,CACT,UACA,UACA,cAAgC,GAAO,QACvC,QAAyB,QAAyB,IAClD,wBACa,QACb,CACA,CACA,8CACA,OACA,qBACA,aAEA,eACA,uBACA,yCACA,WACA,2BACA,mBACA,2BACA,cACA,CACA,CACA,cACA,uBAEA,iBACA,yBACA,sBACA,CACA,qBACA,0DACA,aACA,+HACA,aACA,cACA,eACA,CAAa,EAEb,8BACA,wCAEA,OADA,iBAAgC,QAAW,KAC3C,YACA,KACA,UACA,QACA,CAAS,CACT,CACA,oBACA,4CAGA,OAFA,6BAA4C,QAAW,KACvD,OACA,YACA,KACA,SACA,CAAS,CACT,CACA,eACA,4CAGA,OAFA,+BACA,OACA,YACA,KACA,SACA,CAAS,CACT,CACA,CChHO,SAASC,EACdC,CAAiB,CACjBC,CAAkB,EAElB,IAAMC,EAA0B,UAAhB,OAAOD,EAAoB,IAAIE,IAAIF,GAAQA,EACrDG,EAAW,IAAID,IAAIH,EAAKC,GAGxBI,EAAaD,EAASE,MAAM,GAAKJ,EAAQI,MAAM,CAErD,MAAO,CACLN,IAAKK,EACDD,EAASG,QAAQ,GAAGC,KAAK,CAACN,EAAQI,MAAM,CAACG,MAAM,EAC/CL,EAASG,QAAQ,cACrBF,CACF,CACF,8ICTO,iBAA8B,GAAW,CAChD,eACA,sBACA,uBAEA,cACA,gCAAwC,IAAkB,EAC1D,oBACA,CAAS,uBACT,aACA,cACA,eACA,CAAS,CACT,CACA,cACA,gCAAwC,IAAkB,EAC1D,qBACS,uBACT,aACA,cACA,eACA,CAAS,CACT,CACA,YACA,gCAAwC,IAAkB,EAC1D,qBACS,uBACT,aACA,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DAAoD,0CAA2C,iCAAiC,IAAK,+DAA+D,iBAAiB,SAAS,GAAG,YAAiB,+DCMxzI,cACA,MAAW,OAAQ,uBACnB,qFCNe,SAASiW,IACtB,MACE,UAACC,EAAAA,CAAuBA,CAAvBA,CACCxb,OAAQ,IACR+Q,QAAQ,8CAGd,mECTA,qIACA,aACA,cACA,eACA,CAAC,CACD,SACA,UACA,OACA,CACA,WAGA,CACA,MACA,OACA,CACA,OACA,OACA,CACA,YACA,OACA,CACA,eACA,QACA,CACA,CACA,mEACO,oBACP,EACA,MAEA,KACA,CACO,qBACP,EACA,UAEA,SACA,CACO,oBACP,EACA,aAEA,iBACA,cACA,CACA,iDC9CA,qIACA,aACA,cACA,eACA,CAAC,CACD,SACA,UACA,OACA,CACA,WAGA,CACA,MACA,OACA,CACA,OACA,OACA,CACA,YACA,OACA,CACA,eACA,QACA,CACA,CACA,mEACO,oBACP,EACA,MAEA,KACA,+BC9BU,sBACV,mBACA,kBACA,qBACA,mBACA,GACA,IAIA,SAGO,KAQP,0BACA,UAEA,OADA,+BACA,YAdA,IAEA,2BAcO,SACP,WACA,iBACA,uGACA,aACA,cACA,eACA,CAAa,EAEb,wCACA,gBACA,CACA,gBACA,iBACA,wGACA,aACA,cACA,eACA,CAAa,CAEb,mBACA,8CAEA,gBACA,CACA,cACA,4BACA,iBACA,gBACA,CACA,qGC9CA,SAAS0K,EAAe,CAQvB,EARuB,aACtBC,CAAQ,CACRC,OAAK,cACLC,CAAY,CAKb,CARuB,EAsBtB,MAbeC,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,GAajB,IACT,CAEO,MAAMC,UAA8BrgB,EAAAA,SAAe,CASxD,OAAOsgB,yBAAyB5S,CAAU,CAAE,CAC1C,GAAI6S,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,CAAC7S,GAGlB,KAH0B,CAGnB,CAAEuS,SAFGO,CAAAA,EAAAA,EAAAA,EAAAA,CAAuBA,CAAC9S,GAEZyS,aADHM,CAAAA,EAAAA,EAAAA,EAAAA,CAAwBA,CAAC/S,EACT,CAGvC,OAAMA,CACR,CAGAgT,QAA0B,CACxB,GAAM,UAAET,CAAQ,cAAEE,CAAY,CAAE,CAAG,IAAI,CAAC5c,KAAK,QAC5B,UAAyB,MAAM,CAAvB4c,EAErB,UAACH,EAAAA,CACCC,SAAUA,EACVE,aAAcA,EACdD,MAAO,IAAM,IAAI,CAAC1c,QAAQ,CAAC,CAAEyc,SAAU,IAAK,KAK3C,IAAI,CAAC/O,KAAK,CAACwM,QAAQ,CA5B5B9H,YAAY1E,CAA4B,CAAE,CACxC,KAAK,CAACA,GACN,IAAI,CAAC3N,KAAK,CAAG,CAAE0c,SAAU,KAAME,aAAc,IAAK,CACpD,CA2BF,CAEO,SAASQ,EAAiB,CAA2C,EAA3C,aAAEjD,CAAQ,CAAiC,CAA3C,EACzBkD,EAASR,CAAAA,EAAAA,EAAAA,EAAAA,CAASA,GACxB,MACE,UAACC,EAAAA,CAAsBO,OAAQA,WAASlD,GAE5C,wDC9EO,kBAOP,OANA,sBACA,wBACA,gBACA,gBACA,sBACA,gBACA,CACA,CAAC,GAAG,EACG,cAMP,OALA,sBACA,wBACA,gBACA,gBACA,gBACA,CACA,CAAC,GAAG,+CChBG,SACP,iBACA,mBACA,mBACA,iBACA,eACA,6BACA,CACA,SACA,iBACA,4BACA,8BACA,gDAGA,oBACA,uCAEA,oBACA,oBACA,kBACA,aACA,CACA,aACA,MACA,cACA,oBACA,CACA,OACA,aACA,wBACA,cAIA,OADA,cACA,CACA,CACA,SACA,uBACA,cACA,qBACA,oBACA,wBAEA,CACA,mBACA,qDACA,6BAEA,CACA,yBACA,qCACA,eACA,0BACA,mBACA,qBACA,oBACA,CACA,CACA,QACA,mBACA,mBACA,gBACA,CACA,OACA,UACA,kBACA,CAEA,UACA,oBACA,qCACA,qBACA,qBAEA,CACA,QACA,mBACA,mBACA,gBACA,CACA,WACA,uBAEA,kBACA,sBAEA,yIChFW,uBACX,cACA,yJACA,CACA,kBACA,WACA,CACA,CACO,QACP,eACA,oBACA,WACA,UACA,YACA,aACA,UACA,0BAEA,OAA+B,GAAc,WAC7C,CACA,CACA,CAAS,CACT,CACA,CACA,yCACO,cACP,kBACA,kC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CA,0DAsDW,gBACX,MAA2B,IAAoB,YAC/C,6BACA,8BACA,CAMW,kBAEX,gCAA0C,GAAkB,UAAU,SAAa,oDAAoD,EAAW,qGAClJ,aACA,cACA,eACA,CAAK,CAIL,OAHA,eACA,4BACA,4BACA,CACA,CAOW,gBACX,GACA,6CAMA,qDACA,gBAMA,CA0CW,oBAEX,QADA,oBACA,SAMA,wBACA,GACA,qCACA,0BACA,8BACA,mBAGA,0BAIA,SA1DA,OAEA,QADA,SAA4B,GAAO,kEAAkE,EAAW,IAEhH,sBACA,wBACA,GACA,wBAGA,oDACA,YACA,CAAS,CAET,EA6CA,MACA,CACA,iBAAmD,GAAO,kEAAkE,EAAW,GACvI,CAQO,kBACP,IACA,GACA,wBAGA,oDACA,YACA,CAAS,EAEL,EAAK,yBACT,CACA,MAFS,GAET,OACA,eAAoB,GAAO,kEAAkE,EAAW,oKAEjG,oBACP,0DACA,YAGA,CACA,cACA,iKACA,CACA,0BACA,iJACA,aACA,cACA,eACA,CAAK,EAEL,mCACA,cACA,0DACA,aACA,cACA,eACA,CAAK,EAEL,OADA,WACA,CACA,CACO,cACP,+FACA,CACO,cACP,iBACA,CACO,gBAKP,OADA,6CACA,iBACA,CACO,cACP,gFAAgH,UAAmB,IACnI,gBAGA,qBAEA,kCAIA,8BAIA,wBAIS,WACT,6BAA4C,EAAW;AAAA,EAAK,EAAM,GAElE,CACA,aACA,MACA,2LACA,aACA,cACA,eACA,CAAS,CAET,CAIW,cACX,IACA,0BAEA,IACQ,EAAK,oBACb,CAAM,SACN,EAFa,KAEb,GACA,CACA,gBAyBO,gBACP,uBACA,IACA,wBACA,oDACA,YACA,CAAS,CAET,CACO,cACP,MAAsB,kBAAgB,YACtC,iFAGA,MAA8B,IAAoB,YAClD,IAEA,qBAIgB,KAAS,CAAC,OAAkB,oBAC9B,yBAEd,+BACc,6BACd,SAGA,CACA,CACA,yCACA,sBAAiD,IAAsB,CAAC,WACxE,sBAAiD,IAAsB,CAAC,WACxE,sBAA+C,IAAoB,CAAC,WAC7D,sBACP,eAGM,cACN,wBACA,MACA,CAAM,cACN,wBACA,MACA,CA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AAO,EAC5C,sDAAmE,yEAAgF,EACnJ,oDAAgE,SAAS,EACzE,kCAA2C,SAAS,EACpD,iCACA,uCACA,wCAAiD,WAAW,EAC5D,gDACA,wCAAiD,WAAW,EAC5D,iBACA,KAAyB,OAAO,GAAG,2CAAqD,EACxF,yBAA+C,IAAc,EAAE,UAAc,GAAG,EAEhF,cACA,cACA,wBAAqC,KACrC,MACA,SACA,qBACA,WACA,gBACA,QACA,CACA,qCACA,IACA,6CACA,CAAM,MACN,CACA,CACA,QACA,CACA,cACA,MACA,OAEA,qBACA,CACA,SACA,UACA,WACA,SACA,OACA,WACA,SACA,cACA,WACA,CAAI,mBACJ,gBACA,iCACA,EACA,EAeA,MAYA,EAKA,EAfA,EAfA,CACA,OACA,4BACA,SACA,OAAoB,oBAA4B,CAChD,OAAqB,YAAgB,CACrC,wBAAuC,iBAAwB,CAC/D,OACA,OAAqB,SAmBrB,WADA,GADA,EAjBqB,GAkBrB,eACA,QAnBqB,CAAmC,CACxD,OAAmB,UAAc,CACjC,OAAqB,SAsBrB,WADA,GADA,EApBqB,GAqBrB,eACA,QAtBqB,CAAmC,CACxD,OAAwB,iBAKxB,SACA,eACA,MACA,YAGA,QATA,CACA,CA/FA,SACA,eACA,OAA8B,uBAAkC,EAChE,EAaA,GACA,qBACA,sBACA,kBACA,qBACA,qBACA,CAAC,EACD,UAnBA,aACA,+CACA,kBACA,oBACA,OAA6B,kDAA4F,EAEzH,SACA,EACA,IAAoD,eAAkB,SAAa,EAWnF,GAkFA,8BAKA,0BA0DA,QACA,eAEA,qBACA,gBACA,sBACA,KAEA,eADA,KAEA,yBAAiC,UAAa,CAG9C,CACA,oBACA,sCACA,CAIA,WACA,yBAEA,UACA,2CACA,0BACA,CACA,aACA,MACA,+BACA,aACA,yBAEA,8DACA,6CACA,CACA,OACA,0BACA,CACA,UACA,+CACA,eAMA,OALA,cAAoB,UAAa,EACjC,kBACA,SACA,yCAA4E,IAE5E,KAKA,UACA,mBACA,qDAKA,OAJA,kBACA,SACA,yCAA0E,IAE1E,CACA,CAIA,QAEA,OADA,6CACA,KAKA,8CACA,wBAA6B,iDAAiD,EAE9E,WACA,2CAAoD,OAAO,GAAG,4BAA4B,WAAW,EACrG,CACA,EAGA,QACA,mBAGA,KADA,sBAEA,gBACA,+FAEA,aADA,mBA3IA,YACA,MACA,SACA,IAEA,EACA,EACA,EACA,EACA,EANA,KACA,IAMA,aACA,yCACA,KAEA,kBAMA,kBAGA,IAFA,IACA,KACA,KAEA,SADA,gBACA,CAKA,IAJA,IACA,KACA,IACA,IACA,YAZA,MADA,iBACA,EAAkC,IAAlC,GAAkC,SAalC,IAEA,gCACA,KACA,IACA,yBACA,KAEA,KAEA,EAAQ,IACR,IAGA,oBACA,+BAEA,CACA,QACA,EAyFA,GACA,CACA,UACA,IACA,0BACA,CACA,CAIA,UACA,2CACA,0BACA,CAIA,aACA,MACA,wCACA,aACA,SAEA,8DACA,8BACA,CACA,OACA,0BACA,CAIA,UACA,sDACA,eAGA,OAFA,iBAyBA,GAAoC,iBAAqB,EAUzD,MATA,4BACA,gCAEA,UACA,8CAEA,kCACA,aAEA,CACA,EApCA,MAAoC,eAAwB,GAkB5D,cAEA,cADA,uBACA,IACA,WACA,wBACA,CACA,EAvBA,iBACA,KAKA,aACA,uDACA,iBAAsB,yCAAmE,CACzF,CACA,8CACA,yBAA8B,iDAAiD,EAE/E,WACA,gDAAmE,EACnE,CACA,6FCvTO,aACA,SAkBA,MACA,MAIA,UAIA,aA6CP,GAGA,gBAIA,4BAGA,0BAGA,+BAGA,mBAGA,mBAGA,wBAGA,wBAGA,uBAGA,oCAGA,oCAGA,8BAGA,6BACA,EACA,EACA,KACA,OACA,cACA,wBACA,gBACA,CACA,YACA,wBACA,gBACA,aACA,aACA,CACA,eAEA,UACA,UACA,CACA,YACA,sBACA,kBACA,CACA,SACA,wBACA,gBACA,sBACA,kBACA,SACA,aACA,aACA,CACA,UAEA,wBACA,sBACA,kBACA,gBACA,EAEA,2FC3IO,SAASC,EAAe,CAW9B,EAX8B,cAC7BC,CAAS,cACTpG,CAAY,QACZtoB,CAAM,UAEN2F,CAAQ,CAMT,CAX8B,CAYM,EACjC,IAGIgpB,EACAC,EAJE,kBAAExP,CAAgB,CAAE,CACxB3a,EAAQ,IAAqD,EAMzDoqB,EAAQzP,EAAiBE,OANtB7a,CAM8B,GACvC,GAAI,CAACoqB,EACH,KADU,CACJ,qBAEL,CAFK,IAAIC,EAAAA,CAAcA,CACtB,4EADI,+DAEN,GAGF,GAAM,8BAAEC,CAA4B,CAAE,CACpCtqB,EAAQ,IAAoC,EAC9CkqB,EAAqBI,EAA6BzG,EAAcuG,GAEhE,EAHSpqB,CAGH,wBAAEuqB,CAAsB,CAAE,CAC9BvqB,EAAQ,IAA6B,EAGvC,OAFAmqB,EAAeI,EAAuBhvB,EAAQ6uB,GAEvC,UAACH,EAAAA,CAAU1uB,OAAQ4uB,EAActG,aAAcqG,GACxD,CAUF,MAVS,EASN,iEClCH,iBACA,MAAoB,gBAAU,CAAC,GAAe,EAC9C,YACA,gBACA,cAAY,+BAAsC,EAGlD,EAAe,WAAK,GAChB,eAAS,MACb,KACA,WAEA,CAAK,MACL,MAAyB,iBAAW,yBACpC,mGCvCO,4CACA,gBACP,eACA,+BACA,CAOW,gBAEX,OADA,OACA,CACA,CAQW,kBACX,WAEA,OADA,OACA,MACA,CAOW,gBACX,WAEA,OADA,YACA,MACA,wDCtCA,IAAMM,EAAqB,sBAEpB,OAAMC,UAA2B/lB,MAGtCsN,YAA4B0Y,CAAmB,CAAE,CAC/C,KAAK,CAAE,yBAAwBA,GAAAA,IAAAA,CADLA,WAAAA,CAAAA,EAAAA,IAAAA,CAF5BvW,MAAAA,CAAoCqW,CAIpC,CACF,CAEO,SAASG,EAAqBlS,CAAY,QAC/C,UACE,OAAOA,GACC,OAARA,CACA,CAAE,YAAYA,GAAAA,CAAE,SAChB,OAAOA,EAAItE,MAAM,EAKZsE,EAAItE,MAAM,GAAKqW,CACxB,00JapBO,gBACP,OACA,WACA,8BACA,4BACA,CACA,CACO,kBACP,OAEA,UAKA,eAIA,OAHA,8EACgB,QAA0B,sCAE1C,CACA,CACA,CACA,kFCnBW,iBAAiC,GAAY,CACxD,kBAAuC,EACvC,SACA,YAAyB,IAAuB,CAChD,UACA,CAAS,CACT,CACA,wBCXA,IAAMI,EAAmC,CACvC,mBACA,YACA,sBACA,qBACA,kBACA,aACA,SACA,WACA,uBACA,gBACA,6BACA,gBACD,CAED,SAASC,EAAW/gB,CAAY,CAAE4H,CAAe,EAE/C,GADA5H,EAAM4H,OAAO,CAAGA,EACZ5H,EAAM2H,KAAK,CAAE,CACf,IAAMqZ,EAAQhhB,EAAM2H,KAAK,CAACzV,KAAK,CAAC,MAChC8uB,CAAK,CAAC,EAAE,CAAGpZ,EACX5H,EAAM2H,KAAK,CAAGqZ,EAAMzsB,IAAI,CAAC,KAC3B,CACF,CAYO,SAAS0sB,EAA4BjhB,CAAY,EACtD,IAAM2H,EAAQ3H,EAAM2H,KAAK,QACpBA,EACEA,EADH,GAAQ,IACQ,CAAC,YAAa,IADf,EAErB,CAEO,SAASuZ,EAAkBlhB,CAAY,EAC5C,GAA8B,UAA1B,OAAOA,MAAAA,EAAAA,KAAAA,EAAAA,EAAO4H,OAAAA,GAElB,GACE5H,EAAM4H,OAAO,CAACuD,QAAQ,CACpB,8DAEF,CACA,IAAMgW,EACJ,gOAGF,GAAInhB,EAAM4H,OAAO,CAACuD,QAAQ,CAACgW,GAAe,OAE1CJ,EACE/gB,EACA,GAAGA,EAAM4H,OAAO,CAAC;;AAEvB,EAAEuZ,EAAAA,CAAc,EAEZ,MACF,CAEA,GAAInhB,EAAM4H,OAAO,CAACuD,QAAQ,CAAC,mCAAoC,YAC7D4V,EACE/gB,EACA,2LAKJ,IAAK,IAAMohB,KAAcN,EAEvB,GAAIO,OADqB,CAAC,GAAG,EAAED,EAAW,aADe,SACO,CAAC,EACvDrS,IAAI,CAAC/O,EAAM4H,OAAO,EAAG,YAC7BmZ,EACE/gB,EACA,GAAGohB,EAAW,oLAAoL,CAAC,EAK3M,uDCzEW,aACX,sDACA,GAAkB,KAAwC,UAAzB,EAAE,OAAuB,CAA8B,EAExF,ECCW,SAAS,EAA0B,GAE9C,GAAQ,OAAmB,KAEnB,OAAiB,KAKjB,OAAoB,IAPD,IAFmB,GAEnB,QAS3B,CACO,gBACP,WACA,sBAEA,OAAmB,IAAU,cAG7B,GAH6B,CAGjB,MAAY,WACxB,MAAuB,EAA0B,GACjD,KACA,SAEA,MAAoB,OAAc,GAGlC,WAEA,CATiD,EASjD,OAAyB,IAAU,mCAGnC,GACY,EAAiB,GAG7B,MAAqB,MAHQ,CAGR,CAAS,wBAS9B,OARA,IACA,qBACA,aACA,KAAsB,IAAc,OACpC,kBACa,GAEb,KACe,EAAyB,WACxC,CACA,CACO,UAHiC,CAGjC,WACP,WACA,MACA,sBAEA,OAAmB,IAAU,cAG7B,GAH6B,CAGjB,MAAY,WACxB,MAAuB,EAA0B,GACjD,KACA,SAEA,MAAoB,OAAc,IAiBlC,GAdA,QAPiD,EASjD,UAAyB,IAAU,qCAInC,iBACA,kBAGA,GACY,EAAiB,GAG7B,YAH6B,GAG7B,qIAEA,MAAyB,QAAS,wBAClC,IACA,qBACA,aACA,KAA0B,IAAc,OACxC,kBACiB,GAEjB,GACA,aAEA,CACA,OAAe,EAAyB,WACxC,CACA,CACO,UAHiC,CAGjC,aACP,cACA,MACA,SAGA,GAFA,UAEY,OAAY,WACxB,MAAuB,EAA0B,GACjD,KACA,SAEA,MAAoB,OAAc,IAqBlC,GAlBA,SACA,kBAGA,kBACA,MAMA,SAAyB,IAAU,uEAGnC,GACY,EAAiB,GAG7B,YAH6B,GAG7B,qIAEA,MAAyB,QAAS,wBAClC,IACA,qBACA,aACA,KAA0B,IAAc,OACxC,kBACiB,GAEjB,IACA,GACA,MAEA,CACA,OAAe,EAAyB,WACxC,CACA,CC7JO,OACP,GD0JwC,MC1JxC,IACA,4BACA,yBACA,YACA,0BACA,gBCHW,cACX,MAA+B,IAA0B,gCAMzD,CAHA,GACA,sBAEA,yCACA,CAGA,yBACA,mBACA,EAEA,sCACA,CACA,yCACA,mBACA,EAEA,mCACA,CACA,uCACA,mBACA,EAEA,IACA,CC7BA,OACA,cACA,cACA,cACA,mBACA,kBACA,EACO,uBACA,cACP,2BACA,wBEXA,MAAgC,SAAO,EACvC,IACA,KACA,KACA,IACA,KACA,EACA,EAAsB,SAAO,EACzB,UAAQ,GACR,SAAO,EACH,UAAQ,GACR,UAAQ,GAChB,EACA,EACA,EAIO,EAAgC,SAAO,EAC9C,EACI,UAAQ,CAAC,UAAQ,GAAI,QAAM,SAC3B,YAAU,CAAC,YAAU,CAAC,UAAQ,KAC9B,YAAU,CAAC,YAAU,CAAC,SAAO,EACzB,WAAS,YACT,WAAS,YACT,WAAS,yBACjB,IACI,YAAU,CAAC,WAAS,IACxB,gBE5BO,wBAA2E,EAAQ,YAC1F,WACA,oBACA,GACQ,QAA4B,MACpC,GACA,CASA,OARA,gBACA,KACA,SAEA,mCACA,mBACA,GACK,EAAI,EACT,CACA,CCNO,OAVP,kBACA,YACA,aACA,mBACA,oBAEA,aAEA,SAIA,iBACA,aACA,CACO,UAMP,eAHA,gDACA,2BAEA,mBACA,0DACA,YAGA,QACA,sCC+BO,iBACP,8BAvDA,KACA,mBACA,eACA,eAIA,mBAMA,wCARA,SAWA,gBACA,cACA,UACA,UACA,OAGA,QAEA,SAGA,KACA,SAEA,QAGA,UAGA,cACA,SAGA,iBAEA,SAEA,SACA,QAGA,CACA,CAEA,qBAGA,0IC9BA,eACA,SACA,iCACA,YACA,uCAAuE,GAAM,EAG7E,QACA,CACA,iBAEA,gBACA,MAA+B,KAAc,CAAC,IAAc,UAE5D,iBACA,MAAgC,KAAe,CAAC,SAA2B,KAE3E,EAA0B,EAAgB,CAC1C,SACA,IAF0C,EAE1C,GACK,CAAE,GAcP,OAXA,aAH8B,KAG9B,KACA,iBACA,iBAEA,QAEA,CAAK,EAEL,sBAEA,8BACA,cACA,CACA,yBAAsC,iBAAyB,EAC/D,MAWA,wDACA,KAAgC,QAAuB,0BACvD,mDACA,GACA,EACA,EACA,EACA,CAGA,mCACA,EAmBA,EA8CA,EAhEA,MACA,oIACA,aACA,cACA,eACA,CAAS,EAET,cAIA,gCACA,uEAGA,wCAA2D,EAAM,KAAK,QAAW,EACjF,aAAgC,EAAO,EAAE,EAAS,EAAE,EAAe,GACnE,QAEA,EACA,GAE+C,QAAgB,KAC/D,WACA,2FACA,aACA,cACA,eACA,CAAiB,EAEjB,QACA,EAAU,SAKV,2FACA,aACA,cACA,eACA,CAAa,EAGb,qBACA,cACA,OACA,cACA,UACA,kBACA,MAEA,UACA,CACA,CAAS,EACT,+DAA+H,IAAuB,GAEtJ,yBACA,EAA4C,aAC5C,QAD4C,GAC5C,MAGA,WAAuB,EAAkB,OACzC,CAGA,CAHU,KAGV,EAJyC,CAIzC,mBAEA,CAAM,SAEN,oDACA,CACA,OAAW,GAAY,eAAe,EACtC,CAoBA,iCACA,mCAA0C,GAAa,EAAE,EAAa,GAMtE,MApBA,gBACA,wCAEA,kBAA0B,EAAS,EAAE,EAAY,cAEjD,uBACA,kCACA,KAIA,+BACA,EAQA,OACA,UACA,EAgBA,MAUA,EAmBA,EA5CA,MACA,oIACA,aACA,cACA,eACA,CAAa,EAEb,cACA,MAA6B,IAAU,MACvC,uEAGA,wCAA+D,EAAM,KAAK,QAAmB,EAC7F,aAAoC,EAAO,EAAE,WAAgC,EAAE,SAA8B,EAC7G,4BAEA,MAAiC,KAAkC,qCACnE,MAAiC,KAAsC,iHAGvE,SAAgC,GAA6B,EAG7D,SAAgC,IAAa,EAC7C,IAEA,qBACA,aACA,UACA,MAEA,UACA,CACA,CAAa,EACb,+DAAmI,IAAuB,GAE1J,yBACA,EAAgD,aAChD,QADgD,GAChD,MAGA,WAA2B,EAAkB,OAC7C,CAGA,CAHc,KAGd,EAJ6C,CAI7C,mBAEA,CAAU,SAEV,kDACA,CACA,CACA,OAAW,GAAY,eAAe,EACtC,CAIA,eACA,0CACA,CAuBO,uBAA8B,2GAAsG,MAiB3I,EA6EA,EACA,EACA,EA/DA,CAhCA,2BACA,0BAAY,UAA8B,aAC1C,CAAY,8FAAyF,CAAE,OAA8B,IAIrI,MACA,OAEA,wBACA,6HACA,aACA,cACA,eACA,CAAS,EAGT,eAKQ,QAAyB,IAGjC,oCACA,QAGA,iCACA,8EACA,EAtDO,cACP,QACA,4BACA,2FACA,gBAUA,GACA,wBACA,OACA,EAAM,GACN,YACA,OACA,EAAM,MACN,EAiCA,WASA,KAIM,oBAIN,GAAY,GAAmB,wCAErB,CACV,EAEA,mBAAmC,OAAU,yBAAyB,YAA6C,mDAAmD,MAA+C,mEAGrN,4LAEA,0FACA,YACA,cACA,eACA,CAAa,EACb,MACA,iBACA,MAAsB,QAAkB,IACxC,wBACA,IAKA,OACA,CAAkB,MAElB,CACA,OACA,YACA,sBACA,eAEA,iCACA,qBACA,CAAqB,CACrB,CACA,CACA,OACA,CACA,MA7CA,qEA+CA,8EACA,SACA,oBAAY,GAAqB,EAIjC,oCACA,MACA,MAAgC,QAAyB,QAGzD,KACA,OACA,YACA,gDACA,CAEA,CACA,IA0OA,OAzOA,aACA,WACA,CAAS,eAiNT,EAhNA,GAEmD,QAAgB,KACnE,WACA,2FACA,aACA,cACA,eACA,CAAqB,EAIrB,gCAAwB,kDAA0E,EAElG,GADA,MACA,GAEA,iCACA,KACA,eACA,qBACA,CAAyB,MACH,CACtB,mBACA,6BAGA,CAxGA,IACY,SAAI,IAwGhB,iBACA,IACA,QAA4D,KAAoB,SAChF,EAA8B,OAC9B,gBACA,CACA,gBACA,CAEA,MACA,CACA,EAAkB,IAClB,IACA,SACA,CAAsB,SAItB,OAHA,UACA,iBAEA,CACA,gBACA,CACA,CACA,SACA,qBACA,QACA,SAAgC,WAAc,eAC9C,KACA,MAEA,SACA,CACA,MAAuC,GAAM,4BAC7C,MACA,eAzaA,GACA,6BACA,eACA,iBACA,cAEA,QACA,EAkaA,GACA,eACA,qBACA,CAAyB,CACzB,EAAsB,IACtB,eACA,qBACA,CAAyB,CAEzB,CACA,EAAc,SA8Gd,2FACA,aACA,cACA,eACA,CAAiB,EAWjB,IACA,YACA,CAAc,SAId,OAHA,UACA,iBAEA,CACA,gBACA,CACA,CAEA,OADA,gCACA,CACA,GAEA,iBACA,IACA,QAAkC,KAAoB,2BACtD,EAAc,OACd,gBACA,CAEA,IACA,MAAsB,QAAkB,IACxC,MACA,YACA,cACA,CAAiB,EACjB,iBACA,gCAEA,oCACA,qBACA,CAAiB,EAEjB,CAAS,EACT,CACA,YACA,SACA,WACA,CACA,CAAM,SACN,GAAY,QAAe,KAC3B,MAAgC,QAAuB,IACvD,EAAiC,QAAwB,IASzD,GARA,MAAkB,QAAkB,IACpC,MACA,YACA,cACA,CAAa,EAGb,aAA6B,IAAkB,UAC/C,EACA,OACA,YACA,kDACA,EAGA,OADA,0BACA,CACA,YACA,OAAwB,GAAY,eACpC,CACA,CAAU,GAAS,QAAyB,KAO5C,GANA,aAA6B,QAA2B,IACxD,MAAkB,QAAkB,IACpC,MACA,YACA,cACA,CAAa,EACb,GACA,wBACA,IAKA,OACA,CAAkB,MAElB,CACA,OACA,YACA,sBACA,cACA,eACA,qBACA,CAAqB,CACrB,CACA,CACA,OACA,gBACA,CACA,CACA,MACA,iBACA,MAAkB,QAAkB,IACpC,wBACA,IAKA,OACA,CAAc,MAEd,CACA,OACA,YACA,sBACA,eAEA,oCACA,qBACA,CAAiB,CACjB,CACA,CACA,OACA,CACA,CAKA,iBACA,MAEA,MACA,gCAAwC,IAAc,uDACtD,aACA,cACA,eACA,CAAS,EAET,iCACA,MACA,mEAA+E,EAAS;AAAA,gGACxF,aACA,cACA,eACA,CAAS,EAET,QACA,eChtBO,SAAS,KAChB,SACA,MACA,SACA,EACA,OACA,OANwC,oBAMxC,WAAsC,EAAU,GACf,SAAI,CAAC,4BAAyB,WAC/D,QACA,UACA,CAAa,EAEb,6BACA,aAAoF,SAAI,CAAC,UAAc,EACvG,YACA,CAAiB,+BAEjB,CACA,CCvBO,SAASE,GAAcC,CAAY,EACxC,OAAOA,EACJrvB,KAAK,CAAC,KACNC,GAAG,CAAC,GAAO2hB,mBAAmBlC,IAC9Brd,IAAI,CAAC,IACV,gBCHO,+BACP,MACA,EACA,KACA,GACA,OACA,aACA,EACA,qEAA4L,IAC5L,SADyM,MACzM,CACA,wHACA,aACA,cACA,eACA,CAAS,EAET,MACA,SAAiC,EAAY,gBAC7C,oBACA,YAAuB,WAAkB,KACzC,SAA2B,EAAY,gBACvC,UACA,WACA,CACA,OAEA,YAA2B,WAAkC,KAC7C,UAAgB,OAChC,YACA,iBACA,cACA,OACA,CAAiB,CAEjB,CACA,EAAM,IACN,SAAiC,EAAY,gBAC7C,YAAuB,WAAkB,KACzC,SAA2B,EAAY,gBACvC,SACA,CACA,OAEA,YAA2B,WAAkC,IAC7C,UAAgB,OAChC,YACA,QACA,aACA,CAAiB,CAEjB,CACA,CACA,OACA,EACA,EACA,2BChDO,aAAqC,2FAAsF,EAClI,QAEA,KACA,WAC6B,SAAI,WACjC,KACS,SAET,wBAGA,SACA,kBACA,WAEA,GADA,IACgB,QAAyB,IACzC,OAAiD,SAAI,SACrD,cACA,iBACA,CAAiB,WAGe,CAHE,MAAsC,IAI1D,GAAS,QAAe,EAJmD,CAGzD,CACM,CACtC,MAAoC,QAAa,CAAC,QAAuB,OAEzE,GADmC,OAA8B,MACd,IAAkB,mBACrE,GACA,OAAqD,SAAI,SACzD,0BACA,oBACA,WAAoC,KAAqB,MAAM,EAAY,EACtD,WAErB,CACA,CACA,wBAA6D,UAAY,KAAwB,SAAI,SACrG,OACA,SACA,CAAa,oBAAqB,EAAM,IACxC,MAEA,4EACA,SAEA,YAA6B,6BAAsB,CAAe,UAAK,CAAC,UAAS,EACjF,UACA,SACA,EACA,SACA,EACA,CACS,GAGT,4BACA,CAAS,EAKT,OAJA,KAIe,QAAc,GAC7B,CACA,gBCvEW,uBACX,MACA,+BACA,UACA,UACA,qBACA,6CACA,KACA,eACA,gBACA,GACA,cAEA,UAIA,KACA,eACA,WACA,GACA,SAEA,UAIA,OACA,WACA,EACA,CACA,YACA,EACA,CAEA,CC/BW,mBACX,UACA,YAEA,+BACA,UACA,KACA,WACA,KAEA,aADA,KACA,GACA,WACA,SACA,iBAIA,OACA,IACA,EACA,QACM,cACN,GAEA,IAEA,CChCO,eACP,gBAA+B,EAAS,UACxC,KAGA,+BACA,CGLO,qBACP,IAIA,EACA,EACA,EANA,QAAY,wBAA4B,KACxC,aACA,aACA,qBAAkF,IAAmB,CAiBrG,OAbA,GACA,eACA,WACA,QACM,GACN,eACA,SACA,QACM,IACN,eACA,SACA,QAEA,CACA,MACA,UACA,UACA,CACA,CCzBW,eACX,mBACA,CCHO,eACP,aACA,CAAY,UAAS,EACrB,MAAU,GAAO,EAGjB,MAAuB,IAAmB,iBAC1C,mDACA,OACA,OACA,UACA,UACA,mBACA,gBACA,CACA,CCdO,iBACP,SAYA,OAHA,2BACA,OAAiB,KAAmC,wBAAN,CAAM,EAA4B,EAEhF,CACA,CCTW,mBACX,qBAOA,MAA+F,OAO/F,IAP2B,CAOC,KAPqC,GAAG,CAA2B,IAOnE,CAAgB,SAAS,GAAa,QAAoB,EAApB,GAAyC,MAAY,SACvH,CAD2G,CAC3G,8CACiC,SAAI,UACrC,cAEA,aACA,OACA,mBACa,KAEb,qBACA,+DACA,CAAS,EACoB,SAAI,SACjC,iBACA,OAEA,aACA,qCACA,cACS,IACT,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,GAwPgD,CAChD,SACA,eACA,oBACA,CAAiB,CACjB,EAAc,IAId,aACA,EAA4C,SAAI,CAlQhD,GAkQgD,CAChD,SACA,cACA,CAAiB,CACjB,CACA,CACA,OACA,GAC0B,UAAK,CAAC,UAAc,EAC9C,UACA,EACA,EACkC,UAAK,IACvC,UAC0C,SAAI,KAC9C,OACA,CAA6B,EACa,SAAI,KAC9C,OACA,CAA6B,EAC7B,GACA,CACqB,EACrB,CACa,CA1bb,KA2bA,GACA,GACA,GACA,CACM,KAGN,EADA,8CAEA,OACA,MACA,OACA,cACA,EAA8C,SAAI,IAClD,UAxSA,GAySA,SACA,UACA,SACA,CAAiB,CACjB,EAAc,IACd,EAA8C,SAAI,IAClD,UA/SA,GAgTA,SACA,SACA,CAAiB,EAEjB,MACA,MACA,EACA,EAMA,MACA,0BACA,gBACA,oBACA,cACA,iBAlUA,GAmUA,gBACA,CAAiB,EACjB,MACA,0BACA,gBACA,oBACA,cACA,iBA1UA,GA2UA,gBACA,CAAiB,EACjB,MACA,0BACA,gBACA,oBACA,cACA,iBAlVA,GAmVA,gBACA,CAAiB,EAEjB,EADA,QACgD,UAAK,IACrD,WACA,YACA,eACA,UACA,EACA,EACA,CACqB,CA9frB,KAggBgD,UAAK,CAAC,UAAc,EACpE,UACA,EACA,EACA,CACqB,CArgBrB,IAugBA,EAAc,IACd,EAA4C,UAAK,CAAC,UAAc,EAChE,UACA,EACA,EACA,CACiB,CA7gBjB,IA+gBA,EAAU,IACV,cACA,EAA8C,SAAI,CAjXlD,GAiXkD,CAClD,MACA,QACA,CAAa,EAOb,EANA,EAM4C,UAAK,IACjD,YAAuD,UAAK,CAAC,UAAS,EACtE,UACA,EAC0C,UAAK,CA/X/C,GA+X+C,CAC/C,SACA,UACA,GACkD,SAAI,MAAa,EAEnE,CAA6B,EAC7B,CACqB,SACrB,UACA,EACA,EACA,CACiB,CA5iBjB,KA8iB4C,UAAK,CAAC,UAAc,EAChE,UACA,EACA,EACA,CACiB,CAnjBjB,IAqjBA,CAEA,OACA,GACA,EACA,GACA,GACA,GACA,CAEA,CACA,yBAAgC,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A,YAA2B,WAAmB,IAC9C,8BAEA,EAAU,IACV,gCAA4C,IAAc,2FAC1D,aACA,cACA,eACA,CAAa,CAEb,CACA,kBACA,4CACA,gCAA4C,IAAc,8FAC1D,aACA,cACA,eACA,CAAa,CAEb,CACA,CAkDO,SACP,eACA,cACA,CACA,MACA,uBACA,wHACA,aACA,cACA,eACA,CAAa,EAEb,yBAEA,OADA,kBACA,KAEA,UACA,uBACA,4HACA,aACA,cACA,eACA,CAAa,EAEb,mBAEA,OADA,kBACA,CACA,CACA,CACO,qBACP,SACA,SAAY,GAAU,QACtB,gBACA,QACA,SAAgB,WAAc,eAC9B,KACA,iBAEA,SAEA,CACA,CACO,qBACP,SACA,gBACA,QACA,SAAgB,WAAc,eAC9B,KACA,MAEA,SAEA,CACA,gBACA,CACO,SACP,gBACA,uBACA,gCAA4C,IAAc,aAAa,EAAW,0FAClF,aACA,cACA,eACA,CAAa,EAEb,oBAEA,iBACA,2BAEA,OADA,eACA,CACA,CACA,UACA,iBACA,CACA,eACA,cACA,CACA,oBAEA,UADA,yCAEA,CACA,2BAEA,UADA,iDAEA,CACA,WAEA,UADA,gCAEA,CACA,kBAEA,UADA,wCAEA,CACA,CACA,eACA,QACA,2BACA,cACA,YACA,iBAKA,CACA,CAAK,CACL,CACA,eACA,QACA,2BACA,cACA,WACA,kBAEA,SAEA,CACA,CAAK,CACL,CC9YO,SAAS,GAAyC,SAKzD,EAHA,IAAQ,EAA0B,IAIlC,yCAJkC,CAFuB,CAMzD,iBAEA,IADA,YACA,0BACA,cACA,kBACA,SACA,2CAAuE,GAAO;AAC9E;AACA,kBAAkB,EAAQ,wBAC1B,aACA,cACA,eACA,CAAiB,CACjB,wCACA,iBACA,MACA,CACA,MACM,oBACN,MAEA,iBACA,uBAA+B,GAAO;AACtC;AACA,oBAAoB,EAAQ,GAG5B,uBAA2B,GAAO,0OAClC,iBAEA,eEhCW,OAAM,GACjB,cACA,OAF4B,GAE5B,GACA,uBACA,kBACA,oBACA,mBACA,CACA,sBACA,mBACA,oBACA,sBAEA,GADA,oBACA,gBACA,YAAmC,6BAAgC,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,yEACA,OAEA,EAAyB,SAAI,KAC7B,kBACA,CAAS,EACT,0BACA,gBACA,QACA,MACA,GACA,CACA,EACA,EACA,EACA,EACA,CACA,CACA,IACA,GACA,EACA,EACA,CACA,0CACA,uBAEA,CAMA,8BAAwB,EAAkB,EAE1C,OADA,kBACA,IACA,CAEA,2BACA,+BAAY,iDAA2E,+EAA2E,gCAA8B,EAChM,wCACA,cAAY,kBAA6B,GACzC,OACA,cAGA,gBAAyB,EAAqB,yBAC9C,YACA,6BACA,yBACA,YACA,mBACA,mBACA,wBACA,CAAK,EAEL,EAAmC,SAAI,KAAiB,QACxD,EAAsC,UAAK,CAAC,UAAc,EAC1D,UAC0B,SAAI,KAC9B,oBACA,4BACA,gDACa,EACa,SAAI,KAAiB,QACnC,GAIZ,EACA,CACK,CAhcL,KAicA,EAAwB,EAAqC,MAE7D,EAToE,CAGtD,EAOA,OAAO,iBAHwC,SAGxC,kCACrB,aACA,cACA,eACA,EAAS,EAIT,OACA,KACsB,UAAK,SAC3B,oBACA,UAC8B,SAAI,SAClC,UACA,CAAiB,EACa,SAAI,SAClC,SAIsB,CAJQ,GAK9B,CAAiB,EALyD,CAOjE,EACT,EAAU,CACV,KACA,GACA,CACA,EAZ2F,CAIrE,KAQtB,QACA,yEACA,OACA,0BACA,gBACA,QACA,SACA,KACA,GACA,CACA,EACA,EACA,EACA,EACA,CACA,CACA,GACA,EACA,EACA,CACA,0CACA,sBACA,CACA,CAEA,+BAAe,mHAA+H,EAC9I,IACA,MAAqB,KAAS,CAAC,GAAe,QAC9C,EAAyB,EADqB,CACG,CAGjD,eACA,KAJiD,aAIjD,IACA,6BACA,8BAGA,cACA,uBACA,cACA,gBACK,EACL,EAAwB,SAAwB,SAChD,CAAY,sBAAqB,EAAU,GAAsD,EACjG,MAAyB,MADiB,EACjB,CAAI,aAC7B,OACA,UACA,OACA,CAAS,CACT,SAAgC,SAAI,IACpC,SAAoC,SAAI,IACxC,SAAwC,SAAI,CAAC,UAAS,EACtD,cACA,kCACA,gBACiB,CACjB,CAAa,CACb,CAAS,CACT,CAAK,CACL,CAIA,+BAAoB,mHAA+H,EACnJ,IACA,MAAqB,KAAS,CAAC,GAAe,QAC9C,EAAyB,EADqB,CACG,CAGjD,eACA,KAJiD,aAIjD,IACA,6BACA,8BAGA,cACA,uBACA,cACA,gBACK,EACL,EAAwB,SAAwB,SAChD,MAAyB,SAAI,IAC7B,SAAgC,SAAI,IACpC,SAAoC,SAAI,CAAC,UAAS,EAClD,cACA,kCACA,gBACa,CACb,CAAS,CACT,CAAK,CACL,CACA,+CA2HA,MAtCA,EApFA,YACA,IACA,mBAMA,iBACA,uBAAY,uFAAyG,EAGrH,mBACA,MAA6B,QAAyB,GAEtD,uCAWA,+BANA,SACA,wBAEA,OADA,MACA,CACA,CAGA,CA2BA,SACA,0CAEA,4BACA,EAA4B,QAAqB,EACjD,uBACA,CAAK,EACD,SAA8B,EAClC,YACA,0BACA,wBACA,iBACA,CAAK,EACL,eAEA,IAAY,+BAAyC,CACrD,IACA,gGAEA,kBACA,8BAEA,GACA,MAEI,OAAoB,IACxB,sBAAY,kFAA8F,EAM1G,sBAMA,mBACA,oBAAY,yBAA0C,EACtD,EA3mBA,SACA,GACA,MAA6B,EAAe,GAC5C,MACA,IAF4C,GAE5C,KAEA,cACA,OAQA,GAPA,kBACA,iBACU,iBACV,kCACU,oBACV,0BAEA,IACA,0BACA,+BACA,SACA,MAAyC,CAAiB,gBAG1D,EACA,CACA,QACA,WACA,OACA,aACA,EACA,GACA,EACA,EAaA,CACA,QACA,MAVA,eACA,SACA,YACA,MAAkC,SAAc,IAGhD,uBACiB,EAIjB,OAEA,aACA,EACA,YACA,EACA,CAEA,CACA,CACA,MAAqB,S9CzKV,GACX,WACA,C8CuK6C,E9CvK7C,GACA,qFACA,aACA,cACA,eACA,CAAS,EAET,QACA,E8C+J6C,QAC7C,OACA,QAEA,QAEA,aACA,EACA,+BACA,EACA,CACA,MACA,CACA,EAsiBA,EAAoC,QAAyB,IAC7D,SAA+B,OAAe,aAC9C,IACA,eACA,MACA,aACA,YACA,uBACA,6BACA,QACA,aACA,yBACA,mBACA,yBACA,oBACA,YACA,WACA,0BACA,cACA,iBACA,QACA,MACA,gBACA,eACA,EAEA,GADI,QAAS,wCACb,GAIA,MAA6C,QAAS,QAAQ,IAAa,gBAC3E,kCAA+C,EAAS,EACxD,YACA,cACA,CACA,CAAS,KACT,wBAIA,oBAAsC,QAAmB,4CAEzD,aADY,SAAI,8CACiB,QAAwB,mBACzC,SAAI,IAKpB,uBACA,0BAEA,2BACA,8CACA,YACA,CAEA,uBACA,0B/C/nBA,CAAY,E+C+nByD,C/C/nBzD,IAAY,C+C+nB4D,I/C/nB5D,CAAU,I+C+nBkD,C/C/nBlD,EAAmB,C+C+nB+B,I/C/nB/B,CAAU,OAAiB,C+C+nBI,IACpF,YACA,CACA,OACA,UACA,EAEA,8EACA,MAAmC,QAAkB,iBACrD,sCACA,0DAEA,CAAa,CACb,aACA,eAEA,aAEA,CACA,iBACA,wCAGA,+BAyBA,OAxBA,YAAsB,IAA6B,IACnD,eACA,UAAyB,IAA6B,IAGtD,8CACA,gBACA,aACA,aACA,EAGA,gBACA,oCAA4D,QAAc,sBAC1E,0BAAoD,KAAc,2BAIlE,oDACA,sBACA,sCACA,0BACA,EAEA,IAAmB,GAAY,OAAO,QAAc,aACpD,CAAM,KAEN,uEACA,EjBrNA,MiBqNwC,KAAb,0BAAa,EACxC,EAA6B,KADW,EACX,CAA2B,oDAaxD,KACA,gBACU,KACV,kBAEA,MAA0C,QAAS,QAAQ,IAAa,gBACxE,+BAA4C,EAAS,EACrD,YACA,cACA,CACA,CAAS,KACT,OACA,MAEA,YAA8C,GAAY,CAC1D,MACA,EAF0D,EAE1D,EACA,eACA,kBACA,kBACA,YACA,eACA,gBACA,MACA,CAAa,EACb,KACA,0BACA,eAtxBA,GAEA,WACA,OACA,GACA,CACA,UACgB,IAAgB,CAChC,EAAkB,CAClB,CACA,mBACA,EACA,CACS,CACT,EACA,EAuwBA,EACA,kBACA,gCACA,WAA+B,GAAY,IAC3C,UACA,CAAqB,CACrB,EAAkB,uBAClB,YAEA,OADA,2BACA,cACsB,aACtB,eAEA,CAEA,CACA,OACA,UACA,EACA,4BACA,uBACA,0BAGA,8EACA,MAAmC,QAAkB,iBACrD,sCACA,0DAEA,CAAa,CACb,aACA,eAEA,aAEA,CAEA,WAAmB,GAAY,KAC/B,CACA,CACO,6BACP,MACA,UACA,sEACA,aACA,cACA,eACA,CAAS,EAET,MAAgB,QAAgB,kBAGhC,EAn2BA,cACA,yBAEA,KAAuF,SAAvF,EAA4D,IAA2B,gBACvF,EAAwD,SAAxD,EAAiC,IAAuB,gBAExD,UAAiE,IAAjE,EAAuD,IAAU,gBAEjE,GADA,0BACsI,OAAvE,SzClFxD,GACP,eAGA,MyC8EgG,GzC9EhG,WACA,wHACA,aACA,cACA,eACA,CAAS,EAOT,gBACA,iGACA,aACA,cACA,eACA,CAAS,EAET,IACA,wCAEA,MADQ,YAAM,GAAQ,GACtB,CACA,CAAM,MACN,YAH6C,CAG7C,uGACA,YACA,cACA,eACA,CAAS,CACT,EACA,EyCgDgG,EAAS,GAA6B,iBAEtI,EAAkF,WAAlF,EAA+C,IAAmC,gBAClF,yEAGA,OACA,oBACA,oBACA,6BACA,eACA,eACA,qBACA,MATA,mB3CvFO,YACP,MACA,QACA,QAAa,oBAGb,aAJkE,CAIlE,kEAEA,MACA,OAGA,4BACA,0BACA,oFAEA,MAMA,GAAQ,EAAY,QACpB,EADoB,IACpB,gNACA,aACA,cACA,eACA,CAAS,EAET,SACA,E2CyDoE,UAUpE,0BATsC,SAA4B,mBAUlE,CACA,EA20BA,WACA,cACA,wDACA,8DACK,EACL,mBAAY,+BAA+C,EAC3D,GACA,QACA,EACA,OAGA,iCACA,KACA,gCAA4C,IAAc,kGAC1D,aACA,cACA,eACA,CAAa,EAEb,Ebv6BO,cACP,Kas6B4C,Gbr6B5C,EAsBA,EArBA,kDACA,MACA,wEAAwF,EAAM,wBAC9F,aACA,cACA,eACA,CAAa,EAEb,kBAGA,mCACA,EAAsC,GAA2B,uBACjE,CADiE,EACjE,CACA,cACA,OACA,OACA,uBACA,EAEA,qBAEA,iDACA,MACA,wEAAgG,kBAAgC,wBAChI,aACA,cACA,eACA,CAAqB,EAGrB,kBACA,8BACA,aACA,sBACA,kBACA,gCACA,iCACA,mBACA,CACA,OACA,OACA,mBACA,uBACA,CACA,CACA,OACA,OACA,mBACA,uBACA,CACA,CAAU,SAE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CA,6BACA,iCACA,OACA,CAAyB,GACzB,gBACA,YACA,MAA+C,EAA0B,GACzE,KACA,QAEA,mBAEkC,UANuC,EAMvC,wDAGE,GAAyC,UAE7E,CAA6B,CAC7B,kBACA,EACA,CACyB,OACzB,SACA,CAAqB,YACrB,CAT6E,CAS7E,gBAA4E,QAA2B,KAE7E,oEAGE,GAAyC,UAErE,CAAqB,CACrB,CACA,SACA,sBACA,EAA8C,QAA0B,SANH,gBAMG,EACxE,KACA,iBACA,eACA,aACA,eACA,sBACA,aAEA,iBACA,kBACA,WAAgC,KAAc,CAC9C,OAA4B,KAAc,CAC1C,MAA2B,KAAc,CACzC,SACA,OACA,CACA,2BACA,qBACA,EACA,QAAqD,KAAoB,kCACzE,KACA,UAA6E,GAAiC,GAAkC,UAChJ,YAAkD,IAD2D,CACvC,IAD0E,CAEhJ,EACA,YACA,mBACA,WACA,KAEA,gBACqB,EAErB,OADA,KACA,CACA,CAAiB,MACjB,qBAGA,KACA,MACA,CACA,GAGA,OAEA,SACA,CAAiB,GACjB,EAA8C,QAA0B,2BACxE,sBACA,GACA,iBACA,eACA,aACA,eACA,sBACA,aAEA,iBACA,kBACA,WAAgC,KAAc,CAC9C,OAA4B,KAAc,CAC1C,MAA2B,KAAc,CACzC,SACA,OACA,CACA,2BACA,qBACA,EACA,KACA,EAAwC,QAA4B,GACpE,EAAkC,WAA0C,SACtD,iBAAqB,MAAQ,GAAkC,IAAK,KAAoB,SAAyD,SAAI,KAC3K,wCACA,iBACA,0BACA,6BACA,iCACA,OACA,CAAqB,GACrB,gBACA,gBACA,GAAgC,QAA2B,uBAC3D,KACA,uBACA,oBACoC,QAAyB,kBAE7D,MACA,CACA,aACA,CAAyB,CACzB,cACA,kBACA,MACA,CAA6B,CAC7B,CAAyB,CACzB,yCACA,kBACA,EACA,CACqB,OACrB,SACA,CAAiB,EACD,QAAwB,gBACxC,OAA8C,GAAyB,CACvE,YACA,SAFuE,gBAEvE,EACA,uBACA,oBACA,iBACA,CAAiB,EACjB,SAAyC,QAAc,eAGvD,GAFA,gBACA,mCACA,KASA,OARA,SAEA,kBAAmD,GAA4B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,CAAS,EACT,GACA,CACA,QACA,EACA,6BAaA,gCACA,OAOA,uCACA,OAKA,OAIA,mBACA,iCACA,oBACA,EAeA,yCACA,0BAEA,UACA,4DACA,4EC5nFO,MAAqC,cAAuB,GEK5D,cACP,MAA0B,EAA4B,WAItD,OAHA,IACA,IAFsD,KAiC/C,GACP,uCAA+C,EAAkB,yIACjE,aACA,cACA,eACA,CAAK,CACL,EArCA,GAEA,QACA,cAuBA,QAtBA,QACA,iBACA,oBACA,uBAEA,uCAAuD,EAAkB,yFACzE,aACA,cACA,eACA,CAAa,CACb,aACA,uCAAuD,EAAkB,mLACzE,YACA,cACA,eACA,CAAa,CACb,sBACA,uCAAuD,EAAkB,8LACzE,YACA,cACA,eACA,CAAa,CAIb,CACA,CAQO,oBACP,+CACA,2BAEA,IACA,CACO,oBACP,yEACA,mBACA,wBAIA,2BAEA,IACA,wDC/DA,IAAMY,EAA0B,yBAEzB,OAAMC,UAA8BzpB,wBAApC,iBACW0pB,IAAAA,CAAOF,EACzB,CAEO,SAASG,EACdvkB,CAAc,QAEO,UAAjB,OAAOA,GAAgC,OAAVA,CAAkB,CAAE,UAAUA,GAIxDA,EAJwDA,CAAI,EAAI,CAItD,GAAKokB,CACxB,knCCHA,+CACA,6BACA,+BACA,kCACA,+BACA,+BACA,8BACA,kCACA,+BACA,2BACA,2BACA,kBAQA,GACA,qBACA,QACA,CAAK,CACL,+BAAsC,CACtC,gCAAuC,CACvC,4BACA,CAAG,CACH,gBACA,KACA,kBACA,aACA,eACA,YACA,iBACA,CAgBA,cAEA,kBACA,aACA,eACA,YACA,iBACA,CAtBA,gCACA,mCACA,GACA,oBACA,sBACA,QAEA,YACA,0GAEA,iDACA,EACA,oCACA,qDACA,EAEA,wBAOA,wBACA,gBACA,iBACA,0BACA,oBACA,GAA2B,4BAAoC,CAC/D,kCACA,wBAEA,OACA,WACA,OACA,MACA,aALA,UAKA,OACA,OACA,CACA,CAWA,cACA,MACA,oBACA,UACA,cAEA,CAUA,aACA,oBAVA,EACA,EAUA,iDAXA,EAYA,SAXA,GAAwB,mBAExB,IACA,8BACA,YACK,GAOL,cACA,CACA,cA8IA,kBACA,oBACA,SACA,IAIA,OAHA,SAjHA,aACA,IAlEA,IA/DA,EAiIA,UACA,4CACA,SACA,sBAEA,UACA,aACA,aACA,aACA,KACA,KACA,cACA,mBACA,OACA,OACA,KACA,KACA,QACA,OACA,cAEA,YACA,EACA,EACA,EACA,EAGA,CACA,CACA,KACA,OACA,OACA,EACA,oBACA,KACA,MACA,SACA,GACA,wBACA,uBACA,QACA,EAAW,EACX,SACA,QA9GA,EAgHA,EAhHA,EAiHA,EACA,cACA,iBACA,GACA,mBACA,EACA,OACA,KACA,EAVA,EA9GA,EACA,OACA,EACA,OACA,OACA,OACA,UAoHA,WACA,EAEA,IACA,uBACA,QACA,YAAoB,WAAqB,IACzC,EACA,IADA,OACA,GACA,KACA,EACA,EACA,EACA,EACA,QAEA,wBAzMA,QADA,EA0MA,IAzMA,wBAIA,kBAHA,GACA,SACA,iBACA,MAqMA,EACA,IACA,gBACA,oBAGA,EACA,IADA,UACA,KACA,KACA,EACA,EACA,EACA,EACA,QAEA,iBACA,6BACA,SA3HA,YACA,iBACA,gBACA,mBACA,WACA,uBAEA,OACA,0BACA,YACA,oBACA,OACA,YACA,sBACA,sBACA,UACA,CAAe,CACf,YACA,sBACA,gCACA,EACA,EACA,UAEA,gBACA,mBACA,WACA,eAEA,CACA,OACA,EA6FA,GACA,EACA,EACA,EACA,EAGA,aACA,kDACA,qBAHA,cAIA,mBAA+B,8BAAyC,EACxE,GACA,4EAEA,CACA,QACA,EAKA,sBACA,sBACA,CAAG,EACH,CACA,CACA,cACA,mBACA,gBACA,QACA,KACA,YACA,iCACA,yBACA,CAAO,CACP,YACA,iCACA,yBACA,GAEA,yCACA,CACA,yCACA,iBAEA,MACA,+BACA,YACA,YACA,GACA,yBACA,qCACA,CACA,qCACA,WACA,cACA,QACA,oBACA,UACA,2BACA,kBACA,UACA,OACA,CAAW,EACX,kCACA,CAOA,CAPU,OAOV,QACA,EACA,cACA,UAAgB,EAChB,MACA,wBACA,EACA,EACA,WACA,uBACA,CAAO,CACP,EAEA,CAAG,CACH,kBACA,QAIA,OAHA,eACA,GACA,CAAK,EACL,CACA,CAAG,CACH,oBACA,OACA,gBACA,QACA,CAAO,MAEJ,CACH,iBACA,SACA,YACA,yEAEA,QACA,CACA,EACA,WAAiB,GACjB,UAAgB,GAChB,UAAgB,GAChB,eAAqB,GACrB,YAAkB,GAClB,UAAgB,GAChB,iEAAuE,CACvE,EACA,oBAA0B,EAC1B,eACA,cACA,0BACA,CACA,EACA,OAAa,aACb,kBACA,8BACA,CACA,EACA,cAAoB,iBACpB,WACA,YACA,+DAEA,UAAuB,UACvB,QACA,SACA,WACA,oCACA,6BACA,EACA,aACA,WACA,cACA,gBACA,6BACA,YACA,yBACA,2BACA,QACA,uBAAkD,IAAc,IAChE,mBACA,aACA,CACA,oCACA,EACA,eAAqB,aAcrB,MAbA,IACA,WACA,gBACA,iBACA,eACA,cACA,aACA,GACA,WACA,YACA,WACA,UACA,EACA,CACA,EACA,eAAqB,iBACrB,MACA,IAAc,CACd,OACA,WACA,wCACA,aACA,WACA,cACA,gBACA,YACA,yBACA,2BACA,QACA,uBAAwD,IAAoB,IAC5E,oBACA,YACA,CACA,qBACA,0BACA,eACA,YACA,kCACA,EACA,WAAiB,YACjB,OAAW,aACX,EACA,YAAkB,aAClB,OAAW,oBACX,EACA,gBAAsB,GACtB,MAAY,aACZ,OACA,WACA,UAAgB,qBAA4B,CAC5C,OACA,CACA,EACA,MAAY,eACZ,OACA,WACA,OACA,yBACA,CACA,EACA,iBAAuB,aACvB,UACA,IACA,OACA,IACA,UACA,KACA,WACA,OACA,oBACA,UACA,2BACA,WACA,CAAI,SACJ,IACA,EAAI,OACJ,UACA,gBACA,kBACA,KACA,CACA,EACA,0BAAgC,YAChC,4BACA,EACA,KAAW,aACX,iBACA,EACA,gBAAsB,iBACtB,gCACA,EACA,aAAmB,eACnB,2BACA,EACA,YAAkB,aAClB,wBACA,EACA,eAAqB,cACrB,kBAAwB,eACxB,gCACA,EACA,WA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,OAAOoH,SAAS,CAACjG,QAAQ,CAACkK,IAAI,CAIbnG,GACtB,OAAO,EAGT,IAAMkC,EAAYpH,OAAOkH,cAAc,CAAChC,GAWxC,OAAqB,OAAdkC,GAAsBA,EAAUisB,cAAc,CAAC,gBACxD,ECqBwD,QAnCxD,YACA,kBACA,gCAEA,iCACA,YACA,mBAEA,QACA,CACA,QACA,CAAK,CACL,EAuBwD,yBACxD,aACA,cACA,eACA,CAAK,CACL,wEC/CO,kBAkBP,OAfA,gBAGA,wBAIA,sBAIA,wBAGA,gBACA,CACA,CAAC,GAAG,mnBERJ,OAA6B,eAC7B,cACA,oCACA,uBACA,+CACA,YAAoB,mBAAsB,IAC1C,8CACA,CACA,MACA,yBACA,EACA,GAAO,QACP,EACA,gHAEA,CACA,oBACA,2CACA,6BACA,+BACA,kCACA,+BACA,kCACA,+BACA,2BACA,2BACA,kBAQA,kCACA,gBACA,wBAEA,OACA,WACA,OACA,MACA,aALA,UAKA,OACA,OACA,CACA,CAWA,cACA,MACA,oBACA,UACA,cAEA,CAUA,aACA,oBAVA,EACA,EAUA,iDAXA,EAYA,SAXA,GAAwB,mBAExB,IACA,8BACA,YACK,GAOL,cACA,CACA,cA+IA,kBACA,oBACA,SACA,IAIA,OAHA,SAlHA,aACA,IAlEA,IAnBA,EAqFA,UACA,4CACA,SACA,sBAEA,UACA,aACA,aACA,aACA,KACA,KACA,cACA,mBACA,OACA,OACA,KACA,KACA,QACA,OACA,cAEA,YACA,EACA,EACA,EACA,EAGA,CACA,CACA,KACA,OACA,OACA,EACA,oBACA,KACA,MACA,SACA,GACA,wBACA,uBACA,QACA,EAAW,EACX,SACA,QA9GA,EAgHA,EAhHA,EAiHA,EACA,cACA,iBACA,GACA,mBACA,EACA,OACA,KACA,EAVA,EA9GA,EACA,OACA,EACA,OACA,OACA,OACA,UAoHA,WACA,EAEA,IACA,uBACA,QACA,YAAoB,WAAqB,IACzC,EACA,IADA,OACA,GACA,KACA,EACA,EACA,EACA,EACA,QAEA,wBA7JA,QADA,EA8JA,IA7JA,wBAIA,kBAHA,GACA,SACA,iBACA,MAyJA,EACA,IACA,gBACA,oBAGA,EACA,IADA,UACA,KACA,KACA,EACA,EACA,EACA,EACA,QAEA,iBACA,6BACA,SA3HA,YACA,iBACA,gBACA,mBACA,WACA,cACA,SACA,OACA,0BACA,YACA,oBACA,OACA,YACA,sBACA,sBACA,UACA,CAAe,CACf,YACA,sBACA,gCACA,EACA,EACA,UAEA,gBACA,cACA,gBACA,eAEA,CACA,OACA,EA6FA,GACA,EACA,EACA,EACA,EAGA,aACA,EACA,GACA,oBAJA,cAKA,mBAA+B,8BAAyC,EACxE,GAGA,CACA,QACA,EAKA,sBACA,sBACA,CAAG,EACH,CACA,CACA,cACA,mBACA,gBACA,QACA,KACA,YACA,iCACA,yBACA,CAAO,CACP,YACA,iCACA,yBACA,GAEA,yCACA,CACA,gDACA,SACA,CACA,aACA,kBACA,CACA,aACA,OAAW,2BACX,CACA,UAAgB,EAChB,MACA,wBACA,EACA,EACA,WACA,uBACA,CAAO,CACP,EAEA,CAAG,CACH,kBACA,QAIA,OAHA,eACA,GACA,CAAK,EACL,CACA,CAAG,CACH,oBACA,OACA,gBACA,QACA,CAAO,MAEJ,CACH,iBACA,6BACA,QACA,CACA,EACA,UAAgB,GAChB,UAAgB,GAChB,YAAkB,GAClB,UAAgB,GAChB,iEAAuE,CACvE,EACA,OAAa,aACb,kBACA,UACA,qCACA,0BAEA,UADA,cAEA,mBACA,IACA,2BAAmC,IAAW,KAC9C,mBACA,GACA,sBACA,6BACA,CACA,iBACA,uBAEA,SADA,cAEA,kBACA,EAAQ,IAER,OADA,SACA,gBAEA,SADA,cAEA,OACA,WACA,CACA,sBACA,qBACA,IACA,8BAGA,MAFA,MACA,IACA,KACA,CAAM,SACN,sBACA,CACA,CACA,EACA,mBAAyB,YACzB,WACA,EACA,cAAoB,iBACpB,WACA,sBACA,UAAuB,UACvB,QACA,SACA,WACA,oCACA,6BACA,EACA,aACA,WACA,cACA,gBACA,6BACA,YACA,yBACA,2BACA,QACA,uBAAkD,IAAc,IAChE,o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CA,EACO,IACP,OACA,WACA,QACA,QACA,CCfA,sBACA,iBACA,EAEA,CACA,EACA,CAEA,eACA,WAGA,YACA,CCiLA,QACA,YACA,OACA,UACA,QACA,MACA,CCjMA,wBAAyB,OAAsB,SAC/C,MACyB,UAAI,SAC7B,KACA,aACA,cACS,CACT,qBACA,CAAK,EAPL,IAQA,CCyTA,aAA0B,aAAW,EACrC,QACA,OACQ,GAAI,CACZ,yBAAsC,EAAK,EAC3C,eACS,EACD,GAAI,MACZ,kBAAoC,EAAK,EACzC,gBACS,EACD,GAAI,MACZ,mBAAqC,EAAK,EAC1C,2DACA,CAAS,EACT,CClVA,aAA8B,OAAM,EACpC,QAAY,qBAA8B,EAC1C,MAAyB,UAAI,SAC7B,MACA,kBACA,IACA,CAAK,CACL,CACA,iBAAoB,SAAW,EAC/B,2CAEA,MADA,qBACA,IACA,MACA,CAAS,CACH,EACN,mBACA,MAA6B,UAAI,SACjC,MACA,MACA,CAAS,CACT,CACA,2BEtBA,eACA,0CACA,CACA,cACA,mCAAuC,sBAAyB,EAChE,CA4BA,iBACA,6BACA,kBACA,IAGA,OADA,UAEA,CAAM,OACN,GACA,SAGA,qBAEA,eADuB,UAAU,WACjC,EACA,CASA,0EAKA,+BAA6D,aAAyB,MAZtF,EAQA,EAMA,EAbA,iBADA,EAcA,IAbA,mBACe,UAAU,SAYzB,EAZyB,GAEzB,EAaA,SACA,cASA,GAPA,EADA,mBACA,EAEA,iCAKA,qBACA,wBACA,kBACA,KACA,KACA,OACA,IACA,iBACA,+BA3BA,EA4BA,aA3BA,UA4BA,CAAc,MAEd,IACA,CACA,GACA,oBAA8D,EAAY,GAE1E,CACA,QACA,CCjGA,iBACA,6BACA,CACO,iBAEP,IADA,EACA,8DAWA,CAVA,mBACA,UACM,IACN,eACA,oBAEA,4BACA,gBAGA,uBACA,CACA,WACA,cACA,EAEA,CACA,kBACA,UACA,CAEA,CC1BA,GCcA,CAAQ,kBAAc,4CACtB,4FACA,eACA,yBACA,0BACA,eACA,0BACA,EACA,cACA,GACA,IACA,WACA,wBACA,8BACA,EALA,OAQO,8CACA,2CACA,yBACA,yBACA,yBACY,yBACZ,yBACA,0BACA,iCACA,6BACA,6BACA,0BACA,iCACA,YAAkC,EAAE,IAAI,IAAI,kBAC5C,0BACA,iCACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,yBCxDA,UACP,iBACA,mBACA,mBACA,iBACA,eACA,6BACA,CACA,SACA,iBACA,4BACA,8BACA,gDAGA,oBACA,uCAEA,oBACA,oBACA,kBACA,aACA,CACA,aACA,MACA,cACA,oBACA,CACA,OACA,aACA,wBACA,cAIA,OADA,cACA,CACA,CACA,SACA,uBACA,cACA,qBACA,oBACA,wBAEA,CACA,mBACA,qDACA,6BAEA,CACA,yBACA,qCACA,eACA,0BACA,mBACA,qBACA,oBACA,CACA,CACA,QACA,mBACA,mBACA,gBACA,CACA,OACA,UACA,kBACA,CAEA,UACA,oBACA,qCACA,qBACA,qBAEA,CACA,QACA,mBACA,mBACA,gBACA,CACA,WACA,uBAEA,kBACA,sBAEA,CCrFO,QACP,KAAU,GAAM,EAAD,CAAK,MACpB,MAAW,GAAI,GAAI,MACnB,KAAU,GAAO,GAAD,CAAK,KACrB,UACA,KAAU,GAAM,EAAD,CAAK,MACpB,MAAW,GAAM,EAAD,CAAK,MACrB,MAAW,GAAQ,GAAI,CAAL,OAClB,EACA,IACA,UACA,YACA,aACA,EAgCO,mBA/BP,iBACA,0CACA,UAEA,0BACA,OAEA,cACA,eAIA,oCACA,2BAEA,sBAGA,EAcA,YACA,CAaA,WAA0B,GAAQ,iBCzDlC,IACA,SACA,UACA,OACA,CACA,MACA,SACA,YACA,CACA,UACA,SACA,YACA,CACA,OACA,WACA,CACA,OACA,SACA,YACA,UACA,OACA,CACA,OACA,SACA,eACA,aACA,kBACA,QACA,SACA,EAgDO,mBACP,MAA2B,GAAyB,GACpD,eACA,IAFoD,EAEpD,GACA,gBACA,eAnDA,OACA,aACA,MAAsB,GAAa,GACnC,OADmC,CACnC,IACA,aASA,2BAUA,GATA,aAA2D,IAA3D,IJ/CA,OI+C0E,OJ/C1E,KI+C0E,IAS1E,SACA,MAAqC,SNtC1B,GACX,WACA,EAjBA,SMqDuE,ENpDvE,4DACA,4BAAuC,EAAO,SAC9C,IAeA,EAdA,WACA,gDACA,4BAAuC,EAAO,SAC9C,IAkBA,OAF+B,GAAqC,4CAGpE,EM2BuE,EASvE,CADA,MAEY,QAAQ,CDPb,KCKkF,CDJzF,QCIkI,CAA0B,GDJ5J,MACA,YACA,YACA,SAEA,ECCoB,iHAAkH,SAA4B,4FAElK,GACA,CACA,UACA,IAAa,GAAU,IACvB,EAAM,CADiB,GAEvB,EAEA,IAAa,GAAU,IACvB,CACA,EAFuB,EAQvB,KACA,GACA,SACA,CACA,QACA,CACA,QACA,mBACA,gBACA,qBACA,sBACA,6BACA,+BACA,uBACA,0BAMO,eACP,kBAaA,OACA,KACA,MAAe,GAAY,UAC3B,EAGA,OAlBA,kBANA,EASA,YARA,CADA,EAOA,8BANA,QACA,uBADA,SAUA,GADA,KACA,WADA,EACA,CACA,QAFA,EAEA,CACA,EAHA,EAGA,GAAsC,GAAY,OAClD,CAEA,CAHkD,CAGlD,iDACA,EAKA,KACA,YAAmC,GAA8B,gBACjE,CACA,EACA,IACA,IAJiE,GAKjE,SACA,UACA,YACA,cACA,CACO,eACP,MACA,kBACA,+BACA,GACA,KACA,MAAe,GAAY,UAC3B,EACA,gBACA,gBAKA,GAHA,oDACA,4EACA,SACA,WACA,eACA,aAEA,UAAuC,GAAyB,eAChE,KAEA,EAHgE,GAGhE,MAEA,eAKA,CAEA,QACA,iBCtKO,qBACP,IAIA,EACA,EACA,EANA,QAAY,wBAA4B,KACxC,aACA,aACA,qBAAkF,KAAmB,CAiBrG,OAbA,GACA,eACA,WACA,QACM,GACN,eACA,SACA,QACM,IACN,eACA,SACA,QAEA,CACA,MACA,UACA,UACA,CACA,CACO,uBACP,IAAY,OAAuB,KACnC,cACA,mBAGA,CEhCA,mBAGA,qBACA,4BACA,uDACA,GACA,CACA,OAAW,GAA8B,MACzC,CACO,WACP,MACA,GAJyC,CAIzC,cACA,SAUA,OATA,SAAkC,GAAyB,mBAC3D,GAD2D,OAC3D,iBACA,OACA,CAAS,EACT,4BACA,cACA,cACS,CACT,CAAK,EACL,CACA,EACA,mBACA,kBACA,SACA,iCACA,qCACA,MACA,CACA,aACA,EACA,EAEA,QACA,2BACA,mBACA,UACA,MACA,aACA,CACA,CAAa,GAGb,QACA,CASO,iBACP,kBACA,eAVA,cACA,EAGA,CACA,OAHA,6CAGA,IACA,EALA,IAMA,EAGA,iBACA,sBACA,kBAQA,MANA,CACA,YACA,YACA,QACA,MALA,eAMA,CAEA,EACA,IACA,YACA,YACA,eACA,UACA,cACA,kBACA,uBACA,oBACA,oBACA,oBACA,cACA,CACA,OACA,kBACA,+BACA,SAKA,aAJA,wBACA,6CACA,0BACA,+CACA,KACA,gBACA,eACA,gCAA8D,EAAI,GAAG,EAAM,EAE3E,CACA,mBACA,EACO,MACP,EACA,CACA,YACA,iDACA,EAJA,KAMA,IACA,SACA,QACA,SACA,KACA,QACA,CACO,OACP,kBACA,SACA,iBACA,WACA,KACA,eAEA,aADA,WACA,SACA,MAAuC,GAAyB,WAChE,WADgE,CAChE,MACA,MACc,KAAgB,GAAyB,EAEvD,CACA,QACA,EACO,OACP,EANuD,EAMvD,EACA,kBACA,UACA,OACA,UACA,EAEA,qBAA0G,MAA1G,GAAiF,GAAyB,qDAC1G,KACA,EAAU,QACV,OACA,sCACA,oBACA,eACA,0CACA,CACA,EACO,OACP,kBACA,eAEA,KAAwB,GAAyB,MAEjD,QACA,EACO,YACP,EACA,CACA,cACA,sDACA,EAJA,KAMO,MACP,EACA,CACA,cACA,OAAgB,GAAyB,SACzC,EAJA,KAMO,MAHkC,EAGlC,IACP,EACA,6DACA,gDACA,GC7KO,sBACP,GAAqB,IACrB,KACA,CAFqB,EAGrB,iBACA,EACA,CACO,WACP,MACA,YAEA,OACA,QACA,UAEA,oBACA,sCACM,GAAS,GAAa,GAC5B,OAD4B,CAE5B,MACA,MAEA,aAA0B,GAAQ,CAClC,IADkC,EACP,GAAyB,KACpD,iBADoD,EACpD,CACA,CAEA,QACA,ECzBA,mBAaA,OAZA,2CACA,uBACA,yBACA,2CACA,6BACA,6EACA,iDACA,yCACA,uCACA,2DACA,mDACA,mCACA,CACA,CAAC,OAAqB,EACtB,eAGA,OAFA,yEACA,iDACA,CACA,CAAC,OAAyB,EAC1B,eAKA,OAJA,mDACA,mCACA,+DACA,2CACA,CACA,CAAC,OAAqB,EAClB,GAAkB,YAgCtB,OA/BA,MADsB,OACtB,8BACA,yCACA,2DACA,iEACA,+DACA,6DACA,iEACA,6DACA,iEACA,qDACA,6CACA,iCACA,iCACA,yCACA,iDACA,2CACA,uDACA,yDACA,mDACA,yEACA,uDACA,6CACA,2CACA,uDACA,uCACA,+CAEA,gBACA,0BACA,4BACA,gCACA,CACA,CAAC,CAAC,IAAkB,EAAM,EAC1B,eAEA,KAHoB,EAEpB,wCACA,CACA,CAAC,OAAsB,EACvB,eAMA,OALA,iDACA,yCACA,yCACA,yCACA,6CACA,CACA,CAAC,OAAiB,EACd,GAAa,YAKjB,OAJA,CADiB,CACjB,0CACA,4DACA,0CACA,0BACA,CACA,CAAC,CAAC,IAAa,EAAM,EACrB,eAEA,OADA,qCACA,CACA,CAAC,OAAiB,EAClB,eAEA,OADA,+BACA,CACA,CAAC,OAAe,EAChB,eAEA,OADA,gDACA,CACA,CAAC,OAAgC,EACjC,eAGA,OAFA,sDACA,sDACA,CACA,CAAC,OAA0B,EAC3B,eAEA,OADA,+BACA,CACA,CAAC,OAAqB,EAEf,QACP,qBACA,2BACA,4BACA,wBACA,kBACA,0BACA,wBACA,kBACA,mCACA,mCACA,mCACA,qCACA,oCACA,uCACA,+BACA,wCACA,CAGO,IACP,oCACA,qCACA,wCACA,CEjHA,SAAQ,uBAA2B,kBAAgB,iCAA2B,EARpE,EAAQ,IAAoB,CAS/B,YATU,MASV,MACP,iBACA,mCACA,CACA,CAKA,eACA,CALO,kBACP,8BACA,gBACA,EAEA,aACA,kCAEA,GACA,qBAEA,aACA,KAAkB,GAAc,MAChC,YADgC,EAChC,mBACS,GAET,OACA,EACA,WACA,yCACA,KACA,YACA,IACA,WACA,QACA,MACA,OACA,CAAS,CACT,CACA,CACA,UAKA,oBACA,OAAe,GAAK,4BACpB,CACA,aACA,SACA,CACA,0BACA,kBACA,KAEA,OADA,kBACA,CACA,CACA,qBACA,OAAe,GAAK,oCACpB,CACA,6BACA,kBACA,GAAY,GAAK,kBAEjB,WAEA,wBACA,mBACA,CACA,YACA,MACA,aAEA,IAAgB,aAAc,sBAC9B,KACA,UACA,EAAU,CACV,KACA,SACA,KAEA,EACA,gBACA,IAAa,GAAwB,6DACrC,WAGA,oFACA,KACA,EAGU,UAAkC,GAAK,uCACjD,QAHA,oCACA,MAIA,WAMA,OALA,cACA,mBACA,mBACA,iBAEA,8EACA,8FACA,OACA,aACA,6CAAiF,GAAgB,iBACjG,uBAA+C,yCAAyC,QAAQ,kEAAoF,GACpL,QACA,qBACA,CAAyB,CAEzB,CACA,IACA,gDAAuG,IAEvG,IACA,cACA,uBAEA,WACA,GD7HgB,CC6HQ,MAAU,GD5HX,CC4HW,SD5H9B,OC4H8B,GD3H9B,SC2H8B,CD3HpB9uB,EACV,mBAAOA,EAAQG,IAAI,CC4HvB,kBACA,QAGA,IACyB,UAEzB,MADA,QACA,CACA,CAAyB,aAKzB,OAHA,QACA,IAEA,CACA,CAAkB,SAGlB,MAFA,QACA,IACA,CACA,CACA,CAAa,EACb,CACA,WACA,WACA,wBACA,KACA,EAAc,CACd,KACA,QACA,GAAqC,iDAGrC,WACA,OACA,6CACA,4BAEA,yBACA,eACA,wBAUA,+CAVA,EACA,yCACA,2BACA,yBAEA,OADA,cACA,uBACA,EACA,yBAEA,CAGA,CAHc,CAlBd,CAsBA,CACA,gBACA,WACA,gFACA,gDACA,CACA,kBAEA,OADA,EAAyC,GAAK,6BAE9C,CACA,wBACA,+BACA,gBACA,CACA,0BACA,+BACA,WACA,IACA,UAEA,CACA,CACA,IAAM,GAAS,MACf,OADe,GACf,GACA,YACA,CAAC,GC3BD,mBACA,0CACA,UAAgB,GAAQ,EACxB,UAAyB,KAAS,MAAS,GAAmB,EAA5B,cAA4B,EAC9D,6BAA8C,EAAM,EACpD,YACA,aACA,CACA,CAAa,6BACb,CACA,uBACA,CACA,mBACA,0CACA,UAAgB,GAAQ,EACxB,UAAyB,KAAS,MAAS,GAAmB,EAA5B,cAA4B,EAC9D,6BAA8C,EAAM,EACpD,YACA,aACA,CACA,CAAa,6BACb,CACA,uBACA,CACA,yBACA,MACA,iCACA,6BNrNO,MMqN0D,ENpNjE,CADO,EMqNwE,YNpN/E,aMqNA,uFACA,CACA,uBACA,aAAY,GAAW,EACvB,kBACA,gCACA,eACA,gBACA,oBACA,kBACA,EAQA,MAPA,CACA,OACA,QACA,YACA,UACA,oBAGA,CAEA,wBAAiC,wEAAuE,EAGxG,IAFA,EACA,EACA,iBACA,KACA,QAAoB,GAAsB,YAC1C,OAD0C,CAEpC,CACN,IAAgB,iBAAqD,MAAQ,GAAqB,GAClG,IACA,GACA,CACA,GACA,QAAqB,EAAQ,GAE7B,uBACA,YACA,OACA,CAAK,OAKL,GAJA,QACA,EACA,EACA,EACA,MACA,YAA+B,GAAsB,KACrD,YACA,EAFqD,IAErD,CACA,CAAS,MACT,QACA,MACA,CACA,CAEA,wBAAiC,2EAA0E,EAG3G,IAFA,EACA,EACA,iBACA,KACA,QAAoB,GAAsB,YAC1C,OAD0C,CAEpC,CACN,IAAgB,iBAAqD,MAAQ,GAAqB,GAClG,IACA,GACA,CACA,GACA,QAAqB,GAAQ,EAE7B,gBACA,OACA,CAAK,OAEL,GADA,UACA,MACA,YAA+B,GAAsB,IAIrD,WAHA,IADqD,CACrD,KACA,OACA,CAAS,MAET,CACA,CACA,OAA6B,WAAK,2BAQlC,UANA,GAMA,EADA,OANA,GAOA,IALA,CACA,KACA,KACA,CAEA,IACA,CAAC,EACD,qCACA,IAoBA,EApBA,WAAsC,EAAM,IAC5C,kBACA,EACA,EACA,EACA,EACA,CAGA,OAGA,GACA,oBACA,IACA,KACA,kBACA,EAEA,MAAmB,GAA6B,KAqBhD,aAlBA,EAfA,MAYgD,GAZhD,EAeA,CACA,SACA,cACA,EAEA,CACA,QACA,EAEA,UACA,OACA,gBACA,oBACA,kBACA,QACA,QACA,cAA2B,KAAgB,WAC3C,CAAK,EACL,GACA,iBACA,qBACA,CAMA,OALA,8BAGA,UAEA,CACA,CACA,OAA6B,WAAK,2BAOlC,UALA,GAKA,EADA,OALA,GAMA,IAJA,CACA,YACA,EAEA,IACA,CAAC,EACD,qCACA,IAoBA,EApBA,WAAsC,EAAM,IAC5C,kBACA,EACA,EACA,EACA,EACA,CAGA,OAGA,GACA,oBACA,IACA,KACA,kBACA,EAEA,MAAmB,GAA6B,KAqBhD,aAlBA,EAfA,MAYgD,GAZhD,EAeA,CACA,SACA,cACA,EAEA,CACA,QACA,EAEA,UACA,OACA,gBACA,uBACA,kBACA,QACA,QACA,cAA2B,KAAgB,WAC3C,CAAK,EACL,GACA,iBACA,qBACA,CAMA,OALA,8BAGA,kBAEA,CACA,CACA,wCACA,iCACA,iBACA,IACA,eACA,kBAEA,+BACA,8BAGA,CAiFA,iBACA,yBACA,mCACA,UACA,sBAKA,WACA,EACA,aACA,GAGA,EAAM,sBACN,UAEA,YAEA,CASO,uBACP,IASA,EATA,EfjhBA,CAEA,cACA,Ee8gB6B,Sf9gB7B,KACA,Oe6gBkD,Kf7gBlD,KACA,kBAEA,WACA,iBACA,qBACA,aACA,eACA,cACA,cACA,aACA,eACA,YACA,cACA,YACA,eACA,eACA,WACA,UACA,CAAS,CACT,WACA,eACA,aACA,eAAwB,CACxB,iBACA,qBACA,YACA,cACA,eACA,cACA,cACA,cACA,YACA,eACA,cACA,oBACA,YACA,cACA,SACA,CAAS,CACT,QACA,EeqeA,GACA,WACA,aACA,cACA,EACA,GACA,gBACA,EAIA,GACA,QACA,UAEA,EApEA,YAIA,SACA,YAAmB,WAA0B,IAE7C,KADA,SAGA,QACA,EA0DA,GACA,IACA,YAAmB,WAA0B,SAC7C,EAKA,EAkCA,MAtkBA,MAojBA,EApBA,UAGA,UAniBA,EAmiBA,wCA9hBA,gGA8hBA,CAEA,gDACA,aACA,CACA,aACA,yBAIA,QAGA,SAvCA,EAwCA,EACA,EApgBA,iBAAyB,0GAA0G,EAEnI,6EACA,eAEA,OADA,GAEA,YAEA,QAAmC,GAAY,iBAC/C,KAEA,kBAEA,aAAwC,GAAiB,kBACzD,KAEA,iBAEA,YAAuC,GAAgB,6BACvD,KAEA,eAEA,UAAqC,GAAc,y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CjB,KACA,WAA0C,UAAI,SAC9C,eACA,2BAGA,0EACA,CAAS,OACD,GAAI,MACZ,YACA,oBACS,EACD,GAAI,MACZ,WACA,+CACA,CAAS,EACD,GAAI,MACZ,WACA,mBACS,EACD,GAAI,CACZ,eACA,kBACS,EACD,GAAI,MACZ,YACA,oBACS,EACD,GAAI,MACZ,SACA,0CACS,EACD,GAAI,MACZ,YACA,8CACS,EACD,GAAI,MACZ,WACA,mBACS,KACT,6BAA8E,UAAI,SAClF,eACA,MACA,CAAa,SACb,yBAAwE,UAAI,SAC5E,aACA,MACA,CAAa,SACb,+BAAiF,UAAI,SACrF,gBACA,MACA,CAAa,SACb,cACA,sBAAyD,UAAI,SAC7D,WACA,2BACa,OACb,kBAAqD,UAAI,SACzD,WACA,sBACA,CAAa,OACb,IACQ,GAAI,MACZ,WACA,mBACS,EACD,GAAI,MACZ,iBACA,yBACS,KACT,6CACA,iBACA,SAAkD,GAAI,MACtD,EACA,SACA,CAAqB,GAEE,GAAI,CAC3B,OACA,SACA,CAAiB,GAER,GACT,CACA,EsByCiB,CACjB,SAHA,EArBA,MAAmC,GAAe,aAyBzC,ErBzLF,kBqB0LmB,GrB1LW,EAAY,EACjD,kBACA,cAAY,+BAAqC,EACjD,OAAW,GAAU,CACrB,MADqB,IAErB,YACA,YACA,CAAS,OACT,iEACA,gBACA,WACA,YACA,CAAiB,SACjB,iEACA,gBACA,QACA,YACA,CAAiB,SACjB,iEACA,gBACA,OACA,YACA,CAAiB,SACjB,CACA,EqBkK0B,CAC1B,wBACS,EtB7CF,UsB8CW,OtB9CW,EAAQ,EACrC,kBACA,UAAY,iBAAqB,EACjC,YAA4B,EAAM,EAIlC,OAHA,GACA,sBAAqC,GAAY,EAExB,UAAI,SAC7B,wBACA,SACA,CAAK,CACL,EsBmCkB,CAClB,gBACS,EtBpCF,YsBqCa,OtBrCW,EAAU,EACzC,kBACA,UAAY,YAAgB,EAC5B,OAAW,GAAU,CACrB,EAA8B,IADT,EACS,IAAI,SAClC,qBACA,SACA,CAAS,UACT,WAAsD,UAAI,SAC1D,qBACA,SACA,CAAa,MACb,CACA,EsBwBoB,CACpB,oBACS,EACD,StB1BD,CAAyB,GsB0BX,QtB1BW,CAAW,EAC3C,8BACA,YAAY,GAAU,EACtB,MAAyB,UAAI,SAC7B,8BACA,oBACA,CAAK,CACL,EsBmBqB,CACrB,sBACS,EtBbF,mBsBcoB,OtBdW,EAAiB,EACvD,kBACA,SACA,gBACA,SACA,aACA,MAA0B,EAAI,MAG9B,MAAyB,UAAI,SAC7B,wBACA,SACA,CAAK,CACL,EsBC2B,CAC3B,kCACS,EtBqBF,UAA4B,MsBpBX,QtBoBW,CAAc,SACjD,EACW,GAAU,CACb,GAAS,CACjB,EAFqB,GACJ,MACjB,2BACA,kBACS,EACD,GAAS,CACjB,KADiB,MACjB,QACA,iBACS,EACD,GAAS,CACjB,KADiB,MACjB,sBACA,kBACS,EACD,GAAS,CACjB,KADiB,MACjB,KACA,cACS,KACT,6CAAuF,GAAS,CAChG,KADgG,MAChG,EACA,UACA,CAAa,MACb,EAtBA,IAuBA,EsB5CwB,CACxB,4BACS,EACD,StBND,MsBMgB,OtBNW,EAAa,EAC/C,kBACA,YAAY,2CAA+C,EAC3D,OAAW,GAAU,CACrB,EAAkB,GAAI,CADD,KAErB,yBACA,aACA,CAAS,OACD,GAAI,MACZ,6BACA,SACA,CAAS,EACT,WAA+D,UAAI,SACnE,WACA,cACA,+BACA,CAAa,QACb,EAAyB,GAAI,MAC7B,wCACA,SACA,CAAS,OACT,CACA,EsBhBuB,CACvB,0BACS,EpB1NF,UAA6B,OoB2NX,IpB3NW,CAAW,MAC/C,MAiBA,MAiFA,MA9FA,EAHA,MACA,YAGA,eACA,aACA,UACA,cACA,GACoB,GAAI,UACxB,UACA,iBACA,CAAqB,EACrB,CACA,KACA,eAEA,GACoB,GAAI,UACxB,UACA,iBACA,CAAqB,EACD,GAAI,UACxB,yBACA,qDACA,CAAqB,EACD,GAAI,UACxB,wBACA,oDACA,CAAqB,EACD,GAAI,UACxB,0BACA,sDACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,iBACA,mBACqB,EACD,GAAI,UACxB,kBACA,kBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,cACA,eACA,CAAqB,EACrB,CACA,KACA,YACA,GACoB,GAAI,UACxB,UACA,cACA,CAAqB,EACD,GAAI,UACxB,YACA,eACqB,EACD,GAAI,UACxB,oBACA,sBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,cACA,kBACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,WACA,gBACqB,EACrB,CACA,KACA,eACA,GACoB,GAAI,UACxB,UACA,iBACA,CAAqB,EACD,GAAI,UACxB,qBACA,oBACqB,EACD,GAAI,UACxB,oBACA,mBACqB,EACD,GAAI,UACxB,mBACA,mBACqB,EACD,GAAI,UACxB,iBACA,iBACqB,EACrB,CACA,KACA,kBAEA,GACoB,GAAI,UACxB,UACA,oBACA,CAAqB,EACD,GAAI,UACxB,iBACA,gDACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,cACA,kBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,iBACA,qBACqB,EACrB,CACA,KACA,mBACA,GACoB,GAAI,UACxB,UACA,qBACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,aACA,iBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,iBACA,qBACqB,EACD,GAAI,CACxB,8BACA,qBACA,CAAqB,EACrB,CACA,KACA,sBACA,GACoB,GAAI,UACxB,UACA,wBACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,aACA,iBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,gBACA,oBACqB,EACrB,CACA,KACA,2BACA,GACoB,GAAI,UACxB,UACA,6BACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,gBACA,oBACqB,EACrB,CACA,KACA,mBACA,GACoB,GAAI,UACxB,UACA,qBACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,cACA,kBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,iBACA,oBACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,eACA,mBACqB,EACD,GAAI,UACxB,iBACA,mBACqB,EACD,GAAI,UACxB,qBACA,sBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,YACA,gBACqB,EACrB,CACA,KACA,qBACA,GACoB,GAAI,UACxB,UACA,uBACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,cACA,iBACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,iBACA,qBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,eACA,mBACqB,EACD,GAAI,UACxB,iBACA,mBACqB,EACD,GAAI,UACxB,qBACA,sBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,YACA,gBACqB,EACD,GAAI,UACxB,eACA,iBACqB,EACrB,CACA,KACA,qBACA,GACoB,GAAI,UACxB,UACA,uBACA,CAAqB,EACrB,CACA,KACA,mBACA,GACoB,GAAI,CACxB,mBACA,qBACA,CAAqB,EACrB,CACA,KACA,SAEA,6DADA,EACkG,wBAClG,aACA,cACA,eACA,CAAiB,CACjB,CACA,CACA,OAAW,GAAU,CACb,GAAI,GADS,OAErB,gBACA,qBACS,EACD,GAAI,UACZ,WACA,4CACS,EACD,GAAI,UACZ,iBACA,sBACS,EACD,GAAI,UACZ,SACA,2CACA,CAAS,EACD,GAAI,UACZ,eACA,kBACA,CAAS,EACD,GAAI,UACZ,YACA,iBACS,EACD,GAAI,UACZ,kBACA,sBACS,EACD,GAAI,UACZ,SACA,2CACA,CAAS,EACD,GAAS,CACjB,KADiB,UACjB,WACA,kBACS,EACD,GAAS,CACjB,KADiB,UACjB,WACA,kBACS,EACD,GAAS,CACjB,KADiB,UACjB,WACA,iBACS,EACD,GAAS,CACjB,KADiB,UACjB,WACA,kBACS,EACD,GAAS,CACjB,KADiB,UACjB,kBACA,wBACS,EACD,GAAS,CACjB,KADiB,UACjB,gBACA,sBACS,EACD,GAAS,CACjB,KADiB,UACjB,sBACA,0BACA,CAAS,KACT,MACA,CACA,EoBxGyB,CACzB,sBACS,EACD,SpBuHD,MoBvHgB,GpBuHW,EAAS,EAC3C,MACA,kBACA,SAAY,GAAO,EACnB,OAAW,GAAU,CACb,GAAI,GADS,GAErB,eACA,SACA,CAAS,EACD,GAAI,CACZ,oBACA,eACS,EACD,GAAI,MACZ,kBACA,iBACS,EACD,GAAI,MACZ,kBACA,kBACS,EACD,GAAI,MACZ,qBACA,oBACS,EACD,GAAI,MACZ,gBACA,4CACS,EACD,GAAI,MACZ,sBACA,sBACS,EACD,GAAS,CACjB,KADiB,MACjB,gBACA,kBACS,KACT,mCACgB,GAAI,MACpB,iBACA,8BACA,CAAiB,EACD,GAAI,MACpB,wBACA,8BACA,CAAiB,EACD,GAAI,MACpB,uBACA,gBACiB,EACD,GAAI,CACpB,6BACA,iBACiB,EACjB,QACA,WACA,IACA,UACA,aACA,CAAa,EACb,IACA,UACA,WACA,CAAa,EACb,IACA,UACA,iBACA,CAAa,EACb,IACA,CACA,EoB7LuB,CACvB,kBACS,EpB4LF,YoB3La,OpB2LW,EAAU,SACzC,EACW,GAAU,CACb,GAAS,CACjB,EAFqB,GACJ,UACjB,SACA,eACS,EACD,GAAS,CACjB,KADiB,UACjB,YACA,kBACS,EACD,GAAS,CACjB,KADiB,UACjB,UACA,gBACS,EACD,GAAS,CACjB,KADiB,UACjB,aACA,mBACS,EACD,GAAS,CACjB,KADiB,UACjB,mBACA,yBACS,EACD,GAAS,CACjB,KADiB,UACjB,aACA,mBACS,EACD,GAAS,CACjB,KADiB,UACjB,uBACA,4BACA,CAAS,EACD,GAAS,CACjB,KADiB,UACjB,SACA,eACS,EACT,EAlCA,IAmCA,EoB/NoB,CACpB,oBACS,EnB5MF,amB6Mc,GnB7MW,EAAO,EACvC,kBACA,iBACA,SACA,UACA,UACA,OAAW,GAAU,CACrB,MADqB,CACrB,QACA,oBACA,MACA,CAAa,QACb,eACA,WACA,MACA,CAAa,QACb,eACA,uBACA,MACA,CAAa,QACb,eACA,MACA,CAAa,QACb,CACA,EmBsLqB,CACrB,cACS,EACT,EAzDA,MAAyB,UAAI,CAAC,WAAS,EACvC,sBACiC,kBAAY,IAC7C,KACA,CAAa,EAEb,CAAK,CACL,CACA,6BAEA,MAkDW,GAAU,CtBhNd,MsBgNc,GtBhNd,GsBiNa,OtBjNW,EAAU,EACzC,OAAW,GAAU,CACC,MADD,GACC,CAAI,SAC1B,eACA,CAAS,EACD,GAAI,MACZ,WACA,iBA7BA,GACA,WACA,yBAEA,cADA,KACkC,GAElC,GADA,KACA,GACA,EAHkD,EAGlD,IAFA,EAEA,CACA,oBACA,eACkB,oBALlB,GAMA,WAEA,IACA,aACA,MAAmC,EAAgB,CAVnD,EAUmD,CAAc,GAAG,EAAM,EAE1E,CACA,CAEA,QACA,EAQA,EACA,CAAS,KACT,iCAAuE,GAAI,CAC3E,mBACA,gBACA,cACa,MACL,GAAI,CACZ,oBACA,sBACS,EACT,CACA,EsB8LoB,CACpB,SArDA,MAAmC,GAAe,UAsDlD,CAAS,CAtDyC,CAuDlD,EArDA,MAAyB,UAAI,CAAC,WAAS,EACvC,sBACiC,kBAAY,IAC7C,KACA,CAAa,EAEb,CAAK,CACL,gBCtLW,eAGX,WACA,OACA,EACA,EACA,CAEA,sBACA,kBACA,gBACA,wBACA,kBACK,EACL,+BACA,YACK,EACL,sBACA,gBACA,wBACA,kBACK,EAIL,OAHA,+BACA,YACK,EACL,CACA,EACA,EACA,CExCO,IAAI,GAAe,YAO1B,MAP0B,CAC1B,sBACA,wBACA,gBACA,gBACA,sBACA,gBACA,CACA,CAAC,GAAG,EACO,GAAoB,YAM/B,OALA,IAD+B,MAC/B,YACA,wBACA,gBACA,gBACA,gBACA,CACA,CAAC,GAAG,ECZJ,gBACA,GACA,IACA,IACA,IACA,IACA,EAEA,gBACA,GACA,GACA,IACA,IACA,IACA,EAIA,gBACA,GACA,GACA,IACA,IACA,GACA,IACA,GACA,EAEA,gBACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA,EAEA,gBACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,EAEA,gBACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,wBCpDA,uBA6CO,SAAS,GAAgB,GAChC,2BACA,SACA,aACA,SACA,CACA,CAAK,CACL,CACO,eAAe,GAAc,GACpC,oBA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CA,CACA,WACA,yBAEA,YACA,mBACA,CACA,eACA,6BAEA,gBACA,uBACA,CACA,WACA,4BACA,sBACA,SAAkB,cAAc,IAAI,UAAU,EAAE,EAAS,EAAE,EAAO,EAAE,UAAU,EAE9E,YACA,mBACA,cACA,CACA,aACA,2BAEA,eACA,4BACA,CACA,gBACA,uBACA,CACA,WACA,wBACA,CACA,YACA,mBACA,CACA,aACA,2BAEA,cACA,qBACA,CACA,eACA,6BAEA,gBACA,uBACA,CACA,eACA,4BACA,CACA,gBACA,uBACA,CACA,eACA,wBACA,CACA,gBACA,0CAAsE,EAAM,EAE5E,WACA,iBAEA,SACA,iBAEA,8CACA,OACA,eACA,mBACA,uBACA,uBACA,uBACA,eACA,uBACA,eACA,uBACA,mBACA,+BACA,eAEA,CACA,QACA,4CACA,CACA,SGlLO,2BAKqB,QAyB5B,iEMaW,cAEX,sCAIA,uBC3CO,gCA0DP,iBACA,MAEA,MACA,iDAKA,CAJA,gGAC0B,CAG1B,IAGA,OAN8C,OAM9C,MACA,qBACA,KACA,6CACA,oBACA,CAAK,EACL,kCCjFO,mBACP,OACA,UACA,CACA,qBACA,kBAEA,oBACA,YAEI,UAAgB,KACpB,CACO,qBACP,OACA,UACA,MACA,CACA,qBACA,kBAEA,oBACA,YAEI,UAAgB,KACpB,CACO,mBACP,QACA,qBACA,kBAEA,oBACA,YAGI,aAAmB,KACvB,CE5BO,OAPP,WACA,SAMoC,IANpC,EAMyE,GAAG,CAAuC,QANnH,2EACA,aACA,cACA,eACA,CAAK,CACL,iBCHO,SAASm1B,GACd7X,CAAiC,EAEjC,GAAuB,UAAnB,OAAOA,SACT,EAAYra,UAAU,CAACsb,GAAAA,EAAgBA,EAU9BA,CAViC,EAUjCA,EAAgBA,CAMX,gBAAZjB,EACI,aACA8X,GAAmC9X,GAK3C,IAAMhP,EAAOgP,CAAO,CAAC,EAAE,CACjB+X,EAAa/X,CAAO,CAAC,EAAE,CACvBgY,EAAYhY,CAAO,CAAC,EAAE,CACtBiY,EAAWH,GAAmC9mB,GAIpD,MADoB,CACbknB,GADmBF,EAAY,IAAMC,EAAW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,iCAGA,2BACA,iCAEA,uBAAwD,EAAwB,qBAAqB,EAAuB,kCAC5H,SACA,UAGA,MACA,gCAEA,0CAMA,6BAGA,8BACA,KAIA,2CACA,MAEA,kCACA,aAAwC,GAAwB,EAEhE,WA7MO,KACP,IACA,MACA,UACA,EAAmC,KAAc,MACvC,uCACV,SACU,cACV,+DAA+E,EAAc,QAAQ,EAAM,iEAC3G,aACA,cACA,eACA,CAAa,EAEb,QACA,CAAM,SAEN,gEACA,QAEA,MACA,CACA,EAuLA,WACA,mBACA,8DAAwI,EACxI,0CACA,IACA,MACA,OACA,iEAUA,EACA,WACA,YAEA,gBACA,UACA,EAEA,GAEA,+CACA,uCAOA,OAJA,IACA,YACA,QAEuB,EAAkB,0BAEzC,UACA,IAHyC,iBAKzC,gCACA,KAEA,qBAEA,sCACA,4EAA4G,GAAU,uEACtH,aACA,cACA,eACA,CAA6B,EAE7B,+BACA,KAEA,kBAEA,kBACA,yEAAyG,GAAU,oEACnH,aACA,cACA,eACA,CAA6B,EAE7B,KAEA,mBAEA,sBACA,6BACA,EAA8C,KAAc,CAK5D,CAsBA,GArBA,WACA,uBAGkB,wBAClB,IACA,mCACkB,GAClB,IACA,kBACkB,GAClB,IACA,oBAGA,eACA,iBAAqF,KAAc,GAdnG,EAAsC,KAAc,CACpD,gCAec,GACd,kBAA6C,GAAgB,EAI7D,yBACA,IAGA,mBAGA,SACA,2BAKA,OAJA,IACA,YACA,QAE+B,EAAkB,+BAEzB,EAAyB,OAFA,gBAEA,IAAkD,GAAO,EAAE,QAAgB,EAK5H,WACA,gBAEA,CACA,8BAEA,kBAAoB,GAAmB,EACvC,kFACA,uDACA,IACA,mCACA,CAAkB,SAClB,mDACA,CAEA,sBACA,mBACA,4BACA,eACA,OACA,QACA,cACA,UACA,YACA,YACA,SACA,OACA,WACA,WACA,iBACA,SACA,YAEA,MACA,SACA,CACA,CACA,MACA,QACA,GACA,wBAEA,eAEA,UAEA,sBACA,EAAkB,UAClB,YAA4B,wBAAuC,EACnE,GACA,KACA,UACA,iBACA,CACA,CAEA,OACA,KACA,MACA,yBACA,mBACA,UACA,CACA,EACA,6BAYA,GAXA,OACA,MACA,QACA,MACA,iBACA,mCACA,eACA,gBACA,sBACA,CAAyB,EAEzB,wEACA,SAAwE,KAAc,CAAG,KAAc,GACvG,4BAGA,4BACA,GACA,gDACA,KAAsC,GAAM,2BAC5C,gBACA,WAgBA,OAZA,eACA,KAAsC,GAAe,MACrD,OACA,KAFqD,MAErD,CACA,CAA6B,EAC7B,cACA,WACA,WACA,MACA,CAA6B,EAC7B,UAEA,gBACA,kBACA,gBACA,wBAC6B,CAC7B,CAA0B,IAK1B,MAAuD,GAAa,GA2BpE,OA3BoE,EAIpE,6BACA,MACA,MAAmD,GAAM,QACzD,GACA,IAFyD,IAEzD,wCACA,0BACA,gBACA,UAEA,2DACA,GACA,eACA,KAA8C,GAAe,MAC7D,OACA,KAF6D,MAE7D,CACA,CAAqC,EACrC,cACA,WACA,WACA,MACA,CAAqC,CAErC,CAA6B,qEAC7B,CACA,CACA,CAIA,OADA,UACA,CACA,CAAiB,YAEjB,MADA,IACA,CACA,CAAiB,CACjB,EAEA,KACA,KACA,SACA,MAKA,GAJA,8DACA,oCACA,MAEA,OACA,kBACA,iDACA,KAA8B,GAAoB,MAClD,aACA,IAFkD,KAElD,EACA,WACA,OACA,+BACqB,EAerB,GAdA,GAIA,yBACA,MAAkC,KAGlC,EACA,UAGA,YAP+D,+BAS/D,yCAAuF,GAAe,MAGtG,YAHsG,KAGtG,YACA,SAC0B,CAC1B,eACA,0BACA,2BACA,4BACA,2BACA,kBACA,gBACA,wBACA,CAAyC,eACzC,0BACA,mCACqC,EAGrC,uBACA,yBACA,CAEA,cACA,CAEA,CACA,MACA,GACA,MACA,QACA,MACA,cACA,0BACA,eACA,qBACA,uCACA,CAAyB,EAEzB,mBAAkD,GAAM,uBACxD,kBACA,gBACqB,EAIrB,OAHA,+BACA,WACA,CAAqB,EACrB,CACA,CACA,CACA,gDACA,UAAwB,GAAQ,EAGhC,GADA,eACA,eAEA,2BAKA,OAJA,IACA,YACA,QAE+B,EAAkB,+BAEzB,EAAyB,OAFA,aAEA,EAA6C,CAA7C,CAA6C,CAAO,EAAE,QAAgB,GAGvH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,8BAEA,uBACA,KACA,iBACA,CACA,gBACA,iBACA,OACA,aACA,0BACA,aACA,iBACA,uBACA,KACA,WACA,gBAEA,CACA,gBAEA,OADA,OACA,EACA,CACA,cACA,GACA,KACA,yCACA,OACA,IACA,CACA,sBACA,cACA,kBACA,CACA,cACA,kBACA,CACA,gBACA,2BACA,WACA,SACA,CACA,oBACA,kCACA,SACA,iZAEA,IAAgC,CAChC,KACA,oBACA,gBAEA,cACA,UACA,SACA,QACA,IACA,CACA,cACA,i7BACA,MAGA,WACA,mCACA,kBACA,2BACA,8BACA,iCACA,2CACA,6BACA,mCACA,2BACA,yBACA,yBACA,6CACA,4DACA,iCACA,qCACA,yCACA,yCACA,+BACA,yBACA,6BACA,iCACA,6BACA,yBACA,sCACA,+BACA,2BACA,+BACA,6BACA,2BACA,8DACA,0DACA,4BACA,kCACA,qCACA,mCACA,mCACA,2BACA,2BACA,+BACA,yCACA,2CACA,6BACA,wBACA,mCACA,uCACA,qCACA,2BACA,+BACA,mDACA,qDACA,uCACA,yCACA,mCACA,qCACA,yCACA,mCACA,+BACA,6BACA,qCACA,mCACA,uCACA,2CACA,6CACA,+BACA,iCACA,8BACA,+BACA,yBACA,iCACA,mCACA,iCACA,0BACA,gCACA,gCACA,+BACA,+BACA,6BACA,uBACA,EACA,YACA,cACA,GACA,qBACA,oBACA,mBAEA,WACA,OACA,gBACA,MACA,IACA,EADA,KAEA,IACA,cAA8B,WAAqB,KACnD,wBACA,QACA,SAAyB,EACzB,KACA,SACA,QAAwB,EACxB,KACA,SACA,SAAyB,EACzB,KACA,SACA,OAAuB,EACvB,KACA,SACA,OAAuB,EACvB,KACA,SACA,QACA,CACA,yBACA,MACA,IACA,CACA,wBACA,CACA,QACA,CACA,iBACA,SACA,EACA,2HACA,cACA,oBACA,8FACA,CACA,CACA,OACA,kEACA,GACA,+DACA,IACA,WACA,UACA,YACA,WACA,CAAG,CACH,QACA,MACA,OACA,OACA,EAw3EA,YACA,WACA,MACA,IAMA,IANA,mBACA,gBACA,wBACA,mCACA,uBAIA,GAHA,eAIA,wBAGA,GACA,IACA,eACA,GACA,IAEA,IAAkB,kBAPlB,EAQA,sCACA,EACA,sBACA,qCACA,kBACA,SACA,CAAmC,0BAAiC,EACpE,uBAEA,MAEA,EAAI,WACJ,EAz5EA,EA05EA,cACA,WACA,MACA,uBACA,gBACA,0BACA,IASA,IATA,EACA,sBACA,cACA,mBACA,YACA,UACA,0CACA,8BAIA,GACA,CAJA,cAIA,yBAEA,EACA,IACA,eACA,GACA,IAEA,IAAgB,gBAChB,oBAKA,OAAkC,eAJlC,eACA,GACA,IAEkC,KAGlC,IADA,EAEA,sCAEA,EACA,6BACA,qCACA,kBACA,SACA,CACA,iBACA,OACA,aACA,CAAa,EACb,uBAEA,KACA,CACA,EAAI,aACJ,EA98EA,EA+8EA,gBACA,WACA,MACA,uBACA,gBACA,SACA,UACA,YACA,KACA,IAUA,EAVA,gBACA,eACA,kBAEA,QACA,eACA,EACA,4CACA,wBAGA,CAFA,cAGA,uBACA,oBACA,YACA,aACA,sCACA,sBACA,qBACA,4BACA,wBACA,SAGA,EACA,CAAoB,mCAA2D,CAC/E,IAGA,WACA,2BACA,uBACA,6BACA,KACA,aACA,6CAEA,GADA,KAGA,GAAqB,0BAAoC,KAEzD,oBACA,GACA,iCACA,8BAEA,4BADA,GAEA,gCACA,sBACA,KACA,cACA,8CACA,KACA,4BACA,sBACA,GACA,EACA,GAAqB,0BAAoC,KAEzD,qBACA,GACA,iCACA,8BAEA,4BADA,GAEA,KACA,SACA,wCACA,IACA,0BACA,kBAEA,YAEA,IAA6B,CAC7B,uBACA,SAEA,eACA,uBACA,YACA,aACA,sCAEA,qBACA,gBACA,uBACA,oBAKA,GAFA,KACA,KAA+B,0BAAoC,KAInE,SAFA,GAGA,sBAGA,qBAEA,CACA,KACA,CACA,EAAI,eACJ,EAhkFA,EAikFA,cACA,WACA,MACA,uBACA,gBACA,MACA,MACA,uCACA,GACA,WADA,GAEA,oDACA,KACA,2BACA,GACA,iCACA,8BAEA,4BADA,GAEA,uCAGA,+CACA,4BACA,6BACA,EAAY,IACZ,IAA2B,CAC3B,8BACA,KACA,QAEA,QAAgC,2BAAkC,KAClE,sBACA,KACA,CACA,EAAI,aACJ,EAnmFA,EA4oFA,cACA,WACA,MACA,uBACA,gBACA,MACA,0CACA,qBACA,MACA,WACA,2BACA,KAA4B,eAAqB,IACjD,GACA,eACA,QACA,8BACA,aACA,KACA,iBACA,QACA,MACA,CACA,EAAI,aACJ,EAlqFA,EAmmFA,gBACA,WACA,MACA,uBACA,gBACA,MACA,eACA,sBACA,qCACA,oBACA,MACA,WACA,0BACA,GACA,IACA,mBACA,SACA,SACA,cACA,CAAW,CACX,mBACA,GACA,QACA,QACA,CAAc,4CAA8D,CAC5E,EAEA,CAAS,CACT,GACA,eACA,cACA,mCACA,WACA,WACA,WACA,kBACA,MACA,CACA,EAAI,eACJ,EAzoFA,EAkqFA,cACA,WACA,MACA,uBACA,gBACA,MACA,6CACA,GAEA,2BACA,MACA,WACA,iCACA,KAA4B,6BAAqC,IACjE,GACA,eACA,QACA,oCACA,aACA,KACA,iBACA,QACA,MACA,CACA,EAAI,aACJ,CA1rFA,EACA,UACA,mBACA,qBACA,mBACA,sBACA,oCACA,kBACA,sBACA,wBACA,8BACA,yBACA,qBACA,0CACA,CACA,SACA,6BAEA,mBACA,YACA,EACA,EACA,EACA,EACA,EACA,GAEA,MACA,WACA,GACA,EACA,6BAEA,aACA,KACA,+BACA,qBACA,qBAiEA,GAhEA,YACA,OACA,EACA,EACA,uBAEA,IAEA,KACA,YACA,YACA,OACA,EACA,wCAGA,YACA,IACA,CACA,eACA,gBACA,qBACA,kBACA,4BACA,EACA,KACA,GACA,4BACA,wBACA,yBACA,oBACA,cACA,2BACA,kBACA,kBACA,YACA,UACA,QACA,OAAc,CACd,MAAa,CACb,SAAiB,UAAW,aAAe,gBAAmB,CAC9D,QAAe,CACf,QACA,CAAK,CACL,iBACA,kBACA,mBACA,oBACA,qBACA,0BACA,eACA,yBACA,gBACA,qBACA,UACA,eACA,oBACA,gBACA,qBACA,CAAK,CACL,QACA,oBACA,gBACA,EACA,WACA,QAAwB,WAAqC,KAC7D,WACA,WACA,GACA,cACA,YACA,oBACA,OACA,EACA,mBACA,WACA,gBACA,cACA,6BACA,YACA,OACA,gBACA,wCACA,OACA,kCACA,kBACA,IAEA,OACA,CAFA,MAEA,wBACA,gCAEA,GADA,KACA,GACA,0BACA,OACA,GACA,SAEA,GACA,OACA,GACA,SAEA,oBACA,OACA,GACA,SAEA,oBACA,OACA,GACA,SAEA,UACA,CACA,cACA,IACA,IACA,WACA,IAEA,OACA,WACA,GACA,oBACA,oBACA,OACA,CAAS,CACT,mBACA,WACA,gBACA,cACA,6BACA,YACA,OACA,gBACA,oBACA,oBACA,OACA,kCACA,kBACA,IACA,IACA,IACA,0BACA,gCAEA,GADA,KACA,GACA,0BACA,OACA,GACA,SAEA,GACA,OACA,GACA,SAEA,oBACA,OACA,GACA,SAEA,oBACA,OACA,GACA,SAEA,WACA,QACA,CACA,YACA,EACA,EACA,EACA,EACA,GAEA,OACA,yBACA,aACA,kBACA,yBACA,mBACA,mBACA,eACA,WACA,WACA,mBAAwB,CACxB,eAAoB,CACpB,kBAAwB,UAAW,aAAe,gBAAmB,CACrE,iBAAsB,CACtB,iBAAsB,CACtB,kBAAuB,CACvB,yBAA8B,CAC9B,wBACA,CACA,CACA,cACA,OACA,gBACA,gBACA,gBACA,cACA,CACA,CACA,mBACA,OACA,gBACA,gBACA,UACA,CACA,CACA,eACA,UACA,iCACA,EACA,6CAGA,KACA,EAEA,CACA,mBACA,UACA,eACA,8BACA,cACA,UACA,EACA,qCACA,WAEA,WACA,4BACA,eACA,8BACA,YACA,4BACA,qBACA,4BACA,aACA,4BACA,aACA,YACA,YACA,4BACA,gBACA,4BACA,UACA,4BACA,YACA,qBACA,6BACA,KACA,YACA,uBACA,4BACA,CACA,6CACA,sBACA,CACA,CACA,2BACA,2BACA,UACA,cACA,gBACA,GACA,CACA,eACA,iBACA,UACA,OAA8C,GAC9C,iBACA,sBACA,YACA,wGAA8G,8BAA8B,kBAE5I,IACA,EADA,KAEA,WACA,gBACA,WACA,GACA,SACA,qBACA,OACA,CACA,wBACA,cACA,IACA,iBAEA,EAAU,IAEV,SADA,eAEA,KACA,EACA,EACA,iBACA,cACA,oBAGA,aACA,EACA,mBACA,gBACA,QACA,UACA,EACA,iBAEA,GACA,MACA,OACA,GACA,EACA,GACA,EACA,EACA,iBACA,CACA,CACA,aACA,CACA,cACA,WACA,UACA,YACA,mBACA,GACA,sBACA,oBACA,kBACA,CACA,mBACA,sBACA,oBACA,qBACA,OACA,GACA,KACA,GACA,QACA,GAEA,CACA,SACA,EACA,qEAGA,6BACA,iBACA,cACA,MACA,kBACA,mBACA,aACA,CACA,eACA,sBACA,YACA,kGAEA,CACA,iBACA,uCACA,qBACA,eACA,IACA,yBACA,MACA,mBACA,gBACA,CACA,QACA,CAAM,SACN,2DACA,OACA,CACA,CACA,WACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,WACA,yBACA,aACA,UACA,UACA,eACA,YACA,WACA,WACA,UACA,QACA,GACA,gBACA,GACA,GACA,IAEA,eACA,QACA,CAMA,OALA,wBACA,8BACA,+BACA,8BACA,8BACA,CACA,CACA,mBACA,UACA,gBACA,gBACA,KACA,gBACA,mBACA,KACA,WACA,WACA,cACA,YACA,aACA,UACA,KACA,aACA,QACA,KACA,WACA,WACA,eACA,cACA,iBACA,GACA,SACA,sBACA,oBACA,oBAEA,MACA,UACA,OACA,GACA,KACA,GACA,QACA,IAEA,KACA,oBACA,qBACA,gBACA,qCACA,+BACA,UACA,KACA,iBACA,eACA,YACA,wBACA,KACA,iBACA,GACA,sBACA,oBACA,oBAEA,MACA,UACA,OACA,GACA,gBACA,GACA,QACA,IAEA,KACA,uBACA,iBACA,gBACA,YACA,kBACA,gCACA,gBACA,oBACA,sBACA,oBACA,OACA,GACA,KACA,GACA,QACA,IAEA,KACA,aACA,sBACA,YACA,eACA,eACA,cACA,YACA,eACA,8BACA,4BACA,qBACA,aACA,WACA,eACA,iBACA,WACA,kBACA,eACA,eACA,eACA,aACA,eACA,gBACA,GACA,sBACA,oBACA,OACA,GACA,KACA,IAEA,KACA,eACA,eACA,OACA,OACA,GACA,KACA,IAEA,QACA,sBACA,oBACA,OACA,GACA,KACA,GACA,QACA,IAEA,KACA,YACA,WACA,WACA,WACA,sBACA,oBACA,WACA,MACA,OACA,GACA,KACA,GACA,QACA,IAEA,KACA,eACA,YACA,sBACA,oBACA,UACA,OACA,GACA,KACA,GACA,QACA,IAEA,KACA,oBACA,wBACA,KACA,oBACA,wBACA,KACA,iBACA,qBACA,KACA,iBACA,qBACA,KACA,kBACA,sBACA,KACA,iBACA,qBACA,KACA,eACA,mBACA,KACA,eACA,mBACA,KACA,gBACA,oBACA,KACA,SACA,GACA,gBACA,wBACA,yBAEA,kBACA,iBACA,eACA,aACA,MACA,eACA,iCACA,kCACA,CACA,OACA,GACA,KACA,GACA,QACA,GAEA,CACA,CACA,CACA,cACA,WACA,mBACA,YACA,WACA,YACA,sEAEA,uCACA,YACA,uDAA+D,YAAY,yFAG3E,OADA,cAGA,eACA,CACA,CAQA,yBACA,KACA,uCAA2C,wBAAwB,4CAA4C,MAAM,mCAAmC,sBAAsB,kVAAkV,EAAE,GAElgB,iBACA,wBACA,oBACA,0BACA,oBACA,GACA,GACA,CACA,CACA,4BACA,uBACA,iBAEA,aADA,mBACA,EACA,gBACA,WACA,WACA,UACA,eACA,8BACA,YACA,iGAEA,SACA,SACA,CACA,CAEA,OADA,WACA,IACA,CACA,4BACA,qBACA,sCACA,CACA,mBAEA,aADA,cACA,EACA,gBACA,WACA,WACA,UACA,eACA,8BACA,YACA,EACA,6FAEA,SACA,SACA,CACA,CAEA,OADA,WACA,IACA,CACA,iBACA,oBACA,IAEA,EAFA,OACA,OAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,+BACA,IACA,KACA,SACA,SACA,CACA,CAcA,OAbA,WAMA,kBALA,oBACA,WACA,KACA,KACA,IAEA,oBAEA,MADA,GAEA,mBACA,UACA,oBACA,IACA,CACA,iBACA,qBACA,IAEA,EAFA,OACA,OAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,+BACA,IACA,KACA,SACA,SACA,CACA,CAQA,OAPA,WACA,UACA,oBACA,OACA,0BAEA,qBACA,IACA,CACA,mBACA,cACA,IACA,EADA,SAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,+BACA,IACA,KACA,SACA,SACA,CACA,CAGA,OAFA,WACA,UACA,CACA,CACA,mBACA,cACA,IACA,EADA,SAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,+BACA,IACA,KACA,SACA,SACA,CACA,CAGA,OAFA,WACA,UACA,mBACA,uBACA,CACA,CACA,eACA,iCACA,WACA,eACA,gBACA,eACA,8CACA,WACA,WACA,CACA,QACA,CACA,4BAwgCA,WACA,eACA,gBAIA,OAHA,YACA,iBACA,aACA,CACA,CACA,iBAEA,OADA,eACA,YACA,cACA,2BACA,mBACA,qBACA,cACA,2BACA,mBACA,qBACA,cACA,2BACA,kBACA,CACA,iBACA,oBACA,YAAkB,aAA4B,IAC9C,UACA,qBACA,QACA,WACA,OAEA,CACA,2BACA,sBACA,uBACA,wBACA,uBACA,KACA,iCAEA,sBACA,GACA,qBACA,wBACA,kBACA,GACA,OACA,GACA,kBACA,iBACA,kBACA,mBACA,OACA,kBACA,mBAEA,GADA,QACA,SACA,YACA,sEAIA,OAFA,sBACA,uBACA,OACA,CACA,OACA,aACA,eACA,iBAEA,IADA,oBAEA,SACA,aACA,QACA,CACA,6BACA,WACA,eACA,KACA,qDAEA,WACA,eACA,KACA,sDAEA,WACA,gBACA,2BACA,WACA,iBACA,kCACA,WACA,yBACA,+BACA,WACA,sBACA,KACA,gCAEA,WACA,4BAkFA,KACA,mBAAuB,6BAA6B,6BAA6B,gCAAgC,aAAa,2CAA2C,6BAA6B,QAEtM,cACA,YACA,qBACA,sCACA,kBACA,SACA,qBAAyB,6BAA6B,4BAA4B,iCAAiC,MAAM,oBAAoB,+CAA+C,KAAK,eAAe,gBAAgB,QAAQ,GAAG,sBAAsB,aAAa,2BAA2B,SAAS,qCAAqC,gBAAgB,iBAAiB,IAAI,SAAS,KAAK,aAAa,gCAAgC,WAAW,iCAAiC,QAEne,cACA,KACA,qBAAyB,6BAA6B,4BAA4B,iCAAiC,MAAM,oBAAoB,+CAA+C,KAAK,eAAe,gBAAgB,QAAQ,GAAG,sBAAsB,aAAa,2BAA2B,SAAS,qCAAqC,gBAAgB,iBAAiB,IAAI,SAAS,KAAK,aAAa,gCAAgC,WAAW,iCAAiC,YAAY,sBAAsB,cAAc,aAAa,IAAI,2HAA2H,SAAS,qIAAqI,IAAI,KAAK,QAAQ,UAAU,EAAE,MAAM,aAAa,OAAO,KAAK,IAAI,SAAS,aAAa,aAAa,eAAe,WAAW,KAAK,KAAK,0BAA0B,WAAW,mBAAmB,kCAAkC,SAAS,0BAA0B,iCAAiC,qBAAqB,sBAAsB,EAAE,WAAW,0BAA0B,yCAAyC,cAAc,KAAK,SAAS,YAAY,oCAAoC,2BAA2B,cAAc,aAAa,WAAW,uFAAuF,uFAAuF,QAExgD,KACA,aAAiB,sBAAsB,cAAc,aAAa,IAAI,2HAA2H,SAAS,qIAAqI,IAAI,KAAK,QAAQ,UAAU,EAAE,MAAM,aAAa,OAAO,KAAK,IAAI,SAAS,aAAa,aAAa,eAAe,WAAW,KAAK,KAAK,0BAA0B,WAAW,mBAAmB,kCAAkC,SAAS,0BAA0B,iCAAiC,qBAAqB,sBAAsB,EAAE,WAAW,0BAA0B,yCAAyC,cAAc,KAAK,SAAS,YAAY,oCAAoC,2BAA2B,cAAc,aAAa,WAAW,uFAAuF,uFAAuF,QAE1iC,cACA,YACA,WACA,UACA,oBACA,sCACA,sCACA,kBACA,kBACA,SACA,yBAA6B,iCAAiC,0IAA0I,QAExM,cACA,UACA,UACA,oBACA,sCACA,mBACA,kBACA,mBACA,oBACA,0BAoBA,wBACA,eACA,iCACA,GACA,YACA,UACA,QACA,eACA,SACA,eACA,SACA,eACA,cACA,eACA,cACA,eACA,SACA,YACA,mMAEA,CACA,EAEA,CACA,SACA,4CAEA,sBACA,WACA,iBACA,MACA,MACA,eACA,cACA,UACA,IACA,aAGA,IAFA,WACA,qBACA,WAAsD,aAAsB,IAC5E,wBAGA,IAFA,aACA,WACA,IAAgB,WAAkB,iBAClC,KACA,KACA,IAEA,MACA,WACA,UACA,CACA,CACA,eACA,oBACA,OAEA,CACA,mBAOA,OANA,MACA,MACA,uBACA,0BACA,IACA,qBACA,EACA,CACA,eACA,YAAkB,WAAqB,gBACvC,WACA,CACA,UACA,eACA,eACA,YAAkB,YAAoC,IACtD,aACA,aACA,SACA,CACA,SACA,4BAEA,sBACA,UACA,WACA,iBACA,eACA,sBACA,0BACA,iBACA,cACA,UACA,iBAIA,GAHA,WACA,qBACA,IACA,UACA,IACA,WACA,aACA,IAEA,wBACA,YACA,CAEA,IADA,WACA,IAAyB,WAA2B,IACpD,aACA,WACA,WACA,UACA,CACA,CACA,eACA,gBACA,UACA,cAYA,IAXA,OACA,cACA,WACA,kBACA,0BACA,8BACA,sBACA,cACA,oBACA,gCACK,EAEL,IACA,YACA,IAEA,aACA,YACA,CACA,CACA,eACA,0BACA,gBACA,CACA,cACA,WACA,UACA,UA8GA,cACA,OAAW,mCACX,CA2UA,iBACA,0CACA,qCACA,CACA,mBAUA,aADA,MARA,kBACA,GACA,GACA,EAKA,IAAwB,aAAa,MAJrC,kBACA,GACA,GACA,EACqC,IACrC,EACA,aAEA,gBADA,UAEA,IACA,GAAa,EACb,gBACA,KACA,eACA,GACA,IAEA,KACA,QACA,CACA,mBACA,eACA,UACA,QACA,WACA,SACA,WACA,UACA,WACA,UACA,WACA,SACA,YACA,sMAEA,CACA,CACA,YAAqD,SACrD,eACA,UACA,QACA,WACA,SACA,WACA,OAAW,EACX,WACA,SACA,WACA,UACA,WACA,UACA,WACA,SACA,YACA,wNAEA,CACA,CACA,eACA,kBACA,CACA,eACA,uBACA,CACA,+BACA,wCACA,iCACA,wCACA,eACA,uBACA,wBACA,uBACA,KACA,4BACA,+BACA,UACA,OACA,gBACA,QACA,gBACA,QACA,kBACA,QACA,gBACA,QACA,oBACA,QACA,gBACA,CACA,sBACA,mBACA,OACA,cACA,QACA,4CACA,QACA,qDACA,QACA,eAKA,MAJA,mBAEA,CACA,OADA,8BACA,kCACA,CACA,QACA,OACA,+BAEA,EACA,kBAEA,QACA,aACA,UACA,IACA,eACA,CAAU,UACV,CACA,WACA,CACA,SAA2B,CAC3B,QACA,iBACA,UACA,sCACA,WACA,eACA,YACA,aACA,YACA,2EACA,KACM,CACN,YACA,YACA,4EAEA,OACA,CACA,+BACA,CACA,CAiCA,eACA,QACA,QACA,UA9BA,cACA,sBACA,QACA,iCA4BA,GACA,SArCA,cACA,sCAEA,OADA,cACA,IACA,EAkCA,GACA,kBACA,QACA,gBA/BA,gBAGA,GAFA,sCAEA,OADA,aAEA,YACA,0FAEA,mBACA,QACA,MACA,EAsBA,KACA,SAtBA,OACA,eACA,YACA,YACA,0FAEA,mBACA,QACA,OACA,iCAaA,KACA,KACA,CACA,QACA,8BAEA,OADA,sBACA,sBACA,CAAK,CACL,kCACA,sBACA,WACA,YACK,CACL,+BACA,CAAG,CACH,IAAuB,kBACvB,mBACA,WACA,aACA,iBACA,WACA,KACA,iBACA,SACA,YAOA,OANA,GACA,EACA,UACA,aACA,MACA,KACA,CACA,GACA,cACA,KACA,EACA,YACA,CACA,CACA,OACA,eACA,UACA,CACA,CACA,6BAGA,YAEA,UADA,SACA,oBACA,EALA,YACA,YAKA,SACA,kaAEA,eA0CA,YACA,cACA,aACA,YACA,gFAEA,SAEA,OADA,QACA,CACA,CAIA,8CAHA,cACA,2CACA,EAEA,QACA,QACA,QACA,QACA,QACA,QACA,MACA,MACA,KACA,KACA,MACA,KACA,QACA,QACA,KACA,cACA,aACA,YACA,ibAEA,SACA,CACA,cACA,QACA,mEACA,OAAW,wCACX,CACA,cAUA,OATA,UACA,UACA,OACA,YACA,cACA,eACA,OACA,iBACA,mBACA,EACA,CACA,cACA,SAEA,OADA,QACA,CACA,CACA,cACA,GACA,GACA,GACA,GACA,KACA,MACA,QACA,KACA,UACA,CACA,iBACA,iCACA,CACA,mBAGA,GAFA,QACA,QACA,IACA,eAEA,GADA,aAEA,WACA,uBACA,CACA,aACA,mBACA,kCACA,UAEA,OADA,mBACA,MAEA,2BAiBA,OAfA,EACA,OACA,qBACA,IACA,EACA,WACA,KACA,EACA,mBAEA,EADA,aAAyC,0BACzC,iBACA,KACA,GACA,GAEA,oBACA,CACA,iBAIA,GAHA,QACA,QACA,oBACA,WACA,uBACA,uBACA,WACA,uBACA,CACA,YAAwB,uBAAwC,IAChE,mBACA,KACA,OACA,CACA,IACA,CACA,iBAEA,CAGA,OAFA,MACA,uBACA,CACA,CACA,mBACA,UACA,YACA,wFAEA,UACA,GACA,MACA,GAA6B,mBAA4B,CACzD,wBAEA,SADA,cAGA,gBACA,CACA,QAA2B,eAAqB,QAChD,SACA,CACA,CACA,cACA,wEACA,CACA,cACA,8DACA,CACA,mBACA,KACA,WACA,KACA,uCACA,WACA,KACA,cACA,6BACA,mCACA,WACA,qBASA,IARA,GACA,WACA,MACA,IACA,EACA,2BACA,EACA,GAEA,MACA,OACA,CACA,qBA2BA,OA1BA,cACA,IACA,EACA,oCACA,6BACA,qBACA,YACA,mBACA,aAgBA,OAfA,GACA,WACA,GACA,WACA,MACA,IACA,EACA,gBACA,EACA,KACA,EACA,EACA,EACA,EACA,2BACA,CACA,EAAO,CACP,SAEA,qBACA,OACA,EACA,YACA,IACA,CAAK,CACL,GACA,CAEA,eACA,SACA,MACA,uBAvQA,EAwQA,GAxQA,EAwQA,EAxQA,EAwQA,EAnQA,OAHA,SADA,SAEA,UACA,2BACA,UACA,gBACA,mBACA,WACA,uBAsBA,OApBA,0BACA,cACA,OACA,iBACA,OACA,YACA,yBACA,OACA,sBACA,SACA,CACA,CAAa,CACb,YACA,yBACA,OACA,qBACA,UACA,CACA,EACA,EACA,UACA,gBACA,mBACA,WACA,cACA,CAEA,MADA,KACA,EACA,CAkOA,CACA,cACA,iEACA,CACA,eACA,QACA,wBACA,sBACA,CAAK,CACL,gBACA,iCACA,0CACA,yCAEA,kEACA,CAAK,CACL,uBAEA,OADA,KACA,gBACK,CACL,WACA,cACA,mBACA,QAEA,MADA,UACA,cACA,gBACA,IAA6B,UAAuB,CACpD,oBACA,CACA,CAAK,CACL,qBACA,eACA,CAAK,CACL,sBACA,mBACA,0BACA,qBACA,QACA,CAAO,GACP,CAAK,CACL,uBACA,aACA,iBACA,+BAEA,OADA,KACA,cACA,CAAK,CACL,yBAEA,OADA,KACA,QACK,CACL,iBACA,qBACA,aAEA,EACA,CACA,CAHA,QAIA,kBACA,eACA,SACA,YACA,YACA,2FAMA,OAJA,OACA,EACA,wBACA,6BACA,QACA,CAAK,CACL,qCACA,cACA,YACA,8GAEA,UACA,CAAK,CACL,0BAEA,OADA,KACA,MACA,CAAK,CACL,kBACA,gBACA,mCAEA,OADA,KACA,EACA,CAAK,CACL,yBACA,uBAA0C,IAAU,IACpD,OACA,QACA,CAAK,CACL,2BACA,SACA,CACA,CAAG,CACH,QACA,IACA,2BACA,+BACA,CACA,EACA,iBACA,yCACA,YAAkB,WAAiC,IACnD,+BACA,QACA,CAEA,eACA,cACA,IACA,aACA,CAAM,SACN,2CACA,cACA,EACA,+BACA,iBACA,wBACA,eACA,EACA,CACA,gBACA,CACA,UACA,iBACA,mBACA,MACA,8BACA,2BACA,IACA,OACA,uCACA,IACA,MACA,iBACA,aACA,EAMA,GALA,2CACA,eACA,aACA,CACA,CAAa,EACb,6CACA,IACA,uBACA,CAAgB,SAChB,OACA,CACA,yBACA,EAAc,IACd,IACA,QACA,CAAgB,SAChB,GACA,CACA,mBACA,CACA,EAAY,IACZ,IACA,aACA,CAAc,SACd,GACA,CACA,SACA,4BACA,oBAAuC,CACvC,CACA,CAAU,SACV,kCACA,wBAEA,kBAEA,CACA,2CACA,8BACA,sCACA,8BACA,OAEA,IACA,gBACA,sBACA,8BACA,OACA,CAAU,sCAEV,sCACA,OACA,OACA,SACA,oBACA,gBACA,IACA,MACA,YACA,+CAGA,IACA,KAEA,YACA,eACA,gCAIA,IACA,GACA,cACA,aAEA,IACA,aACA,aACA,MACA,MACA,aAGA,IACA,KAEA,WACA,QAEA,gBACA,gBACA,GACA,GACA,IACA,IACA,KACA,OACA,KACA,CACA,MACA,KACA,gCAIA,OAHA,eACA,2BACA,2CACA,CACA,OACA,YAEA,KACA,CACA,CACA,EAAI,OACJ,+BACA,CACA,qCACA,MACA,EACA,CAwCA,eACA,GACA,oBACA,UACA,mCACA,CACA,uBAEA,kBADA,MACA,IACA,SACA,EACA,EACA,oCACA,qBAA+B,gEAAgE,eAAe,oCAAoC,oBAClJ,UACA,IAEA,SACA,EACA,EACA,+BACA,qBAA+B,gEAAgE,eAAe,oCAAoC,oBAClJ,UACA,IAEA,mBAEA,CADA,8BAEA,EAAI,qBACJ,WACA,CACA,eACA,YACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,aACA,uBACA,uBACA,sBACA,mBACA,yBACA,0BACA,mBACA,eACA,qBACA,gEACA,8DACA,sBACA,oBACA,iCACA,4BACA,0BACA,2BACA,6BACA,gCACA,gCACA,kCACA,kCACA,kCACA,gCACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GA2CA,MA5BA,MAbA,SACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAIA,EACA,KACA,EACA,GACA,GACA,EACA,iBAkBA,GAjBA,KACA,EACA,KACA,EACA,GACA,KACA,EACA,KACA,KACA,iBACA,KACA,EACA,KACA,GACA,KACA,KAGA,sBACA,CACA,CAmCA,YACA,cACA,gBACA,OACA,oBACA,aACA,CACA,WACA,CACA,iBACA,sBACA,0BACA,uCACA,yCACA,aACA,YACA,CAAS,EACT,cACA,YACA,CAAS,IACT,CACA,YACA,EACA,EACA,EACA,GAEA,OACA,SACA,iBACA,iBACA,eACA,qBACA,WACA,yBACA,iBACA,kBACA,mBACA,kBACA,mBACA,2BACA,wBACA,CACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,oBACA,SACA,qBACA,iBACA,OACA,YACA,OACA,aACA,gBACA,cACA,CAAK,CACL,kBACA,iBACA,kBACA,iBACA,WACA,UACA,gBACA,UACA,cACA,iBACA,gBACA,YACA,EAEA,OADA,SACA,CACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,oBACA,SACA,qBACA,iBACA,iBACA,OACA,SACA,OACA,aACA,gBACA,cACA,CAAK,CACL,kBACA,oBACA,qBACA,iBACA,WACA,UACA,gBACA,UACA,cACA,iBACA,gBACA,YACA,EAEA,OADA,SACA,CACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,GAEA,OACA,SACA,iBACA,MACA,QACA,UACA,YACA,oBACA,sBACA,WACA,iBACA,cACA,CACA,CACA,eACA,aACA,8BACA,aACA,GACA,mBAAgC,qCAEhC,CACA,eACA,SAwBA,OAvBA,GACA,0CACA,gBACA,cACA,eACA,IACA,SACA,IACA,GACA,YAtXA,KACA,mCACA,wBACA,iDACA,SACA,SACA,iCACA,mBACA,OACA,sBACA,QACA,oBACA,QACA,QACA,aACA,UACA,IACA,MACA,CAAU,SACV,iBACA,CACA,WACA,CACA,2BACA,OACA,QACA,GACA,yBAGA,CACA,UACA,OACA,yBACA,QACA,qBACA,CACA,QACA,EAgVA,QACA,iBACA,GACA,OACA,CAAU,SACV,EACA,oDAKA,OAHA,0CACA,OACA,CAAS,EACT,CACA,CACA,CAAK,EACL,CACA,CACA,mBAGA,SADA,GADA,cACA,OACA,2BACA,CACA,iBACA,qBACA,iBACA,KACA,KACA,qBACA,iCACA,4BACA,CACA,yBACA,sBAUA,IATA,qBACA,MACA,KACA,KACA,KACA,QACA,MACA,KACA,KACA,SAA8C,IAC9C,MACA,QACA,MACA,KACA,CAL4E,GAK5E,EACA,QACA,SAEA,OADA,KACA,CACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,SACA,8BACA,uBACA,aACA,KACA,WACA,YAAsB,IAAsB,IAC5C,MACA,WACA,UACA,CACA,CACA,YACA,YACA,EACA,iBACA,wBACA,aACA,iBACA,EACA,aACA,aACA,WACA,CACA,yBACA,wBACA,8CACA,QACA,aAEA,aADA,KACA,EACA,uBAEA,qBACA,KAEA,aADA,cAAmD,OACnD,EACA,eACA,YAEA,IACA,KAEA,gBADA,mBAEA,UACA,oBAEA,eADA,eACA,mBAmBA,GAlBA,aACA,UACA,UACA,GAAuB,qBACvB,oBACA,gBACA,UACA,6BACA,gBACA,GAEA,kBADA,gCAEA,GAEA,MAFA,WAGA,EACA,IAAuB,MACvB,WAEA,+CACA,8CACA,iDACA,yCAEA,GACA,UACA,yCACA,uBACA,gDACA,8BACA,aACA,uBACA,EACA,QACA,MAEA,iCAEA,GACA,UACA,YACA,aACA,aACA,gBAEA,iBACA,CAGA,IAFA,iBACA,KACA,OAAoC,WAAmB,IACvD,MACA,GACA,kBAFA,SAGA,qBACA,IAEA,GACA,MACA,MAA+C,OAC/C,OACA,UACA,MACA,aAEA,GADA,aACA,yBACA,YACA,YACA,aACA,WACA,EAAM,IAEN,GADA,uBACA,yBACA,GACA,EACA,EACA,EACA,EACA,OACA,GACA,GAEA,MACA,sBACA,+BACA,aACA,kBACA,YACA,0BACA,YACA,aACA,kBACA,gBACA,CACA,WA1oGA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,UACA,UACA,WACA,UACA,WAkCA,QACA,QACA,SA81BA,qBACA,oBACA,gBACA,oBACA,oBACA,uBACA,qBACA,oBAx4BA,KACA,SACA,gBACA,IAEA,EAFA,OACA,OAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,+BACA,IACA,KACA,YACA,OACA,gBACA,UACA,KACA,SACA,SACA,CACA,CAGA,GAFA,WACA,UACA,oBACA,gBACA,UACA,EAAQ,QACR,QAKA,cACA,qBACA,IAEA,EAFA,OACA,OAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,+BACA,IACA,KACA,oBACA,YACA,KACA,SACA,GACA,EACA,EACA,EAEA,CACA,CAGA,OAFA,WACA,UACA,CACA,cACA,sBACA,qBACA,IAIA,EAJA,OACA,OACA,OACA,OAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,gBACA,IACA,KACA,+BACA,IACA,KACA,aACA,GACA,SACA,GACA,EACA,EACA,EAEA,CACA,CACA,YACA,IAnTA,EACA,EAkTA,EACA,SACA,MArTA,EAsTA,EArTA,KACA,iCACA,eACA,CAAG,EACH,GAkTA,QACA,aAA0B,WAA0B,IACpD,gBACA,WACA,KACA,CACA,KAEA,UACA,UACA,EAAQ,kBAGR,OAFA,WACA,UACA,CACA,gBACA,uBACA,IAGA,EAHA,OACA,OACA,OAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,aACA,IACA,KACA,oBACA,IACA,KACA,+BACA,YACA,+DAEA,SACA,GACA,EACA,EACA,EAEA,CACA,CAKA,GAJA,UACA,UACA,MACA,WACA,SACA,WACA,YACA,uEAEA,SACA,cACA,2DACA,UAEA,MACA,CAQA,MAPA,oBACA,aACA,WACA,UACA,OACA,YAEA,IACA,aACA,oBACA,IASA,EATA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAEA,WACA,gBACA,WACA,WACA,UACA,eACA,8BACA,YACA,kGAEA,YACA,IACA,KACA,kBACA,IACA,KACA,mBACA,IACA,KACA,kBACA,IACA,KACA,kBACA,IACA,KACA,sBACA,IACA,KACA,oBACA,IACA,KACA,eACA,IACA,KACA,aACA,IACA,KACA,SACA,GACA,EACA,EACA,EAEA,CACA,CACA,UACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAaA,OAXA,SACA,kBACA,UACA,kBACA,SACA,gBACA,UACA,gBACA,WACA,UACA,iBACA,IACA,cACA,qBACA,IAOA,GAPA,QACA,QACA,QACA,QACA,QACA,QACA,QAEA,YACA,iBACA,aACA,YACA,WACA,eACA,MACA,KACA,+BACA,MACA,KACA,YACA,MACA,KACA,kBACA,MACA,KACA,mBACA,MACA,KACA,kBACA,MACA,KACA,kBACA,MACA,KACA,SACA,GACA,EACA,GACA,GAEA,CACA,CACA,UACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,IAMA,GAJA,WACA,UACA,iBACA,YACA,qBACA,OACA,UAEA,WACA,EAAQ,UACR,SACA,YACA,mBACA,IAMA,GANA,QACA,QACA,QACA,QACA,QACA,QAEA,YACA,iBACA,aACA,YACA,WACA,eACA,MACA,KACA,+BACA,MACA,KACA,cACA,MACA,KACA,eACA,MACA,KACA,cACA,MACA,KACA,cACA,MACA,KACA,SACA,GACA,EACA,GACA,GAEA,CACA,CACA,YACA,QACA,0BACA,UACA,EACA,GAEA,WACA,kBACA,cACA,aACA,aACA,WACA,YACA,QACA,GACA,YACA,GACA,GACA,IAEA,GACA,GACA,GACA,GACA,KACA,QACA,CAiBA,GAhBA,UACA,kBACA,UACA,mBACA,UACA,kBACA,UACA,kBACA,WACA,WACA,YACA,gBACA,WACA,UACA,kBACA,YACA,qBACA,OACA,UAEA,WACA,EAAQ,UACR,SACA,gBAEA,cADA,uBACA,EACA,iBACA,aACA,YACA,WACA,eACA,8BACA,YACA,kEAEA,SACA,GACA,EACA,GACA,GAEA,CACA,CAEA,OADA,WACA,IACA,cACA,qBACA,IAEA,GAFA,QACA,QAEA,YACA,iBACA,aACA,YACA,WACA,eACA,MACA,KACA,+BACA,MACA,KACA,YACA,gBACA,iBACA,OACA,GACA,UACA,GACA,SACA,IAEA,KACA,SACA,GACA,EACA,GACA,GAEA,CACA,CAGA,GAFA,WACA,YACA,qBACA,OACA,UAEA,WACA,EAAQ,UACR,SACA,aACA,GACA,qBACA,cACA,iBAEA,UACA,EACA,QAGA,EACA,QACA,yBACA,WACA,SACA,YACA,aACA,UACA,gBACA,GACA,qBACA,cACA,kBACA,qBACA,qBACA,QACA,CACA,QACA,WACA,EAAQ,4BACR,GACA,qBACA,kBACA,UACA,UAEA,MACA,EACA,OAEA,CACA,wBACA,uCACA,qBACA,OACA,cACA,0BACA,IACA,KACA,oBACA,SACA,SACA,cACA,CAAe,CACf,qBACA,QACA,QACA,UAA8B,IAC9B,+BACA,eACA,CAAe,CACf,EACA,OACA,eACA,gBACA,qCACA,iBACA,YACA,UACA,CACA,qBACA,wBACA,EAAY,WACZ,wBACA,KACA,GACA,qBACA,CACA,cACA,OACA,MAEA,oBACA,MACA,EACA,GAEA,eACA,KACA,KACA,yBACA,SACA,cACA,eACA,GACA,wBACA,QACA,KACA,uBACA,qBACA,UACA,WACA,qBACA,cACA,iBAEA,UACA,EACA,OAEA,CACA,aACA,qBACA,+BACA,iCAEA,qBACA,sBACA,6BACA,OACA,OACA,cACA,YACA,SACA,OACA,eACA,UAAuC,IACvC,IACA,iBACA,kBACA,CACA,UACA,kBACA,SACA,CACA,cACA,OACA,CACA,SACA,aACA,oBACA,UACA,GACA,qBACA,cACA,kBACA,qBACA,qBACA,QACA,CACA,oBACA,IAEA,GAFA,QACA,QAEA,YACA,iBACA,aACA,YACA,WACA,eACA,MACA,KACA,+BACA,MACA,KACA,SACA,GACA,EACA,GACA,GAEA,CACA,CACA,WACA,yBACA,YACA,MACA,KACA,EACA,wBACA,qBAEA,MADA,IAEA,OACA,2BAEA,YACA,oBACA,WACA,EAAQ,IACR,wBACA,GACA,OACA,qCACA,qBACA,QACA,CACA,0BACA,GACA,cACA,UAEA,KACA,aACA,OAEA,SACA,iBACA,cACA,CAAe,CACf,qBACA,IAGA,GAHA,YACA,QACA,QAEA,YACA,iBACA,aACA,YACA,WACA,eACA,MACA,KACA,+BACA,KACA,CACA,CACA,yBACA,YACA,MACA,KACA,EACA,wBACA,qBAEA,MADA,IAEA,QACA,EACA,yBAGA,YACA,CACA,IACA,GACA,iBACA,cACA,SACA,CACA,SACA,YACA,GACA,qBACA,cACA,iBAEA,UACA,EACA,EACA,aAGA,cACA,KACA,KACA,2BACA,6BACA,oBACA,8BACA,+BACA,SACA,eACA,UACA,cACA,IAEA,GAFA,QACA,QAEA,YACA,iBACA,aACA,YACA,WACA,eACA,MACA,KACA,+BACA,MACA,KACA,SACA,GACA,EACA,GACA,GAEA,CACA,CAEA,GADA,WACA,UACA,YACA,YACA,sEAEA,GACA,qBACA,iBAEA,YACA,uDAAmE,YAAY,0FAE/E,uBACA,IAEA,gDACA,iBACA,iBACA,CAIA,MAHA,qBACA,cACA,WACA,EACA,WACA,aACA,YACA,GACA,CACA,qBACA,UACA,+BACA,gCAEA,yBACA,sBACA,sBACA,aACA,0BACA,0BACA,0BACA,2BACA,sBACA,aACA,0BACA,0BACA,0BACA,0BACA,CACA,+CACA,0BACA,qBACA,cACA,MAEA,2BACA,8BAEA,eACA,kCACU,GACV,qCACA,CACA,wBACA,IAQA,GARA,iBACA,GACA,oBACA,uBACA,GACA,GACA,OACA,aAEA,IACA,wBACA,2BACA,2BACA,kCACA,mBACA,qBACA,mBACA,eACA,sBACA,cACA,YACA,8BACA,+BACW,EACX,wCACA,uBACA,mDACA,0BACA,UACA,CACA,cACA,WACA,kBACA,eACA,cACA,eACA,sBACA,YACA,8BACA,gCACe,EACf,0BACA,4BACA,4BACA,wBACA,eACA,CACA,CACA,oBACA,YACA,WACA,SACA,UACA,YACA,SACA,aACA,YACA,aACA,YACA,UACA,gBAUA,YACA,sBACA,qBACA,iBACA,0DACA,kBACA,UACA,cACA,EACA,OAEA,EAAQ,IACR,MACA,EACA,EACA,QAEA,SACA,YACA,sBACA,qBACA,iBACA,0DACA,kBACA,UACA,cACA,EACA,OAEA,EAAQ,IACR,MACA,EACA,EACA,QAEA,SACA,YACA,wBACA,qBACA,iBACA,0DACA,oBACA,UACA,cACA,EACA,OAEA,EAAQ,IACR,MACA,EACA,EACA,QAEA,SACA,SACA,wBACA,cACA,IAEA,GAFA,QACA,QAEA,YACA,iBACA,aACA,aACA,UACA,WACA,eACA,MACA,KACA,+BACA,MACA,KACA,aACA,SACA,KACA,sCACA,+BACA,UACA,KACA,iBACA,UACA,SACA,GACA,OACA,uBACA,qBACA,QACA,CACA,sBACA,gCACA,OACA,GACA,MACA,GACA,SACA,GAEA,CACA,CACA,CACA,CAGA,OAFA,WACA,YACA,EACA,CACA,CACA,gBACA,EAsoEA,SACA,EACA,EACA,iBACA,cACA,kBACA,iBACA,gBACA,iBACA,cAEA,oBACA,kBACA,YACA,YACA,IACA,4BACA,cACA,MACA,EACA,EACA,KACA,gBACA,GACA,IAEA,2BAkBA,GAjBA,KACA,EACA,KACA,EACA,GACA,kBACA,EACA,kBACA,iBACA,iBACA,UACA,gBACA,UACA,cACA,iBACA,eAGA,uBACA,aACA,kBACA,YACA,GAGA,OAFA,WACA,mBACA,GACA,YACA,YACA,aACA,WACA,WACA,SACA,UACA,YACA,SACA,UACA,YACA,aACA,WACA,WACA,YACA,aACA,YACA,UACA,OACA,YACA,uBACA,aACA,OACA,CACA,KACA,YACA,wBACA,aACA,OACA,CACA,KACA,YACA,6BACA,CACA,aACA,CACA,mBACA,KACA,CACA,UACA,OACA,OACA,OACA,OACA,YACA,YACA,sBACA,YACA,MACA,QAEA,OADA,qBAEA,mBACA,aACA,YACA,sBACA,cAEA,kBACA,oBACA,mBACA,aACA,YACA,sBACA,aACA,WACA,uBAEA,IADA,oBAEA,OACA,GACA,QACA,IAEA,WACA,qBAEA,MACA,QACA,YACA,YACA,sBACA,YACA,MACA,QACA,OACA,oEACA,QACA,sBACA,YACA,YACA,aACA,IACA,YACA,EAAY,OACZ,WACA,CACA,EAAU,IACV,YACA,wBACA,oBACA,uBACA,mBACA,aACA,aACA,cACA,EACA,gCACA,GACA,EACA,EACA,KACA,MAEA,iBACA,4BACA,4BACA,SACA,EACA,gBACA,EACA,gBACA,GACA,IAEA,mBACA,oBACA,SACA,EACA,EACA,KACA,gBACA,GACA,IAGA,GADA,mBACA,2BAEA,IADA,kCACA,kBACA,uCACA,wBACA,mBACA,qCACA,YACA,WACA,IACA,aACA,kBACA,gBACA,kBACA,UACA,CAAc,SACd,MACA,2BACA,CAEA,EAAc,OACd,mBACA,oBACA,WACA,CAkBA,GAjBA,KACA,EACA,KACA,EACA,GACA,EACA,EACA,kBACA,eACA,WACA,EACA,gBACA,UACA,cACA,iBACA,eAGA,qBACA,EAAY,IACZ,oBACA,oCACA,gCACA,mBACA,YACA,WACA,IACA,GACA,aACA,kBACA,gBACA,kBACA,WACA,QACA,iCACA,CACA,WACA,wBACA,mBACA,MACA,OACA,CACA,CAAc,SACd,WACA,cACA,YACA,gBACA,YACA,KAEA,KACA,EACA,EAHA,wBAMA,gBACA,OACA,EAAc,OACd,oBACA,oBACA,mBACA,mBACA,WACA,CAkBA,GAjBA,KACA,EACA,KACA,EACA,GACA,EACA,EACA,mBACA,gBACA,EACA,gCACA,gBACA,UACA,cACA,iBACA,KAGA,qBACA,CACA,CACA,MACA,CACA,gCACA,mBACA,OACA,aACA,aAA+C,GAC/C,WACA,iBACA,IACA,KACA,EACA,EACA,EACA,SACA,EACA,GAEA,GACA,EACA,EACA,EACA,EACA,OACA,GACA,IAEA,MACA,QACA,qBACA,MACA,QACA,OAkBA,GAjBA,aACA,YACA,UACA,kBACA,kBAEA,MACA,OAFA,KAGA,2BACA,UACA,cACA,OACA,EACA,YACA,YACA,aAEA,OADA,OAEA,YACA,yEAEA,uCACA,cACA,YACA,YACA,MACA,QAEA,EADA,eACA,0BACA,YACA,YACA,aACA,YACA,MACA,QAGA,GADA,GADA,WACA,YACA,yBACA,gBACA,MACA,CACA,YACA,gIACA,yBAEA,CACA,CACA,uBACA,eACA,oBACA,KACA,EACA,EACA,KACA,gBACA,GACA,GAEA,QACA,mBACA,IACA,cACA,mBACA,YACA,WACA,SACA,yBACA,SACA,iBACA,4BACA,EAAI,OACJ,gCACA,CACA,CACA,qBACA,iDACA,2BACA,UACA,eACA,mBACA,MACA,QACA,mBACA,CACA,iBACA,aACA,eACA,aACA,uBACA,mBACA,OACA,aACA,QACA,UAEA,WADA,UACA,OACA,QACA,EACA,qBAEA,GADA,kBACA,gBACA,GACA,eAEA,QADA,UAC6B,WAA0B,KACvD,WACA,aACA,iBACA,sBACA,YACA,kCACA,KACA,2CACA,EACA,yEAEA,WACA,OACA,SACA,UACA,QACA,QACA,cACA,EACA,IAEA,GADA,gBAEA,2BACA,wBAEA,YACA,sIAEA,wBACA,CAAsB,SACtB,GACA,oBACA,UACA,SACA,2BAEA,MACA,yBACA,CAEA,yBACA,uBACA,oBAEA,OADA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EAEA,CACA,UACA,EAAoB,IACpB,SACA,YACA,kFACA,mBACA,yEAEA,GACA,SACA,OACA,OACA,OACA,EACA,uBACA,EACA,yBACA,gBACA,WACA,oBACA,mBACA,aACA,aACA,SAeA,CAdA,GACA,gCACA,GACA,EACA,EACA,KACA,MAEA,GACA,EACA,EACA,KACA,KACA,EACA,iBACA,kBACA,oBACA,gCACA,YACA,UACA,QACA,QACA,cACA,EACA,IAEA,GADA,aAEA,2BACA,wBAEA,YACA,uIAGA,GADA,wBACA,kCACA,WACA,8BACA,OACA,CACA,CAAwB,SACxB,WAEA,KACA,EACA,EAHA,wBAMA,gBACA,wBACA,kCACA,EAAwB,OACxB,oBACA,mBACA,WACA,WACA,CAqBA,GApBA,KACA,EACA,KACA,CACA,QACA,QACA,cACA,CAAyB,CACzB,EACA,GACA,EACA,gBACA,EACA,gCACA,gBACA,UACA,cACA,iBACA,KAGA,qBACA,CACA,CACA,cACA,OACA,CACA,CACA,MACA,gBACA,MACA,QACA,YACA,uIAEA,QAGA,GADA,GADA,WACA,YACA,yBACA,YACA,MACA,CACA,oBACA,YASA,IALA,EADA,6BACA,KAIA,kBAHA,GACA,SACA,iBACA,SACA,eAEA,IADA,aACA,MACA,KACA,oCACA,SACA,WACA,CACA,MACA,CACA,6BACA,OACA,qBACA,gBAEA,kBACA,UACA,EACA,EACA,gBACA,EAGA,aACA,kDACA,qBAHA,sCAIA,mBAAiC,8BAAqC,EACtE,GACA,4EAEA,CACA,mBACA,6BAEA,qBACA,SACA,EACA,cACA,iBACA,EACA,0CAEA,OADA,sBAEA,qBACA,SACA,KACA,cACA,iBACA,CACA,CACA,CACA,qBACA,gBACA,GACA,QACA,oCACA,iBACA,CACA,IACA,6BACA,WACA,IACA,CACA,WACA,aAGA,UAAwB,MAFxB,OAEwB,MADxB,OACwB,gBACxB,IAEA,GADA,aACA,mDACA,YACA,sIAEA,wBACA,CAAU,SACV,GACA,oBACA,UACA,oCAEA,OACA,yBACA,uBACA,wBAEA,OADA,EACA,GACA,GACA,EACA,EACA,EACA,EANA,EAQA,EAEA,CACA,WACA,cACA,KACA,CACA,CACA,YACA,MACA,CAGA,GAFA,gBACA,WAEA,iBACA,8CACA,CACA,QAAyB,IAA0B,IACnD,OACA,wBAEA,gBADA,SAEA,eACA,aACA,WACA,iBACA,YACA,MACA,CACA,QAAc,IAAiB,IAC/B,OACA,wBACA,WACA,iBACA,WACA,CACA,iBAEA,OADA,wBAGA,OADA,6BAGA,SADA,yBAEA,8BACA,CACA,mBACA,UACA,EACA,EACA,SACA,OACA,aACA,kBACA,iBACA,WACA,UACA,gBACA,UACA,cACA,iBACA,aAEA,CACA,mBACA,uBACA,KACA,EACA,gBACA,KACA,gBACA,iBACA,IAIA,OAFA,mBACA,oBACA,GACA,EACA,EACA,OACA,aACA,kBACA,EACA,kBACA,iBACA,WACA,UACA,gBACA,UACA,cACA,iBACA,aAEA,CACA,qBACA,sBACA,YACA,YACA,gBACA,mBACA,mBACA,YACA,IACA,kBACA,CAAM,SACN,GACA,KAKA,gBAJA,GACA,OACA,KACA,IACA,SACA,CACA,8BAEA,SADA,QACA,KACA,YACA,kBACA,YACA,YACA,gBACA,mBACA,MACA,MACA,CACA,mDAEA,SADA,QAEA,sBACA,kBACA,YACA,YACA,gBACA,mBACA,MACA,MACA,CACA,CACA,KACA,CACA,wBACA,kBACA,IACA,kBACA,CAAM,SACN,GACA,KACA,oBACA,kBAKA,gBAJA,GACA,OACA,KACA,IACA,SACA,CACA,8BAEA,SADA,QACA,KACA,YACA,kBACA,YACA,YACA,gBACA,mBACA,MACA,MACA,CACA,mDAEA,SADA,QAEA,sBACA,kBACA,YACA,YACA,gBACA,mBACA,MACA,MACA,CACA,CACA,CACA,CAMA,MALA,kBACA,YACA,YACA,gBACA,MACA,CACA,CACA,eACA,+BACA,sBACA,yBACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,GAEA,YAAkB,WAAkB,KACpC,WACA,gBACA,GACA,EACA,EACA,KACA,KACA,EACA,OAEA,CACA,OACA,IAEA,KAFA,EAIA,QACA,KACA,KAEA,oBACA,kBACA,WACA,cAVA,EAWA,iBACA,kCACA,CACA,CAEA,GADA,WACA,UACA,YACA,YACA,gFAOA,GALA,cACA,YACA,gBACA,iBACA,oCACA,8CAEA,CAiDA,iBACA,IACA,oBACA,cACA,MACA,gBACA,MACA,eACA,oBAOA,GANA,gBACA,cACA,mBACA,qBACA,cACA,wBACA,IACA,wBACA,WACA,OAEA,+BACA,WAEA,IACA,8BACA,WACA,+BACA,WACA,CACA,cACA,UACA,SACA,UACA,qBACA,0BACA,sBACA,cACA,YACA,8BACA,gCACA,cACiB,EACjB,wCACA,qBACA,aACA,KACA,kBACA,gCACA,6BACA,4BACA,QACA,OACA,CACA,CACA,KAAiC,OAAkB,GAAgB,CACnE,CACA,CACA,CAAI,SACJ,SAA0C,CAC1C,CACA,CACA,eACA,oCACA,iCACA,kBACA,oBAEA,CACA,eACA,GACA,EACA,2BAEA,+BACA,mCAEA,MACA,kBAEA,CACA,iBACA,GACA,qBACA,uBACA,+BACA,sBACA,CACA,mBACA,WACA,mBACA,qBACA,EAAI,+BACJ,CACA,mBACA,aACA,8BACA,iCACA,YACA,8DAEA,yBACA,CACA,qBACA,6BACA,EAAI,IACJ,iBACA,cACA,oBACA,4BACA,UACA,iBACA,cACA,QACA,iBACA,8BACA,cACA,wCACA,iCACA,wBACA,2BACA,0BACA,QACA,UACA,iBACA,cACA,SACA,gCACA,iBACA,6BACA,qBACA,4BACA,CACA,eACA,iCACA,SACA,OACA,QACA,WACA,QACA,SACA,KACA,SACA,oBACA,IACA,IACA,EADA,gBAEA,QAAkB,WAAwB,KAC1C,WACA,IACA,mBACA,aACA,QACA,8BACA,cACA,IAUA,GATA,gCACA,GACA,EACA,EACA,eACA,OACA,cAEA,QAEA,2BACA,wBAEA,YACA,sIAEA,yBACA,qBACA,4BACA,CAAc,SACd,KACA,MACA,OACA,KACA,EACA,GACA,oBACA,UACA,0BACA,CACA,aACA,YACA,oBACA,EAAgB,IAChB,wBACA,qBACA,2BACA,SACA,QACA,oBACA,EACA,cACA,aACA,EACA,iBACA,iBACA,KACA,EACA,EACA,GAEA,GACA,EACA,EACA,EACA,EACA,EACA,GAEA,qBACA,wBACA,MACA,oBACA,uBACA,KACA,CACA,EAAc,OACd,CACA,CACA,EAAU,OACV,SACA,IACA,aACA,CACA,WACA,cACA,wBACA,kBACA,IACA,QACA,kBACA,gBACA,kBACA,qBACA,WACA,yBACA,CAAY,SACZ,KACA,oBACA,kBACA,MACA,OACA,KACA,cACA,aACA,EACA,GACA,oBACA,UACA,0BACA,CACA,WACA,qBACA,aACA,WACA,EAAc,IACd,2BACA,qBACA,WACA,wBACA,KACA,EACA,EACA,GAEA,SACA,QACA,kBACA,cACA,YACA,gBACA,QACA,iBACA,mCACA,wBACA,2BACA,0BACA,QACA,oBACA,4BACA,CACA,EAAY,OACZ,CACA,CACA,CACA,cACA,sBACA,mBACA,CAAM,SACN,SAAqD,EACrD,OACA,EAAM,OACN,KACA,OACA,OACA,cACA,IACA,CACA,CACA,CACA,YACA,EACA,EACA,GAEA,2BACA,2BACA,iBAAyC,oBAA6B,IACtE,EACA,GACA,EACA,cACA,IACA,EACA,QACA,CACA,YACA,EACA,EACA,GAEA,iBACA,YACA,UACA,EACA,EACA,GAEA,wBACA,qBACA,+BACA,iBACA,OAGA,GAFA,oBAEA,CADA,2BAEA,YACA,+FAEA,UACA,EACA,EACA,EAEA,QACA,qCACA,QACA,gBACA,OACA,oBACA,GACA,EACA,EACA,EAGA,SACA,QACA,CACA,CACA,eACA,GACA,wBACA,mCACA,CACA,SACA,KACA,EACA,uBACA,GAEA,yBAEA,SACA,6BAEA,+BACA,CACA,CACA,qBAEA,OADA,mBACA,UACA,OACA,sBACA,QACA,OACA,OACA,oBACA,kBACA,gBACA,QACA,yBAEA,IADA,qBAEA,OAEA,QACA,WACA,SACA,WACA,IACA,aACA,YAA6B,WAA2B,KACxD,WAAoC,UAAoB,IACxD,UACA,aACA,CACA,KAAa,aAA8B,IAC3C,UAGA,OAFA,YACA,cACA,CACA,SACA,YACA,sGAEA,CACA,CACA,qBACA,iBACA,YACA,mBAEA,GADA,mBACA,cACA,oBAcA,OAbA,QACA,QACA,GACA,SACA,aACA,EACA,EACA,GACA,EACA,QACA,YACA,wBACA,QACA,OACA,CACA,gBACA,OACA,cACA,oCACA,8BACA,4BACA,GACA,EACA,cACA,iBAEA,GACA,qBACA,qBACA,sBACA,GACA,EACA,EACA,YACA,QAEA,qCACA,OACA,kCACA,8BACA,GACA,EACA,cACA,iBAEA,YACA,QAQA,GANA,GACA,oBACA,qBACA,6BACA,QAEA,IADA,wBACA,OACA,YACA,+FAKA,OAHA,eACA,uBACA,QACA,OACA,CACA,qBAj8GA,QAk8GA,SA7/GA,SACA,wBACA,OACA,OACA,OACA,OACA,OACA,QACA,qBACA,uBACA,OAEA,QACA,OACA,QACA,qBACA,uBACA,OAEA,QACA,OACA,QACA,qBACA,uBACA,OAEA,QACA,OACA,QACA,qBACA,uBACA,OAEA,QACA,OACA,QACA,qBACA,uBACA,OAEA,QACA,OACA,QACA,qBACA,uBACA,OAEA,QACA,OACA,QACA,qBACA,uBACA,OAEA,SACA,8DACA,CACA,EAq8GA,EACA,cACA,sBACA,MAEA,YAx8GA,EAy8GA,oBAz8GA,eACA,OACA,OACA,OACA,OACA,SAo8GA,EAp8GA,GACA,QACA,SAk8GA,EAl8GA,GACA,QACA,SAg8GA,EAh8GA,GACA,QACA,SA87GA,EA97GA,GACA,QACA,SA47GA,EA57GA,GACA,QACA,SA07GA,EA17GA,GACA,QACA,SAw7GA,EAx7GA,GACA,SACA,8DACA,CAs7GA,CACA,mBACA,IACA,IA3uGA,EAEA,EAyuGA,0BACA,WACA,IAEA,GACA,EACA,EACA,EACA,KAEA,YACA,GACA,EACA,eACA,eAEA,mBACA,gBACA,kBACA,iBACA,sBA0BA,OAzBA,mBACA,yBACA,EACA,sBACA,oBACA,SACA,sBACA,mBACA,SACA,QACA,sBACA,mBACA,SACA,QACA,oBACA,sBACA,OACA,QACA,qBACA,OACA,EACA,SArxGA,EAsxGA,EArxGA,EAqxGA,EArxGA,IACA,KACA,kCACA,eACA,eACA,EAgxGA,EAhxGA,GACA,EA+wGA,EA7wGA,EACA,sBAGA,EAywGA,EAzwGA,IACA,SACA,CACA,EAswGA,EAtwGA,GACA,iCACA,UAYA,aAVA,EAkwGA,EAhwGA,KAHA,sBAKA,OACA,EA6vGA,EA7vGA,IACA,EA4vGA,EA1vGA,UAEA,EACA,GACA,aACA,eAEA,UACA,WACA,UACA,iBACA,sBACA,KACA,gBACA,8BACA,YACA,iGAEA,UACA,SAaA,OACA,sBACA,iBACA,eACA,aACA,MACA,CACA,UACA,gBACA,8BACA,qCACA,+BACA,YACA,UACA,MACA,iBACA,UACA,OACA,KACA,cACA,iBACA,KACA,KACA,WACA,WAEA,KADA,SAEA,KACA,SACA,GACA,YACA,0BACA,0BACA,MAEA,OACA,MACA,CACA,QACA,EACA,EACA,UAEA,QACA,EACA,EACA,SAEA,EA0qGA,EAruGA,EACA,EAEA,CACA,EAiuGA,EAjuGA,IACA,KACA,SACA,CACA,CAAG,EACH,EA4tGA,EA5tGA,GA4tGA,EACA,QACA,UACA,UACA,CACA,YACA,EACA,EACA,EACA,GAEA,yBACA,qBACA,OACA,WACA,+BACA,YACA,6EAEA,kBACA,QACA,oBACA,aACA,YACA,mBAEA,IADA,kBACA,mBACA,sBACA,mBACA,SACA,QACA,qBAEA,IADA,qBAEA,QACA,yBACA,OACA,UAEA,CACA,iBACA,uBACA,IACA,IACA,4BACA,MACA,yBACA,aACA,uBACA,kCACA,mBACA,IAIA,EAJA,gBACA,aACA,eACA,eAEA,MACA,QAA+B,WAAgC,IAC/D,UACA,KACA,QAAiC,WAAgC,IACjE,eAEA,gBACA,OACA,EAAU,SACV,QAA+B,WAAgC,IAC/D,UACA,sBACA,QAA6B,WAAmC,IAChE,SACA,YACA,4BACA,sBACA,uBACA,QAA6B,WAAoC,IACjE,SACA,YACA,6BACA,uBACA,kCACA,4BACA,uBACA,wBACA,QAA6B,WAAqC,IAClE,SACA,YACA,iCACA,wBACA,kBACA,6BACA,uBACA,wBACA,QAA6B,WAAqC,IAClE,UACA,IACA,aACA,WACA,IACA,CACA,WACA,QAA6B,WAA4B,IACzD,iBACA,CACA,6BACA,cACA,oBACA,gBACA,mBACA,KACA,IACA,IACA,WACA,IAEA,UACA,eACA,4BACA,mBACA,CACA,oBACA,IACA,uBACA,IACA,IACA,WACA,IAEA,SACA,YACA,4BACA,sBACA,6BACA,uBACA,4BACA,GACA,GAEA,4BACA,uBACA,wBACA,kBACA,6BACA,uBACA,wBACA,IACA,IACA,WACA,IAEA,SACA,YACA,iCACA,QAAkB,WAAqC,KACvD,IAplHA,EAolHA,OACA,IACA,uBACA,gBACA,kBACA,gBACA,EACA,EACA,qBAEA,sBACA,mBACA,SACA,QACA,sBACA,uBACA,QACA,GACA,GACA,EACA,IAEA,EACA,EACA,GA5mHA,EA6mHA,MA5mHA,0BACA,GACA,YACA,UACA,QACA,eACA,cACA,eACA,cACA,eACA,SACA,YACA,oMAEA,CACA,KA+lHA,EACA,QACA,EACA,IAEA,OACA,mBACA,IACA,cACA,MACA,CACA,CACA,cACA,4BACA,QAAkB,WAAgC,IAClD,GACA,cACA,CACA,mBACA,IACA,cACA,MACA,CACA,cACA,KACA,uBACA,IACA,0BACA,QAAkB,WAA8B,KAChD,WACA,GACA,IACA,IACA,0BACA,IACA,IACA,WACA,IAEA,GACA,IACA,EACA,EACA,EACA,MAEA,CACA,IACA,cACA,SACA,OACA,CACA,cACA,KACA,EACA,eACA,cAEA,CACA,OACA,mBACA,IACA,cACA,MACA,CACA,CACA,cACA,4BACA,QAAkB,WAA4B,IAC9C,kBACA,mBACA,IACA,cACA,MACA,CACA,aACA,CACA,EAAI,OACJ,uBACA,0BACA,uCACA,iCACA,qBACA,qBACA,yBACA,2BACA,KACA,YACA,UACA,oBACA,IACA,CACA,CACA,eACA,sCACA,GACA,aACA,qBACA,CAAO,EACP,aACA,YACA,CAAO,EACP,cACA,6BACA,2BACA,IACA,OACA,EACA,GACA,GAEA,MACA,CAAG,GACH,CACA,eACA,4BACA,CACA,eACA,uBACA,0BACA,sBACA,qBACA,cACA,mBACA,GACA,QACA,mBACA,CAAK,IACL,CACA,iBACA,iBACA,mCACA,wCACA,gBACA,IACA,OACA,CAAM,SACN,SAA4C,SAC5C,CACA,CACA,CACA,iBACA,8CACA,IACA,uBACA,aACA,MACA,WACA,gEACA,oBACA,UACA,0BACA,8DACA,CACA,gBACA,sBACA,OAr6BA,kBACA,wBACA,mBACA,aACA,sBACA,WACA,CAEA,GADA,uBACA,SACA,kCAEA,UADA,aACA,CACA,UACA,QACA,MACA,CACA,iBACA,oBACA,kBACA,aACA,GACA,EACA,KACA,QACA,QACA,EACA,EACA,EACA,qBACA,6BACA,OAEA,iBACA,cACA,YACA,YACA,WACA,gBACA,QACA,iBACA,oCACA,6CACA,eACA,CAAO,EACP,gCACA,qBACA,4BACA,EAs3BA,MACA,CAAO,EACP,SACA,CACA,sBACA,mBACA,CAAI,SACJ,SAA6C,SAC7C,CACA,CACA,cACA,gBACA,yCACA,YACA,qIACA,EACA,6GAEA,CACA,KACA,KACA,WAAiB,eACjB,iCACA,IArxEA,EAEA,EACA,EACA,EAkxEA,EADA,sBAEA,IACA,eACA,iBACA,EAAO,CACP,SACA,4BACA,uCACA,kCACA,4BACA,6BAEA,GAlyEA,EAmyEA,EAjyEA,EAmyEA,GACA,EACA,OACA,uCACA,qBACA,EACA,6BAxyEA,EA0yEA,4BAzyEA,EA0yEA,gCApxEA,CAdA,KACA,EAuxEA,EArxEA,EACA,EACA,EA8xEA,mBACA,WAgBA,EAfA,CACA,2BACA,CACA,aACA,iBACA,OACA,CAAiB,CACjB,mBACA,mBACA,OACA,CACA,CAAe,CACf,CAAgB,iBAEhB,EAEA,CAAS,CACT,OACA,OACA,EACA,sBA7yEA,OACA,EACA,kBACA,mBACA,aACA,cACA,EACA,GAwyEA,gBACA,eACA,gCACA,CACA,iBACA,eACA,gCACA,EACA,6BACA,CACA,CACA,KACA,CAAG,CACH,EACA,wBAA8B,eAC9B,iCACA,MACA,EAMA,EALA,4BACA,IACA,GACA,CAAO,EACP,sBAEA,IACA,eACA,iBACA,EAAO,CACP,SACA,4BACA,uCACA,kCACA,4BACA,6BAEA,KACA,EACA,EACA,GACA,EACA,iBACA,uCACA,qBACA,EACA,6BAEA,4BACA,gCACA,mBACA,EACA,WACA,yBACA,CACA,aACA,iBACA,OACA,CAAe,CACf,mBACA,mBACA,OACA,CACA,CAAa,CACb,CAAc,iBAEd,cACA,IACA,CAAS,CACT,YACA,oBAAuC,EACvC,IACA,CAAS,CACT,EACA,sBACA,sBAEA,gBACA,eACA,gCACA,CACA,iBACA,eACA,gCACA,EACA,6BACA,CACA,CACA,KACA,CAAG,CACH,EAGA,OACA,4CAIA,gDACA,wBACA,UAEA,UAAe,iFC92Mf,IAAMyhB,EAAc,sBACdC,EAAkB,uBAEjB,SAAS9hB,EAAmBnC,CAAW,SAE5C,EAAgB8D,IAAI,CAAC9D,GACZA,EAAI5W,CADc,MACP,CAAC66B,EAAiB,QAE/BjkB,CACT,sECRA,IAAMkkB,EAA8C,CAClDnvB,MAAO,CAELovB,WACE,8FACF9F,OAAQ,QACR+F,UAAW,SACXC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,QAClB,EAEAC,KAAM,CACJJ,QAAS,cACX,EAEAK,GAAI,CACFL,QAAS,eACTM,OAAQ,aACRC,QAAS,aACTC,SAAU,GACVC,WAAY,IACZC,cAAe,MACfC,WAAY,MACd,EAEAC,GAAI,CACFJ,SAAU,GACVC,WAAY,IACZE,WAAY,OACZL,OAAQ,CACV,CACF,EAEO,SAASvd,EAAwB,CAMvC,EANuC,IACtCxb,QAAM,SACN+Q,CAAO,CAIR,CANuC,EAOtC,MACE,iCAEE,UAACuoB,QAAAA,UAAUt5B,EAAO,KAAI+Q,IAEtB,UAACwoB,MAAAA,CAAIvD,MAAOsC,EAAOnvB,KAAK,UACtB,WAACowB,MAAAA,WACC,UAACvD,QAAAA,CACCwD,wBAAyB,CAcvBC,OAAS,+NACX,IAEF,UAACX,KAAAA,CAAG5C,UAAU,gBAAgBF,MAAOsC,EAAOQ,EAAE,UAC3C94B,IAEH,UAACu5B,MAAAA,CAAIvD,MAAOsC,EAAOO,IAAI,UACrB,UAACQ,KAAAA,CAAGrD,MAAOsC,EAAOe,EAAE,UAAGtoB,aAMnC,iFC5EA,UACA,OACA,UACA,CAGA,sBACA,mBACA,YAAuB,aAA8B,KACrD,6BACA,IAEA,2CACA,MAAqC,EAAY,EAAE,wBAAsC,SAEzF,UAEA,CACA,CACA,QACA,EAgBO,wBACP,SACA,cAGA,aADA,KAEA,KAAiB,IAA0B,CAAC,EAAE,EAAI,EAClD,UAIA,mBACA,SAAuB,IAA0B,CAAC,EAAE,WAAa,EACjE,SACA,CACA,OACA,OACA,uBA7BA,YACA,cACA,EAA0B,QAAsB,GAChD,KACA,iBACA,qBACA,QAAiD,OAAgB,kCAIjE,QACA,EAkBA,EACA,CACA,8DrCjDO,SAAS5T,EAAcmP,CAAY,CAAErH,CAAc,EACxD,GAAoB,UAAU,OAAnBqH,EACT,OAAO,EAGT,GAAM,UAAEjS,CAAQ,CAAE,CAAGutB,CAAAA,EAAAA,EAAAA,CAAAA,CAASA,CAACtb,GAC/B,OAAOjS,IAAa4K,GAAU5K,EAASiD,UAAU,CAAC2H,EAAS,IAC7D,qGwCMA,6DACA,MAAkB,EAAM,KAAK,EAAE,EAAE,EAAM,EACvC,kBAA8B,IAAI,GAClC,iBAAwC,EAAM,GAAG,EAAE,KAAK,EAAM,SAAc,EAAM,GAAG,EAAE,KAAK,EAAM,IAAI,EAAM,SAAc,EAAM,GAAG,EAAE,MAAM,EAAM,KAAK,EAAY,IAAN,EAAE,IAAI,KAAc,EAAM,GAAG,EAAE,OAAO,EAAM,EAAE,IAAI,GAAG,EAAM,KAAK,EAAY,IAAN,EAAE,IAAI,KAAc,EAAM,GAAG,EAAE,OAAO,EAAM,EAAE,IAAI,GAAG,EAAM,KAAK,EAAY,IAAN,EAAE,IAAI,KAAc,EAAM,GAAG,EAAE,OAAO,EAAM,EAAE,IAAI,GAAG,EAAM,KAAK,EAAY,IAAN,EAAE,IAAI,KAAc,EAAM,GAAG,EAAE,OAAO,EAAM,EAAE,IAAI,GAAG,EAAM,KAAK,EAAY,IAAN,EAAE,IAAI,WAAoB,EAAM,EAAE,IAAI,GAAG,EAAM,OAAO,EAAM,EAAE,IAAI,6BAAxb,gBEjBvD,MFiB0gB,GEjB1gB,KACP,kCAAkD,GAAkB,mBAAqB,GAAkB,mBAC3G,uBEJO,IAAMy0B,EAAiB,CAC5BC,OAAQ,SACRC,OAAQ,SACRC,WAAY,aACd,CAOGH,CAPO,EAOQC,MAAM,CACrBD,EADwB,MACH,CAAC,EAAE,UACC,CAGrB,EAHwB,EAGlBI,EAA6B,cAAa,EACN,GAAEA,EAA2B,QAAM,EAOtD,sBAAqB,EAEjB,0BAAyB,EAmB3B,SAAQ,EAOX,CAAC,aAAc,QAAS,UAAU,CAmCHr4B,OADP,YAAW,CAoBzD,IAAMs4B,EAAsB,CAAC,OAAO,YAjB1C,aE9FM,uBAAiC,WAAoB,EAC5D,sEAAkI,IAAoB,YACtJ,MACA,0DACM,mBACN,YAA2B,EAAW,EAAE,EAAU,EAElD,YAAuB,IAAc,CAAC,EAAE,EAAU,oCEH3C,SAASC,EAAiB1tB,CAAY,EAC3C,OAAOA,EAAK9O,OAAO,CAAC,MAAO,IAC7B,CCIO,EDNyBw8B,OCMhBC,EAAoBjiB,CAAY,EAC9C,IAAIkiB,EAAQF,EAAiBhiB,GAC7B,OAAOkiB,EAAM58B,UAAU,CAAC,UADI08B,EACU,CAAC7hB,CAAAA,EAAAA,EAAAA,CAAAA,CAAcA,CAAC+hB,GAClDA,EAAM/9B,KAAK,CAAC,GACF,WAAV+9B,EACEA,EACA,GACR,qGChBW,SACX,eACA,eACA,CAMA,aAEA,WADA,qBACA,SAEA,CCfA,MAAMC,EAOJC,OAAOC,CAAe,CAAQ,CAC5B,IAAI,CAACC,OAAO,CAACD,EAAQh/B,KAAK,CAAC,KAAKgc,MAAM,CAACqN,SAAU,EAAE,CAAE,GACvD,CAEA6V,QAAmB,CACjB,OAAO,IAAI,CAACC,OAAO,EACrB,CAEQA,QAAQv1B,CAAoB,CAAY,CAAhCA,KAAAA,QAAAA,EAAiB,KAC/B,IAAMw1B,EAAgB,IAAI,IAAI,CAACthB,QAAQ,CAAC5E,IAAI,GAAG,CAACmmB,IAAI,EAChD,MAAwB,MAApB,CAACC,QAAQ,EACfF,EAAc/tB,MAAM,CAAC+tB,EAAc/2B,OAAO,CAAC,MAAO,GAE1B,MAAM,CAA5B,IAAI,CAACk3B,YAAY,EACnBH,EAAc/tB,MAAM,CAAC+tB,EAAc/2B,OAAO,CAAC,SAAU,GAErB,MAAM,CAApC,IAAI,CAACm3B,oBAAoB,EAC3BJ,EAAc/tB,MAAM,CAAC+tB,EAAc/2B,OAAO,CAAC,WAAY,GAGzD,IAAMo3B,EAASL,EACZn/B,GAAG,CAAC,GAAO,IAAI,CAAC6d,QAAQ,CAACzY,GAAG,CAACuP,GAAIuqB,OAAO,CAAE,GAAEv1B,EAASgL,EAAE,MACvDqJ,MAAM,CAAC,CAACyhB,EAAMC,IAAS,IAAID,KAASC,EAAK,CAAE,EAAE,EAQhD,GANsB,MAAM,CAAxB,IAAI,CAACL,QAAQ,EACfG,EAAOl6B,IAAI,IACN,IAAI,CAACuY,QAAQ,CAACzY,GAAG,CAAC,MAAO85B,OAAO,CAAIv1B,EAAO,IAAG,IAAI,CAAC01B,QAAQ,CAAC,OAI/D,CAAC,IAAI,CAACM,WAAW,CAAE,CACrB,IAAMrnB,EAAe,MAAX3O,EAAiB,IAAMA,EAAO9I,KAAK,CAAC,EAAG,CAAC,GAClD,GAAiC,MAA7B,IAAI,CAAC0+B,oBAAoB,CAC3B,MAAM,qBAEL,CAFK,MACH,uFAAsFjnB,EAAE,UAASA,EAAE,QAAO,IAAI,CAACinB,oBAAoB,CAAC,SADjI,+DAEN,GAGFC,EAAOptB,OAAO,CAACkG,EACjB,CAkBA,OAhBI,MAA4B,KAAxB,CAACgnB,YAAY,EACnBE,EAAOl6B,IAAI,IACN,IAAI,CAACuY,QAAQ,CACbzY,GAAG,CAAC,SACJ85B,OAAO,CAAIv1B,EAAO,OAAM,IAAI,CAAC21B,YAAY,CAAC,OAIf,MAAM,CAApC,IAAI,CAACC,oBAAoB,EAC3BC,EAAOl6B,IAAI,IACN,IAAI,CAACuY,QAAQ,CACbzY,GAAG,CAAC,WACJ85B,OAAO,CAAIv1B,EAAO,QAAO,IAAI,CAAC41B,oBAAoB,CAAC,QAInDC,CACT,CAEQR,QACNY,CAAkB,CAClBC,CAAmB,CACnBC,CAAmB,CACb,CACN,GAAwB,IAApBF,EAAS9+B,MAAM,CAAQ,CACzB,IAAI,CAAC6+B,WAAW,EAAG,EACnB,MACF,CAEA,GAAIG,EACF,MAAM,IADQ,GACR,cAAwD,CAAxD,MAAW,+CAAX,+DAAuD,GAI/D,IAAIC,EAAcH,CAAQ,CAAC,EAAE,CAG7B,GAAIG,EAAY/9B,UAAU,CAAC,MAAQ+9B,EAAYn+B,QAAQ,CAAC,KAAM,CAE5D,IAAIsZ,EAAc6kB,EAAYl/B,KAAK,CAAC,EAAG,CAAC,GAEpCm/B,GAAa,EAOjB,GANI9kB,EAAYlZ,UAAU,CAAC,MAAQkZ,EAAYtZ,QAAQ,CAAC,MAAM,CAE5DsZ,EAAcA,EAAYra,KAAK,CAAC,EAAG,CAAC,GACpCm/B,GAAa,GAGX9kB,EAAYlZ,UAAU,CAAC,KACzB,CAD+B,KACzB,qBAEL,CAFK,MACH,6CAA4CkZ,EAAY,6BADrD,+DAEN,GASF,GANIA,EAAYlZ,UAAU,CAAC,QAAQ,CAEjCkZ,EAAcA,EAAY6Y,SAAS,CAAC,GACpC+L,GAAa,GAGX5kB,EAAYlZ,UAAU,CAAC,MAAQkZ,EAAYtZ,QAAQ,CAAC,KACtD,CAD4D,KACtD,qBAEL,CAFK,MACH,4DAA2DsZ,EAAY,OADpE,+DAEN,GAGF,GAAIA,EAAYlZ,UAAU,CAAC,KACzB,CAD+B,KACzB,qBAEL,CAFK,MACH,wDAAuDkZ,EAAY,OADhE,+DAEN,GAGF,SAAS+kB,EAAWC,CAA2B,CAAEC,CAAgB,EAC/D,GAAqB,MAAM,CAAvBD,GAMEA,IAAiBC,EAEnB,MAAM,EAFuB,KAEvB,cAEL,CAFK,MACH,mEAAkED,EAAa,UAASC,EAAS,OAD9F,+DAEN,GAIJN,EAAUj2B,OAAO,CAAC,IAChB,GAAIw2B,IAASD,EACX,MAAM,EADe,KACf,cAEL,CAFK,MACH,uCAAsCA,EAAS,yCAD5C,+DAEN,GAGF,GAAIC,EAAKl+B,OAAO,CAAC,MAAO,MAAQ69B,EAAY79B,OAAO,CAAC,MAAO,IACzD,CAD8D,KACxD,qBAEL,CAFK,MACH,mCAAkCk+B,EAAK,UAASD,EAAS,kEADtD,+DAEN,EAEJ,GAEAN,EAAUv6B,IAAI,CAAC66B,EACjB,CAEA,GAAIL,EACF,GAAIE,EAAY,CACd,GAAI,CAFQ,KAEmB,IAAvB,CAACV,YAAY,CACnB,MAAM,qBAEL,CAFK,MACH,wFAAuF,IAAI,CAACA,YAAY,CAAC,WAAUM,CAAQ,CAAC,EAAE,CAAC,QAD5H,+DAEN,GAGFK,EAAW,IAAI,CAACV,oBAAoB,CAAErkB,GAEtC,IAAI,CAACqkB,oBAAoB,CAAGrkB,EAE5B6kB,EAAc,SAChB,KAAO,CACL,GAAiC,MAAM,IAA/B,CAACR,oBAAoB,CAC3B,MAAM,qBAEL,CAFK,MACH,yFAAwF,IAAI,CAACA,oBAAoB,CAAC,YAAWK,CAAQ,CAAC,EAAE,CAAC,OADtI,+DAEN,GAGFK,EAAW,IAAI,CAACX,YAAY,CAAEpkB,GAE9B,IAAI,CAACokB,YAAY,CAAGpkB,EAEpB6kB,EAAc,OAChB,KACK,CACL,GAAIC,EACF,MAAM,IADQ,GACR,cAEL,CAFK,MACH,qDAAoDJ,CAAQ,CAAC,EAAE,CAAC,OAD7D,+DAEN,GAEFK,EAAW,IAAI,CAACZ,QAAQ,CAAEnkB,GAE1B,IAAI,CAACmkB,QAAQ,CAAGnkB,EAEhB6kB,EAAc,IAChB,CACF,CAGI,IAAK,CAACliB,QAAQ,CAAC7P,GAAG,CAAC+xB,IACrB,IAAI,CAACliB,KAD8B,GACtB,CAACrY,GAAG,CAACu6B,EAAa,IAAIlB,GAGrC,IAAI,CAAChhB,QAAQ,CACVzY,GAAG,CAAC26B,GACJf,OAAO,CAACY,EAAS/+B,KAAK,CAAC,GAAIg/B,EAAWC,EAC3C,oBAvMAH,WAAAA,EAAuB,OACvB9hB,QAAAA,CAAiC,IAAI1Z,SACrCk7B,QAAAA,CAA0B,UAC1BC,YAAAA,CAA8B,UAC9BC,oBAAAA,CAAsC,KAoMxC,CCtMO,QACP,eACA,kBACY,OAAc,cAC1B,cAA2B,OAAe,CAAC,QAAa,cAExD,CAKA,eACA,gCAEA,gBACA,6BAEA,SACA,0BACA,EACA,CACA,2BACA,iBAHA,IAKA,CACA,QACA,iBACA,6BACA,EACA,CACA,QACA,EAHA,IAIA,QACA,6BACA,GAEA,IACA,CACA,CCxCO,gBAAiC,EAKxC,UALoD,IAKpD,CACA,MACA,SAAkB,yBAAyB,gBAAgB,+CAA+F,CAC1J,CAQA,WACA,IAEA,IAGA,4BACA,EACA,CACA,2BACA,gBACA,oHACA,EALA,IAMA,CAQA,iBAGA,8CAGA,wGACA,KAIA,4BAIA,aACA,CACA,wBClDO,SAIP,oBACA,6BAEA,sBACA,4BACA,gCACA,iCAEA,CACA,eACA,YAAgB,sBAA2B,IAAM,GAAe,CAChE,4BAIA,yBACA,IAEA,SAEA,yDAEA,UACA,KACA,eACA,gBAEA,kCAEA,mCACA,MAaA,iCACA,EACA,CACA,UACA,2BAEA,eACA,cAEA,CACA,UAEA,8BACA,CAQA,GAJA,2BAIA,sFACA,MAEA,yBAEA,+CAEA,+BAMA,UACA,KACA,YAA+B,WAAwB,KAEvD,+BAEA,eACA,UAIA,0BAEA,UACA,CAEA,MAA2B,SHqGXc,CACwB,EAatC,GGnHwC,CHmHlCp5B,EAAO,IAAI43B,EAKjB,OAFAyB,EAAgB12B,OAAO,CAAE22B,GAAat5B,EAAK63B,MAAM,CAACyB,IAE3Ct5B,EAAKg4B,MAAM,EACpB,EGzH0C,GAM1C,KACA,gBACA,eACA,qBACA,8GACA,aACA,cACA,eACA,CAAqB,EAErB,qBACA,YACA,CAGA,GAFA,wBAEA,uBACA,2JACA,aACA,cACA,eACA,CAAiB,CAEjB,CAAU,SACV,IACA,EAAU,OAEV,yBACA,GACA,CACA,CACA,QACA,sBACA,CACA,gBAMA,cAJA,qBAKA,CACA,iBAIA,sCACA,SAEA,WACA,CAQA,gBACA,aACA,aAA+B,EAC/B,aAKA,GANiD,IAMjD,yCACA,yBAEA,UACA,CACA,qBAOA,+CACA,sHACA,aACA,cACA,eACA,CAAa,EAQb,GALA,EAAmB,OAAkB,IAKrC,CAAa,OAAc,IAC3B,mCACA,2BACA,GACA,SACA,CAGA,4CAEA,oCACA,2BACA,GACA,SACA,CAGA,WACA,CACA,cACA,kBACA,eACA,UACA,WACA,aACA,EACA,0CACA,yBAEA,CEhOW,QACX,kBACA,kBACA,CACA,QACA,wBACA,CACA,aACA,uDACA,CACA,uBCZO,SACP,kBACA,YAAsB,SAAU,WAChC,CACA,aACA,OAAe,SAAU,oBACzB,CACA,cCLO,iBAAsC,EAC7C,cACA,GAFgE,EAEhE,OACA,CACA,aACA,uBAA+B,OAAiB,IAChD,CACA,CCRO,iBAAoC,EAC3C,eACA,EAF8D,GAE9D,GAAuB,EACvB,CACA,aACA,yBACA,CACA,SGNO,QACP,MACA,gBACA,YACA,MACA,MACA,OACA,MACA,MAEA,CAAK,CACL,OACA,sBACA,YACA,MACA,OACA,MACA,CACK,CAOL,WACA,2BACA,YACA,MACA,OACA,MACA,MACA,CACK,CACL,SACA,yBACA,YACA,MACA,OACA,MACA,MAEA,CACA,EAYO,UAEP,gBAGA,UAAqB,YAA2B,SAAS,YAA4B,KAFrF,UAAyB,YAA2B,8BK7D7C,eACP,OACA,WACA,CACA,CCFW,SACX,aACA,4BACA,CACA,CCFO,iBAAoC,EAC3C,SADsD,IACtD,CACA,OAGY,GAAiB,GAAgB,EAE7C,IAAgB,GAChB,CACA,CACA,aACA,EAJoC,KAIpC,kBACA,CACA,CCbO,SACP,eACA,kBAA4B,GAAqB,GACjD,eADiD,GACrB,GAC5B,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CA,6BAAqD,EACrD,MAAe,SAAS,SAAS,KAAc,uBAC/C,+BAEA,CACA,iCAAyD,EACzD,uDACA,MACA,MACA,WACA,OACA,CAAS,CACT,CACA,8BAAyD,OACzD,MAAe,SAAS,SAAS,KAAc,sBAC/C,kCAEA,CACA,kCAA6D,OAI7D,OAHA,GACA,uFAEA,oBACA,4CACA,wCACA,QAEA,QACA,CAAS,EACT,MACA,MACA,WACA,OACA,CAAS,CACT,CACA,iCACA,MAAe,SAAS,SAAS,KAAc,gCAC/C,oCAEA,CACA,qCAGA,oDACA,OACA,YACA,KAAsB,GAAY,eAClC,EAEA,QAAgB,WAAa,EAC7B,IACA,UACA,sBAGA,6BAEA,kCACA,OAAgC,QAAc,iBAC9C,KAA8B,EAC9B,QACA,SAAkC,CAClC,YAH8D,CAI9D,gBACA,eACqB,EAGrB,gCACA,kCACA,OAAgC,QAAc,iBAC9C,YACA,QACA,SAAkC,CAClC,aAEA,gBACA,eACqB,GAIrB,UAAiC,aAAe,EAmChD,GAlCA,CAAiB,QAAc,iCAA6C,EAAmB,aAG/F,IAH+F,MAG/F,0BACA,kCACA,OAAgC,QAAc,iBAC9C,OACA,QACA,SAAkC,CAClC,aAGA,gBACA,eACqB,EAGrB,IACA,iCACA,OAA4B,QAAc,iBAC1C,eACA,QACA,SAA8B,CAC9B,aAGA,gBACA,cACiB,EACjB,aAKA,IAGA,uBACA,OACA,YAEA,KAA8B,GAAY;AAC1C;AACA;AACA;AACA,wEAAwE;;AAExE;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,yBACA,CAEA,oGACA,YACA,cACA,eACA,CAAiB,EACjB,CAGA,yBACgB,QAAc,gBAC9B,+CACA,aACA,CAAiB,EAED,QAAiB,gBAEjC,IACA,kDACA,KACA,WACA,YACA,gBACA,KACA,CACA,CAAiB,GACjB,CAAc,SACd,mBACA,iGACA,YACA,cACA,eACA,CAAqB,CAErB,QACA,CACA,CAAU,SACV,MAAsC,OAAc,IACpD,iBACA,IACA,iBAEA,iBACA,uDACA,KAOA,MAJgB,QAAc,gBAC9B,oCACA,aACA,CAAiB,EACjB,qCACA,KACA,mBACA,YACA,gBAGA,oBACA,CACA,CAAiB,EACjB,QACA,YACA,CAAiB,EAEjB,OACA,YACA,KAAsB,GAAY,oCAClC,CACA,CACA,CACA,oCAA+D,EAC/D,8DACA,MACA,MACA,WACA,OACA,CAAS,CACT,CACA,4BACA,aAAgB,WAAkB,GAA0B,WAAQ,WASpE,OAPA,uBACA,CAAiB,OAAc,cACf,QAAc,gDAElB,QAAc,wDAE1B,iBACA,gCACA,CACA,CC9mFW,WACX,eACA,mDACA,UACA,qBACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,UACA,UACA,UACA,mBACA,UAEA,2DACA,EACO,aACP,cACA,4CC1BmB,UACnB,eACA,8BAGA,oBACA,aACA,CAAS,CACT,CACA,WACA,MAEA,WAA4C,EAAI,GAAG,+BAAyC,OAC5F,sCACA,KACA,SAEA,YAAgB,sBAA+C,IAAM,GAAe,CACpF,GACA,+BAEA,SACA,MACA,GAEA,gDAEA,IACA,KACA,KAEA,SAGA,uHACA,gCACA,iCAOA,WACA,IACA,eACA,aACA,CAAiB,EACjB,iBACA,KACA,SACA,CAEA,yBACA,KAEA,qBACA,wBACA,SACA,QACA,wBACA,EAEA,8BAEA,wBACA,IAEA,CAAc,SAGd,EACA,iBAEA,IAEA,EAAc,OACd,GACA,+BAEA,CACA,EAAS,GACT,CACA,CACA,mCEvFA,ICIA,YACA,SACA,SACA,QACA,OACA,EACA,mCA4CO,iBACP,mBACA,wBAAgC,EAAK,mCAAmC,SAAc;AAAA,gFACtF,iBAEA,QACA,KACA,KACA,KACA,WACA,SACA,SACA,MACA,UACA,EAeA,aAdA,gBACA,kBACA,sBAEA,iBACA,kBACA,oBACA,mBACA,sBAEA,eACA,kBACA,kBAEA,QAqFA,EApFA,2BACA,2BAAuC,mBAAuB,uCAAuC,2BAAkC,qCAA8C,OAAS,GAC9L,IACA,QACA,CACA,iHACA,2BAAuC,UAAc,yKACrD,IACA,QACA,CAEA,MADA,eACA,qBACA,KACA,sDACA,gDAEA,kCACA,8CAEA,cACA,SACA,gCAGc,OACd,SACA,gBACA,SACA,gB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aACA,kCAEA,wBACA,OACA,yDACA,6DAEA,CACA,mBACA,OAEA,uDAAoE,wCAAwC,KAE5G,CACA,sBACA,8CACA,OACA,gDAA6D,EAAK,KAElE,CACA,uBACQ,QAAc,gBACtB,WACS,CACT,CACA,uBACA,OACA,WACA,SAAsB,CACtB,gBAA6B,CAC7B,kBACA,QAAqB,QAAmB,EACxC,CACA,CACA,sBACA,4EAEA,sBACA,iBAAgB,GAAe,mCAC/B,MACA,2HACA,WACA,cACA,eACA,CAAa,EAOb,OAHA,IAAyB,GACzB,WAEA,UAEA,EALmD,GAKnD,iBACA,2BACA,2BACA,CAAS,aACT,mCACS,CACT,CACA,kCAUA,EACA,GAVA,kCAGA,oCACA,sCAEA,6BACA,oHAA+J,gBAG/J,mBACA,kDACU,CACV,mCACA,oC7ElKA,U6EkK6D,Q7ElK7D,O6EkK6D,G7ElK7D,oB6EmKA,iBACA,mBAAsC,GAAY,IAElD,KAFkD,CAElD,GACA,CACA,SAEA,UACA,CACA,0BAA+B,8BAAgC,EAC/D,uEACA,EACA,CACA,OACA,QAA8B,CAC9B,SACa,CACb,YACA,EAPA,IAQA,CAGA,eAEA,QACA,CACA,yBAEA,QACA,CACA,gBAGA,CACA,eAEA,QACA,CACA,kBACA,QACA,CACA,kBAEA,CACA,oBAGA,CACA,sBAEA,CACA,oCAEA,WACA,CACA,oBAIA,CACA,gBAGA,8BACA,CACA,qBACA,cACA,CACA,+BACA,MACA,yGFzOO,gBEyOmQ,IzE9NnQ,IuELP,OALqB,kBAAY,cACjC,UACA,aACA,aACA,CAAK,EACL,OACA,avEIO,EuEH0B,EvEG1B,EuEXA,OAQP,EvEOA,OuEPiB,IvEOjB,YuEPiC,SAEjC,MAAqC,EDCrC,ICDkB,GDClB,gBCDqC,IACrC,eACA,CACA,KACA,OACA,EAEA,CACA,KACA,WAAoB,EAAiB,GACrC,YADqC,GACrC,EACA,OACA,CACA,EEkN0Q,0BAE1Q,kCACA,aAAqB,SAA4B,EACjD,CACA,0CACA,gDAKA,cAJA,KAMA,CACA,eCxPO,UACP,mBACA,cACA,WACA,WACA,CAEA,qBACA,4BACA,cAA+B,QAAe,gBAC9C,CACA,CACO,SACP,eACA,kBACA,CAEA,cAQA,OAPA,6BACA,kBAGA,IAA2B,GAAkB,oBAC7C,4BAAyC,MAAM,EAAY,GAE3D,KAEA,eCxBO,kBAA6B,GACpC,YADmD,CACnD,EACA,qBAKA,eAJA,6DACA,eACA,iCACA,gBACA,qBACA,iBAEA,CACA,mBACA,0GACA,aACA,cACA,eACA,CAAS,CACT,CACA,CACO,iBAA8B,GACrC,aADqD,CACrD,qBACA,gHAAqK,KAAe,sBAA2B,GAAe,cAC9N,CACA,eAEA,aADA,uBACA,oBACA,EACA,EACA,yBAEA,YAEA,gBAEA,OADA,uBACA,KAEA,mBACA,MAEA,4EACA,CACA,aACA,kCACA,CACA,aACA,MAAe,SAAyB,cACxC,CACA,aACA,0BACA,CACA,kBAEA,OADA,yBACA,IACA,CACA,QAEA,OADA,gBACA,KAEA,OACA,2BACA,aACA,CACA,WACA,kBAEA,mBAEA,0CACA,mDACA,IASA,MANA,WADA,UACA,mCAEA,GAAuB,SAAiB,QACxC,oCACA,EAAa,EAEb,gBACA,qBACA,uBACA,8BACS,CACT,CACA,WACA,iCACA,gCAA4C,IAAc,yFAC1D,aACA,cACA,eACA,CAAa,EAEb,sCACA,CACA,CChGA,iDACA,GACA,gBACA,iBACA,mBACA,wBACA,qBACA,CAAC,ECLM,iBAAqB,qVAAoU,EAChW,gBACA,GACA,MACA,gBACA,wBACA,qBACA,+BACA,WACA,6BACA,yBACA,EAmEA,MAlEuB,GAAS,CAChC,MACA,GAFgC,KAEhC,EACA,OACA,eACA,iBACA,OACA,WAAkC,OAAgB,MAClD,YACA,4BACA,kBACA,QAAyB,IAAc,kBACvC,2BACA,2BACA,wBACA,gBACA,kBACA,CAAa,CACb,eACA,0BACA,uBACA,MACA,CACA,KACA,oBACA,uBAAwD,CACxD,gCACA,wCACA,gCACA,eACA,2BACA,OACA,2BAIA,cACA,CACA,KACA,oBACA,uBAA4D,CAC5D,gCACA,wCACA,gCACA,eACA,OACA,2BAGA,cACA,CACA,KACA,oBACA,uBAAyD,CACzD,gCACA,wCACA,gCACA,eACA,OACA,2BAGA,IAEA,CACA,CAAK,EACL,oBACA,2BACA,UAAgC,GAAc,GAC9C,MAAgC,EADc,CACC,QAC/C,OACA,2BAEA,GADA,8BACA,4BAIA,MDxEA,iBCwEqC,EDxErC,CCyEA,GACA,cAEA,CACA,QACA,CACA,MAPyE,yLC5F9D,gBACX,yBACA,6CAEA,YAAmB,qBAA0B,KAC7C,SAEA,YAAuB,WAAc,IAErC,kBACA,KACA,KACA,CAEA,KACA,QAEA,CACA,SACA,CAGW,gBACX,gCACA,YAAmB,WAAc,IACjC,wBAEA,QACA,CAOW,gBACX,aACA,qCACA,WAMA,QANA,EACA,wCAGA,OAFA,oBACA,6BACA,CACA,CAGA,CAHM,qBEtCN,aAIA,CAIA,sBACO,iBAGP,gBACA,+GACA,aACA,cACA,eACA,CAAS,EAGT,gBACA,YAEA,aAAY,cAAqB,oBAGjC,iBACA,eACA,CAAK,EACL,IACA,KAAU,aAAwB,KAClC,WACA,yBACA,eACA,CAAa,EACb,CAGA,WAKA,MADA,CAHA,2BAGA,SACA,CACA,CACO,cACP,2BACA,SACA,uBACA,SACA,CACA,CAAK,CACL,CACO,cACP,2BACA,SACA,aACA,SACA,CACA,CAAK,CACL,CACO,oBACP,oBACA,KACA,QACA,SAAgB,WAAc,eAC9B,KACA,MAEA,SACA,CACA,OAAW,EAAM,SACjB,CACO,sBACP,+BACA,QACA,CAAK,EACL,KACA,sBACA,4BACA,SAEA,eACA,SACA,CAAS,CACT,CAEA,OADA,YAEA,CACO,aACP,IAEA,EAFA,KACA,IAEA,MAEA,YACA,UAA6B,GAAe,CAC5C,IACQ,QAAiB,MACzB,IACA,wBACA,IACA,YAA+B,WAA2B,KAC1D,WACA,WACA,gBAIA,WACA,IACA,YACA,CAAc,MAId,EAAc,OACd,SACA,WACA,CACA,CAAS,CACT,EACA,4BACA,eAEA,UACA,gBAEA,IACA,CAAS,CACT,QACA,KACA,iBAEA,CAAK,CACL,CACO,2BAAqC,4BAAwC,EACpF,MAAW,QAAS,SAAS,IAAa,+DAC1C,CACA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CA,qBACA,EAAa,CAEb,CACA,6BAGA,qEACA,6BAAoD,OAAO,KAG3D,uBAEA,MADA,4BAEA,CACA,kBACA,WAAuC,OAAiB,GACxD,CACA,oBACA,OACA,sEACA,CACA,cACA,4BACA,mBACA,IACA,QAEA,sBACA,YACA,IACA,oBAEA,CACA,CAAS,EAET,OADA,oBACA,CACA,CACA,uBACA,MACA,4DACA,CAEA,6BAAyC,EAIzC,SACA,kBACA,kBACA,UAEA,wCACA,aACA,KACA,IACA,mCACA,SACA,oBACA,oBACA,YAEA,UACA,mBACA,SACA,CAAiC,GAEjC,CACA,CAAqB,GAErB,mBAEA,oCACA,oBAEA,IACA,eACA,WACA,WAGA,YACA,CAAkB,SAClB,uCACA,CACA,EAAc,uCACd,aAEA,aADA,iBACA,YACA,SACA,IACA,kBACA,UAAuC,EAAI,GAAG,kCAC9C,mBACA,EAEA,gBAEqB,YAAc,EACnC,CAEA,EAAc,8CACd,aACA,wBACA,uBACA,oBACA,EACA,EACA,YACiB,CACjB,EAAc,6BACd,eACA,kBAGA,MAAkD,YAAlD,qBAAkD,oDAA2E,WAG7H,yCACA,sCACA,sBA1EA,KA4EA,6BACA,EACA,SACA,EACA,OACA,WACA,cACA,WACA,iBACA,YACA,QACA,EACA,CAC+C,MAC/C,EAGA,kBACA,OAJA,EAIA,wCAHA,sFAIA,CAIA,CACA,KALe,CAKf,CAFS,GAET,SACA,IAwBA,EAKA,MAyCA,EACA,EApEA,YAAyB,IAAoB,QAC7C,MAAkC,IAAoB,YACtD,IAAoD,QAAwB,SAC5E,MACA,qBACA,6BAAkF,IAAe,OACjG,OACA,WACA,OACA,CAEA,CACA,CAGA,gDAAiE,IAAoB,2DACrF,YAEA,+BAA4D,IAAoB,QAChF,4DACA,YAAyB,IAAoB,QAE7C,MACA,YAEA,uCAAsG,IAAe,OAErH,gCAAgD,GAAc,wCAAwC,mBAA0B,4BAA4B,iDAAiG,gCAC7P,aACA,cACA,eACA,CAAiB,EAEjB,MAA8B,kBAAgB,YAM9C,OAJA,cACA,eACA,CAEA,SACA,QACA,+HACA,CAAa,EACb,YAEA,uCACA,qE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AAE,UAAc,GAAG,EAEhF,cACA,cACA,wBAAqC,KACrC,MACA,SACA,qBACA,WACA,gBACA,QACA,CACA,qCACA,IACA,6CACA,CAAM,MACN,CACA,CACA,QACA,CACA,cACA,MACA,OAEA,qBACA,CACA,SACA,UACA,WACA,SACA,OACA,WACA,SACA,cACA,WACA,CAAI,mBACJ,gBACA,iCACA,EACA,EAeA,MAYA,EAKA,EAfA,EAfA,CACA,OACA,4BACA,SACA,OAAoB,oBAA4B,CAChD,OAAqB,YAAgB,CACrC,wBAAuC,iBAAwB,CAC/D,OACA,OAAqB,SAmBrB,WADA,GADA,EAjBqB,GAkBrB,eACA,QAnBqB,CAAmC,CACxD,OAAmB,UAAc,CACjC,OAAqB,SAsBrB,WADA,GADA,EApBqB,GAqBrB,eACA,QAtBqB,CAAmC,CACxD,OAAwB,iBAKxB,SACA,eACA,MACA,YAGA,QATA,CACA,CA/FA,SACA,eACA,OAA8B,uBAAkC,EAChE,EAaA,GACA,qBACA,sBACA,kBACA,qBACA,qBACA,CAAC,EACD,UAnBA,aACA,+CACA,kBACA,oBACA,OAA6B,kDAA4F,EAEzH,SACA,EACA,IAAoD,eAAkB,SAAa,EAWnF,GAkFA,8BAKA,0BA0DA,QACA,eAEA,qBACA,gBACA,sBACA,KAEA,eADA,KAEA,yBAAiC,UAAa,CAG9C,CACA,oBACA,sCACA,CAIA,WACA,wBACA,CACA,UACA,2CACA,0BACA,CACA,aACA,MACA,+BACA,aACA,yBAEA,8DACA,6CACA,CACA,OACA,0BACA,CACA,UACA,+CACA,eAMA,OALA,cAAoB,UAAa,EACjC,kBACA,SACA,yCAA4E,IAE5E,KAKA,UACA,mBACA,qDAKA,OAJA,kBACA,SACA,yCAA0E,IAE1E,CACA,CAIA,QAEA,OADA,6CACA,KAKA,8CACA,wBAA6B,iDAAiD,EAE9E,WACA,2CAAoD,OAAO,GAAG,4BAA4B,WAAW,EACrG,CACA,EAGA,QACA,mBAGA,KADA,sBAEA,gBACA,+FAEA,aADA,4BA3IA,GACA,MACA,SACA,IAEA,EACA,EACA,EACA,EACA,EANA,KACA,IA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A,WACA,qBACA,EACA,gDACA,EACA,iCACA,gBACA,MACA,aACA,MACA,EACA,kDACA,CACA,cACA,YACA,eACA,GAEA,cACA,SACA,cACA,YACA,gBACA,6CACA,CAAS,CACT,CACA,EACA,eAAqB,eACrB,sBACA,gCACA,iCACA,QACA,KACA,eAEA,SACA,cACA,UACA,gDACA,6CACA,CAAS,CACT,OACM,iBACN,EACA,SAAe,eACf,GACA,oBACA,oBACA,UACA,sBACA,CACA,WACA,qBACA,WACA,cACA,UACA,gDACA,8CACA,2CACA,cACA,iCACA,gBACA,OACA,eACA,kCACA,iBACA,OACA,YACA,oDACA,WACA,kDACA,6CACA,CAAK,CACL,CACA,EACA,eAAqB,eACrB,sBACA,MACA,4BACA,SACA,GACA,uCACA,KACA,OACA,cACA,UACA,+CACA,CAAO,CACP,EAAM,YACN,EACA,kBAAwB,aACxB,QACA,EACA,yBAA+B,eAC/B,WACA,EACA,cAAoB,iBACpB,8BACA,EACA,eAAqB,YACrB,oCACA,EACA,SAAe,iFChNR,MAAmC,cAAuB,+BEmB/C8V,SAAAA,EAA8BA,GAAC,+FCXtC,cACX,kBACA,iCAIA,aAHA,oBACA,EACA,CAEA,aACA,oBACA,iBAEA,eAGA,QACA,CAUU,cACV,IAEA,EACA,EACA,EACA,EACA,EANA,KACA,IAMA,aACA,yCACA,KAEA,kBAMA,kBAGA,IAFA,IACA,KACA,KAEA,SADA,gBACA,CAMA,IAJA,IACA,KACA,IACA,IACA,YAbA,MADA,iBACA,EAAsC,IAAtC,GAAsC,SActC,IAGA,gCAEA,KAEA,IACA,yBACA,KAIA,KAEA,EAAc,IACd,IAGA,oBACA,+BAEA,CACA,QACA,CAOW,cACX,SACA,KACA,KACA,2BACA,gCAIA,gBACA,0BAEA,OAIA,QACA,CAGW,cACX,IACA,iCACA,CAAM,SACN,uDAAmE,UAAY,+FAC/E,OACA,CAAS,uBACT,YACA,cACA,eACA,CAAS,CACT,CACA,CAIW,cAKX,YAJA,CACQ,IAAuB,CACvB,GAA+B,CACvC,CAEA,0BACA,6BAGA,WACA,kEC9IO,uBACP,kBAAkB,EAAM,EACxB,yBAAiC,EAAK;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,IACA,CACA,CACO,sBACP,cACA;AACA;AACA,IACA,CACA,CACO,sBACP,cACA;AACA;AACA,IACA,CACA,gDCzBO,kBAIP,OAHA,gBACA,cACA,YACA,CACA,CAAC,GAAG,+BCDG,SAAS7W,EAAmB9L,CAAY,EAC7C,OAAOA,EAAKhP,UAAU,CAAC,KAAOgP,EAAQ,IAAGA,CAC3C,kGCuCO,gBACP,MAAoB,GAAc,iBAIlC,OACA,qBAHA,EADA,IAAsC,IAA2B,IACjE,gBAIA,wBAHA,MAAgD,IAA0C,CAI1F,CACA,gBACO,2BAGA,OAFA,uBAGA,qHCtDA,cACP,wEAA+F,IAAmB,CAsF3G,wBACP,IAEA,YAAgB,eAAqB,EACrC,eAGA,MAA2B,QAAqB,IAChD,WA5FA,KACA,SAGA,MAAsB,GAAe,CACrC,aACA,WACA,CACA,gBAGA,oBACA,iBACA,WACA,CAAK,EAGL,UAAyB,GAAe,CAKxC,OAJA,qBACA,WACA,CAAK,EAEL,oBACA,gBAIA,OAEA,GADA,KACA,sEACA,MAAoC,OAA+B,EACnE,IACA,uBAA+C,yCAAyC,iCACxF,iCACA,0DACyB,CAEzB,CACA,iBACgB,QAAS,SAAS,IAAkB,gBACpD,yBACA,CAAiB,YACjB,CACA,IACA,gBAGA,0CACA,UAIA,IACA,gBAEA,MAAkC,GAAe,CAEjD,CAAc,SAEd,MADA,QACA,iEACA,OACA,CAAiB,uBACjB,aACA,cACA,eACA,CAAiB,CACjB,CACA,CAAS,CACT,UACA,oBACA,YACA,CAAS,CACT,gBAMA,GAHA,GACA,SAEA,mBAEA,OADA,QACA,SACA,CACA,CAAK,CACL,EASA,IACA,mBACA,eACA,CAAS,CACT,CAAM,SAEN,cACA,8DACA,OACA,CAAS,uBACT,aACA,cACA,eACA,CAAS,CACT,CACA,oFElHA,qCAA6C,CAC7C,QACA,CAAC,EAAC,CAWF,SANA,KACA,0CACA,cACA,SACK,CACL,EACA,GACA,0BACA,QACA,CAAK,CACL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OAAO,CAAEF,GAAMq2B,EAASp2B,EAAO5T,MAAM,MAC3C,CACH,IAAI8T,EAAW,WACbH,GAAMq2B,EAASp2B,EAAO5T,MAAM,EAC5B4T,EAAOG,mBAAmB,CAAC,QAASD,EACtC,EACAF,EAAOI,gBAAgB,CAAC,QAASF,EACnC,CACF,CACA8gC,GAAU5K,EACZ,EACF,spEiBpyFA,EfHA,cACA,iBACA,oBACA,0BACA,CCJA,cACA,SAAqB,GAAI,EAKzB,OAJA,0BACA,gBACA,uBACA,CAAK,EACL,CACA,CACA,oBAIA,yBACA,cACA,8BACA,CAaA,GARA,oBACA,8BAOA,sBACA,cACA,8BACA,CACA,QACA,CC/BA,kBACA,mBACA,OAAW,EAAuB,4BAClC,CCLA,gBACA,eACA,YACA,CACA,uBkNEA,ajNNA,SCAA,GACA,QACA,OACA,mBACA,YACA,SACA,YACA,SACA,aACA,CCTA,GACA,WACA,yBACA,EEEA,gBACA,SACA,KACA,GACA,QACA,YACA,eACA,EACA,WACA,EAAkB,EAAU,eAC5B,KDbA,cAKA,ECQmC,EDRnC,UACA,UAKA,KACA,KAIA,cACA,GACA,QACA,YACA,eACA,EACA,IACA,cACA,WACA,cACA,KAEA,IACA,IACA,CACA,OAIA,yBAEA,SADA,EACA,IAKA,OAJA,GACA,SACA,UACA,SACA,CACA,CAAS,CAIT,WACA,YACA,WACA,CAAS,CAIT,YAOA,GANA,IAMA,GACA,KACA,MACA,CACA,KACA,YAEA,aAIA,GAA4B,EAAW,OACvB,EADuB,KACZ,sBAE3B,IAGA,UACA,KACA,IACA,KACA,aAEA,CAAS,EAET,QACA,EC1EmC,cACnC,GACK,EAAI,EACT,OAAY,oFAAmF,EAC/F,OACA,MAA0B,EAAkB,kBAC5C,UACA,kBACA,KACA,EAA+B,iBAC/B,WACA,OACA,gCAvBA,IAuBA,IAEA,cACA,kBAEA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,kBACA,OACA,KACA,KAEA,EACA,OACA,KACA,KACA,gBACA,IAEA,EAeA,OAAa,SAdQ,EAAU,eAC/B,WAMA,OALA,qBACA,GACA,IACA,mBAEA,CACA,CAAK,GAAI,EAMI,OALb,IACA,YAAwB,EAAI,EAAU,OAAS,CAAT,GACtC,EAAkB,CAAU,cAE5B,EACa,gBACb,CCjEA,IAAQ,SAAU,CAAK,2BAA8D,EAAqC,gEAAwE,GAAI,KCAtM,GACA,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,QACA,CAIA,aCvBA,WACA,QACA,SACA,MACA,OACA,QACA,YACO,EACP,ECVA,cDSyB,ECRzB,mBACA,SACA,CACA,gBACA,kBACA,OACA,aACA,CCNA,QACA,cACA,sBAEA,OAEA,OADQ,EAAa,sBACrB,IAAqB,EAAU,qBAC/B,CACA,cACA,gCACA,KAEA,SAIA,kCAGA,YAA4B,IAAsB,KAKlD,4BACA,WACA,CAEA,CACA,UACA,iCAEA,QACA,2BACA,CACA,CEjCA,aACA,QACA,CASA,OACA,SACA,YACA,MAAqB,EAAS,cAAiB,EAAkB,kBACtC,UAC3B,mBAEA,GAEA,QACA,IACA,iBACA,CAAK,EClBL,KACA,sBAEA,GACA,cACA,CAMA,SAOA,kBAAkC,EAQlC,2BAIA,eACA,gCACA,MAAgC,EAAI,MAYpC,GANA,oBACA,yBAEA,uBACA,mBAEA,2BACA,yCACA,iBACA,6BACA,SAKA,IACA,+CAEA,EACA,oBACA,mBACA,mBAEA,cACA,eACA,eAAyB,EAAI,MAC7B,0CACA,uCAEA,CACA,kCACA,sBACA,kCA0CA,YAIA,0BACA,CACA,QACA,gBACA,oBAAyC,CAAmB,EAE5D,gBAF4D,CAE5D,iBACA,aACA,KACA,IAKgB,EAAK,UACrB,8BACA,WAEA,CAAiB,CACjB,EAEA,CACA,CACA,iBACA,yBACA,sBAEA,CAIA,YACA,qBACA,wBACA,CAgBA,YACA,sBAIA,2CAHA,yBAKA,CACA,uBACA,YACA,iBACA,sBACA,mCACA,CAKA,aACA,wBACA,YACA,8CACA,eACA,wBACA,wBACA,CACA,QACA,wCACA,CACA,gBACA,iBACA,0BAEA,sBACA,CACA,mBACA,iBACA,yBAE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AIA,YAHA,MACA,QACA,YAEA,EACA,MAEA,MADA,IACA,EAEA,gCACA,eACA,sBAEA,SALA,IAKA,KADA,OA9BA,KA8BA,QACA,CACA,IAMA,KAGA,MAFA,eACA,YAGA,KAEA,UADA,gBAMA,eAmBA,OACA,QACA,YAAoB,EAHpB,GAGwC,IACxC,aAEA,QACA,EAzBA,IADA,KAGA,GADA,EAAe,EAAqB,GACpC,SACA,OACA,UAAuB,GAAc,GAHD,MAGC,CACrC,CADqC,OAChB,GAAc,QACnC,GADmC,MACnC,CACA,CAEA,EACA,sBACA,OACA,YACA,2BACA,UACA,CACA,CACA,EC9BsC,EAMtC,CALA,IACA,KACA,KACA,KAAsB,GAAc,KACpC,EACA,IAFoC,kBAEpC,GACA,CAEA,QACA,EAiBoF,CACpF,KACA,UAAmB,EAAqB,cACxC,CAAK,EACL,EAFwC,GAExC,EACA,uBACA,MACA,EAAgC,EAAqB,gBAQrD,GARqD,CAQrD,YAQA,GAPA,QACU,GAAc,mBACd,GAAc,mBACxB,QACU,GAAc,mBACd,GAAc,mBAExB,KACA,MAA4B,GAAe,KAE3C,KAEA,EAJ2C,KAG3C,YAGA,IACA,OACA,EACA,cACA,gBAEA,MACA,SAEA,OACA,eACA,GACA,eAEA,CAEA,yBACA,MACA,uBAEA,oBACA,SACA,EACA,IACA,OACA,aACA,EACA,EACA,cACA,CACA,CACA,CACA,OACA,8BACA,SACA,WACA,KAmBA,gBAnBA,CACA,eAMA,MACA,GACA,MAC8B,EAAqB,GACrB,GAAqB,QAGnD,UAHmD,CAGnD,WACA,QACA,KAHA,WAGA,CACA,CAKA,OADA,mBACA,CACA,CAAS,CACT,cACA,eAAgD,GAAqB,GL1JrE,KK2JA,EAA2B,EADuD,CACnC,mBADuD,CACvD,OAC/C,gBACA,CAAS,CACT,mBAA+B,EAE/B,QACA,CClKA,uBAAmB,4IAA4J,EAC/K,IAoCA,EACA,EArCA,OACA,GACA,QACA,OACA,EACA,sCACA,KACA,WACA,EACA,YAEA,gCAEA,MACA,MACA,mBAKA,QACA,QACA,2BACA,YACA,MACA,WACA,MACA,uBACA,kBACA,EASA,MACA,aAEA,IACA,EAAmB,GAAM,CACzB,EADyB,QACzB,qBACA,SAAsB,GAAqB,aAC3C,KAD2C,GAC3C,EACA,YACA,YACA,WACA,CAAS,EACT,EAEA,OADA,KACA,CACA,wBACA,SAOA,eAUA,CATA,gBACA,KACA,KACA,MAMA,kBACA,aAGA,QACA,EAEA,CAAS,CAET,CDkFA,sBACA,MJjKA,oBACA,CIgKkD,GJhKlD,KAAwC,qBAAmC,EAC3E,WAA8B,GAAqB,GDJnD,KCKA,IADgE,EAChE,CACA,GAFmD,EAEnD,YACA,QACA,oBAEA,SAAkB,EAAqB,EACvC,CACA,EIuJkD,UAIlD,IJ7JuC,GI0JvC,cACA,WAAuB,EAAqB,YAC5C,mBACA,CACA,GAH4C,cEzK5C,UACA,sDCCA,6CCAA,kBCEA,GAA8B,QAAW,mBACzC,GAA6B,GAAa,IAC1C,GAAgC,GADU,ICH1C,KDI4C,CCJ5C,YAA+C,GAAM,gCCCrD,+BACA,GAAgB,GAAa,IAC7B,GAAkB,GAAY,ICL9B,KDK8B,CCL9B,wCCSA,IACA,OAAY,GAAI,CAChB,MAAU,OACV,SAAa,OACb,OAAW,OACX,MAAU,IACV,SAAa,IACb,OAAW,IACX,MAAU,IACV,SAAa,IACb,OAAW,IACX,UAAc,GACd,EACA,MACA,mBAEA,OACA,GAAQ,GAAkB,IAElB,EAAS,SAFS,GAET,4DACjB,eACA,MAAe,QAAW,SAC1B,QACA,OAEQ,EAAS,uCAAiE,EAAW,IAC7F,OAEA,CACA,ECzBA,aACA,UACA,sBACA,EKRA,sBAAqB,6CAAuE,MDR5F,ECaA,MAA4B,GAAa,GACzC,MAAmB,CADsB,GAE/B,GAA0B,GAKpC,GACA,QACA,KAR6C,CAQ7C,GAPoC,CAOpC,EAWA,EJGA,cAAsC,2BAAqC,EAAI,EAC/E,eAMA,GALI,EAAS,qEAKb,MACA,eACA,sBACA,eACA,iBAEA,eACA,mBACA,oBAEA,eAlDA,OACA,SACA,KAAwC,EAAkB,KAAQ,GAClE,QAD0D,EAC1D,GACA,YAAoB,IAAe,KACnC,qBACA,GAEA,GAAoB,EADpB,EACwB,IADxB,iBAAoE,GAAI,GAChD,IAExB,SACA,CACA,QACA,EAqCA,OACA,WACA,MACA,aACA,YACA,QACA,OACA,KAAmB,eACnB,WADyC,KAKzC,MAAgC,GAAQ,eACxC,cACA,EACA,SACA,KAA8B,EAAK,gBACnC,CACA,GGvEA,EC8BA,uBACA,EACU,SF9BV,GACA,CE6BuB,GF7BvB,MAEA,OADI,SDDJ,CCCc,CDDd,GACA,oBACA,YAAoB,KAAgB,KACpC,MAA+B,GAAQ,OACvC,OAAoB,GAAS,OAC7B,CACA,ECLc,cACd,CACA,EE0BuB,GD/BvB,WC+BuB,IACkB,GACzC,sBACA,EA7BA,aAAsC,KAAS,WA8B/C,EA9B+C,SA+B/C,CAAK,EACL,OACA,qBACA,SACA,aACA,YACA,EAEA,CACA,CC9CA,mBACA,sBAAuC,sBAA6B,QACpE,mBAEA,EADA,2BACA,aACA,qBAEA,EADA,KCFA,QACA,MAAW,GACX,IADkB,GACP,IACX,MAAW,GACX,MADoB,IACL,GACf,MADwB,CACd,EACV,EACA,eACA,yBACA,mBAEA,CCfA,SACA,cACA,qBACA,CACA,eACA,sBAEA,iBACA,+BACA,cACA,CAAS,CACT,CACA,iBACA,cACA,CAMA,UACA,8BACA,CACA,CCXA,eACA,kBAA0B,GAC1B,QADqC,IACrC,GACA,QACA,kBACA,oBACA,kBAIA,mBAIA,mBAIA,qBAKA,eACA,gBAAoB,GAAc,aAClC,iBAAyD,EAAI,OAC7D,UAA0B,EAAI,OAE9B,kBACA,sBAEA,gBACA,wBACA,EACQ,EAAgB,aACxB,CADwB,GACxB,WACA,qBACA,YACA,iBACA,YACA,CACA,gBACA,YAAgB,GAAU,KAClB,GAAqB,GAC7B,SAAgB,EAAO,EAAS,EADH,MACG,+CAA2D,EAC3F,CAAc,aAAyB,EACvC,KAAyC,GAKzC,IAAiC,EALiB,EAMlD,KAD0C,KAC1C,cACA,kBAAgC,EAAI,GAAoB,GAAG,YAC3D,WAEA,SAA6C,iBAAoC,CAKjF,eACA,2BACA,KACA,2BACA,WACA,EAAa,EAUb,6BACA,sBAA2C,GAAqB,IAEhE,cAFgE,SAEhD,GAAqB,CACrC,2BACA,0BACA,iDACA,gBACA,CACA,cACA,qDAEA,sBACA,+BAMA,kBAEA,CACA,aACA,cAAgB,8FAAmG,KACnH,yBACA,iBACA,UAAgB,uFAAwF,aAOxG,aACA,0CAEA,cACA,yDAEA,EACA,mBAGA,mBAGA,sDACA,wBACA,IACA,GACA,gCAEA,+CACA,qBAEA,uBACA,IACA,MAMA,qCAKA,gBAKA,KAKA,WACA,MAEA,WACA,oBAIA,IAEA,eACA,MACA,GACA,UAGA,cACA,OAGA,EAAsB,EAAK,QAC3B,CAMA,QACA,CAAgB,oBAChB,SACA,IACA,qBAEA,SAAc,GAAO,CACrB,cACA,GACA,sBACA,oBACA,qBAEA,4BACA,qDAWA,OATA,OAA4C,IAC5C,SAA0B,GAAgB,8BAE1C,GACA,WAEA,GACA,cAEA,CACA,CAMA,UACA,8BACA,CACA,eACA,OAAe,EAAqB,wBACpC,CACA,WACA,OAAe,EAAqB,iBACpC,CACA,CAFoC,GAEpC,QACA,EAAkB,EAAqB,GACvC,mBACA,aAFuC,QAEvC,EACA,sBACA,uBACA,gBAEA,aACA,wDAEA,sBACA,CACA,YACA,0BAEA,aACA,gBAAwB,EAAI,OAC5B,4BACA,sBACA,GACA,WAAwB,EAAqB,kBAE7C,CAF6C,MAG7C,CACA,kBACA,OACA,WAAgB,EAAS,EAAe,cAAc,aACtD,aACA,iCAEA,wBACA,uBACA,0BACA,sBACA,kBAEA,qBACA,+BAEA,gBACA,sBAEA,uCACA,0CAEA,mBAKA,qBACA,mBACA,CACA,QACA,oBACA,gBAAwB,EAAI,OAC5B,+BAEA,WACA,wBACA,YAEA,sBACA,kBACA,CACA,SACA,sBACA,gBACA,sBACA,2BACA,CACA,SACA,mBACA,iBACA,aACA,gBACA,yBACA,CACA,WACA,kBACA,kBACA,kCACQ,EAAgB,YACxB,CACA,CAFwB,WAExB,CACA,cAEA,mBACA,mBACA,CACA,UAEA,OADA,iBACA,eACA,CACA,kBAOA,OANA,4BACA,8BACA,2BACA,sBAEA,oBACA,eACA,CACA,CElVA,wBACA,MAEA,GADA,2BAGA,IACA,IACA,IACA,aACA,aACA,SACA,SACA,2CACA,UACA,WACA,6BACA,6BACA,yCACA,EACA,OACA,SACA,GACA,SACA,GAGA,qCACA,qCACA,IACA,KACA,KACA,KACA,cACA,cACA,cACA,UACA,UACA,yBACA,yCACA,0CACA,QAfA,GAgBA,OAhBA,GAiBA,6BACA,6BACA,yCACA,EACA,eACA,4BACA,CACA,qBAKA,EACA,EALA,kBACA,aAEA,8CAGA,KACA,KACA,QAEA,CACA,4CACA,KACA,GACA,CACA,MACA,aAEA,WACA,0BACA,2BACA,KACA,KAEA,eACA,cAAY,UAAqB,oBACjC,cACA,EACA,eACA,2BACA,CC3EA,cAAmC,GAAM,IAAU,EAAE,CACrD,0BACA,GAAsC,EAAkB,sBAYxD,IAEA,UAAc,EAAG,cAAI,yBAAuC,2CAC5D,WAAe,EAAG,aAAI,0BAAuC,2CAC7D,YAAmB,EAAK,iBACxB,cAAoB,EAAM,iBAC1B,WAAe,EAAG,MAAI,EAAK,+BAC3B,UAAc,EAAG,OAAI,EAAM,+BAE3B,gBAAiB,EAAW,GAAK,GAAuB,OACxD,aADwD,GACvC,EAAW,GAAK,GAAuB,MACxD,EAEA,YAHwD,CAGxD,MACA,mBC7BA,eACA,MACA,MACA,MACA,cACA,OACA,mDACA,+BACA,UAKA,cACA,MAAsC,SDVtC,GACA,SAQA,OAPA,eACA,mBACA,cACA,oBACA,gCAEA,CAAK,EACL,CACA,ECAqE,EACrE,YAEA,WACA,WACA,CAAS,EAET,sCAEA,cACA,WACA,cACA,IACA,oBACA,qBACA,CAAiB,CAEjB,CAAS,EAET,kCAEA,cACA,6BACA,qCAEA,CAAS,CACT,CACA,MACA,MACA,8BACA,UACA,CACA,cACA,eACA,kBACA,oBACA,OAEA,CAAK,CACL,CAOA,SACA,4BACA,qBAMA,gBAKA,yBACA,gCACA,kBACA,YACA,mBACA,eACA,cACA,CACA,kBACA,uBACA,cACA,aACA,KACA,MACgB,EAAK,WACA,wBAIrB,qBACA,gBAEA,CACA,gBACA,wBAAgB,kCAAkD,KAElE,gBACA,eAEA,gBACA,cACA,YAEA,SACA,sBACA,UACA,Q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DV,EACU,wBAA8D,EAAc,OAClH,CAAgB,IADkG,CAClG,IAChB,QACA,kBACA,GACA,SAEA,CAQA,OAPA,GACA,yBACY,EAAK,YACjB,GxFvDA,cAEA,kBAAU,IAAkB,gBAAiB,OAAc,EADxB,MACwB,GAE3D,GAHmC,CAGnC,SADA,GAAe,WACf,KARA,EASA,MAPW,EAFX,EASA,MAP4B,mBAQ5B,EAjBA,SAiBA,KAhBA,SAgBA,GAhBA,IAgBA,GAbA,WAaA,EAboC,EAapC,GACA,CACA,EwF+C0C,GxF9DK,CwF+D/C,CAAa,CACb,CAAS,EAET,CACA,CC7EA,oBAA4D,EAC5D,MAAqB,EAAc,oBACnC,0BACA,QACA,YAAU,gCAA0D,KACpE,uBACA,yBAMA,QACA,gBAA4B,GAAa,QACzC,EADyC,EACzC,kBAKA,4CACA,QACA,kBAAoB,0CAAwD,EAC5E,OAkBA,gCACA,SACA,yBACA,UACA,uBACA,IACA,UAEA,MACA,WACA,aAYA,OAXA,8BACA,SACA,gBACA,6BACA,eACA,KACA,QACA,QACA,IACA,CAAS,4CACT,CAAK,EACL,cACA,EAzCA,cACA,EACA,sBAKA,MAAY,GAAO,EACnB,MAOA,oCAPA,EACA,8BACA,MACA,MACA,wBACA,CAIA,CAyBA,iBACA,4BACA,CErEA,iBACA,qBACA,SACA,eACA,gBACA,SACA,YAAoB,IAAgB,IACpC,eACA,SAEA,QACA,CCRA,eACA,0CACA,CCLA,QACA,UACA,cACA,aACA,aACA,WACA,YACA,OACA,CACA,qBCNA,GAAwB,GAAY,OCMpC,EDNoC,CCMpC,IAAiC,GAAoB,WACrD,GAA0B,GAD2B,MACP,CAuT9C,UAvT8C,EAuT9C,MACA,OACA,WACA,gBAAyB,CACzB,iBAA0B,CAC1B,qBAA8B,CAE9B,CACA,cACA,OACA,eACA,iBACA,gBACA,cACA,eACA,gBACA,SACA,CACA,CCnVA,SACA,eACA,kBACA,WACA,CACA,UACA,CCFA,iBAA+B,GAM/B,IANsC,QAMtC,GACA,SACA,oCAAsD,SFEtD,GACA,MAHA,EEA0E,CFA1E,8BAAyD,YAAoB,GAAK,ULRlF,QAAqE,EKQiC,ILNtG,EACA,GAFA,6BAEA,iBAEA,cADA,SAAuD,GAAc,cAGrE,sBACA,EAAoB,GAAc,YAGlC,2BACc,EAAc,cAC5B,EACA,cAAgC,GAAa,OAC7C,CACA,EAF6C,KAE7C,YACA,+BACA,CAAK,CACL,GKRA,EAHsG,OAItG,OACA,KAKA,aACA,MAAyB,EAAc,eACvC,0BACA,QACA,MACA,eAAoB,wBAAuC,EAC3D,GAAoB,eACpB,CACA,QACA,EAkBA,cACA,IAAgB,SAAQ,EACxB,EAAwB,SD/CxB,KACA,GC8CyC,CD9CzC,EACA,OACA,6BACA,gBACA,gBAKA,OAHA,0BACA,4BAEA,CACA,CACA,SACA,YAAoB,KAAqB,KACzC,MAAqB,EAAY,IACjC,cACY,GAAc,aAC1B,QAEA,CACA,QACA,EC0ByC,cAKzC,KAKA,UAMA,KAKA,MAOA,YAAwB,KAAuB,SAyO/C,IAxOA,YACA,OACA,gBACA,KACA,KACA,EAAkC,GAAc,GAKhD,uBACA,SACA,MAOA,gBACA,UACA,EAeA,GAXA,GACA,GACA,0BACA,OAMA,iBAAwC,MAIxC,uBAEA,iBAEgB,EAAmB,IACnC,aADmC,KACnC,EACA,SAOA,OAqLA,EArLA,WAsLA,iBADA,EArLA,GAuLA,QAEA,kBACA,CAAgB,GAAc,MAzL9B,KAyL8B,IAvL9B,GACA,YACA,IACA,GAEA,OACA,KAKA,yBAKA,kBAAwF,CACxF,SACA,OAUA,uBAAoB,MAA0B,EAC9C,GACA,KACA,MAEA,MACA,KACA,WACA,KACA,aAEA,uBACA,mBACA,IACA,gBACA,EACA,gBACA,WACA,OAEA,uBACA,SAIA,UACoB,EAAiB,IAAU,EAAiB,GACzB,GAAc,GADhB,EAIrC,IAJgE,EACX,CAerD,qBAKA,KAOA,sBArBA,QAEA,KAIA,QAiBA,CAKA,aACA,uBAIA,YACA,IAAoC,YAEpC,4BACA,OAOA,OADA,QACA,CACA,OACA,qBACA,YACA,cAA+B,EAAM,CACrC,CAAiB,EAEjB,CAMA,WACA,SAKA,gCACA,MAA0C,EAAc,2BACxD,aACA,UACA,kBACA,2BAEA,CACA,cACA,yBACA,eACA,IACA,iBAEA,YACA,CAAa,EACb,QAA8B,YAA8B,CAC5D,CACA,iBAOA,OANA,GACA,yCACA,2BACA,OAEA,KACA,wBACA,CAiBA,OACA,iBACA,UAfA,cAEA,qBACA,wBAEA,iEACA,gBACA,WACA,eACA,sBAEA,QACA,EAIA,mBA5QA,YACA,MACA,EA2QA,eACA,WACA,OACA,IACA,CAAS,CAET,EE3S0E,GAC1E,CACA,sCACA,YAAgB,GAAU,qBACd,EAAmB,IAC/B,aAD+B,QAC/B,wBAEA,CAIA,QACA,0CACA,CACA,SACA,YAAgB,GAAU,qBAC1B,CAAgB,WAAuB,uBACvC,QACA,0CAEA,CACA,UACA,iCACA,wBACA,CACA,CCnCA,QACA,kBAAmC,GACnC,IAD0C,SAC1C,CACA,oBACA,YACA,CACA,SACA,8BACA,OACA,cAAgB,oBAA4B,0BAC5C,CAAgB,aAA2B,kCAC3C,oCACA,OAEA,mDACA,QACA,YACA,UACA,CAAa,CAEb,CACA,QACA,aAAgB,oBAA2B,6BAC3C,IACA,WAEA,GACA,yBAEA,CACA,WACA,CEjCA,QACA,KACA,IACA,EEHA,qBAA6D,WAAe,EAE5E,OADA,0BACA,8BACA,CCHA,UACA,wBACA,uCAWA,iBCXA,eACA,OACA,OACA,UACA,UACS,CAET,CACA,UACA,GAAsB,GAAgB,eCRtC,qBACA,OAAW,GAAW,IAAoB,GAAc,CAAlC,EAAkC,EACxD,CCAA,KDDwD,ICCxD,QAAmC,0BAA2B,EAC9D,OACA,GAAa,YAAuB,CACpC,GAAa,YAAuB,CAEpC,CCFA,eACA,kBACA,CAIA,wBACA,WACA,cAAwB,GAAS,sBACjC,oBACA,YACQ,GAAS,oCACjB,UAjBA,OAiBA,SAhBA,QAiBA,iBACA,YAEA,cAlBA,MAmBA,aAlBA,KAmBA,qBACA,eAEA,CACA,qBACA,mCACA,kCACA,CACA,mBACA,kBACA,iBACA,CAKA,mBACA,kBACA,iBACA,CACA,mBACA,gBACA,eACA,CCjDA,aACA,YACA,QACA,SACA,cACA,CAAC,CACD,SACA,OACA,OACA,CAAC,CACD,SAA4B,aAAgB,C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,CAAoB,IACzC,CACA,EAFyC,OAEzC,QACA,kCACA,mBACA,8BCzBA,SACA,cACA,gBAEA,OACQ,EAAa,gBACrB,kBACA,CACA,UAKA,GAJQ,EAAU,gBAClB,mBACA,uBAEA,eACA,0CACA,GACA,eAEA,CACA,CACA,YACA,IAMA,EANA,mCACA,SACA,SAKA,YAAkC,KAAQ,KAC1C,sBACA,qBACA,IACA,KACA,CACA,OACA,MACA,gBACA,GAKA,CACA,aACA,gBACA,WAEA,gBACA,YACA,SACA,IACA,+BACA,mBACA,eACA,GACA,kCAEA,aACA,sBACA,wBACA,mCAEA,2BACA,qBAEA,cAAoB,GAAY,WAChC,OACA,QAcA,CACA,CACA,wBACA,yBACA,YAAoB,kBAAwB,CAC5C,sCACA,GACA,0BACA,0BAEA,CAAS,CACT,CACA,iBACA,yBACA,gCACA,CAAS,CACT,CAKA,qBACA,+BACA,2BAEA,CACA,CExFA,QACA,QACA,yBACA,uBACA,EACA,oBAMI,GAAE,EACN,oBADM,CAEN,iBAAY,GAAe,CAE3B,QACA,UACA,sBACA,GACA,SAGA,CAkBA,aAAgC,4FAAwF,EACxH,aACA,gBAAqC,UAIrC,QAAsB,KAItB,mBACA,CALwB,GAKxB,qBAOA,sBAKA,gBAMA,wBACA,2BAOA,sBAKA,0BAKA,gCAKA,yBAIA,8BACA,8BAKA,mBAIA,cAKA,mBAIA,6BAOA,kCASA,gBAA+B,SAI/B,2BACA,wBAEA,wBACA,sCACA,kCACA,4BACA,kBACA,mBACA,yBAEA,EAMA,2BACA,kCAKoB,EAAW,OAC/B,EAD+B,EAC/B,MACA,0BACA,yBACA,GAEA,uBACA,uBACA,uBACA,uBACoB,EAAW,sBACX,EAAW,wBAE/B,EAIA,gCACA,qBACA,kBACA,yBAKA,yBACA,oBACA,2BACA,6BACA,cACA,yBACA,YAA4B,mBAAsB,IAClD,oCAEA,mBACA,gBAAiC,EAAQ,CACzC,CACA,IAFyC,aAEzC,KAIA,OAHA,2BACA,6BAAiD,GAEjD,gBAFoE,EAEpE,cACA,CACA,wBACA,+BACA,kBACA,CACA,gBACA,gCACA,CAIA,SACA,iBACA,MACA,YAAyB,GAAY,KAAe,CZpOzC,GYoOwD,IZpO5C,OYoO4C,CZpO5C,WYqOvB,gBACA,aAAoB,4BAAkC,aAStD,GARA,eACA,WAEA,0BACA,4CACA,mCACA,wBAEA,GAEA,IADA,EACA,IACA,yCAEgB,EAAK,UACrB,mBACA,CAAiB,EACjB,SACA,wBACA,QAEA,IACA,mCACA,OACA,ER/PA,KQ+PuC,IR/PvC,KACA,MAAkB,EAAI,MACtB,cAA4B,EAAW,IACvC,UACA,GQ2PuC,MR1P3B,EAAW,GACvB,MADuB,CAGvB,EAEA,OADI,EAAK,YACT,IAAiB,EAAW,EAC5B,EQoPuC,KRrPX,EQsPJ,GAAqB,yBACrB,GAAqB,0BAC7C,wBAEA,CAAiB,CACjB,CACA,GACA,qCAGA,2BACA,GACA,QACA,0CAAsD,yDAAuE,IAC7H,kCACA,mBACA,2BACA,MACA,CAEA,+BACA,0BACA,GACA,wBAA4B,+BAAqD,aAKjF,sBACA,CAAyB,GAAgB,qBAYzC,QACA,4BACA,iBACA,GACA,GACA,6BACA,kBACA,kCACA,uCAEA,OACA,GAA+B,EAAkB,YACjD,IADiD,GACjD,EACA,YACA,EACA,uBACA,2BACA,UACA,WAEA,uBAKA,4BACA,MAOA,GACA,SAEA,4CACA,6BAGA,oBACA,CAAiB,CAEjB,CACA,UACA,yCACA,6BACA,qBACA,mBACA,+CACA,qBACA,2BACY,EAAW,sBACvB,CAEA,cACA,6BACA,CACA,gBACA,6BACA,CACA,kBACA,8DAEA,yBACA,gCACA,mDACA,EACA,CAEA,eACA,yBAEA,mBACA,mCACA,mBACA,CACA,uBACA,kBAAoB,GAAgB,aACpC,yCAEA,iBAEA,GADA,6BACA,6BACA,2DACA,MACA,CAkBA,GALA,uCACA,iCAvWA,cAEA,GADA,+BACA,WACA,OACA,kBAAY,GAAgB,UAC5B,MACA,OACA,MvIhDA,SuIgDqB,CvIhDsC,CuIiD3D,kBADyC,mBACzC,iBACA,WAAgB,cAAmB,UACnC,oDAAqE,EAAK,QAC1E,CAD0E,GAE1E,QAAY,GAAS,CACrB,kCACA,IAEA,EAwVA,MAEA,8CACA,mBACA,MACA,uBACA,YAA4B,mBAAsB,KAClD,mBACA,0BACA,2BACA,sBACA,gBAEA,CACA,aAAoB,YAAmB,aACvC,kBACA,OACA,iCACA,mCACA,wBACA,OACA,sBACA,qCACA,CACA,SAMA,GALA,wBACA,uBAIA,CACA,qBACA,yBACA,uBACA,MACA,CAIA,wDACA,sBAGA,yCACA,iBAIA,mBAIA,uBAKA,uBAKA,wBAjBA,uBAmBA,yBAMA,MAAwB,EAAI,MAChB,EAAS,MAAS,CAAT,CAAc,WAAqB,EAAS,WACrD,EAAS,YACT,EAAS,gBACT,EAAU,eAAgB,GAC1B,EAAU,IADyB,IACzB,UAAmB,GAC7B,EAAU,IAD4B,EAC5B,SAAgB,GAC1B,EAAS,IAD0B,GAC1B,QACrB,CACA,YACA,uBACA,wBACgB,GAAS,0BAEzB,CACA,oBACA,uBACA,4BACA,CACA,2BACA,iCACA,kCACgB,EAAK,uCAErB,CACA,4BAMY,EAAK,gBACjB,mBACA,sBAGA,6BAEA,CAAa,CACb,CAIA,kBACA,+BAEA,6BACA,gBACiB,GAAU,8BACV,GAAU,8BAC3B,uBAEA,CACA,eACA,oBAEA,oBACA,oDACA,qBAHA,OAaA,8CACA,YAAgC,mBAAsB,IACtD,aACA,eAGA,kBACA,6BACA,qBAAmC,KACnC,IAD4C,CAC5C,iBACA,4BACA,sDACA,kBAAoB,GAAgB,aACpC,GACA,oEACA,CACA,0BACA,mDAMA,GALA,aACA,iDACA,uBACA,OAEA,kBACA,sBACA,cACA,kCACA,QACA,SACA,wBACA,wCACA,CACA,CACA,CACA,iBACA,MACA,OACA,0BACA,2BACA,iCACA,yBAA2D,GAAW,sBACtE,8BACA,IACA,wBACA,OACA,sCACA,GACA,eACA,IACoB,GAAY,oBAChC,KACA,mBACA,6BACA,sBAEA,CACA,kBAw+BA,EAv+BA,4BACA,8BAUA,OAJA,GACA,4BAg+BA,IADA,EA79BA,GA89BA,GACA,QA99BA,CACA,kCACA,cACA,YACA,eAAgC,CAChC,cACA,CACA,CACA,iBACA,IAAoB,iBAAgB,aACpC,MACA,OAAuB,KACvB,IADgC,EAChC,uBAEA,IADA,2CACA,CAEA,WAAwB,GAAS,UACjC,IACoB,GAAa,gBACb,GAAa,gBAEjC,CACA,QACA,CACA,uBACA,MAAqC,KAErC,GADY,CADkC,EACvB,KACvB,GADuB,CACvB,iBACA,SAMA,YAA4B,mBAAsB,KAClD,mBACA,QAAwB,aAAkB,EAC1C,mCAKA,WACwB,GAAW,KAEf,GAFe,EAEF,cACb,GAAa,gBAEjC,CACA,QACA,CACA,uBACA,MAAmC,KACvB,GAAW,CADqB,CACrB,GACvB,GADuB,CACvB,QAA4B,mBAAsB,KAClD,oBACA,GACA,wBACA,UACA,YACoB,GAAY,GAChC,MADgC,KAChC,UACA,qBACqB,EAEA,GAAY,iBAEjB,GAAY,iBAC5B,CAIA,OAHgB,GAAY,oBACZ,GAAY,qBAE5B,CACA,CACA,mBACA,MAAwC,KAC5B,GAAW,CAD0B,CAC1B,GACvB,GADuB,CACvB,QAA4B,mBAAsB,KAClD,mBACA,gBAEA,CAAqB,GAAY,gBADjC,SAGgB,GAAQ,oCACxB,MAAkC,KAElB,GAAW,CAFgB,CAC3C,MAC2B,UAD3B,IAEgB,GAAmB,0DACnC,CAIA,OAHgB,GAAY,oBACZ,GAAmB,qBAEnC,CACA,CACA,kBACA,mBACA,qCACA,yBACA,CACA,cACA,cACA,gBACA,KACA,4CAEA,CACA,oBACA,mBACA,mBACA,qBACA,uCACA,wBACA,mBACA,qBACA,CACA,qCACA,qBAQA,+CACgB,EAAS,WACzB,0CAEA,CACA,yBAMA,oBACA,sEACA,kEACA,uFACA,oCAWA,GANA,KACA,iCACA,wBACA,gCACA,qCACA,iCAEA,OACA,WAAoB,cAAmB,aAIvC,wBAQA,GANA,8BAA4C,EAAS,UAMrD,yCACA,uCACA,IACA,UACA,4BACA,sBACA,0CACA,oBAA0C,KAC1C,IADmD,CACnD,qBAAgD,KAC5B,GAAoB,CADiB,GACjB,gEACpB,GAAW,gDAG/B,8CAEA,CAKA,0CAYA,GAPA,cACA,YAA8B,KAC9B,IADuC,CACvC,qBAA4C,MAK5C,GALqD,CAKrD,iBACA,2BACA,qBACA,g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,mBACA,2DAEA,4BACA,CAAa,CACb,CACA,oBACA,oBACA,0CACA,0CAEA,qBACA,8BACA,kBACA,sBACA,qBACA,OACA,yCACA,CACA,kBACA,wBACA,yCAvkCA,KAwkCA,8BAEA,wBACA,CACA,0BACA,qBACA,sBAAkB,oCAAqD,EACvE,YAOA,aACA,aACA,GACA,kEACA,eAAwC,KACxC,IADiD,EACjB,GAAU,wBAC1C,wBACA,kBACA,MAAgC,GAAU,wBAC1C,wBACA,iBACA,CACY,GAAW,KAMX,GAAY,KAOZ,GAAY,CAPA,GAOA,wDACxB,CACA,wBACA,yBACA,2BAAmD,IAEnD,KAF4D,WAE5D,QACA,OACA,uCACA,WACA,iCACA,uDACA,iCACA,MACA,CAAa,CACb,CACA,SACA,sBACA,uBACA,CACA,UACA,aAAoB,GAAW,aAC/B,sCAEA,cACA,aAAoB,GAAW,aAC/B,yCACA,CACA,WACA,aAAoB,GAAW,aAC/B,KACA,mCACA,CACA,oBAAkB,wCAAiD,EAAI,EACvE,qBACA,IACA,kBACA,IACA,4BACA,oBAEA,GACA,4BAAkC,EAAY,CAC9C,CACA,WACA,4BACA,KACA,gBAKA,CACA,uBACA,kBAAoB,GAAgB,aACpC,MACA,OAEA,SAKA,CAAoB,gBAAe,EAWnC,GAVA,MACA,UACA,WACA,WACA,WACA,SACA,UACA,OAGA,GACA,OACA,QACA,MACA,iCAGA,YAA4B,YAA0B,IACtD,YAAkD,MAAiB,4BACnE,UAAgD,MAAiB,4BAMjE,aAFA,WAEA,EACA,yBACA,sBACA,+BAKA,kBACA,CACA,wBACA,GACA,8BACA,OACA,oBACA,sBACA,MACA,CACA,kCACA,oBACA,mBACA,gBACA,aACA,gBACoB,GAAkB,sBACtC,cACA,wBACA,OACA,MACA,CACA,qBACA,mDACA,wBACA,UACA,mCACA,0BACA,EACA,gBACwB,GAAkB,uBAE1C,oBAA0C,GAAY,qBACtD,cACA,IAA8C,KAC9C,OACA,sBAEA,MACA,CACA,gBACA,wCACA,+BACA,MAA4B,SD1xC5B,OACA,QCyxCoD,CDlxCpD,oBACA,oBACA,UAWA,GAVA,WACA,kBAAmC,EAAW,MAAM,EAAW,MAAM,EAAW,OAMhF,oBACA,aAA8B,MAAgB,IAAI,MAAgB,KAElE,GACA,yBAAgB,gDAA+D,CAC/E,IACA,kBAAuC,EAAqB,MAAM,GAAU,EAC5E,GACA,cAAmC,EAAO,QAC1C,GACA,eAAoC,EAAQ,QAC5C,GACA,eAAoC,EAAQ,QAC5C,GACA,aAAkC,EAAM,QACxC,GACA,aAAkC,EAAM,OACxC,CAKA,oBACA,gBAIA,MAHA,gBACA,aAA8B,EAAc,IAAI,EAAc,IAE9D,SACA,EC4uCoD,mDACpD,IACA,WAEA,cACA,MAAoB,OAAO,qBAiC3B,aAhCA,qBAA6C,aAAe,IAAI,aAAe,KAC/E,kBAKA,UACA,SACA,WACA,2BACA,EACA,qBACA,0BACA,cAOA,UACA,SACA,mBACA,UACA,GACA,uBACA,cACA,EAK8B,GAAe,CAC7C,WAD6C,CAC7C,KACA,SACA,YAAwB,6BAAkC,EAAiB,IAO3E,aACA,KACA,UACA,MACA,eACA,YAAoC,IAAS,IAC7C,SAEA,MAKA,EACA,iDAGA,MAGA,CAMA,uBACA,iBACA,SAC0B,GAAkB,sBAC5C,OAEA,CACA,gBACA,oCACA,CAEA,YACA,uDACA,4BACA,6BACA,CACA,CACA,CACA,eACA,gBACA,CACA,eACA,yCACA,eACA,UACA,GACA,6BACA,IAAgB,2BAAiD,SACjE,eAAgB,GAAgB,UAChC,4BAGA,YACY,GAAQ,IACpB,CADoB,GACpB,IACA,iBACA,eACA,EAA+B,GAAU,EACzC,KADyC,CACzC,UACA,aACA,CAAa,EAEb,qBACY,GAAQ,IACpB,CADoB,GACpB,IACA,iBACA,eACA,EAA+B,GAAU,KACzC,EADyC,CACzC,YAIA,wCACA,uBACA,wBACA,0BAEA,CAAa,EAEb,MAA4B,KACpB,GAAY,GADmB,CACnB,aACpB,MAA4B,KAC5B,EACY,GAAY,CAFe,CAEf,sCAGZ,GAAY,iBAExB,OAAkC,GAAW,GAC7C,KAD6C,GAE7C,eACA,qCAKA,qBACA,IAAwB,qBAAiD,EACzE,SACA,MAA6C,KACzB,GAAoB,CADc,CACd,yBACxC,MAA2C,KACvB,GAAoB,CADY,CACZ,kBACC,MACzC,OADyC,EAGzC,qBACA,mBACA,yBACA,mBAEA,CACA,CACA,CACA,+BACA,SACA,WACA,QACA,cACA,mBACA,0BACA,CAAS,CACT,MACA,eACA,mBAAgB,GAAiB,UACjC,MACA,CAMA,2BACA,CACA,eAIQ,EAAW,OACnB,EADmB,CACnB,QAEA,WAQA,kBACA,iDAOA,8EACA,4BACA,mCACA,mEACA,CACA,eACA,oBACA,0BACA,mBACA,EACA,CACA,eACA,iBACA,CACA,eACA,qBACA,CACA,eACA,kBACA,CACA,eACA,kBAAY,GAAgB,UAC5B,uCACA,gCAEA,kBACA,CACA,eACA,oBACA,+CACA,sBACA,CACA,eACA,sBACA,CACA,eACA,kBACA,CACA,eACA,wBACA,CACA,eACA,sBACA,CACA,mBACA,YAAuB,GAAS,iBAChC,QAAmB,GAAS,aAC5B,kBACA,4BAEA,qBACA,MAAiB,GAAS,eAC1B,MAAiB,GAAS,cAC1B,CAKA,eACA,gEACA,CACA,QACA,aACA,kBAEA,qCACA,qBACA,8CAMA,sCACA,WACM,GAAI,CACV,eAEA,gBACA,eACA,CAKA,mBACA,sBACA,wBlCxjDA,CkCyjDsD,IlCzjDtD,YkCyjD+B,GAAY,GAAW,EAAvB,ClCzjD/B,CkC0jDA,CACA,GAFsD,MAEtD,MACA,oCACA,CCtkDA,OAA+B,GAAoB,CACnD,gBADmD,KACnD,OAA2C,GAAW,cACtD,oBACA,gEACA,8DACA,CAAK,CACL,wBACA,CAAC,ECPD,IACA,cACA,EACA,GAA2B,GAAoB,CAC/C,gBAD+C,CAC/C,EACA,eACA,cACA,CAAK,CACL,mBACA,gBACA,UAAqC,GAAsB,EAAG,EAC9D,eAD2D,CAE3D,cAAsC,gBAAoB,EAC1D,YACA,CACA,kBACK,CACL,uBACA,qCACA,CAAK,CACL,mEACC,EGtBD,iBACA,MDHA,eCGoC,CDFpC,4BACA,UAEA,uBACA,eAIA,YACA,sBACA,0BAEA,oBACA,ECXoC,GACpC,sBAOA,SANA,CACA,WACA,KACA,iBAEA,cACA,CCR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SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,WACA,EASA,eACA,8BACA,uCACA,wBACA,uBACA,uBACA,0BACA,SACA,CCpDA,WAA8B,GAAiB,GAoB/C,KAnBA,MAD+C,GAC/C,GACA,sBAGA,2BAAqD,GAAiB,QACtE,EAoBA,IArBsE,IAqBtE,kCACA,CACA,MAEA,CC5BA,QACA,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,OACA,CC5BA,eACA,GAKA,oBAIA,sBAGA,GAII,GAAoB,eAIxB,EAJwB,OAIxB,QACA,SAEA,QACA,gBEXA,kBACA,MAAoB,iBAAU,CAAC,IAC/B,EAA4B,OADgB,SAChB,CAAU,CAAC,IAAe,EACtD,OAVA,sCAAqB,sBAAiD,QAKtE,MAJA,CACA,sBAWA,SACA,SACA,QAAqD,EACrD,eACA,KAAsB,GAAkB,MAExC,SAFwC,GAE9B,aAAmB,EAC7B,EAAoC,GAAqB,GACzD,EAA4B,GAAa,GACzC,GACA,GACA,CAHyC,GAIzC,iBACA,YACA,cACA,YACA,eAEA,WACA,eAGA,EADA,cACA,IACA,MACA,qBACA,CAAS,EAAmB,IAC5B,aAD4B,MAC5B,UACA,YAAwB,WAAiB,KACzC,MAA6B,EAAuB,QACpD,MACA,OAFoD,WAE5B,qBAAuC,EAC/D,gBACA,WACA,qBAKA,QACA,WACA,EACA,OAEA,UACA,QAEA,CACA,eACA,SAEA,CACA,CACA,CACA,QACA,EAjEA,SACA,eACA,CAEA,GAIA,SACA,aAA+B,QAAW,GAC1C,EClBA,mBACA,IAAY,SAAQ,EACpB,KACA,gBACY,EAAa,OACzB,IADyB,GACzB,EACgB,EAAa,aACjB,GAAmB,MAC/B,UAD+B,EAC/B,yBACA,YAGA,QACA,CCZA,QACA,eAAoB,GAAkB,CACtC,cADsC,aACH,IACnC,kBAA2B,EAC3B,CAAK,CACL,ECNA,SAAS,GAA2B,OACpC,MAAsB,GAA6B,OA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,kBACA,CACA,CACA,cACA,uBAEA,cACA,uBAMA,WACA,UAAkB,IAAgB,CAMlC,SACA,UAAkB,IAAc,CAEhC,UACA,mBAEA,+BC7EA,qCAA6C,CAC7C,QACA,CAAC,EAAC,CAWF,SANA,KACA,0CACA,cACA,SACK,CACL,EACA,GACA,6BACA,QACA,CAAK,CACL,8BACA,QACA,CACA,CAAC,EACD,MAAiB,EAAQ,IAAW,EACpC,EAAe,EAAQ,IAAS,EAChC,CAFwB,QAExB,EADsB,EAEtB,2BAAsC,GAAM,OAC5C,CACA,cACA,qDACA,8FCvBA,kBAaA,OAZA,2CACA,uBACA,yBACA,2CACA,6BACA,6EACA,iDACA,yCACA,uCACA,2DACA,mDACA,mCACA,CACA,CAAC,MAAqB,EACtB,cAGA,OAFA,yEACA,iDACA,CACA,CAAC,MAAyB,EAC1B,cAKA,OAJA,mDACA,mCACA,+DACA,2CACA,CACA,CAAC,MAAqB,EACtB,cAgCA,OA/BA,2CACA,yCACA,2DACA,iEACA,+DACA,6DACA,iEACA,6DACA,iEACA,qDACA,6CACA,iCACA,iCACA,yCACA,iDACA,2CACA,uDACA,yDACA,mDACA,yEACA,uDACA,6CACA,2CACA,uDACA,uCACA,+CAEA,gBACA,0BACA,4BACA,gCACA,CACA,CAAC,MAAyB,EAC1B,cAEA,OADA,wCACA,CACA,CAAC,MAAsB,EACvB,cAMA,OALA,iDACA,yCACA,yCACA,yCACA,6CACA,CACA,CAAC,MAAiB,EAClB,cAKA,OAJA,4CACA,4DACA,0CACA,0BACA,CACA,CAAC,MAAoB,EACrB,cAEA,OADA,qCACA,CACA,CAAC,MAAiB,EAClB,cAEA,OADA,+BACA,CACA,CAAC,MAAe,EAChB,cAEA,OADA,gDACA,CACA,CAAC,MAAgC,EACjC,cAGA,OAFA,sDACA,sDACA,CACA,CAAC,MAA0B,EAC3B,cAEA,OADA,+BACA,CACA,CAAC,MAAqB,EAEf,OACP,qBACA,2BACA,4BACA,wBACA,kBACA,0BACA,wBACA,kBACA,mCACA,mCACA,mCACA,qCACA,oCACA,uCACA,+BACA,wCACA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Y,IAAI,CAAC89C,EAChB,MACE1lC,CADK,CACIpY,IAAI,CAAE,IAAG2V,CAAAA,EAAAA,EAAAA,CAAAA,CAAkBA,CAACoB,IAInComC,GAAiBS,GAAgBA,CAAY,CAAC,EAAE,EAAE,EAC3C59C,IAAI,CAAC2V,CAAAA,EAAAA,EAAAA,CAAAA,CAAkBA,CAACioC,CAAY,CAAC,EAAE,EAEpD,CAEA,MAAO,CACLI,wBAAyB5lC,EAAStb,IAAI,CAAC,cACvC0/C,CACF,CACF,EAeIyB,EACAliD,EAAQmhD,eAAe,CACvBnhD,OAAAA,EAAAA,EAAQohD,aAAAA,GAARphD,EACqB,OAArBA,EAAAA,EAAQqhD,YADiB,CACjBA,GAARrhD,EACAA,OAAAA,EAAAA,EAAQ2gD,YADiB,cACjBA,GAAR3gD,GAGEmiD,EAAaliD,EAAOgiD,uBAAuB,CAK/C,OARwC,EAI3BG,4BAA4B,EAAE,IAC3B,UAGT,CACL,GAAGC,EAAcH,EAAiBliD,EAAQ,CAC1CmiD,WAAa,IAAGA,EAAW,IAC3B1B,UAAWxgD,EAAOwgD,SAAS,CAE/B,+BuBvYA,MAAY,EAAQ,IAA0B,EAC9C,WADmB,EACnB,CACA,OACA,GACA,IACA,aACA,YACA,2FAEA,CAAK,CACL,IACA,IACA,IACA,IACA,IACA,IACA,GACA,CAAG,CACH,IACA,gBACA,EACA,sEACA,YACA,2KAEA,sBACA,cACA,mBACA,iCACA,CACA,8DAAoE,CACpE,EACA,YAAkB,eAClB,oBACA,KAGA,gBAFA,kBAGA,sBACA,EACA,GACA,OACA,KACA,WACA,EACA,aAAmB,aACnB,4BACA,EACA,SAAe,eACf,iDACA,WACA,qBACA,EACA,gDACA,EACA,iCACA,gBACA,MACA,aACA,MACA,EACA,kDACA,CACA,cACA,YACA,eACA,GAEA,cACA,SACA,cACA,YACA,gBACA,6CACA,CAAS,CACT,CACA,EACA,eAAqB,eACrB,sBACA,gCACA,iCACA,QACA,KACA,eAEA,SACA,cACA,UACA,gDACA,6CACA,CAAS,CACT,OACM,iBACN,EACA,SAAe,eACf,GACA,oBACA,oBACA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","sources":["webpack://_N_E/../../../../../src/shared/lib/router/utils/route-matcher.ts","webpack://_N_E/../../../src/shared/lib/head-manager-context.shared-runtime.ts","webpack://_N_E/./node_modules/next/dist/esm/server/base-http/helpers.js","webpack://_N_E/./node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","webpack://_N_E/../../../../src/client/components/metadata/metadata-boundary.tsx","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/response.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/relativize-url.ts","webpack://_N_E/./node_modules/next/dist/esm/server/web/adapter.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/lazy-result.js","webpack://_N_E/../../../../../shared/src/utils.ts","webpack://_N_E/../../src/defaultAttributes.ts","webpack://_N_E/../../src/Icon.ts","webpack://_N_E/../../src/createLucideIcon.ts","webpack://_N_E/./node_modules/next/dist/esm/server/after/after-context.js","webpack://_N_E/./node_modules/next/dist/esm/server/async-storage/work-store.js","webpack://_N_E/../../../src/shared/lib/server-inserted-html.shared-runtime.tsx","webpack://_N_E/../../../../../src/shared/lib/router/utils/get-next-pathname-info.ts","webpack://_N_E/../../../src/client/components/nav-failure-handler.ts","webpack://_N_E/../../../src/shared/lib/get-hostname.ts","webpack://_N_E/./node_modules/next/dist/compiled/react/jsx-runtime.js","webpack://_N_E/../../../src/client/components/use-action-queue.ts","webpack://_N_E/./node_modules/next/dist/esm/server/lib/trace/tracer.js?ba8a","webpack://_N_E/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.production.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/prepare-destination.ts","webpack://_N_E/./node_modules/next/dist/esm/server/server-utils.js?c7a4","webpack://_N_E/./node_modules/motion-utils/dist/es/noop.mjs","webpack://_N_E/./node_modules/next/dist/compiled/react-server-dom-webpack/static.edge.js","webpack://_N_E/../../../../src/shared/lib/page-path/normalize-page-path.ts","webpack://_N_E/./node_modules/next/dist/esm/lib/detached-promise.js","webpack://_N_E/./node_modules/next/dist/compiled/react/react.react-server.js","webpack://_N_E/../../../../src/client/components/router-reducer/compute-changed-path.ts","webpack://_N_E/../../src/client/app-call-server.ts","webpack://_N_E/../../../src/client/components/navigation-untracked.ts","webpack://_N_E/./node_modules/next/dist/compiled/string-hash/index.js","webpack://_N_E/./node_modules/next/dist/esm/server/api-utils/get-cookie-parser.js?7535","webpack://_N_E/./node_modules/next/dist/esm/server/web/globals.js","webpack://_N_E/../../../src/shared/lib/segment.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/remove-trailing-slash.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/app-paths.ts","webpack://_N_E/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://_N_E/./node_modules/next/dist/esm/server/internal-utils.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/interception-routes.ts","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://_N_E/./node_modules/next/dist/esm/server/route-kind.js?5eaf","webpack://_N_E/../../../src/shared/lib/app-router-context.shared-runtime.ts","webpack://_N_E/./node_modules/next/dist/compiled/native-url/index.js","webpack://_N_E/./node_modules/motion-dom/dist/es/utils/is-html-element.mjs","webpack://_N_E/../../../src/client/components/unauthorized-error.tsx","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/async-local-storage.js?3425","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/async-local-storage.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/web-on-close.js","webpack://_N_E/../../../src/client/components/redirect-boundary.tsx","webpack://_N_E/./node_modules/next/dist/esm/server/response-cache/types.js?7cdc","webpack://_N_E/./node_modules/next/dist/esm/server/lib/lru-cache.js?bf3c","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/format-url.ts","webpack://_N_E/../../src/client/use-merged-ref.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/is-local-url.ts","webpack://_N_E/../../../src/client/app-dir/link.tsx","webpack://_N_E/../../../../src/shared/lib/isomorphic/path.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/parse-relative-url.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/html-bots.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/is-bot.ts","webpack://_N_E/./node_modules/next/dist/esm/server/web/get-edge-preview-props.js","webpack://_N_E/./node_modules/next/dist/esm/lib/scheduler.js?3e95","webpack://_N_E/./node_modules/next/dist/esm/server/request/params.js?239b","webpack://_N_E/./node_modules/next/dist/compiled/react/cjs/react-jsx-runtime.production.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/is-dynamic.ts","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/dynamic-rendering.js?0c1b","webpack://_N_E/./node_modules/next/dist/esm/build/webpack/alias/react-dom-server-edge.js","webpack://_N_E/../../../../src/client/components/router-reducer/apply-flight-data.ts","webpack://_N_E/./node_modules/next/dist/compiled/native-url/index.js?d486","webpack://_N_E/./node_modules/next/dist/esm/server/lib/cache-handlers/default.js","webpack://_N_E/./node_modules/next/dist/esm/server/use-cache/handlers.js","webpack://_N_E/./node_modules/next/dist/compiled/path-to-regexp/index.js?25e1","webpack://_N_E/./node_modules/next/dist/experimental/testmode/fetch.js","webpack://_N_E/../../src/client/app-build-id.ts","webpack://_N_E/../../../../src/client/components/router-reducer/set-cache-busting-search-param.ts","webpack://_N_E/../../../../src/client/components/router-reducer/fetch-server-response.ts","webpack://_N_E/./node_modules/next/dist/esm/server/dynamic-rendering-utils.js?8219","webpack://_N_E/../../../src/client/components/unresolved-thenable.ts","webpack://_N_E/../../../../src/shared/lib/i18n/detect-domain-locale.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/add-path-suffix.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/add-locale.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/format-next-pathname-info.ts","webpack://_N_E/./node_modules/next/dist/esm/server/web/next-url.js?8fe6","webpack://_N_E/../../../src/client/components/forbidden-error.tsx","webpack://_N_E/./node_modules/next/dist/compiled/react-dom/react-dom.react-server.js","webpack://_N_E/../../src/client/has-base-path.ts","webpack://_N_E/./node_modules/next/dist/esm/server/stream-utils/encodedTags.js?2362","webpack://_N_E/./node_modules/motion-utils/dist/es/easing/ease.mjs","webpack://_N_E/../../../../../src/shared/lib/router/utils/path-match.ts","webpack://_N_E/../../../src/client/components/error-boundary.tsx","webpack://_N_E/./node_modules/next/dist/esm/lib/constants.js?2c34","webpack://_N_E/./node_modules/next/dist/esm/build/output/log.js?fc46","webpack://_N_E/../../../src/client/components/segment-cache.ts","webpack://_N_E/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js?8b33","webpack://_N_E/./node_modules/next/dist/esm/lib/constants.js","webpack://_N_E/../../../src/client/components/client-page.tsx","webpack://_N_E/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://_N_E/./node_modules/next/dist/esm/server/request-meta.js?a82e","webpack://_N_E/../../../src/client/components/hooks-server-context.ts","webpack://_N_E/../src/core/types.ts","webpack://_N_E/../src/core/utils.ts","webpack://_N_E/../src/core/store.ts","webpack://_N_E/../src/core/toast.ts","webpack://_N_E/../src/core/use-toaster.ts","webpack://_N_E/../src/components/toast-bar.tsx","webpack://_N_E/../src/components/toast-icon.tsx","webpack://_N_E/../src/components/error.tsx","webpack://_N_E/../src/components/loader.tsx","webpack://_N_E/../src/components/checkmark.tsx","webpack://_N_E/../src/components/toaster.tsx","webpack://_N_E/../src/index.ts","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/metadata-context.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/flight-render-result.js","webpack://_N_E/../../src/lib/format-server-error.ts","webpack://_N_E/./node_modules/next/dist/esm/lib/error-telemetry-utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/create-error-handler.js?ab64","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/get-short-dynamic-param-type.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/get-segment-param.js","webpack://_N_E/./node_modules/next/dist/esm/server/htmlescape.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/get-script-nonce-from-header.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/types.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/parse-and-validate-flight-router-state.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/create-flight-router-state-from-loader-tree.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/server-ipc/utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/csrf-protection.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/action-handler.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/server-inserted-html.js","webpack://_N_E/../../../src/shared/lib/encode-uri-path.ts","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/required-scripts.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/make-get-server-inserted-html.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/get-css-inlined-link-tags.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/get-preloadable-fonts.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/has-loading-component-in-tree.js","webpack://_N_E/../../../src/shared/lib/server-reference-info.ts","webpack://_N_E/./node_modules/next/dist/esm/lib/client-and-server-references.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/app-dir-module.js?4c98","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/interop-default.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/parse-loader-tree.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/get-asset-query-string.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/render-css-resource.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/create-component-styles-and-scripts.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/get-layer-assets.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/dedupe-fetch.js?4e5c","webpack://_N_E/./node_modules/next/dist/esm/server/lib/patch-fetch.js?1b22","webpack://_N_E/../../../src/client/components/parallel-route-default.tsx","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/create-component-tree.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/walk-tree-with-flight-router-state.js","webpack://_N_E/./node_modules/next/dist/esm/server/resume-data-cache/cache-store.js","webpack://_N_E/./node_modules/next/dist/esm/server/resume-data-cache/resume-data-cache.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/postponed-state.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/use-flight-response.js","webpack://_N_E/../../../../src/client/components/router-reducer/create-initial-router-state.ts","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/app-render-prerender-utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/prospective-render-utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/app-render-render-utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/cache-signal.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/trace/utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/clean-async-snapshot-instance.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/clean-async-snapshot.external.js","webpack://_N_E/./node_modules/next/dist/esm/server/use-cache/use-cache-errors.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/render-to-string.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/metadata-insertion/create-server-inserted-metadata.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/app-render.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/work-unit-async-storage-instance.js","webpack://_N_E/../../../src/client/components/app-router-headers.ts","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/work-unit-async-storage.external.js","webpack://_N_E/../../../src/client/components/static-generation-bailout.ts","webpack://_N_E/./node_modules/next/dist/compiled/react/cjs/react.production.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/querystring.ts","webpack://_N_E/./node_modules/next/dist/esm/server/web/utils.js","webpack://_N_E/../../../src/client/components/client-segment.tsx","webpack://_N_E/./node_modules/next/dist/compiled/cookie/index.js?4d26","webpack://_N_E/../../../src/client/components/layout-router.tsx","webpack://_N_E/./node_modules/next/dist/compiled/querystring-es3/index.js","webpack://_N_E/../../../src/shared/lib/is-plain-object.ts","webpack://_N_E/./node_modules/next/dist/esm/lib/is-error.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-kind.js","webpack://_N_E/../../../../src/client/components/http-access-fallback/error-boundary.tsx","webpack://_N_E/./node_modules/next/dist/compiled/react/cjs/react.react-server.production.js","webpack://_N_E/./node_modules/next/dist/compiled/querystring-es3/index.js?eb61","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js","webpack://_N_E/./node_modules/next/dist/esm/server/dynamic-rendering-utils.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/metadata-constants.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/dynamic-rendering.js","webpack://_N_E/../../../src/shared/lib/invariant-error.ts","webpack://_N_E/./node_modules/next/dist/esm/server/create-deduped-by-callsite-server-error-logger.js","webpack://_N_E/../../../../src/shared/lib/utils/reflect-utils.ts","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/async-local-storage.js?f9ad","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/after-task-async-storage-instance.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/after-task-async-storage.external.js","webpack://_N_E/./node_modules/next/dist/esm/server/request/utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/request/search-params.js","webpack://_N_E/./node_modules/next/dist/esm/server/request/params.js","webpack://_N_E/./node_modules/next/dist/esm/lib/non-nullable.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/generate/meta.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/constants.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/generate/utils.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/generate/basic.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/generate/alternate.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/generate/opengraph.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/generate/icons.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/default-metadata.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/resolvers/resolve-url.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/resolvers/resolve-title.js","webpack://_N_E/./node_modules/next/dist/esm/lib/url.js","webpack://_N_E/./node_modules/next/dist/esm/lib/picocolors.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/lru-cache.js","webpack://_N_E/./node_modules/next/dist/esm/build/output/log.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/resolvers/resolve-opengraph.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/app-dir-module.js","webpack://_N_E/./node_modules/next/dist/esm/lib/interop-default.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/resolvers/resolve-basics.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/resolvers/resolve-icons.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/trace/constants.js","webpack://_N_E/../../../src/shared/lib/is-thenable.ts","webpack://_N_E/./node_modules/next/dist/esm/server/lib/trace/tracer.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/resolve-metadata.js","webpack://_N_E/../../../../src/client/components/http-access-fallback/http-access-fallback.ts","webpack://_N_E/./node_modules/next/dist/esm/server/lib/router-utils/is-postpone.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/metadata.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/clone-response.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/dedupe-fetch.js","webpack://_N_E/./node_modules/next/dist/esm/server/response-cache/types.js","webpack://_N_E/./node_modules/next/dist/esm/server/stream-utils/encodedTags.js","webpack://_N_E/./node_modules/next/dist/esm/server/stream-utils/node-web-streams-helper.js","webpack://_N_E/./node_modules/next/dist/esm/server/request-meta.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/parse-path.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/add-path-prefix.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/path-has-prefix.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/remove-path-prefix.ts","webpack://_N_E/./node_modules/next/dist/esm/server/web/next-url.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/error.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/request.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/adapters/next-request.js","webpack://_N_E/./node_modules/next/dist/esm/server/pipe-readable.js","webpack://_N_E/./node_modules/next/dist/esm/server/render-result.js","webpack://_N_E/./node_modules/next/dist/esm/server/response-cache/utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/response-cache/index.js","webpack://_N_E/./node_modules/next/dist/esm/lib/scheduler.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/patch-fetch.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/rsc/preloads.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/rsc/postpone.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/rsc/taint.js","webpack://_N_E/../../../../src/shared/lib/segment-cache/segment-value-encoding.ts","webpack://_N_E/../../../../src/shared/lib/lazy-dynamic/bailout-to-csr.ts","webpack://_N_E/../../../src/client/components/redirect-status-code.ts","webpack://_N_E/../../../src/client/components/redirect-error.ts","webpack://_N_E/../../../src/client/components/is-next-router-error.ts","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/create-error-handler.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/collect-segment-data.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/entry-base.js","webpack://_N_E/./node_modules/next/dist/compiled/react-server-dom-webpack/server.edge.js","webpack://_N_E/./node_modules/goober/dist/goober.modern.js","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://_N_E/./node_modules/next/dist/compiled/path-browserify/index.js?89c7","webpack://_N_E/../../../../src/shared/lib/i18n/normalize-locale-path.ts","webpack://_N_E/./node_modules/@swc/helpers/esm/_class_private_field_loose_base.js","webpack://_N_E/./node_modules/@swc/helpers/esm/_class_private_field_loose_key.js","webpack://_N_E/../../../src/client/components/promise-queue.ts","webpack://_N_E/../../../../../src/client/components/router-reducer/reducers/prefetch-reducer.ts","webpack://_N_E/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://_N_E/./node_modules/next/dist/compiled/react-dom/cjs/react-dom-server.edge.production.js","webpack://_N_E/../../../src/shared/lib/escape-regexp.ts","webpack://_N_E/../../../../src/client/components/http-access-fallback/error-fallback.tsx","webpack://_N_E/./node_modules/next/dist/esm/server/lib/implicit-tags.js","webpack://_N_E/./node_modules/next/dist/esm/server/api-utils/web.js","webpack://_N_E/./node_modules/next/dist/esm/server/request/fallback-params.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/is-ipv6.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/format-hostname.js","webpack://_N_E/./node_modules/next/dist/esm/lib/redirect-status.js","webpack://_N_E/./node_modules/next/dist/esm/lib/is-edge-runtime.js","webpack://_N_E/../../../src/shared/lib/constants.ts","webpack://_N_E/../../../src/shared/lib/runtime-config.external.ts","webpack://_N_E/./node_modules/next/dist/esm/server/lib/cache-control.js","webpack://_N_E/./node_modules/next/dist/esm/server/utils.js","webpack://_N_E/../../../../src/shared/lib/page-path/normalize-path-sep.ts","webpack://_N_E/../../../../src/shared/lib/page-path/denormalize-page-path.ts","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/locale-route-normalizer.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/sorted-routes.ts","webpack://_N_E/./node_modules/next/dist/esm/server/route-matchers/route-matcher.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matchers/locale-route-matcher.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matcher-managers/default-route-matcher-manager.js","webpack://_N_E/./node_modules/next/dist/esm/lib/is-app-page-route.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/normalizers.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/prefixing-normalizer.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/built/app/app-bundle-path-normalizer.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/built/app/app-filename-normalizer.js","webpack://_N_E/../../../../src/shared/lib/page-path/remove-page-path-tail.ts","webpack://_N_E/./node_modules/next/dist/esm/lib/is-app-route-route.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/is-metadata-route.js?1e1f","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/get-metadata-route.js?e219","webpack://_N_E/../../../../src/shared/lib/page-path/absolute-path-to-page.ts","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/absolute-filename-normalizer.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/built/app/app-page-normalizer.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/wrap-normalizer-fn.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/underscore-normalizer.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/built/app/app-pathname-normalizer.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/built/app/index.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matchers/app-page-route-matcher.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matcher-providers/helpers/cached-route-matcher-provider.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matcher-providers/manifest-route-matcher-provider.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matcher-providers/app-page-route-matcher-provider.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matchers/app-route-route-matcher.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matcher-providers/app-route-route-matcher-provider.js","webpack://_N_E/./node_modules/next/dist/esm/lib/is-api-route.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matchers/pages-api-route-matcher.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/built/pages/pages-bundle-path-normalizer.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/built/pages/pages-filename-normalizer.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/built/pages/pages-page-normalizer.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/built/pages/pages-pathname-normalizer.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/built/pages/index.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matcher-providers/pages-api-route-matcher-provider.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matchers/pages-route-matcher.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matcher-providers/pages-route-matcher-provider.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-matcher-providers/helpers/manifest-loaders/server-manifest-loader.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/i18n-provider.js","webpack://_N_E/./node_modules/next/dist/esm/server/send-response.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/match-next-data-pathname.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/get-route-from-asset-path.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/escape-path-delimiters.ts","webpack://_N_E/./node_modules/next/dist/esm/server/lib/router-utils/decode-path-params.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/request/suffix.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/request/rsc.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/strip-flight-headers.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-modules/checks.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/request/prefetch-rsc.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/request/prefix.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/request/next-data.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/patch-set-header.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/experimental/ppr.js","webpack://_N_E/./node_modules/next/dist/esm/lib/fallback.js","webpack://_N_E/./node_modules/next/dist/esm/server/normalizers/request/segment-prefix-rsc.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/streaming-metadata.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/decode-query-path-parameter.js","webpack://_N_E/./node_modules/next/dist/esm/server/base-server.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/etag.js","webpack://_N_E/./node_modules/next/dist/esm/server/response-cache/web.js","webpack://_N_E/./node_modules/next/dist/esm/lib/try-to-parse-path.js","webpack://_N_E/./node_modules/next/dist/esm/lib/url.js?f174","webpack://_N_E/./node_modules/next/dist/esm/lib/load-custom-routes.js","webpack://_N_E/./node_modules/next/dist/esm/lib/build-custom-route.js","webpack://_N_E/./node_modules/next/dist/esm/api/constants.js","webpack://_N_E/./node_modules/next/dist/esm/server/web-server.js","webpack://_N_E/./node_modules/next/dist/esm/server/base-http/index.js","webpack://_N_E/./node_modules/next/dist/esm/server/base-http/web.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/internal-edge-wait-until.js","webpack://_N_E/./node_modules/next/dist/esm/build/webpack/loaders/next-edge-ssr-loader/render.js","webpack://_N_E/./node_modules/next/dist/esm/server/stream-utils/uint8array-helpers.js","webpack://_N_E/../../../../src/shared/lib/errors/constants.ts","webpack://_N_E/./node_modules/next/dist/esm/server/stream-utils/node-web-streams-helper.js?58af","webpack://_N_E/./node_modules/next/dist/compiled/cookie/index.js","webpack://_N_E/../../../src/client/components/bailout-to-client-rendering.ts","webpack://_N_E/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://_N_E/../../../../src/client/components/metadata/server-inserted-metadata.tsx","webpack://_N_E/./node_modules/next/dist/compiled/react-server-dom-webpack/client.edge.js","webpack://_N_E/./node_modules/next/dist/esm/lib/multi-file-writer.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/incremental-cache/file-system-cache.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/incremental-cache/shared-cache-controls.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/incremental-cache/index.js","webpack://_N_E/../../../src/client/components/render-from-template-context.tsx","webpack://_N_E/./node_modules/next/dist/compiled/@opentelemetry/api/index.js","webpack://_N_E/./node_modules/next/dist/esm/server/request/utils.js?c614","webpack://_N_E/./node_modules/next/dist/esm/server/request/search-params.js?aa42","webpack://_N_E/../../../../src/client/components/metadata/async-metadata.tsx","webpack://_N_E/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/router-utils/is-postpone.js?1234","webpack://_N_E/../../../src/client/components/unstable-rethrow.server.ts","webpack://_N_E/./node_modules/next/dist/esm/server/revalidation-utils.js","webpack://_N_E/./node_modules/next/dist/compiled/react-dom/index.js","webpack://_N_E/../../../src/shared/lib/server-inserted-metadata.shared-runtime.ts","webpack://_N_E/../../../src/client/components/not-found-error.tsx","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js?29f1","webpack://_N_E/./node_modules/next/dist/esm/server/route-modules/route-module.js","webpack://_N_E/../../../src/shared/lib/router-context.shared-runtime.ts","webpack://_N_E/../../../src/shared/lib/amp-context.shared-runtime.ts","webpack://_N_E/../../../src/shared/lib/image-config.ts","webpack://_N_E/../../../src/shared/lib/image-config-context.shared-runtime.ts","webpack://_N_E/./node_modules/next/dist/esm/server/route-modules/app-page/vendored/contexts/entrypoints.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-modules/app-page/module.js","webpack://_N_E/./node_modules/next/dist/compiled/react/cjs/react-jsx-runtime.react-server.production.js","webpack://_N_E/../../../src/shared/lib/hash.ts","webpack://_N_E/./node_modules/next/font/google/target.css","webpack://_N_E/./node_modules/next/dist/esm/server/lib/to-route.js","webpack://_N_E/./node_modules/next/dist/esm/server/create-deduped-by-callsite-server-error-logger.js?3954","webpack://_N_E/../../../../src/client/components/router-reducer/fill-cache-with-new-subtree-data.ts","webpack://_N_E/../../../src/client/components/match-segments.ts","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/metadata-constants.js?11b2","webpack://_N_E/../../../src/client/components/app-router.tsx","webpack://_N_E/../../../src/client/components/links.ts","webpack://_N_E/./node_modules/next/dist/compiled/react-dom/cjs/react-dom.production.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/action-async-storage-instance.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/action-async-storage.external.js","webpack://_N_E/../../../src/client/components/not-found.ts","webpack://_N_E/./node_modules/next/dist/esm/server/web/utils.js?0e72","webpack://_N_E/./node_modules/next/dist/esm/server/web/error.js?e0ca","webpack://_N_E/./node_modules/next/dist/esm/lib/page-types.js","webpack://_N_E/../../../../src/shared/lib/page-path/ensure-leading-slash.ts","webpack://_N_E/./node_modules/next/dist/esm/server/api-utils/index.js","webpack://_N_E/./node_modules/next/dist/esm/server/pipe-readable.js?6490","webpack://_N_E/./node_modules/next/dist/esm/server/response-cache/utils.js?049f","webpack://_N_E/./node_modules/next/dist/experimental/testmode/context.js","webpack://_N_E/../../../src/shared/lib/modern-browserslist-target.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/incremental-cache/tags-manifest.external.js","webpack://_N_E/../../src/client/app-find-source-map-url.ts","webpack://_N_E/../../../src/client/components/forbidden.ts","webpack://_N_E/../../../src/client/components/unauthorized.ts","webpack://_N_E/../../../src/client/components/unstable-rethrow.ts","webpack://_N_E/../../../src/client/components/navigation.react-server.ts","webpack://_N_E/../../../src/client/components/navigation.ts","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js","webpack://_N_E/./node_modules/next/dist/compiled/react-dom/static.edge.js","webpack://_N_E/../../../../src/client/components/router-reducer/prefetch-cache-utils.ts","webpack://_N_E/./node_modules/next/dist/esm/lib/picocolors.js?892f","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/after-task-async-storage-instance.js?5406","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/after-task-async-storage.external.js?44ab","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/work-async-storage-instance.js","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/work-async-storage.external.js","webpack://_N_E/./node_modules/next/dist/esm/server/route-modules/app-page/module.compiled.js","webpack://_N_E/../../../src/shared/lib/hooks-client-context.shared-runtime.ts","webpack://_N_E/../../../../src/client/components/router-reducer/fill-lazy-items-till-leaf-with-head.ts","webpack://_N_E/./node_modules/next/dist/esm/server/lib/server-action-request-meta.js","webpack://_N_E/./node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.js","webpack://_N_E/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","webpack://_N_E/./node_modules/motion-utils/dist/es/global-config.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/frameloop/order.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/stats/buffer.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/frameloop/render-step.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/frameloop/batcher.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/frameloop/frame.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","webpack://_N_E/./node_modules/motion-utils/dist/es/array.mjs","webpack://_N_E/./node_modules/motion-utils/dist/es/subscription-manager.mjs","webpack://_N_E/./node_modules/motion-utils/dist/es/velocity-per-second.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://_N_E/./node_modules/motion-utils/dist/es/pipe.mjs","webpack://_N_E/./node_modules/motion-utils/dist/es/clamp.mjs","webpack://_N_E/./node_modules/motion-utils/dist/es/time-conversion.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/stats/animation-count.mjs","webpack://_N_E/./node_modules/motion-utils/dist/es/errors.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/color/utils.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/color/hex.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/color/index.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/complex/index.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/utils/mix/number.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/utils/mix/color.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/utils/mix/complex.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/utils/mix/index.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","webpack://_N_E/./node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","webpack://_N_E/./node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","webpack://_N_E/./node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","webpack://_N_E/./node_modules/motion-utils/dist/es/easing/back.mjs","webpack://_N_E/./node_modules/motion-utils/dist/es/easing/anticipate.mjs","webpack://_N_E/./node_modules/motion-utils/dist/es/easing/circ.mjs","webpack://_N_E/./node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","webpack://_N_E/./node_modules/motion-utils/dist/es/easing/utils/map.mjs","webpack://_N_E/./node_modules/motion-utils/dist/es/progress.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/utils/interpolate.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/render/dom/style-set.mjs","webpack://_N_E/./node_modules/motion-utils/dist/es/memo.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/utils/supports/flags.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/utils/supports/memo.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/frameloop/microtask.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/gestures/hover.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/gestures/press/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/int.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/maps/number.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/auto.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/test.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/dimensions.mjs","webpack://_N_E/./node_modules/motion-utils/dist/es/is-numerical-string.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","webpack://_N_E/./node_modules/motion-utils/dist/es/is-zero-value-string.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","webpack://_N_E/./node_modules/motion-dom/dist/es/value/types/utils/find.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://_N_E/./node_modules/motion-utils/dist/es/is-object.mjs","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/request.js?9e6f","webpack://_N_E/./node_modules/next/dist/experimental/testmode/server-edge.js","webpack://_N_E/./node_modules/next/dist/esm/server/lib/trace/constants.js?152d","webpack://_N_E/./node_modules/next/dist/compiled/superstruct/index.cjs","webpack://_N_E/./node_modules/next/dist/esm/server/instrumentation/utils.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/is-metadata-route.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/route-regex.ts","webpack://_N_E/../../../src/shared/lib/utils.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/parse-url.ts","webpack://_N_E/./node_modules/next/dist/esm/server/api-utils/get-cookie-parser.js","webpack://_N_E/./node_modules/next/dist/esm/server/server-utils.js","webpack://_N_E/./node_modules/next/dist/esm/lib/metadata/get-metadata-route.js","webpack://_N_E/./node_modules/next/dist/compiled/path-browserify/index.js","webpack://_N_E/../../src/client/normalize-trailing-slash.ts","webpack://_N_E/../../src/client/add-base-path.ts","webpack://_N_E/../../../src/server/app-render/encryption-utils.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/handle-smooth-scroll.ts","webpack://_N_E/../../../../../src/client/components/router-reducer/reducers/has-interception-route-in-current-tree.ts","webpack://_N_E/./node_modules/next/dist/compiled/@opentelemetry/api/index.js?92d0","webpack://_N_E/../../../src/client/components/redirect.ts","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/adapters/next-request.js?bad5","webpack://_N_E/../../src/client/flight-data-helpers.ts","webpack://_N_E/./node_modules/next/dist/esm/server/app-render/action-utils.js","webpack://_N_E/./node_modules/next/dist/compiled/react/index.js","webpack://_N_E/./node_modules/next/dist/compiled/string-hash/index.js?9d3f","webpack://_N_E/../../../src/client/components/app-router-announcer.tsx","webpack://_N_E/../../../../../src/client/components/router-reducer/reducers/find-head-in-cache.ts","webpack://_N_E/../../src/client/remove-base-path.ts","webpack://_N_E/./node_modules/next/dist/compiled/path-to-regexp/index.js","webpack://_N_E/./node_modules/next/dist/compiled/react-dom/cjs/react-dom.react-server.production.js","webpack://_N_E/./node_modules/next/dist/esm/server/after/builtin-request-context.js","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://_N_E/../../../../src/client/components/router-reducer/apply-router-state-patch-to-tree.ts","webpack://_N_E/../../../../src/client/components/router-reducer/ppr-navigations.ts","webpack://_N_E/../../../../src/client/components/router-reducer/aliased-prefetch-navigations.ts","webpack://_N_E/../../../../../src/client/components/router-reducer/reducers/navigate-reducer.ts","webpack://_N_E/../../../../../src/client/components/router-reducer/reducers/server-patch-reducer.ts","webpack://_N_E/../../../../../src/client/components/router-reducer/reducers/restore-reducer.ts","webpack://_N_E/../../../../src/client/components/router-reducer/handle-segment-mismatch.ts","webpack://_N_E/../../../../../src/client/components/router-reducer/reducers/refresh-reducer.ts","webpack://_N_E/../../../../../src/client/components/router-reducer/reducers/hmr-refresh-reducer.ts","webpack://_N_E/../../../../../src/client/components/router-reducer/reducers/server-action-reducer.ts","webpack://_N_E/../../../../src/client/components/router-reducer/router-reducer.ts","webpack://_N_E/../../../src/client/components/app-router-instance.ts","webpack://_N_E/./node_modules/next/dist/compiled/react/jsx-runtime.react-server.js","webpack://_N_E/../../../../src/client/components/router-reducer/refetch-inactive-parallel-segments.ts","webpack://_N_E/../../../../src/client/components/router-reducer/create-router-cache-key.ts","webpack://_N_E/../../../../src/client/components/router-reducer/create-href-from-url.ts","webpack://_N_E/./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js","webpack://_N_E/./node_modules/next/dist/esm/server/async-storage/request-store.js","webpack://_N_E/./node_modules/next/dist/esm/server/response-cache/index.js?23cf","webpack://_N_E/./node_modules/next/dist/esm/server/render-result.js?b063","webpack://_N_E/./node_modules/next/dist/compiled/p-queue/index.js","webpack://_N_E/./node_modules/next/dist/compiled/react-server-dom-webpack/client.edge.js?c3e5","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js?5b40","webpack://_N_E/../../../../src/client/components/router-reducer/router-reducer-types.ts","webpack://_N_E/./node_modules/next/dist/esm/server/client-component-renderer-logger.js","webpack://_N_E/./node_modules/next/dist/esm/api/navigation.js"],"sourcesContent":["import type { Group } from './route-regex'\nimport { DecodeError } from '../../utils'\nimport type { Params } from '../../../../server/request/params'\n\nexport interface RouteMatchFn {\n  (pathname: string): false | Params\n}\n\ntype RouteMatcherOptions = {\n  // We only use the exec method of the RegExp object. This helps us avoid using\n  // type assertions that the passed in properties are of the correct type.\n  re: Pick<RegExp, 'exec'>\n  groups: Record<string, Group>\n}\n\nexport function getRouteMatcher({\n  re,\n  groups,\n}: RouteMatcherOptions): RouteMatchFn {\n  return (pathname: string) => {\n    const routeMatch = re.exec(pathname)\n    if (!routeMatch) return false\n\n    const decode = (param: string) => {\n      try {\n        return decodeURIComponent(param)\n      } catch {\n        throw new DecodeError('failed to decode param')\n      }\n    }\n\n    const params: Params = {}\n    for (const [key, group] of Object.entries(groups)) {\n      const match = routeMatch[group.pos]\n      if (match !== undefined) {\n        if (group.repeat) {\n          params[key] = match.split('/').map((entry) => decode(entry))\n        } else {\n          params[key] = decode(match)\n        }\n      }\n    }\n\n    return params\n  }\n}\n","import React from 'react'\n\nexport const HeadManagerContext: React.Context<{\n  updateHead?: (state: any) => void\n  mountedInstances?: any\n  updateScripts?: (state: any) => void\n  scripts?: any\n  getIsSsr?: () => boolean\n\n  // Used in app directory, to render script tags as server components.\n  appDir?: boolean\n  nonce?: string\n}> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  HeadManagerContext.displayName = 'HeadManagerContext'\n}\n","/**\n * This file provides some helpers that should be used in conjunction with\n * explicit environment checks. When combined with the environment checks, it\n * will ensure that the correct typings are used as well as enable code\n * elimination.\n */ /**\n * Type guard to determine if a request is a WebNextRequest. This does not\n * actually check the type of the request, but rather the runtime environment.\n * It's expected that when the runtime environment is the edge runtime, that any\n * base request is a WebNextRequest.\n */ export const isWebNextRequest = (req)=>process.env.NEXT_RUNTIME === 'edge';\n/**\n * Type guard to determine if a response is a WebNextResponse. This does not\n * actually check the type of the response, but rather the runtime environment.\n * It's expected that when the runtime environment is the edge runtime, that any\n * base response is a WebNextResponse.\n */ export const isWebNextResponse = (res)=>process.env.NEXT_RUNTIME === 'edge';\n/**\n * Type guard to determine if a request is a NodeNextRequest. This does not\n * actually check the type of the request, but rather the runtime environment.\n * It's expected that when the runtime environment is the node runtime, that any\n * base request is a NodeNextRequest.\n */ export const isNodeNextRequest = (req)=>process.env.NEXT_RUNTIME !== 'edge';\n/**\n * Type guard to determine if a response is a NodeNextResponse. This does not\n * actually check the type of the response, but rather the runtime environment.\n * It's expected that when the runtime environment is the node runtime, that any\n * base response is a NodeNextResponse.\n */ export const isNodeNextResponse = (res)=>process.env.NEXT_RUNTIME !== 'edge';\n\n//# sourceMappingURL=helpers.js.map","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticeably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","'use client'\n\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n  OUTLET_BOUNDARY_NAME,\n} from '../../../lib/metadata/metadata-constants'\n\n// We use a namespace object to allow us to recover the name of the function\n// at runtime even when production bundling/minification is used.\nconst NameSpace = {\n  [METADATA_BOUNDARY_NAME]: function ({\n    children,\n  }: {\n    children: React.ReactNode\n  }) {\n    return children\n  },\n  [VIEWPORT_BOUNDARY_NAME]: function ({\n    children,\n  }: {\n    children: React.ReactNode\n  }) {\n    return children\n  },\n  [OUTLET_BOUNDARY_NAME]: function ({\n    children,\n  }: {\n    children: React.ReactNode\n  }) {\n    return children\n  },\n}\n\nexport const MetadataBoundary =\n  // We use slice(0) to trick the bundler into not inlining/minifying the function\n  // so it retains the name inferred from the namespace object\n  NameSpace[METADATA_BOUNDARY_NAME.slice(0) as typeof METADATA_BOUNDARY_NAME]\n\nexport const ViewportBoundary =\n  // We use slice(0) to trick the bundler into not inlining/minifying the function\n  // so it retains the name inferred from the namespace object\n  NameSpace[VIEWPORT_BOUNDARY_NAME.slice(0) as typeof VIEWPORT_BOUNDARY_NAME]\n\nexport const OutletBoundary =\n  // We use slice(0) to trick the bundler into not inlining/minifying the function\n  // so it retains the name inferred from the namespace object\n  NameSpace[OUTLET_BOUNDARY_NAME.slice(0) as typeof OUTLET_BOUNDARY_NAME]\n","import { PageSignatureError } from '../error';\nconst responseSymbol = Symbol('response');\nconst passThroughSymbol = Symbol('passThrough');\nconst waitUntilSymbol = Symbol('waitUntil');\nclass FetchEvent {\n    constructor(_request, waitUntil){\n        this[passThroughSymbol] = false;\n        this[waitUntilSymbol] = waitUntil ? {\n            kind: 'external',\n            function: waitUntil\n        } : {\n            kind: 'internal',\n            promises: []\n        };\n    }\n    // TODO: is this dead code? NextFetchEvent never lets this get called\n    respondWith(response) {\n        if (!this[responseSymbol]) {\n            this[responseSymbol] = Promise.resolve(response);\n        }\n    }\n    // TODO: is this dead code? passThroughSymbol is unused\n    passThroughOnException() {\n        this[passThroughSymbol] = true;\n    }\n    waitUntil(promise) {\n        if (this[waitUntilSymbol].kind === 'external') {\n            // if we received an external waitUntil, we delegate to it\n            // TODO(after): this will make us not go through `getServerError(error, 'edge-server')` in `sandbox`\n            const waitUntil = this[waitUntilSymbol].function;\n            return waitUntil(promise);\n        } else {\n            // if we didn't receive an external waitUntil, we make it work on our own\n            // (and expect the caller to do something with the promises)\n            this[waitUntilSymbol].promises.push(promise);\n        }\n    }\n}\nexport function getWaitUntilPromiseFromEvent(event) {\n    return event[waitUntilSymbol].kind === 'internal' ? Promise.all(event[waitUntilSymbol].promises).then(()=>{}) : undefined;\n}\nexport class NextFetchEvent extends FetchEvent {\n    constructor(params){\n        var _params_context;\n        super(params.request, (_params_context = params.context) == null ? void 0 : _params_context.waitUntil);\n        this.sourcePage = params.page;\n    }\n    /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ get request() {\n        throw Object.defineProperty(new PageSignatureError({\n            page: this.sourcePage\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E394\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ respondWith() {\n        throw Object.defineProperty(new PageSignatureError({\n            page: this.sourcePage\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E394\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\n\n//# sourceMappingURL=fetch-event.js.map","import { stringifyCookie } from '../../web/spec-extension/cookies';\nimport { NextURL } from '../next-url';\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils';\nimport { ReflectAdapter } from './adapters/reflect';\nimport { ResponseCookies } from './cookies';\nconst INTERNALS = Symbol('internal response');\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var _init_request;\n    if (init == null ? void 0 : (_init_request = init.request) == null ? void 0 : _init_request.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw Object.defineProperty(new Error('request.headers must be an instance of Headers'), \"__NEXT_ERROR_CODE\", {\n                value: \"E119\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set('x-middleware-request-' + key, value);\n            keys.push(key);\n        }\n        headers.set('x-middleware-override-headers', keys.join(','));\n    }\n}\n/**\n * This class extends the [Web `Response` API](https://developer.mozilla.org/docs/Web/API/Response) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextResponse`](https://nextjs.org/docs/app/api-reference/functions/next-response)\n */ export class NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        const headers = this.headers;\n        const cookies = new ResponseCookies(headers);\n        const cookiesProxy = new Proxy(cookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'delete':\n                    case 'set':\n                        {\n                            return (...args)=>{\n                                const result = Reflect.apply(target[prop], target, args);\n                                const newHeaders = new Headers(headers);\n                                if (result instanceof ResponseCookies) {\n                                    headers.set('x-middleware-set-cookie', result.getAll().map((cookie)=>stringifyCookie(cookie)).join(','));\n                                }\n                                handleMiddlewareField(init, newHeaders);\n                                return result;\n                            };\n                        }\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n        this[INTERNALS] = {\n            cookies: cookiesProxy,\n            url: init.url ? new NextURL(init.url, {\n                headers: toNodeOutgoingHttpHeaders(headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for('edge-runtime.inspect.custom')]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    static json(body, init) {\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === 'number' ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw Object.defineProperty(new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code'), \"__NEXT_ERROR_CODE\", {\n                value: \"E529\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        const initObj = typeof init === 'object' ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set('Location', validateURL(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set('x-middleware-rewrite', validateURL(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set('x-middleware-next', '1');\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n}\n\n//# sourceMappingURL=response.js.map","/**\n * The result of parsing a URL relative to a base URL.\n */\nexport type RelativeURL = {\n  /**\n   * The relative URL. Either a URL including the origin or a relative URL.\n   */\n  url: string\n\n  /**\n   * Whether the URL is relative to the base URL.\n   */\n  isRelative: boolean\n}\n\nexport function parseRelativeURL(\n  url: string | URL,\n  base: string | URL\n): RelativeURL {\n  const baseURL = typeof base === 'string' ? new URL(base) : base\n  const relative = new URL(url, base)\n\n  // The URL is relative if the origin is the same as the base URL.\n  const isRelative = relative.origin === baseURL.origin\n\n  return {\n    url: isRelative\n      ? relative.toString().slice(baseURL.origin.length)\n      : relative.toString(),\n    isRelative,\n  }\n}\n\n/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */\nexport function getRelativeURL(url: string | URL, base: string | URL): string {\n  const relative = parseRelativeURL(url, base)\n  return relative.url\n}\n","import { PageSignatureError } from './error';\nimport { fromNodeOutgoingHttpHeaders, normalizeNextQueryParam } from './utils';\nimport { NextFetchEvent, getWaitUntilPromiseFromEvent } from './spec-extension/fetch-event';\nimport { NextRequest } from './spec-extension/request';\nimport { NextResponse } from './spec-extension/response';\nimport { parseRelativeURL, getRelativeURL } from '../../shared/lib/router/utils/relativize-url';\nimport { NextURL } from './next-url';\nimport { stripInternalSearchParams } from '../internal-utils';\nimport { normalizeRscURL } from '../../shared/lib/router/utils/app-paths';\nimport { FLIGHT_HEADERS, NEXT_REWRITTEN_PATH_HEADER, NEXT_REWRITTEN_QUERY_HEADER, RSC_HEADER } from '../../client/components/app-router-headers';\nimport { ensureInstrumentationRegistered } from './globals';\nimport { createRequestStoreForAPI } from '../async-storage/request-store';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { createWorkStore } from '../async-storage/work-store';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { NEXT_ROUTER_PREFETCH_HEADER } from '../../client/components/app-router-headers';\nimport { getTracer } from '../lib/trace/tracer';\nimport { MiddlewareSpan } from '../lib/trace/constants';\nimport { CloseController } from './web-on-close';\nimport { getEdgePreviewProps } from './get-edge-preview-props';\nimport { getBuiltinRequestContext } from '../after/builtin-request-context';\nimport { getImplicitTags } from '../lib/implicit-tags';\nexport class NextRequestHint extends NextRequest {\n    constructor(params){\n        super(params.input, params.init);\n        this.sourcePage = params.page;\n    }\n    get request() {\n        throw Object.defineProperty(new PageSignatureError({\n            page: this.sourcePage\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E394\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    respondWith() {\n        throw Object.defineProperty(new PageSignatureError({\n            page: this.sourcePage\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E394\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    waitUntil() {\n        throw Object.defineProperty(new PageSignatureError({\n            page: this.sourcePage\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E394\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\nconst headersGetter = {\n    keys: (headers)=>Array.from(headers.keys()),\n    get: (headers, key)=>headers.get(key) ?? undefined\n};\nlet propagator = (request, fn)=>{\n    const tracer = getTracer();\n    return tracer.withPropagatedContext(request.headers, fn, headersGetter);\n};\nlet testApisIntercepted = false;\nfunction ensureTestApisIntercepted() {\n    if (!testApisIntercepted) {\n        testApisIntercepted = true;\n        if (process.env.NEXT_PRIVATE_TEST_PROXY === 'true') {\n            const { interceptTestApis, wrapRequestHandler } = require('next/dist/experimental/testmode/server-edge');\n            interceptTestApis();\n            propagator = wrapRequestHandler(propagator);\n        }\n    }\n}\nexport async function adapter(params) {\n    var _getBuiltinRequestContext;\n    ensureTestApisIntercepted();\n    await ensureInstrumentationRegistered();\n    // TODO-APP: use explicit marker for this\n    const isEdgeRendering = typeof globalThis.__BUILD_MANIFEST !== 'undefined';\n    params.request.url = normalizeRscURL(params.request.url);\n    const requestURL = new NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig\n    });\n    // Iterator uses an index to keep track of the current iteration. Because of deleting and appending below we can't just use the iterator.\n    // Instead we use the keys before iteration.\n    const keys = [\n        ...requestURL.searchParams.keys()\n    ];\n    for (const key of keys){\n        const value = requestURL.searchParams.getAll(key);\n        const normalizedKey = normalizeNextQueryParam(key);\n        if (normalizedKey) {\n            requestURL.searchParams.delete(normalizedKey);\n            for (const val of value){\n                requestURL.searchParams.append(normalizedKey, val);\n            }\n            requestURL.searchParams.delete(key);\n        }\n    }\n    // Ensure users only see page requests, never data requests.\n    const buildId = requestURL.buildId;\n    requestURL.buildId = '';\n    const requestHeaders = fromNodeOutgoingHttpHeaders(params.request.headers);\n    const isNextDataRequest = requestHeaders.has('x-nextjs-data');\n    const isRSCRequest = requestHeaders.get(RSC_HEADER) === '1';\n    if (isNextDataRequest && requestURL.pathname === '/index') {\n        requestURL.pathname = '/';\n    }\n    const flightHeaders = new Map();\n    // Headers should only be stripped for middleware\n    if (!isEdgeRendering) {\n        for (const header of FLIGHT_HEADERS){\n            const key = header.toLowerCase();\n            const value = requestHeaders.get(key);\n            if (value !== null) {\n                flightHeaders.set(key, value);\n                requestHeaders.delete(key);\n            }\n        }\n    }\n    const normalizeURL = process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE ? new URL(params.request.url) : requestURL;\n    const request = new NextRequestHint({\n        page: params.page,\n        // Strip internal query parameters off the request.\n        input: stripInternalSearchParams(normalizeURL).toString(),\n        init: {\n            body: params.request.body,\n            headers: requestHeaders,\n            method: params.request.method,\n            nextConfig: params.request.nextConfig,\n            signal: params.request.signal\n        }\n    });\n    /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */ if (isNextDataRequest) {\n        Object.defineProperty(request, '__isData', {\n            enumerable: false,\n            value: true\n        });\n    }\n    if (!globalThis.__incrementalCache && params.IncrementalCache) {\n        ;\n        globalThis.__incrementalCache = new params.IncrementalCache({\n            appDir: true,\n            fetchCache: true,\n            minimalMode: process.env.NODE_ENV !== 'development',\n            fetchCacheKeyPrefix: process.env.__NEXT_FETCH_CACHE_KEY_PREFIX,\n            dev: process.env.NODE_ENV === 'development',\n            requestHeaders: params.request.headers,\n            requestProtocol: 'https',\n            getPrerenderManifest: ()=>{\n                return {\n                    version: -1,\n                    routes: {},\n                    dynamicRoutes: {},\n                    notFoundRoutes: [],\n                    preview: getEdgePreviewProps()\n                };\n            }\n        });\n    }\n    // if we're in an edge runtime sandbox, we should use the waitUntil\n    // that we receive from the enclosing NextServer\n    const outerWaitUntil = params.request.waitUntil ?? ((_getBuiltinRequestContext = getBuiltinRequestContext()) == null ? void 0 : _getBuiltinRequestContext.waitUntil);\n    const event = new NextFetchEvent({\n        request,\n        page: params.page,\n        context: outerWaitUntil ? {\n            waitUntil: outerWaitUntil\n        } : undefined\n    });\n    let response;\n    let cookiesFromResponse;\n    response = await propagator(request, ()=>{\n        // we only care to make async storage available for middleware\n        const isMiddleware = params.page === '/middleware' || params.page === '/src/middleware';\n        if (isMiddleware) {\n            // if we're in an edge function, we only get a subset of `nextConfig` (no `experimental`),\n            // so we have to inject it via DefinePlugin.\n            // in `next start` this will be passed normally (see `NextNodeServer.runMiddleware`).\n            const waitUntil = event.waitUntil.bind(event);\n            const closeController = new CloseController();\n            return getTracer().trace(MiddlewareSpan.execute, {\n                spanName: `middleware ${request.method} ${request.nextUrl.pathname}`,\n                attributes: {\n                    'http.target': request.nextUrl.pathname,\n                    'http.method': request.method\n                }\n            }, async ()=>{\n                try {\n                    var _params_request_nextConfig_experimental, _params_request_nextConfig, _params_request_nextConfig_experimental1, _params_request_nextConfig1;\n                    const onUpdateCookies = (cookies)=>{\n                        cookiesFromResponse = cookies;\n                    };\n                    const previewProps = getEdgePreviewProps();\n                    const page = '/' // Fake Work\n                    ;\n                    const fallbackRouteParams = null;\n                    const implicitTags = await getImplicitTags(page, request.nextUrl, fallbackRouteParams);\n                    const requestStore = createRequestStoreForAPI(request, request.nextUrl, implicitTags, onUpdateCookies, previewProps);\n                    const workStore = createWorkStore({\n                        page,\n                        fallbackRouteParams,\n                        renderOpts: {\n                            cacheLifeProfiles: (_params_request_nextConfig = params.request.nextConfig) == null ? void 0 : (_params_request_nextConfig_experimental = _params_request_nextConfig.experimental) == null ? void 0 : _params_request_nextConfig_experimental.cacheLife,\n                            experimental: {\n                                isRoutePPREnabled: false,\n                                dynamicIO: false,\n                                authInterrupts: !!((_params_request_nextConfig1 = params.request.nextConfig) == null ? void 0 : (_params_request_nextConfig_experimental1 = _params_request_nextConfig1.experimental) == null ? void 0 : _params_request_nextConfig_experimental1.authInterrupts)\n                            },\n                            supportsDynamicResponse: true,\n                            waitUntil,\n                            onClose: closeController.onClose.bind(closeController),\n                            onAfterTaskError: undefined\n                        },\n                        requestEndedState: {\n                            ended: false\n                        },\n                        isPrefetchRequest: request.headers.has(NEXT_ROUTER_PREFETCH_HEADER),\n                        buildId: buildId ?? '',\n                        previouslyRevalidatedTags: []\n                    });\n                    return await workAsyncStorage.run(workStore, ()=>workUnitAsyncStorage.run(requestStore, params.handler, request, event));\n                } finally{\n                    // middleware cannot stream, so we can consider the response closed\n                    // as soon as the handler returns.\n                    // we can delay running it until a bit later --\n                    // if it's needed, we'll have a `waitUntil` lock anyway.\n                    setTimeout(()=>{\n                        closeController.dispatchClose();\n                    }, 0);\n                }\n            });\n        }\n        return params.handler(request, event);\n    });\n    // check if response is a Response object\n    if (response && !(response instanceof Response)) {\n        throw Object.defineProperty(new TypeError('Expected an instance of Response to be returned'), \"__NEXT_ERROR_CODE\", {\n            value: \"E567\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    if (response && cookiesFromResponse) {\n        response.headers.set('set-cookie', cookiesFromResponse);\n    }\n    /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */ const rewrite = response == null ? void 0 : response.headers.get('x-middleware-rewrite');\n    if (response && rewrite && (isRSCRequest || !isEdgeRendering)) {\n        const destination = new NextURL(rewrite, {\n            forceLocale: true,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE && !isEdgeRendering) {\n            if (destination.host === request.nextUrl.host) {\n                destination.buildId = buildId || destination.buildId;\n                response.headers.set('x-middleware-rewrite', String(destination));\n            }\n        }\n        /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */ const { url: relativeDestination, isRelative } = parseRelativeURL(destination.toString(), requestURL.toString());\n        if (!isEdgeRendering && isNextDataRequest && // if the rewrite is external and external rewrite\n        // resolving config is enabled don't add this header\n        // so the upstream app can set it instead\n        !(process.env.__NEXT_EXTERNAL_MIDDLEWARE_REWRITE_RESOLVE && relativeDestination.match(/http(s)?:\\/\\//))) {\n            response.headers.set('x-nextjs-rewrite', relativeDestination);\n        }\n        // If this is an RSC request, and the pathname or search has changed, and\n        // this isn't an external rewrite, we need to set the rewritten pathname and\n        // query headers.\n        if (isRSCRequest && isRelative) {\n            if (requestURL.pathname !== destination.pathname) {\n                response.headers.set(NEXT_REWRITTEN_PATH_HEADER, destination.pathname);\n            }\n            if (requestURL.search !== destination.search) {\n                response.headers.set(NEXT_REWRITTEN_QUERY_HEADER, // remove the leading ? from the search string\n                destination.search.slice(1));\n            }\n        }\n    }\n    /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */ const redirect = response == null ? void 0 : response.headers.get('Location');\n    if (response && redirect && !isEdgeRendering) {\n        const redirectURL = new NextURL(redirect, {\n            forceLocale: false,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */ response = new Response(response.body, response);\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (redirectURL.host === requestURL.host) {\n                redirectURL.buildId = buildId || redirectURL.buildId;\n                response.headers.set('Location', redirectURL.toString());\n            }\n        }\n        /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */ if (isNextDataRequest) {\n            response.headers.delete('Location');\n            response.headers.set('x-nextjs-redirect', getRelativeURL(redirectURL.toString(), requestURL.toString()));\n        }\n    }\n    const finalResponse = response ? response : NextResponse.next();\n    // Flight headers are not overridable / removable so they are applied at the end.\n    const middlewareOverrideHeaders = finalResponse.headers.get('x-middleware-override-headers');\n    const overwrittenHeaders = [];\n    if (middlewareOverrideHeaders) {\n        for (const [key, value] of flightHeaders){\n            finalResponse.headers.set(`x-middleware-request-${key}`, value);\n            overwrittenHeaders.push(key);\n        }\n        if (overwrittenHeaders.length > 0) {\n            finalResponse.headers.set('x-middleware-override-headers', middlewareOverrideHeaders + ',' + overwrittenHeaders.join(','));\n        }\n    }\n    return {\n        response: finalResponse,\n        waitUntil: getWaitUntilPromiseFromEvent(event) ?? Promise.resolve(),\n        fetchMetrics: request.fetchMetrics\n    };\n}\n\n//# sourceMappingURL=adapter.js.map","/**\n * Calls the given async function only when the returned promise-like object is\n * awaited. Afterwards, it provides the resolved value synchronously as `value`\n * property.\n */ export function createLazyResult(fn) {\n    let pendingResult;\n    const result = {\n        then (onfulfilled, onrejected) {\n            if (!pendingResult) {\n                pendingResult = fn();\n            }\n            pendingResult.then((value)=>{\n                result.value = value;\n            }).catch(()=>{\n            // The externally awaited result will be rejected via `onrejected`. We\n            // don't need to handle it here. But we do want to avoid an unhandled\n            // rejection.\n            });\n            return pendingResult.then(onfulfilled, onrejected);\n        }\n    };\n    return result;\n}\nexport function isResolvedLazyResult(result) {\n    return result.hasOwnProperty('value');\n}\n\n//# sourceMappingURL=lazy-result.js.map","import { CamelToPascal } from './utility-types';\n\n/**\n * Converts string to kebab case\n *\n * @param {string} string\n * @returns {string} A kebabized string\n */\nexport const toKebabCase = (string: string) =>\n  string.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n\n/**\n * Converts string to camel case\n *\n * @param {string} string\n * @returns {string} A camelized string\n */\nexport const toCamelCase = <T extends string>(string: T) =>\n  string.replace(/^([A-Z])|[\\s-_]+(\\w)/g, (match, p1, p2) =>\n    p2 ? p2.toUpperCase() : p1.toLowerCase(),\n  );\n\n/**\n * Converts string to pascal case\n *\n * @param {string} string\n * @returns {string} A pascalized string\n */\nexport const toPascalCase = <T extends string>(string: T): CamelToPascal<T> => {\n  const camelCase = toCamelCase(string);\n\n  return (camelCase.charAt(0).toUpperCase() + camelCase.slice(1)) as CamelToPascal<T>;\n};\n\n/**\n * Merges classes into a single string\n *\n * @param {array} classes\n * @returns {string} A string of classes\n */\nexport const mergeClasses = <ClassType = string | undefined | null>(...classes: ClassType[]) =>\n  classes\n    .filter((className, index, array) => {\n      return (\n        Boolean(className) &&\n        (className as string).trim() !== '' &&\n        array.indexOf(className) === index\n      );\n    })\n    .join(' ')\n    .trim();\n\n/**\n * Check if a component has an accessibility prop\n *\n * @param {object} props\n * @returns {boolean} Whether the component has an accessibility prop\n */\nexport const hasA11yProp = (props: Record<string, any>) => {\n  for (const prop in props) {\n    if (prop.startsWith('aria-') || prop === 'role' || prop === 'title') {\n      return true;\n    }\n  }\n};\n","export default {\n  xmlns: 'http://www.w3.org/2000/svg',\n  width: 24,\n  height: 24,\n  viewBox: '0 0 24 24',\n  fill: 'none',\n  stroke: 'currentColor',\n  strokeWidth: 2,\n  strokeLinecap: 'round',\n  strokeLinejoin: 'round',\n};\n","import { createElement, forwardRef } from 'react';\nimport defaultAttributes from './defaultAttributes';\nimport { IconNode, LucideProps } from './types';\nimport { mergeClasses, hasA11yProp } from '@lucide/shared';\n\ninterface IconComponentProps extends LucideProps {\n  iconNode: IconNode;\n}\n\n/**\n * Lucide icon component\n *\n * @component Icon\n * @param {object} props\n * @param {string} props.color - The color of the icon\n * @param {number} props.size - The size of the icon\n * @param {number} props.strokeWidth - The stroke width of the icon\n * @param {boolean} props.absoluteStrokeWidth - Whether to use absolute stroke width\n * @param {string} props.className - The class name of the icon\n * @param {IconNode} props.children - The children of the icon\n * @param {IconNode} props.iconNode - The icon node of the icon\n *\n * @returns {ForwardRefExoticComponent} LucideIcon\n */\nconst Icon = forwardRef<SVGSVGElement, IconComponentProps>(\n  (\n    {\n      color = 'currentColor',\n      size = 24,\n      strokeWidth = 2,\n      absoluteStrokeWidth,\n      className = '',\n      children,\n      iconNode,\n      ...rest\n    },\n    ref,\n  ) =>\n    createElement(\n      'svg',\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? (Number(strokeWidth) * 24) / Number(size) : strokeWidth,\n        className: mergeClasses('lucide', className),\n        ...(!children && !hasA11yProp(rest) && { 'aria-hidden': 'true' }),\n        ...rest,\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...(Array.isArray(children) ? children : [children]),\n      ],\n    ),\n);\n\nexport default Icon;\n","import { createElement, forwardRef } from 'react';\nimport { mergeClasses, toKebabCase, toPascalCase } from '@lucide/shared';\nimport { IconNode, LucideProps } from './types';\nimport Icon from './Icon';\n\n/**\n * Create a Lucide icon component\n * @param {string} iconName\n * @param {array} iconNode\n * @returns {ForwardRefExoticComponent} LucideIcon\n */\nconst createLucideIcon = (iconName: string, iconNode: IconNode) => {\n  const Component = forwardRef<SVGSVGElement, LucideProps>(({ className, ...props }, ref) =>\n    createElement(Icon, {\n      ref,\n      iconNode,\n      className: mergeClasses(\n        `lucide-${toKebabCase(toPascalCase(iconName))}`,\n        `lucide-${iconName}`,\n        className,\n      ),\n      ...props,\n    }),\n  );\n\n  Component.displayName = toPascalCase(iconName);\n\n  return Component;\n};\n\nexport default createLucideIcon;\n","import PromiseQueue from 'next/dist/compiled/p-queue';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { isThenable } from '../../shared/lib/is-thenable';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { withExecuteRevalidates } from '../revalidation-utils';\nimport { bindSnapshot } from '../app-render/async-local-storage';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { afterTaskAsyncStorage } from '../app-render/after-task-async-storage.external';\nexport class AfterContext {\n    constructor({ waitUntil, onClose, onTaskError }){\n        this.workUnitStores = new Set();\n        this.waitUntil = waitUntil;\n        this.onClose = onClose;\n        this.onTaskError = onTaskError;\n        this.callbackQueue = new PromiseQueue();\n        this.callbackQueue.pause();\n    }\n    after(task) {\n        if (isThenable(task)) {\n            if (!this.waitUntil) {\n                errorWaitUntilNotAvailable();\n            }\n            this.waitUntil(task.catch((error)=>this.reportTaskError('promise', error)));\n        } else if (typeof task === 'function') {\n            // TODO(after): implement tracing\n            this.addCallback(task);\n        } else {\n            throw Object.defineProperty(new Error('`after()`: Argument must be a promise or a function'), \"__NEXT_ERROR_CODE\", {\n                value: \"E50\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    addCallback(callback) {\n        // if something is wrong, throw synchronously, bubbling up to the `after` callsite.\n        if (!this.waitUntil) {\n            errorWaitUntilNotAvailable();\n        }\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        if (workUnitStore) {\n            this.workUnitStores.add(workUnitStore);\n        }\n        const afterTaskStore = afterTaskAsyncStorage.getStore();\n        // This is used for checking if request APIs can be called inside `after`.\n        // Note that we need to check the phase in which the *topmost* `after` was called (which should be \"action\"),\n        // not the current phase (which might be \"after\" if we're in a nested after).\n        // Otherwise, we might allow `after(() => headers())`, but not `after(() => after(() => headers()))`.\n        const rootTaskSpawnPhase = afterTaskStore ? afterTaskStore.rootTaskSpawnPhase // nested after\n         : workUnitStore == null ? void 0 : workUnitStore.phase // topmost after\n        ;\n        // this should only happen once.\n        if (!this.runCallbacksOnClosePromise) {\n            this.runCallbacksOnClosePromise = this.runCallbacksOnClose();\n            this.waitUntil(this.runCallbacksOnClosePromise);\n        }\n        // Bind the callback to the current execution context (i.e. preserve all currently available ALS-es).\n        // We do this because we want all of these to be equivalent in every regard except timing:\n        //   after(() => x())\n        //   after(x())\n        //   await x()\n        const wrappedCallback = bindSnapshot(async ()=>{\n            try {\n                await afterTaskAsyncStorage.run({\n                    rootTaskSpawnPhase\n                }, ()=>callback());\n            } catch (error) {\n                this.reportTaskError('function', error);\n            }\n        });\n        this.callbackQueue.add(wrappedCallback);\n    }\n    async runCallbacksOnClose() {\n        await new Promise((resolve)=>this.onClose(resolve));\n        return this.runCallbacks();\n    }\n    async runCallbacks() {\n        if (this.callbackQueue.size === 0) return;\n        for (const workUnitStore of this.workUnitStores){\n            workUnitStore.phase = 'after';\n        }\n        const workStore = workAsyncStorage.getStore();\n        if (!workStore) {\n            throw Object.defineProperty(new InvariantError('Missing workStore in AfterContext.runCallbacks'), \"__NEXT_ERROR_CODE\", {\n                value: \"E547\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        return withExecuteRevalidates(workStore, ()=>{\n            this.callbackQueue.start();\n            return this.callbackQueue.onIdle();\n        });\n    }\n    reportTaskError(taskKind, error) {\n        // TODO(after): this is fine for now, but will need better intergration with our error reporting.\n        // TODO(after): should we log this if we have a onTaskError callback?\n        console.error(taskKind === 'promise' ? `A promise passed to \\`after()\\` rejected:` : `An error occurred in a function passed to \\`after()\\`:`, error);\n        if (this.onTaskError) {\n            // this is very defensive, but we really don't want anything to blow up in an error handler\n            try {\n                this.onTaskError == null ? void 0 : this.onTaskError.call(this, error);\n            } catch (handlerError) {\n                console.error(Object.defineProperty(new InvariantError('`onTaskError` threw while handling an error thrown from an `after` task', {\n                    cause: handlerError\n                }), \"__NEXT_ERROR_CODE\", {\n                    value: \"E569\",\n                    enumerable: false,\n                    configurable: true\n                }));\n            }\n        }\n    }\n}\nfunction errorWaitUntilNotAvailable() {\n    throw Object.defineProperty(new Error('`after()` will not work correctly, because `waitUntil` is not available in the current environment.'), \"__NEXT_ERROR_CODE\", {\n        value: \"E91\",\n        enumerable: false,\n        configurable: true\n    });\n}\n\n//# sourceMappingURL=after-context.js.map","import { AfterContext } from '../after/after-context';\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\nimport { createLazyResult } from '../lib/lazy-result';\nimport { getCacheHandlerEntries } from '../use-cache/handlers';\nexport function createWorkStore({ page, fallbackRouteParams, renderOpts, requestEndedState, isPrefetchRequest, buildId, previouslyRevalidatedTags }) {\n    /**\n   * Rules of Static & Dynamic HTML:\n   *\n   *    1.) We must generate static HTML unless the caller explicitly opts\n   *        in to dynamic HTML support.\n   *\n   *    2.) If dynamic HTML support is requested, we must honor that request\n   *        or throw an error. It is the sole responsibility of the caller to\n   *        ensure they aren't e.g. requesting dynamic HTML for an AMP page.\n   *\n   *    3.) If the request is in draft mode, we must generate dynamic HTML.\n   *\n   *    4.) If the request is a server action, we must generate dynamic HTML.\n   *\n   * These rules help ensure that other existing features like request caching,\n   * coalescing, and ISR continue working as intended.\n   */ const isStaticGeneration = !renderOpts.shouldWaitOnAllReady && !renderOpts.supportsDynamicResponse && !renderOpts.isDraftMode && !renderOpts.isPossibleServerAction;\n    const store = {\n        isStaticGeneration,\n        page,\n        fallbackRouteParams,\n        route: normalizeAppPath(page),\n        incrementalCache: // we fallback to a global incremental cache for edge-runtime locally\n        // so that it can access the fs cache without mocks\n        renderOpts.incrementalCache || globalThis.__incrementalCache,\n        cacheLifeProfiles: renderOpts.cacheLifeProfiles,\n        isRevalidate: renderOpts.isRevalidate,\n        isPrerendering: renderOpts.nextExport,\n        fetchCache: renderOpts.fetchCache,\n        isOnDemandRevalidate: renderOpts.isOnDemandRevalidate,\n        isDraftMode: renderOpts.isDraftMode,\n        requestEndedState,\n        isPrefetchRequest,\n        buildId,\n        reactLoadableManifest: (renderOpts == null ? void 0 : renderOpts.reactLoadableManifest) || {},\n        assetPrefix: (renderOpts == null ? void 0 : renderOpts.assetPrefix) || '',\n        afterContext: createAfterContext(renderOpts),\n        dynamicIOEnabled: renderOpts.experimental.dynamicIO,\n        dev: renderOpts.dev ?? false,\n        previouslyRevalidatedTags,\n        refreshTagsByCacheKind: createRefreshTagsByCacheKind()\n    };\n    // TODO: remove this when we resolve accessing the store outside the execution context\n    renderOpts.store = store;\n    return store;\n}\nfunction createAfterContext(renderOpts) {\n    const { waitUntil, onClose, onAfterTaskError } = renderOpts;\n    return new AfterContext({\n        waitUntil,\n        onClose,\n        onTaskError: onAfterTaskError\n    });\n}\n/**\n * Creates a map with lazy results that refresh tags for the respective cache\n * kind when they're awaited for the first time.\n */ function createRefreshTagsByCacheKind() {\n    const refreshTagsByCacheKind = new Map();\n    const cacheHandlers = getCacheHandlerEntries();\n    if (cacheHandlers) {\n        for (const [kind, cacheHandler] of cacheHandlers){\n            if ('refreshTags' in cacheHandler) {\n                refreshTagsByCacheKind.set(kind, createLazyResult(async ()=>cacheHandler.refreshTags()));\n            }\n        }\n    }\n    return refreshTagsByCacheKind;\n}\n\n//# sourceMappingURL=work-store.js.map","'use client'\n\nimport React, { useContext } from 'react'\n\nexport type ServerInsertedHTMLHook = (callbacks: () => React.ReactNode) => void\n\n// Use `React.createContext` to avoid errors from the RSC checks because\n// it can't be imported directly in Server Components:\n//\n//   import { createContext } from 'react'\n//\n// More info: https://github.com/vercel/next.js/pull/40686\nexport const ServerInsertedHTMLContext =\n  React.createContext<ServerInsertedHTMLHook | null>(null as any)\n\nexport function useServerInsertedHTML(callback: () => React.ReactNode): void {\n  const addInsertedServerHTMLCallback = useContext(ServerInsertedHTMLContext)\n  // Should have no effects on client where there's no flush effects provider\n  if (addInsertedServerHTMLCallback) {\n    addInsertedServerHTMLCallback(callback)\n  }\n}\n","import { normalizeLocalePath } from '../../i18n/normalize-locale-path'\nimport { removePathPrefix } from './remove-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\nimport type { I18NProvider } from '../../../../server/lib/i18n-provider'\n\nexport interface NextPathnameInfo {\n  /**\n   * The base path in case the pathname included it.\n   */\n  basePath?: string\n  /**\n   * The buildId for when the parsed URL is a data URL. Parsing it can be\n   * disabled with the `parseData` option.\n   */\n  buildId?: string\n  /**\n   * If there was a locale in the pathname, this will hold its value.\n   */\n  locale?: string\n  /**\n   * The processed pathname without a base path, locale, or data URL elements\n   * when parsing it is enabled.\n   */\n  pathname: string\n  /**\n   * A boolean telling if the pathname had a trailingSlash. This can be only\n   * true if trailingSlash is enabled.\n   */\n  trailingSlash?: boolean\n}\n\ninterface Options {\n  /**\n   * When passed to true, this function will also parse Nextjs data URLs.\n   */\n  parseData?: boolean\n  /**\n   * A partial of the Next.js configuration to parse the URL.\n   */\n  nextConfig?: {\n    basePath?: string\n    i18n?: { locales?: readonly string[] } | null\n    trailingSlash?: boolean\n  }\n\n  /**\n   * If provided, this normalizer will be used to detect the locale instead of\n   * the default locale detection.\n   */\n  i18nProvider?: I18NProvider\n}\n\nexport function getNextPathnameInfo(\n  pathname: string,\n  options: Options\n): NextPathnameInfo {\n  const { basePath, i18n, trailingSlash } = options.nextConfig ?? {}\n  const info: NextPathnameInfo = {\n    pathname,\n    trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash,\n  }\n\n  if (basePath && pathHasPrefix(info.pathname, basePath)) {\n    info.pathname = removePathPrefix(info.pathname, basePath)\n    info.basePath = basePath\n  }\n  let pathnameNoDataPrefix = info.pathname\n\n  if (\n    info.pathname.startsWith('/_next/data/') &&\n    info.pathname.endsWith('.json')\n  ) {\n    const paths = info.pathname\n      .replace(/^\\/_next\\/data\\//, '')\n      .replace(/\\.json$/, '')\n      .split('/')\n\n    const buildId = paths[0]\n    info.buildId = buildId\n    pathnameNoDataPrefix =\n      paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/'\n\n    // update pathname with normalized if enabled although\n    // we use normalized to populate locale info still\n    if (options.parseData === true) {\n      info.pathname = pathnameNoDataPrefix\n    }\n  }\n\n  // If provided, use the locale route normalizer to detect the locale instead\n  // of the function below.\n  if (i18n) {\n    let result = options.i18nProvider\n      ? options.i18nProvider.analyze(info.pathname)\n      : normalizeLocalePath(info.pathname, i18n.locales)\n\n    info.locale = result.detectedLocale\n    info.pathname = result.pathname ?? info.pathname\n\n    if (!result.detectedLocale && info.buildId) {\n      result = options.i18nProvider\n        ? options.i18nProvider.analyze(pathnameNoDataPrefix)\n        : normalizeLocalePath(pathnameNoDataPrefix, i18n.locales)\n\n      if (result.detectedLocale) {\n        info.locale = result.detectedLocale\n      }\n    }\n  }\n  return info\n}\n","import { useEffect } from 'react'\nimport { createHrefFromUrl } from './router-reducer/create-href-from-url'\n\nexport function handleHardNavError(error: unknown): boolean {\n  if (\n    error &&\n    typeof window !== 'undefined' &&\n    window.next.__pendingUrl &&\n    createHrefFromUrl(new URL(window.location.href)) !==\n      createHrefFromUrl(window.next.__pendingUrl)\n  ) {\n    console.error(\n      `Error occurred during navigation, falling back to hard navigation`,\n      error\n    )\n    window.location.href = window.next.__pendingUrl.toString()\n    return true\n  }\n  return false\n}\n\nexport function useNavFailureHandler() {\n  if (process.env.__NEXT_APP_NAV_FAIL_HANDLING) {\n    // this if is only for DCE of the feature flag not conditional\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      const uncaughtExceptionHandler = (\n        evt: ErrorEvent | PromiseRejectionEvent\n      ) => {\n        const error = 'reason' in evt ? evt.reason : evt.error\n        // if we have an unhandled exception/rejection during\n        // a navigation we fall back to a hard navigation to\n        // attempt recovering to a good state\n        handleHardNavError(error)\n      }\n      window.addEventListener('unhandledrejection', uncaughtExceptionHandler)\n      window.addEventListener('error', uncaughtExceptionHandler)\n      return () => {\n        window.removeEventListener('error', uncaughtExceptionHandler)\n        window.removeEventListener(\n          'unhandledrejection',\n          uncaughtExceptionHandler\n        )\n      }\n    }, [])\n  }\n}\n","import type { OutgoingHttpHeaders } from 'http'\n\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */\nexport function getHostname(\n  parsed: { hostname?: string | null },\n  headers?: OutgoingHttpHeaders\n): string | undefined {\n  // Get the hostname from the headers if it exists, otherwise use the parsed\n  // hostname.\n  let hostname: string\n  if (headers?.host && !Array.isArray(headers.host)) {\n    hostname = headers.host.toString().split(':', 1)[0]\n  } else if (parsed.hostname) {\n    hostname = parsed.hostname\n  } else return\n\n  return hostname.toLowerCase()\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import type { Dispatch } from 'react'\nimport React, { use } from 'react'\nimport { isThenable } from '../../shared/lib/is-thenable'\nimport type { AppRouterActionQueue } from './app-router-instance'\nimport type {\n  AppRouterState,\n  ReducerActions,\n  ReducerState,\n} from './router-reducer/router-reducer-types'\n\n// The app router state lives outside of React, so we can import the dispatch\n// method directly wherever we need it, rather than passing it around via props\n// or context.\nlet dispatch: Dispatch<ReducerActions> | null = null\n\nexport function dispatchAppRouterAction(action: ReducerActions) {\n  if (dispatch === null) {\n    throw new Error(\n      'Internal Next.js error: Router action dispatched before initialization.'\n    )\n  }\n  dispatch(action)\n}\n\nexport function useActionQueue(\n  actionQueue: AppRouterActionQueue\n): AppRouterState {\n  const [state, setState] = React.useState<ReducerState>(actionQueue.state)\n\n  // Because of a known issue that requires to decode Flight streams inside the\n  // render phase, we have to be a bit clever and assign the dispatch method to\n  // a module-level variable upon initialization. The useState hook in this\n  // module only exists to synchronize state that lives outside of React.\n  // Ideally, what we'd do instead is pass the state as a prop to root.render;\n  // this is conceptually how we're modeling the app router state, despite the\n  // weird implementation details.\n  if (process.env.NODE_ENV !== 'production') {\n    const useSyncDevRenderIndicator =\n      require('./react-dev-overlay/utils/dev-indicator/use-sync-dev-render-indicator')\n        .useSyncDevRenderIndicator as typeof import('./react-dev-overlay/utils/dev-indicator/use-sync-dev-render-indicator').useSyncDevRenderIndicator\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const syncDevRenderIndicator = useSyncDevRenderIndicator()\n\n    dispatch = (action: ReducerActions) => {\n      syncDevRenderIndicator(() => {\n        actionQueue.dispatch(action, setState)\n      })\n    }\n  } else {\n    dispatch = (action: ReducerActions) =>\n      actionQueue.dispatch(action, setState)\n  }\n\n  return isThenable(state) ? use(state) : state\n}\n","import { LogSpanAllowList, NextVanillaSpanAllowlist } from './constants';\nimport { isThenable } from '../../../shared/lib/is-thenable';\nlet api;\n// we want to allow users to use their own version of @opentelemetry/api if they\n// want to, so we try to require it first, and if it fails we fall back to the\n// version that is bundled with Next.js\n// this is because @opentelemetry/api has to be synced with the version of\n// @opentelemetry/tracing that is used, and we don't want to force users to use\n// the version that is bundled with Next.js.\n// the API is ~stable, so this should be fine\nif (process.env.NEXT_RUNTIME === 'edge') {\n    api = require('@opentelemetry/api');\n} else {\n    try {\n        api = require('@opentelemetry/api');\n    } catch (err) {\n        api = require('next/dist/compiled/@opentelemetry/api');\n    }\n}\nconst { context, propagation, trace, SpanStatusCode, SpanKind, ROOT_CONTEXT } = api;\nexport class BubbledError extends Error {\n    constructor(bubble, result){\n        super(), this.bubble = bubble, this.result = result;\n    }\n}\nexport function isBubbledError(error) {\n    if (typeof error !== 'object' || error === null) return false;\n    return error instanceof BubbledError;\n}\nconst closeSpanWithError = (span, error)=>{\n    if (isBubbledError(error) && error.bubble) {\n        span.setAttribute('next.bubble', true);\n    } else {\n        if (error) {\n            span.recordException(error);\n        }\n        span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: error == null ? void 0 : error.message\n        });\n    }\n    span.end();\n};\n/** we use this map to propagate attributes from nested spans to the top span */ const rootSpanAttributesStore = new Map();\nconst rootSpanIdKey = api.createContextKey('next.rootSpanId');\nlet lastSpanId = 0;\nconst getSpanId = ()=>lastSpanId++;\nconst clientTraceDataSetter = {\n    set (carrier, key, value) {\n        carrier.push({\n            key,\n            value\n        });\n    }\n};\nclass NextTracerImpl {\n    /**\n   * Returns an instance to the trace with configured name.\n   * Since wrap / trace can be defined in any place prior to actual trace subscriber initialization,\n   * This should be lazily evaluated.\n   */ getTracerInstance() {\n        return trace.getTracer('next.js', '0.0.1');\n    }\n    getContext() {\n        return context;\n    }\n    getTracePropagationData() {\n        const activeContext = context.active();\n        const entries = [];\n        propagation.inject(activeContext, entries, clientTraceDataSetter);\n        return entries;\n    }\n    getActiveScopeSpan() {\n        return trace.getSpan(context == null ? void 0 : context.active());\n    }\n    withPropagatedContext(carrier, fn, getter) {\n        const activeContext = context.active();\n        if (trace.getSpanContext(activeContext)) {\n            // Active span is already set, too late to propagate.\n            return fn();\n        }\n        const remoteContext = propagation.extract(activeContext, carrier, getter);\n        return context.with(remoteContext, fn);\n    }\n    trace(...args) {\n        var _trace_getSpanContext;\n        const [type, fnOrOptions, fnOrEmpty] = args;\n        // coerce options form overload\n        const { fn, options } = typeof fnOrOptions === 'function' ? {\n            fn: fnOrOptions,\n            options: {}\n        } : {\n            fn: fnOrEmpty,\n            options: {\n                ...fnOrOptions\n            }\n        };\n        const spanName = options.spanName ?? type;\n        if (!NextVanillaSpanAllowlist.includes(type) && process.env.NEXT_OTEL_VERBOSE !== '1' || options.hideSpan) {\n            return fn();\n        }\n        // Trying to get active scoped span to assign parent. If option specifies parent span manually, will try to use it.\n        let spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        let isRootSpan = false;\n        if (!spanContext) {\n            spanContext = (context == null ? void 0 : context.active()) ?? ROOT_CONTEXT;\n            isRootSpan = true;\n        } else if ((_trace_getSpanContext = trace.getSpanContext(spanContext)) == null ? void 0 : _trace_getSpanContext.isRemote) {\n            isRootSpan = true;\n        }\n        const spanId = getSpanId();\n        options.attributes = {\n            'next.span_name': spanName,\n            'next.span_type': type,\n            ...options.attributes\n        };\n        return context.with(spanContext.setValue(rootSpanIdKey, spanId), ()=>this.getTracerInstance().startActiveSpan(spanName, options, (span)=>{\n                const startTime = 'performance' in globalThis && 'measure' in performance ? globalThis.performance.now() : undefined;\n                const onCleanup = ()=>{\n                    rootSpanAttributesStore.delete(spanId);\n                    if (startTime && process.env.NEXT_OTEL_PERFORMANCE_PREFIX && LogSpanAllowList.includes(type || '')) {\n                        performance.measure(`${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-${(type.split('.').pop() || '').replace(/[A-Z]/g, (match)=>'-' + match.toLowerCase())}`, {\n                            start: startTime,\n                            end: performance.now()\n                        });\n                    }\n                };\n                if (isRootSpan) {\n                    rootSpanAttributesStore.set(spanId, new Map(Object.entries(options.attributes ?? {})));\n                }\n                try {\n                    if (fn.length > 1) {\n                        return fn(span, (err)=>closeSpanWithError(span, err));\n                    }\n                    const result = fn(span);\n                    if (isThenable(result)) {\n                        // If there's error make sure it throws\n                        return result.then((res)=>{\n                            span.end();\n                            // Need to pass down the promise result,\n                            // it could be react stream response with error { error, stream }\n                            return res;\n                        }).catch((err)=>{\n                            closeSpanWithError(span, err);\n                            throw err;\n                        }).finally(onCleanup);\n                    } else {\n                        span.end();\n                        onCleanup();\n                    }\n                    return result;\n                } catch (err) {\n                    closeSpanWithError(span, err);\n                    onCleanup();\n                    throw err;\n                }\n            }));\n    }\n    wrap(...args) {\n        const tracer = this;\n        const [name, options, fn] = args.length === 3 ? args : [\n            args[0],\n            {},\n            args[1]\n        ];\n        if (!NextVanillaSpanAllowlist.includes(name) && process.env.NEXT_OTEL_VERBOSE !== '1') {\n            return fn;\n        }\n        return function() {\n            let optionsObj = options;\n            if (typeof optionsObj === 'function' && typeof fn === 'function') {\n                optionsObj = optionsObj.apply(this, arguments);\n            }\n            const lastArgId = arguments.length - 1;\n            const cb = arguments[lastArgId];\n            if (typeof cb === 'function') {\n                const scopeBoundCb = tracer.getContext().bind(context.active(), cb);\n                return tracer.trace(name, optionsObj, (_span, done)=>{\n                    arguments[lastArgId] = function(err) {\n                        done == null ? void 0 : done(err);\n                        return scopeBoundCb.apply(this, arguments);\n                    };\n                    return fn.apply(this, arguments);\n                });\n            } else {\n                return tracer.trace(name, optionsObj, ()=>fn.apply(this, arguments));\n            }\n        };\n    }\n    startSpan(...args) {\n        const [type, options] = args;\n        const spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        return this.getTracerInstance().startSpan(type, options, spanContext);\n    }\n    getSpanContext(parentSpan) {\n        const spanContext = parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined;\n        return spanContext;\n    }\n    getRootSpanAttributes() {\n        const spanId = context.active().getValue(rootSpanIdKey);\n        return rootSpanAttributesStore.get(spanId);\n    }\n    setRootSpanAttribute(key, value) {\n        const spanId = context.active().getValue(rootSpanIdKey);\n        const attributes = rootSpanAttributesStore.get(spanId);\n        if (attributes) {\n            attributes.set(key, value);\n        }\n    }\n}\nconst getTracer = (()=>{\n    const tracer = new NextTracerImpl();\n    return ()=>tracer;\n})();\nexport { getTracer, SpanStatusCode, SpanKind };\n\n//# sourceMappingURL=tracer.js.map","/**\n * @license React\n * react-server-dom-webpack-client.edge.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar ReactDOM = require(\"react-dom\"),\n  decoderOptions = { stream: !0 };\nfunction resolveClientReference(bundlerConfig, metadata) {\n  if (bundlerConfig) {\n    var moduleExports = bundlerConfig[metadata[0]];\n    if ((bundlerConfig = moduleExports && moduleExports[metadata[2]]))\n      moduleExports = bundlerConfig.name;\n    else {\n      bundlerConfig = moduleExports && moduleExports[\"*\"];\n      if (!bundlerConfig)\n        throw Error(\n          'Could not find the module \"' +\n            metadata[0] +\n            '\" in the React Server Consumer Manifest. This is probably a bug in the React Server Components bundler.'\n        );\n      moduleExports = metadata[2];\n    }\n    return 4 === metadata.length\n      ? [bundlerConfig.id, bundlerConfig.chunks, moduleExports, 1]\n      : [bundlerConfig.id, bundlerConfig.chunks, moduleExports];\n  }\n  return metadata;\n}\nfunction resolveServerReference(bundlerConfig, id) {\n  var name = \"\",\n    resolvedModuleData = bundlerConfig[id];\n  if (resolvedModuleData) name = resolvedModuleData.name;\n  else {\n    var idx = id.lastIndexOf(\"#\");\n    -1 !== idx &&\n      ((name = id.slice(idx + 1)),\n      (resolvedModuleData = bundlerConfig[id.slice(0, idx)]));\n    if (!resolvedModuleData)\n      throw Error(\n        'Could not find the module \"' +\n          id +\n          '\" in the React Server Manifest. This is probably a bug in the React Server Components bundler.'\n      );\n  }\n  return resolvedModuleData.async\n    ? [resolvedModuleData.id, resolvedModuleData.chunks, name, 1]\n    : [resolvedModuleData.id, resolvedModuleData.chunks, name];\n}\nvar chunkCache = new Map();\nfunction requireAsyncModule(id) {\n  var promise = globalThis.__next_require__(id);\n  if (\"function\" !== typeof promise.then || \"fulfilled\" === promise.status)\n    return null;\n  promise.then(\n    function (value) {\n      promise.status = \"fulfilled\";\n      promise.value = value;\n    },\n    function (reason) {\n      promise.status = \"rejected\";\n      promise.reason = reason;\n    }\n  );\n  return promise;\n}\nfunction ignoreReject() {}\nfunction preloadModule(metadata) {\n  for (var chunks = metadata[1], promises = [], i = 0; i < chunks.length; ) {\n    var chunkId = chunks[i++];\n    chunks[i++];\n    var entry = chunkCache.get(chunkId);\n    if (void 0 === entry) {\n      entry = __webpack_chunk_load__(chunkId);\n      promises.push(entry);\n      var resolve = chunkCache.set.bind(chunkCache, chunkId, null);\n      entry.then(resolve, ignoreReject);\n      chunkCache.set(chunkId, entry);\n    } else null !== entry && promises.push(entry);\n  }\n  return 4 === metadata.length\n    ? 0 === promises.length\n      ? requireAsyncModule(metadata[0])\n      : Promise.all(promises).then(function () {\n          return requireAsyncModule(metadata[0]);\n        })\n    : 0 < promises.length\n      ? Promise.all(promises)\n      : null;\n}\nfunction requireModule(metadata) {\n  var moduleExports = globalThis.__next_require__(metadata[0]);\n  if (4 === metadata.length && \"function\" === typeof moduleExports.then)\n    if (\"fulfilled\" === moduleExports.status)\n      moduleExports = moduleExports.value;\n    else throw moduleExports.reason;\n  return \"*\" === metadata[2]\n    ? moduleExports\n    : \"\" === metadata[2]\n      ? moduleExports.__esModule\n        ? moduleExports.default\n        : moduleExports\n      : moduleExports[metadata[2]];\n}\nfunction prepareDestinationWithChunks(moduleLoading, chunks, nonce$jscomp$0) {\n  if (null !== moduleLoading)\n    for (var i = 1; i < chunks.length; i += 2) {\n      var nonce = nonce$jscomp$0,\n        JSCompiler_temp_const = ReactDOMSharedInternals.d,\n        JSCompiler_temp_const$jscomp$0 = JSCompiler_temp_const.X,\n        JSCompiler_temp_const$jscomp$1 = moduleLoading.prefix + chunks[i];\n      var JSCompiler_inline_result = moduleLoading.crossOrigin;\n      JSCompiler_inline_result =\n        \"string\" === typeof JSCompiler_inline_result\n          ? \"use-credentials\" === JSCompiler_inline_result\n            ? JSCompiler_inline_result\n            : \"\"\n          : void 0;\n      JSCompiler_temp_const$jscomp$0.call(\n        JSCompiler_temp_const,\n        JSCompiler_temp_const$jscomp$1,\n        { crossOrigin: JSCompiler_inline_result, nonce: nonce }\n      );\n    }\n}\nvar ReactDOMSharedInternals =\n    ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ASYNC_ITERATOR = Symbol.asyncIterator,\n  isArrayImpl = Array.isArray,\n  getPrototypeOf = Object.getPrototypeOf,\n  ObjectPrototype = Object.prototype,\n  knownServerReferences = new WeakMap();\nfunction serializeNumber(number) {\n  return Number.isFinite(number)\n    ? 0 === number && -Infinity === 1 / number\n      ? \"$-0\"\n      : number\n    : Infinity === number\n      ? \"$Infinity\"\n      : -Infinity === number\n        ? \"$-Infinity\"\n        : \"$NaN\";\n}\nfunction processReply(\n  root,\n  formFieldPrefix,\n  temporaryReferences,\n  resolve,\n  reject\n) {\n  function serializeTypedArray(tag, typedArray) {\n    typedArray = new Blob([\n      new Uint8Array(\n        typedArray.buffer,\n        typedArray.byteOffset,\n        typedArray.byteLength\n      )\n    ]);\n    var blobId = nextPartId++;\n    null === formData && (formData = new FormData());\n    formData.append(formFieldPrefix + blobId, typedArray);\n    return \"$\" + tag + blobId.toString(16);\n  }\n  function serializeBinaryReader(reader) {\n    function progress(entry) {\n      entry.done\n        ? ((entry = nextPartId++),\n          data.append(formFieldPrefix + entry, new Blob(buffer)),\n          data.append(\n            formFieldPrefix + streamId,\n            '\"$o' + entry.toString(16) + '\"'\n          ),\n          data.append(formFieldPrefix + streamId, \"C\"),\n          pendingParts--,\n          0 === pendingParts && resolve(data))\n        : (buffer.push(entry.value),\n          reader.read(new Uint8Array(1024)).then(progress, reject));\n    }\n    null === formData && (formData = new FormData());\n    var data = formData;\n    pendingParts++;\n    var streamId = nextPartId++,\n      buffer = [];\n    reader.read(new Uint8Array(1024)).then(progress, reject);\n    return \"$r\" + streamId.toString(16);\n  }\n  function serializeReader(reader) {\n    function progress(entry) {\n      if (entry.done)\n        data.append(formFieldPrefix + streamId, \"C\"),\n          pendingParts--,\n          0 === pendingParts && resolve(data);\n      else\n        try {\n          var partJSON = JSON.stringify(entry.value, resolveToJSON);\n          data.append(formFieldPrefix + streamId, partJSON);\n          reader.read().then(progress, reject);\n        } catch (x) {\n          reject(x);\n        }\n    }\n    null === formData && (formData = new FormData());\n    var data = formData;\n    pendingParts++;\n    var streamId = nextPartId++;\n    reader.read().then(progress, reject);\n    return \"$R\" + streamId.toString(16);\n  }\n  function serializeReadableStream(stream) {\n    try {\n      var binaryReader = stream.getReader({ mode: \"byob\" });\n    } catch (x) {\n      return serializeReader(stream.getReader());\n    }\n    return serializeBinaryReader(binaryReader);\n  }\n  function serializeAsyncIterable(iterable, iterator) {\n    function progress(entry) {\n      if (entry.done) {\n        if (void 0 === entry.value)\n          data.append(formFieldPrefix + streamId, \"C\");\n        else\n          try {\n            var partJSON = JSON.stringify(entry.value, resolveToJSON);\n            data.append(formFieldPrefix + streamId, \"C\" + partJSON);\n          } catch (x) {\n            reject(x);\n            return;\n          }\n        pendingParts--;\n        0 === pendingParts && resolve(data);\n      } else\n        try {\n          var partJSON$22 = JSON.stringify(entry.value, resolveToJSON);\n          data.append(formFieldPrefix + streamId, partJSON$22);\n          iterator.next().then(progress, reject);\n        } catch (x$23) {\n          reject(x$23);\n        }\n    }\n    null === formData && (formData = new FormData());\n    var data = formData;\n    pendingParts++;\n    var streamId = nextPartId++;\n    iterable = iterable === iterator;\n    iterator.next().then(progress, reject);\n    return \"$\" + (iterable ? \"x\" : \"X\") + streamId.toString(16);\n  }\n  function resolveToJSON(key, value) {\n    if (null === value) return null;\n    if (\"object\" === typeof value) {\n      switch (value.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          if (void 0 !== temporaryReferences && -1 === key.indexOf(\":\")) {\n            var parentReference = writtenObjects.get(this);\n            if (void 0 !== parentReference)\n              return (\n                temporaryReferences.set(parentReference + \":\" + key, value),\n                \"$T\"\n              );\n          }\n          throw Error(\n            \"React Element cannot be passed to Server Functions from the Client without a temporary reference set. Pass a TemporaryReferenceSet to the options.\"\n          );\n        case REACT_LAZY_TYPE:\n          parentReference = value._payload;\n          var init = value._init;\n          null === formData && (formData = new FormData());\n          pendingParts++;\n          try {\n            var resolvedModel = init(parentReference),\n              lazyId = nextPartId++,\n              partJSON = serializeModel(resolvedModel, lazyId);\n            formData.append(formFieldPrefix + lazyId, partJSON);\n            return \"$\" + lazyId.toString(16);\n          } catch (x) {\n            if (\n              \"object\" === typeof x &&\n              null !== x &&\n              \"function\" === typeof x.then\n            ) {\n              pendingParts++;\n              var lazyId$24 = nextPartId++;\n              parentReference = function () {\n                try {\n                  var partJSON$25 = serializeModel(value, lazyId$24),\n                    data$26 = formData;\n                  data$26.append(formFieldPrefix + lazyId$24, partJSON$25);\n                  pendingParts--;\n                  0 === pendingParts && resolve(data$26);\n                } catch (reason) {\n                  reject(reason);\n                }\n              };\n              x.then(parentReference, parentReference);\n              return \"$\" + lazyId$24.toString(16);\n            }\n            reject(x);\n            return null;\n          } finally {\n            pendingParts--;\n          }\n      }\n      if (\"function\" === typeof value.then) {\n        null === formData && (formData = new FormData());\n        pendingParts++;\n        var promiseId = nextPartId++;\n        value.then(function (partValue) {\n          try {\n            var partJSON$28 = serializeModel(partValue, promiseId);\n            partValue = formData;\n            partValue.append(formFieldPrefix + promiseId, partJSON$28);\n            pendingParts--;\n            0 === pendingParts && resolve(partValue);\n          } catch (reason) {\n            reject(reason);\n          }\n        }, reject);\n        return \"$@\" + promiseId.toString(16);\n      }\n      parentReference = writtenObjects.get(value);\n      if (void 0 !== parentReference)\n        if (modelRoot === value) modelRoot = null;\n        else return parentReference;\n      else\n        -1 === key.indexOf(\":\") &&\n          ((parentReference = writtenObjects.get(this)),\n          void 0 !== parentReference &&\n            ((key = parentReference + \":\" + key),\n            writtenObjects.set(value, key),\n            void 0 !== temporaryReferences &&\n              temporaryReferences.set(key, value)));\n      if (isArrayImpl(value)) return value;\n      if (value instanceof FormData) {\n        null === formData && (formData = new FormData());\n        var data$32 = formData;\n        key = nextPartId++;\n        var prefix = formFieldPrefix + key + \"_\";\n        value.forEach(function (originalValue, originalKey) {\n          data$32.append(prefix + originalKey, originalValue);\n        });\n        return \"$K\" + key.toString(16);\n      }\n      if (value instanceof Map)\n        return (\n          (key = nextPartId++),\n          (parentReference = serializeModel(Array.from(value), key)),\n          null === formData && (formData = new FormData()),\n          formData.append(formFieldPrefix + key, parentReference),\n          \"$Q\" + key.toString(16)\n        );\n      if (value instanceof Set)\n        return (\n          (key = nextPartId++),\n          (parentReference = serializeModel(Array.from(value), key)),\n          null === formData && (formData = new FormData()),\n          formData.append(formFieldPrefix + key, parentReference),\n          \"$W\" + key.toString(16)\n        );\n      if (value instanceof ArrayBuffer)\n        return (\n          (key = new Blob([value])),\n          (parentReference = nextPartId++),\n          null === formData && (formData = new FormData()),\n          formData.append(formFieldPrefix + parentReference, key),\n          \"$A\" + parentReference.toString(16)\n        );\n      if (value instanceof Int8Array) return serializeTypedArray(\"O\", value);\n      if (value instanceof Uint8Array) return serializeTypedArray(\"o\", value);\n      if (value instanceof Uint8ClampedArray)\n        return serializeTypedArray(\"U\", value);\n      if (value instanceof Int16Array) return serializeTypedArray(\"S\", value);\n      if (value instanceof Uint16Array) return serializeTypedArray(\"s\", value);\n      if (value instanceof Int32Array) return serializeTypedArray(\"L\", value);\n      if (value instanceof Uint32Array) return serializeTypedArray(\"l\", value);\n      if (value instanceof Float32Array) return serializeTypedArray(\"G\", value);\n      if (value instanceof Float64Array) return serializeTypedArray(\"g\", value);\n      if (value instanceof BigInt64Array)\n        return serializeTypedArray(\"M\", value);\n      if (value instanceof BigUint64Array)\n        return serializeTypedArray(\"m\", value);\n      if (value instanceof DataView) return serializeTypedArray(\"V\", value);\n      if (\"function\" === typeof Blob && value instanceof Blob)\n        return (\n          null === formData && (formData = new FormData()),\n          (key = nextPartId++),\n          formData.append(formFieldPrefix + key, value),\n          \"$B\" + key.toString(16)\n        );\n      if ((key = getIteratorFn(value)))\n        return (\n          (parentReference = key.call(value)),\n          parentReference === value\n            ? ((key = nextPartId++),\n              (parentReference = serializeModel(\n                Array.from(parentReference),\n                key\n              )),\n              null === formData && (formData = new FormData()),\n              formData.append(formFieldPrefix + key, parentReference),\n              \"$i\" + key.toString(16))\n            : Array.from(parentReference)\n        );\n      if (\n        \"function\" === typeof ReadableStream &&\n        value instanceof ReadableStream\n      )\n        return serializeReadableStream(value);\n      key = value[ASYNC_ITERATOR];\n      if (\"function\" === typeof key)\n        return serializeAsyncIterable(value, key.call(value));\n      key = getPrototypeOf(value);\n      if (\n        key !== ObjectPrototype &&\n        (null === key || null !== getPrototypeOf(key))\n      ) {\n        if (void 0 === temporaryReferences)\n          throw Error(\n            \"Only plain objects, and a few built-ins, can be passed to Server Functions. Classes or null prototypes are not supported.\"\n          );\n        return \"$T\";\n      }\n      return value;\n    }\n    if (\"string\" === typeof value) {\n      if (\"Z\" === value[value.length - 1] && this[key] instanceof Date)\n        return \"$D\" + value;\n      key = \"$\" === value[0] ? \"$\" + value : value;\n      return key;\n    }\n    if (\"boolean\" === typeof value) return value;\n    if (\"number\" === typeof value) return serializeNumber(value);\n    if (\"undefined\" === typeof value) return \"$undefined\";\n    if (\"function\" === typeof value) {\n      parentReference = knownServerReferences.get(value);\n      if (void 0 !== parentReference)\n        return (\n          (key = JSON.stringify(\n            { id: parentReference.id, bound: parentReference.bound },\n            resolveToJSON\n          )),\n          null === formData && (formData = new FormData()),\n          (parentReference = nextPartId++),\n          formData.set(formFieldPrefix + parentReference, key),\n          \"$F\" + parentReference.toString(16)\n        );\n      if (\n        void 0 !== temporaryReferences &&\n        -1 === key.indexOf(\":\") &&\n        ((parentReference = writtenObjects.get(this)),\n        void 0 !== parentReference)\n      )\n        return (\n          temporaryReferences.set(parentReference + \":\" + key, value), \"$T\"\n        );\n      throw Error(\n        \"Client Functions cannot be passed directly to Server Functions. Only Functions passed from the Server can be passed back again.\"\n      );\n    }\n    if (\"symbol\" === typeof value) {\n      if (\n        void 0 !== temporaryReferences &&\n        -1 === key.indexOf(\":\") &&\n        ((parentReference = writtenObjects.get(this)),\n        void 0 !== parentReference)\n      )\n        return (\n          temporaryReferences.set(parentReference + \":\" + key, value), \"$T\"\n        );\n      throw Error(\n        \"Symbols cannot be passed to a Server Function without a temporary reference set. Pass a TemporaryReferenceSet to the options.\"\n      );\n    }\n    if (\"bigint\" === typeof value) return \"$n\" + value.toString(10);\n    throw Error(\n      \"Type \" +\n        typeof value +\n        \" is not supported as an argument to a Server Function.\"\n    );\n  }\n  function serializeModel(model, id) {\n    \"object\" === typeof model &&\n      null !== model &&\n      ((id = \"$\" + id.toString(16)),\n      writtenObjects.set(model, id),\n      void 0 !== temporaryReferences && temporaryReferences.set(id, model));\n    modelRoot = model;\n    return JSON.stringify(model, resolveToJSON);\n  }\n  var nextPartId = 1,\n    pendingParts = 0,\n    formData = null,\n    writtenObjects = new WeakMap(),\n    modelRoot = root,\n    json = serializeModel(root, 0);\n  null === formData\n    ? resolve(json)\n    : (formData.set(formFieldPrefix + \"0\", json),\n      0 === pendingParts && resolve(formData));\n  return function () {\n    0 < pendingParts &&\n      ((pendingParts = 0),\n      null === formData ? resolve(json) : resolve(formData));\n  };\n}\nvar boundCache = new WeakMap();\nfunction encodeFormData(reference) {\n  var resolve,\n    reject,\n    thenable = new Promise(function (res, rej) {\n      resolve = res;\n      reject = rej;\n    });\n  processReply(\n    reference,\n    \"\",\n    void 0,\n    function (body) {\n      if (\"string\" === typeof body) {\n        var data = new FormData();\n        data.append(\"0\", body);\n        body = data;\n      }\n      thenable.status = \"fulfilled\";\n      thenable.value = body;\n      resolve(body);\n    },\n    function (e) {\n      thenable.status = \"rejected\";\n      thenable.reason = e;\n      reject(e);\n    }\n  );\n  return thenable;\n}\nfunction defaultEncodeFormAction(identifierPrefix) {\n  var referenceClosure = knownServerReferences.get(this);\n  if (!referenceClosure)\n    throw Error(\n      \"Tried to encode a Server Action from a different instance than the encoder is from. This is a bug in React.\"\n    );\n  var data = null;\n  if (null !== referenceClosure.bound) {\n    data = boundCache.get(referenceClosure);\n    data ||\n      ((data = encodeFormData({\n        id: referenceClosure.id,\n        bound: referenceClosure.bound\n      })),\n      boundCache.set(referenceClosure, data));\n    if (\"rejected\" === data.status) throw data.reason;\n    if (\"fulfilled\" !== data.status) throw data;\n    referenceClosure = data.value;\n    var prefixedData = new FormData();\n    referenceClosure.forEach(function (value, key) {\n      prefixedData.append(\"$ACTION_\" + identifierPrefix + \":\" + key, value);\n    });\n    data = prefixedData;\n    referenceClosure = \"$ACTION_REF_\" + identifierPrefix;\n  } else referenceClosure = \"$ACTION_ID_\" + referenceClosure.id;\n  return {\n    name: referenceClosure,\n    method: \"POST\",\n    encType: \"multipart/form-data\",\n    data: data\n  };\n}\nfunction isSignatureEqual(referenceId, numberOfBoundArgs) {\n  var referenceClosure = knownServerReferences.get(this);\n  if (!referenceClosure)\n    throw Error(\n      \"Tried to encode a Server Action from a different instance than the encoder is from. This is a bug in React.\"\n    );\n  if (referenceClosure.id !== referenceId) return !1;\n  var boundPromise = referenceClosure.bound;\n  if (null === boundPromise) return 0 === numberOfBoundArgs;\n  switch (boundPromise.status) {\n    case \"fulfilled\":\n      return boundPromise.value.length === numberOfBoundArgs;\n    case \"pending\":\n      throw boundPromise;\n    case \"rejected\":\n      throw boundPromise.reason;\n    default:\n      throw (\n        (\"string\" !== typeof boundPromise.status &&\n          ((boundPromise.status = \"pending\"),\n          boundPromise.then(\n            function (boundArgs) {\n              boundPromise.status = \"fulfilled\";\n              boundPromise.value = boundArgs;\n            },\n            function (error) {\n              boundPromise.status = \"rejected\";\n              boundPromise.reason = error;\n            }\n          )),\n        boundPromise)\n      );\n  }\n}\nfunction registerBoundServerReference(reference, id, bound, encodeFormAction) {\n  knownServerReferences.has(reference) ||\n    (knownServerReferences.set(reference, {\n      id: id,\n      originalBind: reference.bind,\n      bound: bound\n    }),\n    Object.defineProperties(reference, {\n      $$FORM_ACTION: {\n        value:\n          void 0 === encodeFormAction\n            ? defaultEncodeFormAction\n            : function () {\n                var referenceClosure = knownServerReferences.get(this);\n                if (!referenceClosure)\n                  throw Error(\n                    \"Tried to encode a Server Action from a different instance than the encoder is from. This is a bug in React.\"\n                  );\n                var boundPromise = referenceClosure.bound;\n                null === boundPromise && (boundPromise = Promise.resolve([]));\n                return encodeFormAction(referenceClosure.id, boundPromise);\n              }\n      },\n      $$IS_SIGNATURE_EQUAL: { value: isSignatureEqual },\n      bind: { value: bind }\n    }));\n}\nvar FunctionBind = Function.prototype.bind,\n  ArraySlice = Array.prototype.slice;\nfunction bind() {\n  var referenceClosure = knownServerReferences.get(this);\n  if (!referenceClosure) return FunctionBind.apply(this, arguments);\n  var newFn = referenceClosure.originalBind.apply(this, arguments),\n    args = ArraySlice.call(arguments, 1),\n    boundPromise = null;\n  boundPromise =\n    null !== referenceClosure.bound\n      ? Promise.resolve(referenceClosure.bound).then(function (boundArgs) {\n          return boundArgs.concat(args);\n        })\n      : Promise.resolve(args);\n  knownServerReferences.set(newFn, {\n    id: referenceClosure.id,\n    originalBind: newFn.bind,\n    bound: boundPromise\n  });\n  Object.defineProperties(newFn, {\n    $$FORM_ACTION: { value: this.$$FORM_ACTION },\n    $$IS_SIGNATURE_EQUAL: { value: isSignatureEqual },\n    bind: { value: bind }\n  });\n  return newFn;\n}\nfunction createBoundServerReference(metaData, callServer, encodeFormAction) {\n  function action() {\n    var args = Array.prototype.slice.call(arguments);\n    return bound\n      ? \"fulfilled\" === bound.status\n        ? callServer(id, bound.value.concat(args))\n        : Promise.resolve(bound).then(function (boundArgs) {\n            return callServer(id, boundArgs.concat(args));\n          })\n      : callServer(id, args);\n  }\n  var id = metaData.id,\n    bound = metaData.bound;\n  registerBoundServerReference(action, id, bound, encodeFormAction);\n  return action;\n}\nfunction createServerReference$1(id, callServer, encodeFormAction) {\n  function action() {\n    var args = Array.prototype.slice.call(arguments);\n    return callServer(id, args);\n  }\n  registerBoundServerReference(action, id, null, encodeFormAction);\n  return action;\n}\nfunction ReactPromise(status, value, reason, response) {\n  this.status = status;\n  this.value = value;\n  this.reason = reason;\n  this._response = response;\n}\nReactPromise.prototype = Object.create(Promise.prototype);\nReactPromise.prototype.then = function (resolve, reject) {\n  switch (this.status) {\n    case \"resolved_model\":\n      initializeModelChunk(this);\n      break;\n    case \"resolved_module\":\n      initializeModuleChunk(this);\n  }\n  switch (this.status) {\n    case \"fulfilled\":\n      resolve(this.value);\n      break;\n    case \"pending\":\n    case \"blocked\":\n      resolve &&\n        (null === this.value && (this.value = []), this.value.push(resolve));\n      reject &&\n        (null === this.reason && (this.reason = []), this.reason.push(reject));\n      break;\n    default:\n      reject && reject(this.reason);\n  }\n};\nfunction readChunk(chunk) {\n  switch (chunk.status) {\n    case \"resolved_model\":\n      initializeModelChunk(chunk);\n      break;\n    case \"resolved_module\":\n      initializeModuleChunk(chunk);\n  }\n  switch (chunk.status) {\n    case \"fulfilled\":\n      return chunk.value;\n    case \"pending\":\n    case \"blocked\":\n      throw chunk;\n    default:\n      throw chunk.reason;\n  }\n}\nfunction createPendingChunk(response) {\n  return new ReactPromise(\"pending\", null, null, response);\n}\nfunction wakeChunk(listeners, value) {\n  for (var i = 0; i < listeners.length; i++) (0, listeners[i])(value);\n}\nfunction wakeChunkIfInitialized(chunk, resolveListeners, rejectListeners) {\n  switch (chunk.status) {\n    case \"fulfilled\":\n      wakeChunk(resolveListeners, chunk.value);\n      break;\n    case \"pending\":\n    case \"blocked\":\n      if (chunk.value)\n        for (var i = 0; i < resolveListeners.length; i++)\n          chunk.value.push(resolveListeners[i]);\n      else chunk.value = resolveListeners;\n      if (chunk.reason) {\n        if (rejectListeners)\n          for (\n            resolveListeners = 0;\n            resolveListeners < rejectListeners.length;\n            resolveListeners++\n          )\n            chunk.reason.push(rejectListeners[resolveListeners]);\n      } else chunk.reason = rejectListeners;\n      break;\n    case \"rejected\":\n      rejectListeners && wakeChunk(rejectListeners, chunk.reason);\n  }\n}\nfunction triggerErrorOnChunk(chunk, error) {\n  if (\"pending\" !== chunk.status && \"blocked\" !== chunk.status)\n    chunk.reason.error(error);\n  else {\n    var listeners = chunk.reason;\n    chunk.status = \"rejected\";\n    chunk.reason = error;\n    null !== listeners && wakeChunk(listeners, error);\n  }\n}\nfunction createResolvedIteratorResultChunk(response, value, done) {\n  return new ReactPromise(\n    \"resolved_model\",\n    (done ? '{\"done\":true,\"value\":' : '{\"done\":false,\"value\":') + value + \"}\",\n    null,\n    response\n  );\n}\nfunction resolveIteratorResultChunk(chunk, value, done) {\n  resolveModelChunk(\n    chunk,\n    (done ? '{\"done\":true,\"value\":' : '{\"done\":false,\"value\":') + value + \"}\"\n  );\n}\nfunction resolveModelChunk(chunk, value) {\n  if (\"pending\" !== chunk.status) chunk.reason.enqueueModel(value);\n  else {\n    var resolveListeners = chunk.value,\n      rejectListeners = chunk.reason;\n    chunk.status = \"resolved_model\";\n    chunk.value = value;\n    null !== resolveListeners &&\n      (initializeModelChunk(chunk),\n      wakeChunkIfInitialized(chunk, resolveListeners, rejectListeners));\n  }\n}\nfunction resolveModuleChunk(chunk, value) {\n  if (\"pending\" === chunk.status || \"blocked\" === chunk.status) {\n    var resolveListeners = chunk.value,\n      rejectListeners = chunk.reason;\n    chunk.status = \"resolved_module\";\n    chunk.value = value;\n    null !== resolveListeners &&\n      (initializeModuleChunk(chunk),\n      wakeChunkIfInitialized(chunk, resolveListeners, rejectListeners));\n  }\n}\nvar initializingHandler = null;\nfunction initializeModelChunk(chunk) {\n  var prevHandler = initializingHandler;\n  initializingHandler = null;\n  var resolvedModel = chunk.value;\n  chunk.status = \"blocked\";\n  chunk.value = null;\n  chunk.reason = null;\n  try {\n    var value = JSON.parse(resolvedModel, chunk._response._fromJSON),\n      resolveListeners = chunk.value;\n    null !== resolveListeners &&\n      ((chunk.value = null),\n      (chunk.reason = null),\n      wakeChunk(resolveListeners, value));\n    if (null !== initializingHandler) {\n      if (initializingHandler.errored) throw initializingHandler.value;\n      if (0 < initializingHandler.deps) {\n        initializingHandler.value = value;\n        initializingHandler.chunk = chunk;\n        return;\n      }\n    }\n    chunk.status = \"fulfilled\";\n    chunk.value = value;\n  } catch (error) {\n    (chunk.status = \"rejected\"), (chunk.reason = error);\n  } finally {\n    initializingHandler = prevHandler;\n  }\n}\nfunction initializeModuleChunk(chunk) {\n  try {\n    var value = requireModule(chunk.value);\n    chunk.status = \"fulfilled\";\n    chunk.value = value;\n  } catch (error) {\n    (chunk.status = \"rejected\"), (chunk.reason = error);\n  }\n}\nfunction reportGlobalError(response, error) {\n  response._closed = !0;\n  response._closedReason = error;\n  response._chunks.forEach(function (chunk) {\n    \"pending\" === chunk.status && triggerErrorOnChunk(chunk, error);\n  });\n}\nfunction createLazyChunkWrapper(chunk) {\n  return { $$typeof: REACT_LAZY_TYPE, _payload: chunk, _init: readChunk };\n}\nfunction getChunk(response, id) {\n  var chunks = response._chunks,\n    chunk = chunks.get(id);\n  chunk ||\n    ((chunk = response._closed\n      ? new ReactPromise(\"rejected\", null, response._closedReason, response)\n      : createPendingChunk(response)),\n    chunks.set(id, chunk));\n  return chunk;\n}\nfunction waitForReference(\n  referencedChunk,\n  parentObject,\n  key,\n  response,\n  map,\n  path\n) {\n  function fulfill(value) {\n    for (var i = 1; i < path.length; i++) {\n      for (; value.$$typeof === REACT_LAZY_TYPE; )\n        if (((value = value._payload), value === handler.chunk))\n          value = handler.value;\n        else if (\"fulfilled\" === value.status) value = value.value;\n        else {\n          path.splice(0, i - 1);\n          value.then(fulfill, reject);\n          return;\n        }\n      value = value[path[i]];\n    }\n    i = map(response, value, parentObject, key);\n    parentObject[key] = i;\n    \"\" === key && null === handler.value && (handler.value = i);\n    if (\n      parentObject[0] === REACT_ELEMENT_TYPE &&\n      \"object\" === typeof handler.value &&\n      null !== handler.value &&\n      handler.value.$$typeof === REACT_ELEMENT_TYPE\n    )\n      switch (((value = handler.value), key)) {\n        case \"3\":\n          value.props = i;\n      }\n    handler.deps--;\n    0 === handler.deps &&\n      ((i = handler.chunk),\n      null !== i &&\n        \"blocked\" === i.status &&\n        ((value = i.value),\n        (i.status = \"fulfilled\"),\n        (i.value = handler.value),\n        null !== value && wakeChunk(value, handler.value)));\n  }\n  function reject(error) {\n    if (!handler.errored) {\n      handler.errored = !0;\n      handler.value = error;\n      var chunk = handler.chunk;\n      null !== chunk &&\n        \"blocked\" === chunk.status &&\n        triggerErrorOnChunk(chunk, error);\n    }\n  }\n  if (initializingHandler) {\n    var handler = initializingHandler;\n    handler.deps++;\n  } else\n    handler = initializingHandler = {\n      parent: null,\n      chunk: null,\n      value: null,\n      deps: 1,\n      errored: !1\n    };\n  referencedChunk.then(fulfill, reject);\n  return null;\n}\nfunction loadServerReference(response, metaData, parentObject, key) {\n  if (!response._serverReferenceConfig)\n    return createBoundServerReference(\n      metaData,\n      response._callServer,\n      response._encodeFormAction\n    );\n  var serverReference = resolveServerReference(\n      response._serverReferenceConfig,\n      metaData.id\n    ),\n    promise = preloadModule(serverReference);\n  if (promise)\n    metaData.bound && (promise = Promise.all([promise, metaData.bound]));\n  else if (metaData.bound) promise = Promise.resolve(metaData.bound);\n  else\n    return (\n      (promise = requireModule(serverReference)),\n      registerBoundServerReference(\n        promise,\n        metaData.id,\n        metaData.bound,\n        response._encodeFormAction\n      ),\n      promise\n    );\n  if (initializingHandler) {\n    var handler = initializingHandler;\n    handler.deps++;\n  } else\n    handler = initializingHandler = {\n      parent: null,\n      chunk: null,\n      value: null,\n      deps: 1,\n      errored: !1\n    };\n  promise.then(\n    function () {\n      var resolvedValue = requireModule(serverReference);\n      if (metaData.bound) {\n        var boundArgs = metaData.bound.value.slice(0);\n        boundArgs.unshift(null);\n        resolvedValue = resolvedValue.bind.apply(resolvedValue, boundArgs);\n      }\n      registerBoundServerReference(\n        resolvedValue,\n        metaData.id,\n        metaData.bound,\n        response._encodeFormAction\n      );\n      parentObject[key] = resolvedValue;\n      \"\" === key && null === handler.value && (handler.value = resolvedValue);\n      if (\n        parentObject[0] === REACT_ELEMENT_TYPE &&\n        \"object\" === typeof handler.value &&\n        null !== handler.value &&\n        handler.value.$$typeof === REACT_ELEMENT_TYPE\n      )\n        switch (((boundArgs = handler.value), key)) {\n          case \"3\":\n            boundArgs.props = resolvedValue;\n        }\n      handler.deps--;\n      0 === handler.deps &&\n        ((resolvedValue = handler.chunk),\n        null !== resolvedValue &&\n          \"blocked\" === resolvedValue.status &&\n          ((boundArgs = resolvedValue.value),\n          (resolvedValue.status = \"fulfilled\"),\n          (resolvedValue.value = handler.value),\n          null !== boundArgs && wakeChunk(boundArgs, handler.value)));\n    },\n    function (error) {\n      if (!handler.errored) {\n        handler.errored = !0;\n        handler.value = error;\n        var chunk = handler.chunk;\n        null !== chunk &&\n          \"blocked\" === chunk.status &&\n          triggerErrorOnChunk(chunk, error);\n      }\n    }\n  );\n  return null;\n}\nfunction getOutlinedModel(response, reference, parentObject, key, map) {\n  reference = reference.split(\":\");\n  var id = parseInt(reference[0], 16);\n  id = getChunk(response, id);\n  switch (id.status) {\n    case \"resolved_model\":\n      initializeModelChunk(id);\n      break;\n    case \"resolved_module\":\n      initializeModuleChunk(id);\n  }\n  switch (id.status) {\n    case \"fulfilled\":\n      var value = id.value;\n      for (id = 1; id < reference.length; id++) {\n        for (; value.$$typeof === REACT_LAZY_TYPE; )\n          if (((value = value._payload), \"fulfilled\" === value.status))\n            value = value.value;\n          else\n            return waitForReference(\n              value,\n              parentObject,\n              key,\n              response,\n              map,\n              reference.slice(id - 1)\n            );\n        value = value[reference[id]];\n      }\n      return map(response, value, parentObject, key);\n    case \"pending\":\n    case \"blocked\":\n      return waitForReference(id, parentObject, key, response, map, reference);\n    default:\n      return (\n        initializingHandler\n          ? ((initializingHandler.errored = !0),\n            (initializingHandler.value = id.reason))\n          : (initializingHandler = {\n              parent: null,\n              chunk: null,\n              value: id.reason,\n              deps: 0,\n              errored: !0\n            }),\n        null\n      );\n  }\n}\nfunction createMap(response, model) {\n  return new Map(model);\n}\nfunction createSet(response, model) {\n  return new Set(model);\n}\nfunction createBlob(response, model) {\n  return new Blob(model.slice(1), { type: model[0] });\n}\nfunction createFormData(response, model) {\n  response = new FormData();\n  for (var i = 0; i < model.length; i++)\n    response.append(model[i][0], model[i][1]);\n  return response;\n}\nfunction extractIterator(response, model) {\n  return model[Symbol.iterator]();\n}\nfunction createModel(response, model) {\n  return model;\n}\nfunction parseModelString(response, parentObject, key, value) {\n  if (\"$\" === value[0]) {\n    if (\"$\" === value)\n      return (\n        null !== initializingHandler &&\n          \"0\" === key &&\n          (initializingHandler = {\n            parent: initializingHandler,\n            chunk: null,\n            value: null,\n            deps: 0,\n            errored: !1\n          }),\n        REACT_ELEMENT_TYPE\n      );\n    switch (value[1]) {\n      case \"$\":\n        return value.slice(1);\n      case \"L\":\n        return (\n          (parentObject = parseInt(value.slice(2), 16)),\n          (response = getChunk(response, parentObject)),\n          createLazyChunkWrapper(response)\n        );\n      case \"@\":\n        if (2 === value.length) return new Promise(function () {});\n        parentObject = parseInt(value.slice(2), 16);\n        return getChunk(response, parentObject);\n      case \"S\":\n        return Symbol.for(value.slice(2));\n      case \"F\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(\n            response,\n            value,\n            parentObject,\n            key,\n            loadServerReference\n          )\n        );\n      case \"T\":\n        parentObject = \"$\" + value.slice(2);\n        response = response._tempRefs;\n        if (null == response)\n          throw Error(\n            \"Missing a temporary reference set but the RSC response returned a temporary reference. Pass a temporaryReference option with the set that was used with the reply.\"\n          );\n        return response.get(parentObject);\n      case \"Q\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, parentObject, key, createMap)\n        );\n      case \"W\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, parentObject, key, createSet)\n        );\n      case \"B\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, parentObject, key, createBlob)\n        );\n      case \"K\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, parentObject, key, createFormData)\n        );\n      case \"Z\":\n        return resolveErrorProd();\n      case \"i\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, parentObject, key, extractIterator)\n        );\n      case \"I\":\n        return Infinity;\n      case \"-\":\n        return \"$-0\" === value ? -0 : -Infinity;\n      case \"N\":\n        return NaN;\n      case \"u\":\n        return;\n      case \"D\":\n        return new Date(Date.parse(value.slice(2)));\n      case \"n\":\n        return BigInt(value.slice(2));\n      default:\n        return (\n          (value = value.slice(1)),\n          getOutlinedModel(response, value, parentObject, key, createModel)\n        );\n    }\n  }\n  return value;\n}\nfunction missingCall() {\n  throw Error(\n    'Trying to call a function from \"use server\" but the callServer option was not implemented in your router runtime.'\n  );\n}\nfunction ResponseInstance(\n  bundlerConfig,\n  serverReferenceConfig,\n  moduleLoading,\n  callServer,\n  encodeFormAction,\n  nonce,\n  temporaryReferences\n) {\n  var chunks = new Map();\n  this._bundlerConfig = bundlerConfig;\n  this._serverReferenceConfig = serverReferenceConfig;\n  this._moduleLoading = moduleLoading;\n  this._callServer = void 0 !== callServer ? callServer : missingCall;\n  this._encodeFormAction = encodeFormAction;\n  this._nonce = nonce;\n  this._chunks = chunks;\n  this._stringDecoder = new TextDecoder();\n  this._fromJSON = null;\n  this._rowLength = this._rowTag = this._rowID = this._rowState = 0;\n  this._buffer = [];\n  this._closed = !1;\n  this._closedReason = null;\n  this._tempRefs = temporaryReferences;\n  this._fromJSON = createFromJSONCallback(this);\n}\nfunction resolveBuffer(response, id, buffer) {\n  var chunks = response._chunks,\n    chunk = chunks.get(id);\n  chunk && \"pending\" !== chunk.status\n    ? chunk.reason.enqueueValue(buffer)\n    : chunks.set(id, new ReactPromise(\"fulfilled\", buffer, null, response));\n}\nfunction resolveModule(response, id, model) {\n  var chunks = response._chunks,\n    chunk = chunks.get(id);\n  model = JSON.parse(model, response._fromJSON);\n  var clientReference = resolveClientReference(response._bundlerConfig, model);\n  prepareDestinationWithChunks(\n    response._moduleLoading,\n    model[1],\n    response._nonce\n  );\n  if ((model = preloadModule(clientReference))) {\n    if (chunk) {\n      var blockedChunk = chunk;\n      blockedChunk.status = \"blocked\";\n    } else\n      (blockedChunk = new ReactPromise(\"blocked\", null, null, response)),\n        chunks.set(id, blockedChunk);\n    model.then(\n      function () {\n        return resolveModuleChunk(blockedChunk, clientReference);\n      },\n      function (error) {\n        return triggerErrorOnChunk(blockedChunk, error);\n      }\n    );\n  } else\n    chunk\n      ? resolveModuleChunk(chunk, clientReference)\n      : chunks.set(\n          id,\n          new ReactPromise(\"resolved_module\", clientReference, null, response)\n        );\n}\nfunction resolveStream(response, id, stream, controller) {\n  var chunks = response._chunks,\n    chunk = chunks.get(id);\n  chunk\n    ? \"pending\" === chunk.status &&\n      ((response = chunk.value),\n      (chunk.status = \"fulfilled\"),\n      (chunk.value = stream),\n      (chunk.reason = controller),\n      null !== response && wakeChunk(response, chunk.value))\n    : chunks.set(\n        id,\n        new ReactPromise(\"fulfilled\", stream, controller, response)\n      );\n}\nfunction startReadableStream(response, id, type) {\n  var controller = null;\n  type = new ReadableStream({\n    type: type,\n    start: function (c) {\n      controller = c;\n    }\n  });\n  var previousBlockedChunk = null;\n  resolveStream(response, id, type, {\n    enqueueValue: function (value) {\n      null === previousBlockedChunk\n        ? controller.enqueue(value)\n        : previousBlockedChunk.then(function () {\n            controller.enqueue(value);\n          });\n    },\n    enqueueModel: function (json) {\n      if (null === previousBlockedChunk) {\n        var chunk = new ReactPromise(\"resolved_model\", json, null, response);\n        initializeModelChunk(chunk);\n        \"fulfilled\" === chunk.status\n          ? controller.enqueue(chunk.value)\n          : (chunk.then(\n              function (v) {\n                return controller.enqueue(v);\n              },\n              function (e) {\n                return controller.error(e);\n              }\n            ),\n            (previousBlockedChunk = chunk));\n      } else {\n        chunk = previousBlockedChunk;\n        var chunk$52 = createPendingChunk(response);\n        chunk$52.then(\n          function (v) {\n            return controller.enqueue(v);\n          },\n          function (e) {\n            return controller.error(e);\n          }\n        );\n        previousBlockedChunk = chunk$52;\n        chunk.then(function () {\n          previousBlockedChunk === chunk$52 && (previousBlockedChunk = null);\n          resolveModelChunk(chunk$52, json);\n        });\n      }\n    },\n    close: function () {\n      if (null === previousBlockedChunk) controller.close();\n      else {\n        var blockedChunk = previousBlockedChunk;\n        previousBlockedChunk = null;\n        blockedChunk.then(function () {\n          return controller.close();\n        });\n      }\n    },\n    error: function (error) {\n      if (null === previousBlockedChunk) controller.error(error);\n      else {\n        var blockedChunk = previousBlockedChunk;\n        previousBlockedChunk = null;\n        blockedChunk.then(function () {\n          return controller.error(error);\n        });\n      }\n    }\n  });\n}\nfunction asyncIterator() {\n  return this;\n}\nfunction createIterator(next) {\n  next = { next: next };\n  next[ASYNC_ITERATOR] = asyncIterator;\n  return next;\n}\nfunction startAsyncIterable(response, id, iterator) {\n  var buffer = [],\n    closed = !1,\n    nextWriteIndex = 0,\n    $jscomp$compprop0 = {};\n  $jscomp$compprop0 =\n    (($jscomp$compprop0[ASYNC_ITERATOR] = function () {\n      var nextReadIndex = 0;\n      return createIterator(function (arg) {\n        if (void 0 !== arg)\n          throw Error(\n            \"Values cannot be passed to next() of AsyncIterables passed to Client Components.\"\n          );\n        if (nextReadIndex === buffer.length) {\n          if (closed)\n            return new ReactPromise(\n              \"fulfilled\",\n              { done: !0, value: void 0 },\n              null,\n              response\n            );\n          buffer[nextReadIndex] = createPendingChunk(response);\n        }\n        return buffer[nextReadIndex++];\n      });\n    }),\n    $jscomp$compprop0);\n  resolveStream(\n    response,\n    id,\n    iterator ? $jscomp$compprop0[ASYNC_ITERATOR]() : $jscomp$compprop0,\n    {\n      enqueueValue: function (value) {\n        if (nextWriteIndex === buffer.length)\n          buffer[nextWriteIndex] = new ReactPromise(\n            \"fulfilled\",\n            { done: !1, value: value },\n            null,\n            response\n          );\n        else {\n          var chunk = buffer[nextWriteIndex],\n            resolveListeners = chunk.value,\n            rejectListeners = chunk.reason;\n          chunk.status = \"fulfilled\";\n          chunk.value = { done: !1, value: value };\n          null !== resolveListeners &&\n            wakeChunkIfInitialized(chunk, resolveListeners, rejectListeners);\n        }\n        nextWriteIndex++;\n      },\n      enqueueModel: function (value) {\n        nextWriteIndex === buffer.length\n          ? (buffer[nextWriteIndex] = createResolvedIteratorResultChunk(\n              response,\n              value,\n              !1\n            ))\n          : resolveIteratorResultChunk(buffer[nextWriteIndex], value, !1);\n        nextWriteIndex++;\n      },\n      close: function (value) {\n        closed = !0;\n        nextWriteIndex === buffer.length\n          ? (buffer[nextWriteIndex] = createResolvedIteratorResultChunk(\n              response,\n              value,\n              !0\n            ))\n          : resolveIteratorResultChunk(buffer[nextWriteIndex], value, !0);\n        for (nextWriteIndex++; nextWriteIndex < buffer.length; )\n          resolveIteratorResultChunk(\n            buffer[nextWriteIndex++],\n            '\"$undefined\"',\n            !0\n          );\n      },\n      error: function (error) {\n        closed = !0;\n        for (\n          nextWriteIndex === buffer.length &&\n          (buffer[nextWriteIndex] = createPendingChunk(response));\n          nextWriteIndex < buffer.length;\n\n        )\n          triggerErrorOnChunk(buffer[nextWriteIndex++], error);\n      }\n    }\n  );\n}\nfunction resolveErrorProd() {\n  var error = Error(\n    \"An error occurred in the Server Components render. The specific message is omitted in production builds to avoid leaking sensitive details. A digest property is included on this error instance which may provide additional details about the nature of the error.\"\n  );\n  error.stack = \"Error: \" + error.message;\n  return error;\n}\nfunction mergeBuffer(buffer, lastChunk) {\n  for (var l = buffer.length, byteLength = lastChunk.length, i = 0; i < l; i++)\n    byteLength += buffer[i].byteLength;\n  byteLength = new Uint8Array(byteLength);\n  for (var i$53 = (i = 0); i$53 < l; i$53++) {\n    var chunk = buffer[i$53];\n    byteLength.set(chunk, i);\n    i += chunk.byteLength;\n  }\n  byteLength.set(lastChunk, i);\n  return byteLength;\n}\nfunction resolveTypedArray(\n  response,\n  id,\n  buffer,\n  lastChunk,\n  constructor,\n  bytesPerElement\n) {\n  buffer =\n    0 === buffer.length && 0 === lastChunk.byteOffset % bytesPerElement\n      ? lastChunk\n      : mergeBuffer(buffer, lastChunk);\n  constructor = new constructor(\n    buffer.buffer,\n    buffer.byteOffset,\n    buffer.byteLength / bytesPerElement\n  );\n  resolveBuffer(response, id, constructor);\n}\nfunction processFullBinaryRow(response, id, tag, buffer, chunk) {\n  switch (tag) {\n    case 65:\n      resolveBuffer(response, id, mergeBuffer(buffer, chunk).buffer);\n      return;\n    case 79:\n      resolveTypedArray(response, id, buffer, chunk, Int8Array, 1);\n      return;\n    case 111:\n      resolveBuffer(\n        response,\n        id,\n        0 === buffer.length ? chunk : mergeBuffer(buffer, chunk)\n      );\n      return;\n    case 85:\n      resolveTypedArray(response, id, buffer, chunk, Uint8ClampedArray, 1);\n      return;\n    case 83:\n      resolveTypedArray(response, id, buffer, chunk, Int16Array, 2);\n      return;\n    case 115:\n      resolveTypedArray(response, id, buffer, chunk, Uint16Array, 2);\n      return;\n    case 76:\n      resolveTypedArray(response, id, buffer, chunk, Int32Array, 4);\n      return;\n    case 108:\n      resolveTypedArray(response, id, buffer, chunk, Uint32Array, 4);\n      return;\n    case 71:\n      resolveTypedArray(response, id, buffer, chunk, Float32Array, 4);\n      return;\n    case 103:\n      resolveTypedArray(response, id, buffer, chunk, Float64Array, 8);\n      return;\n    case 77:\n      resolveTypedArray(response, id, buffer, chunk, BigInt64Array, 8);\n      return;\n    case 109:\n      resolveTypedArray(response, id, buffer, chunk, BigUint64Array, 8);\n      return;\n    case 86:\n      resolveTypedArray(response, id, buffer, chunk, DataView, 1);\n      return;\n  }\n  for (\n    var stringDecoder = response._stringDecoder, row = \"\", i = 0;\n    i < buffer.length;\n    i++\n  )\n    row += stringDecoder.decode(buffer[i], decoderOptions);\n  buffer = row += stringDecoder.decode(chunk);\n  switch (tag) {\n    case 73:\n      resolveModule(response, id, buffer);\n      break;\n    case 72:\n      id = buffer[0];\n      buffer = buffer.slice(1);\n      response = JSON.parse(buffer, response._fromJSON);\n      buffer = ReactDOMSharedInternals.d;\n      switch (id) {\n        case \"D\":\n          buffer.D(response);\n          break;\n        case \"C\":\n          \"string\" === typeof response\n            ? buffer.C(response)\n            : buffer.C(response[0], response[1]);\n          break;\n        case \"L\":\n          id = response[0];\n          tag = response[1];\n          3 === response.length\n            ? buffer.L(id, tag, response[2])\n            : buffer.L(id, tag);\n          break;\n        case \"m\":\n          \"string\" === typeof response\n            ? buffer.m(response)\n            : buffer.m(response[0], response[1]);\n          break;\n        case \"X\":\n          \"string\" === typeof response\n            ? buffer.X(response)\n            : buffer.X(response[0], response[1]);\n          break;\n        case \"S\":\n          \"string\" === typeof response\n            ? buffer.S(response)\n            : buffer.S(\n                response[0],\n                0 === response[1] ? void 0 : response[1],\n                3 === response.length ? response[2] : void 0\n              );\n          break;\n        case \"M\":\n          \"string\" === typeof response\n            ? buffer.M(response)\n            : buffer.M(response[0], response[1]);\n      }\n      break;\n    case 69:\n      tag = JSON.parse(buffer);\n      buffer = resolveErrorProd();\n      buffer.digest = tag.digest;\n      tag = response._chunks;\n      (chunk = tag.get(id))\n        ? triggerErrorOnChunk(chunk, buffer)\n        : tag.set(id, new ReactPromise(\"rejected\", null, buffer, response));\n      break;\n    case 84:\n      tag = response._chunks;\n      (chunk = tag.get(id)) && \"pending\" !== chunk.status\n        ? chunk.reason.enqueueValue(buffer)\n        : tag.set(id, new ReactPromise(\"fulfilled\", buffer, null, response));\n      break;\n    case 78:\n    case 68:\n    case 87:\n      throw Error(\n        \"Failed to read a RSC payload created by a development version of React on the server while using a production version on the client. Always use matching versions on the server and the client.\"\n      );\n    case 82:\n      startReadableStream(response, id, void 0);\n      break;\n    case 114:\n      startReadableStream(response, id, \"bytes\");\n      break;\n    case 88:\n      startAsyncIterable(response, id, !1);\n      break;\n    case 120:\n      startAsyncIterable(response, id, !0);\n      break;\n    case 67:\n      (response = response._chunks.get(id)) &&\n        \"fulfilled\" === response.status &&\n        response.reason.close(\"\" === buffer ? '\"$undefined\"' : buffer);\n      break;\n    default:\n      (tag = response._chunks),\n        (chunk = tag.get(id))\n          ? resolveModelChunk(chunk, buffer)\n          : tag.set(\n              id,\n              new ReactPromise(\"resolved_model\", buffer, null, response)\n            );\n  }\n}\nfunction createFromJSONCallback(response) {\n  return function (key, value) {\n    if (\"string\" === typeof value)\n      return parseModelString(response, this, key, value);\n    if (\"object\" === typeof value && null !== value) {\n      if (value[0] === REACT_ELEMENT_TYPE) {\n        if (\n          ((key = {\n            $$typeof: REACT_ELEMENT_TYPE,\n            type: value[1],\n            key: value[2],\n            ref: null,\n            props: value[3]\n          }),\n          null !== initializingHandler)\n        )\n          if (\n            ((value = initializingHandler),\n            (initializingHandler = value.parent),\n            value.errored)\n          )\n            (key = new ReactPromise(\"rejected\", null, value.value, response)),\n              (key = createLazyChunkWrapper(key));\n          else if (0 < value.deps) {\n            var blockedChunk = new ReactPromise(\n              \"blocked\",\n              null,\n              null,\n              response\n            );\n            value.value = key;\n            value.chunk = blockedChunk;\n            key = createLazyChunkWrapper(blockedChunk);\n          }\n      } else key = value;\n      return key;\n    }\n    return value;\n  };\n}\nfunction noServerCall() {\n  throw Error(\n    \"Server Functions cannot be called during initial render. This would create a fetch waterfall. Try to use a Server Component to pass data to Client Components instead.\"\n  );\n}\nfunction createResponseFromOptions(options) {\n  return new ResponseInstance(\n    options.serverConsumerManifest.moduleMap,\n    options.serverConsumerManifest.serverModuleMap,\n    options.serverConsumerManifest.moduleLoading,\n    noServerCall,\n    options.encodeFormAction,\n    \"string\" === typeof options.nonce ? options.nonce : void 0,\n    options && options.temporaryReferences\n      ? options.temporaryReferences\n      : void 0\n  );\n}\nfunction startReadingFromStream(response, stream) {\n  function progress(_ref) {\n    var value = _ref.value;\n    if (_ref.done) reportGlobalError(response, Error(\"Connection closed.\"));\n    else {\n      var i = 0,\n        rowState = response._rowState;\n      _ref = response._rowID;\n      for (\n        var rowTag = response._rowTag,\n          rowLength = response._rowLength,\n          buffer = response._buffer,\n          chunkLength = value.length;\n        i < chunkLength;\n\n      ) {\n        var lastIdx = -1;\n        switch (rowState) {\n          case 0:\n            lastIdx = value[i++];\n            58 === lastIdx\n              ? (rowState = 1)\n              : (_ref =\n                  (_ref << 4) | (96 < lastIdx ? lastIdx - 87 : lastIdx - 48));\n            continue;\n          case 1:\n            rowState = value[i];\n            84 === rowState ||\n            65 === rowState ||\n            79 === rowState ||\n            111 === rowState ||\n            85 === rowState ||\n            83 === rowState ||\n            115 === rowState ||\n            76 === rowState ||\n            108 === rowState ||\n            71 === rowState ||\n            103 === rowState ||\n            77 === rowState ||\n            109 === rowState ||\n            86 === rowState\n              ? ((rowTag = rowState), (rowState = 2), i++)\n              : (64 < rowState && 91 > rowState) ||\n                  35 === rowState ||\n                  114 === rowState ||\n                  120 === rowState\n                ? ((rowTag = rowState), (rowState = 3), i++)\n                : ((rowTag = 0), (rowState = 3));\n            continue;\n          case 2:\n            lastIdx = value[i++];\n            44 === lastIdx\n              ? (rowState = 4)\n              : (rowLength =\n                  (rowLength << 4) |\n                  (96 < lastIdx ? lastIdx - 87 : lastIdx - 48));\n            continue;\n          case 3:\n            lastIdx = value.indexOf(10, i);\n            break;\n          case 4:\n            (lastIdx = i + rowLength), lastIdx > value.length && (lastIdx = -1);\n        }\n        var offset = value.byteOffset + i;\n        if (-1 < lastIdx)\n          (rowLength = new Uint8Array(value.buffer, offset, lastIdx - i)),\n            processFullBinaryRow(response, _ref, rowTag, buffer, rowLength),\n            (i = lastIdx),\n            3 === rowState && i++,\n            (rowLength = _ref = rowTag = rowState = 0),\n            (buffer.length = 0);\n        else {\n          value = new Uint8Array(value.buffer, offset, value.byteLength - i);\n          buffer.push(value);\n          rowLength -= value.byteLength;\n          break;\n        }\n      }\n      response._rowState = rowState;\n      response._rowID = _ref;\n      response._rowTag = rowTag;\n      response._rowLength = rowLength;\n      return reader.read().then(progress).catch(error);\n    }\n  }\n  function error(e) {\n    reportGlobalError(response, e);\n  }\n  var reader = stream.getReader();\n  reader.read().then(progress).catch(error);\n}\nexports.createFromFetch = function (promiseForResponse, options) {\n  var response = createResponseFromOptions(options);\n  promiseForResponse.then(\n    function (r) {\n      startReadingFromStream(response, r.body);\n    },\n    function (e) {\n      reportGlobalError(response, e);\n    }\n  );\n  return getChunk(response, 0);\n};\nexports.createFromReadableStream = function (stream, options) {\n  options = createResponseFromOptions(options);\n  startReadingFromStream(options, stream);\n  return getChunk(options, 0);\n};\nexports.createServerReference = function (id) {\n  return createServerReference$1(id, noServerCall);\n};\nexports.createTemporaryReferenceSet = function () {\n  return new Map();\n};\nexports.encodeReply = function (value, options) {\n  return new Promise(function (resolve, reject) {\n    var abort = processReply(\n      value,\n      \"\",\n      options && options.temporaryReferences\n        ? options.temporaryReferences\n        : void 0,\n      resolve,\n      reject\n    );\n    if (options && options.signal) {\n      var signal = options.signal;\n      if (signal.aborted) abort(signal.reason);\n      else {\n        var listener = function () {\n          abort(signal.reason);\n          signal.removeEventListener(\"abort\", listener);\n        };\n        signal.addEventListener(\"abort\", listener);\n      }\n    }\n  });\n};\nexports.registerServerReference = function (reference, id, encodeFormAction) {\n  registerBoundServerReference(reference, id, null, encodeFormAction);\n  return reference;\n};\n","import type { IncomingMessage } from 'http'\nimport type { Key } from 'next/dist/compiled/path-to-regexp'\nimport type { NextParsedUrlQuery } from '../../../../server/request-meta'\nimport type { RouteHas } from '../../../../lib/load-custom-routes'\nimport type { BaseNextRequest } from '../../../../server/base-http'\n\nimport { compile, pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { parseUrl } from './parse-url'\nimport {\n  INTERCEPTION_ROUTE_MARKERS,\n  isInterceptionRouteAppPath,\n} from './interception-routes'\nimport { getCookieParser } from '../../../../server/api-utils/get-cookie-parser'\nimport type { Params } from '../../../../server/request/params'\n\n/**\n * Ensure only a-zA-Z are used for param names for proper interpolating\n * with path-to-regexp\n */\nfunction getSafeParamName(paramName: string) {\n  let newParamName = ''\n\n  for (let i = 0; i < paramName.length; i++) {\n    const charCode = paramName.charCodeAt(i)\n\n    if (\n      (charCode > 64 && charCode < 91) || // A-Z\n      (charCode > 96 && charCode < 123) // a-z\n    ) {\n      newParamName += paramName[i]\n    }\n  }\n  return newParamName\n}\n\nfunction escapeSegment(str: string, segmentName: string) {\n  return str.replace(\n    new RegExp(`:${escapeStringRegexp(segmentName)}`, 'g'),\n    `__ESC_COLON_${segmentName}`\n  )\n}\n\nfunction unescapeSegments(str: string) {\n  return str.replace(/__ESC_COLON_/gi, ':')\n}\n\nexport function matchHas(\n  req: BaseNextRequest | IncomingMessage,\n  query: Params,\n  has: RouteHas[] = [],\n  missing: RouteHas[] = []\n): false | Params {\n  const params: Params = {}\n\n  const hasMatch = (hasItem: RouteHas) => {\n    let value\n    let key = hasItem.key\n\n    switch (hasItem.type) {\n      case 'header': {\n        key = key!.toLowerCase()\n        value = req.headers[key] as string\n        break\n      }\n      case 'cookie': {\n        if ('cookies' in req) {\n          value = req.cookies[hasItem.key]\n        } else {\n          const cookies = getCookieParser(req.headers)()\n          value = cookies[hasItem.key]\n        }\n\n        break\n      }\n      case 'query': {\n        value = query[key!]\n        break\n      }\n      case 'host': {\n        const { host } = req?.headers || {}\n        // remove port from host if present\n        const hostname = host?.split(':', 1)[0].toLowerCase()\n        value = hostname\n        break\n      }\n      default: {\n        break\n      }\n    }\n\n    if (!hasItem.value && value) {\n      params[getSafeParamName(key!)] = value\n      return true\n    } else if (value) {\n      const matcher = new RegExp(`^${hasItem.value}$`)\n      const matches = Array.isArray(value)\n        ? value.slice(-1)[0].match(matcher)\n        : value.match(matcher)\n\n      if (matches) {\n        if (Array.isArray(matches)) {\n          if (matches.groups) {\n            Object.keys(matches.groups).forEach((groupKey) => {\n              params[groupKey] = matches.groups![groupKey]\n            })\n          } else if (hasItem.type === 'host' && matches[0]) {\n            params.host = matches[0]\n          }\n        }\n        return true\n      }\n    }\n    return false\n  }\n\n  const allMatch =\n    has.every((item) => hasMatch(item)) &&\n    !missing.some((item) => hasMatch(item))\n\n  if (allMatch) {\n    return params\n  }\n  return false\n}\n\nexport function compileNonPath(value: string, params: Params): string {\n  if (!value.includes(':')) {\n    return value\n  }\n\n  for (const key of Object.keys(params)) {\n    if (value.includes(`:${key}`)) {\n      value = value\n        .replace(\n          new RegExp(`:${key}\\\\*`, 'g'),\n          `:${key}--ESCAPED_PARAM_ASTERISKS`\n        )\n        .replace(\n          new RegExp(`:${key}\\\\?`, 'g'),\n          `:${key}--ESCAPED_PARAM_QUESTION`\n        )\n        .replace(new RegExp(`:${key}\\\\+`, 'g'), `:${key}--ESCAPED_PARAM_PLUS`)\n        .replace(\n          new RegExp(`:${key}(?!\\\\w)`, 'g'),\n          `--ESCAPED_PARAM_COLON${key}`\n        )\n    }\n  }\n  value = value\n    .replace(/(:|\\*|\\?|\\+|\\(|\\)|\\{|\\})/g, '\\\\$1')\n    .replace(/--ESCAPED_PARAM_PLUS/g, '+')\n    .replace(/--ESCAPED_PARAM_COLON/g, ':')\n    .replace(/--ESCAPED_PARAM_QUESTION/g, '?')\n    .replace(/--ESCAPED_PARAM_ASTERISKS/g, '*')\n\n  // the value needs to start with a forward-slash to be compiled\n  // correctly\n  return compile(`/${value}`, { validate: false })(params).slice(1)\n}\n\nexport function parseDestination(args: {\n  destination: string\n  params: Readonly<Params>\n  query: Readonly<NextParsedUrlQuery>\n}) {\n  let escaped = args.destination\n  for (const param of Object.keys({ ...args.params, ...args.query })) {\n    if (!param) continue\n\n    escaped = escapeSegment(escaped, param)\n  }\n\n  const parsed = parseUrl(escaped)\n\n  let pathname = parsed.pathname\n  if (pathname) {\n    pathname = unescapeSegments(pathname)\n  }\n\n  let href = parsed.href\n  if (href) {\n    href = unescapeSegments(href)\n  }\n\n  let hostname = parsed.hostname\n  if (hostname) {\n    hostname = unescapeSegments(hostname)\n  }\n\n  let hash = parsed.hash\n  if (hash) {\n    hash = unescapeSegments(hash)\n  }\n\n  return {\n    ...parsed,\n    pathname,\n    hostname,\n    href,\n    hash,\n  }\n}\n\nexport function prepareDestination(args: {\n  appendParamsToQuery: boolean\n  destination: string\n  params: Params\n  query: NextParsedUrlQuery\n}) {\n  const query = Object.assign({}, args.query)\n  const parsedDestination = parseDestination(args)\n\n  const { hostname: destHostname, query: destQuery } = parsedDestination\n\n  // The following code assumes that the pathname here includes the hash if it's\n  // present.\n  let destPath = parsedDestination.pathname\n  if (parsedDestination.hash) {\n    destPath = `${destPath}${parsedDestination.hash}`\n  }\n\n  const destParams: (string | number)[] = []\n\n  const destPathParamKeys: Key[] = []\n  pathToRegexp(destPath, destPathParamKeys)\n  for (const key of destPathParamKeys) {\n    destParams.push(key.name)\n  }\n\n  if (destHostname) {\n    const destHostnameParamKeys: Key[] = []\n    pathToRegexp(destHostname, destHostnameParamKeys)\n    for (const key of destHostnameParamKeys) {\n      destParams.push(key.name)\n    }\n  }\n\n  const destPathCompiler = compile(\n    destPath,\n    // we don't validate while compiling the destination since we should\n    // have already validated before we got to this point and validating\n    // breaks compiling destinations with named pattern params from the source\n    // e.g. /something:hello(.*) -> /another/:hello is broken with validation\n    // since compile validation is meant for reversing and not for inserting\n    // params from a separate path-regex into another\n    { validate: false }\n  )\n\n  let destHostnameCompiler\n  if (destHostname) {\n    destHostnameCompiler = compile(destHostname, { validate: false })\n  }\n\n  // update any params in query values\n  for (const [key, strOrArray] of Object.entries(destQuery)) {\n    // the value needs to start with a forward-slash to be compiled\n    // correctly\n    if (Array.isArray(strOrArray)) {\n      destQuery[key] = strOrArray.map((value) =>\n        compileNonPath(unescapeSegments(value), args.params)\n      )\n    } else if (typeof strOrArray === 'string') {\n      destQuery[key] = compileNonPath(unescapeSegments(strOrArray), args.params)\n    }\n  }\n\n  // add path params to query if it's not a redirect and not\n  // already defined in destination query or path\n  let paramKeys = Object.keys(args.params).filter(\n    (name) => name !== 'nextInternalLocale'\n  )\n\n  if (\n    args.appendParamsToQuery &&\n    !paramKeys.some((key) => destParams.includes(key))\n  ) {\n    for (const key of paramKeys) {\n      if (!(key in destQuery)) {\n        destQuery[key] = args.params[key]\n      }\n    }\n  }\n\n  let newUrl\n\n  // The compiler also that the interception route marker is an unnamed param, hence '0',\n  // so we need to add it to the params object.\n  if (isInterceptionRouteAppPath(destPath)) {\n    for (const segment of destPath.split('/')) {\n      const marker = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n        segment.startsWith(m)\n      )\n      if (marker) {\n        if (marker === '(..)(..)') {\n          args.params['0'] = '(..)'\n          args.params['1'] = '(..)'\n        } else {\n          args.params['0'] = marker\n        }\n        break\n      }\n    }\n  }\n\n  try {\n    newUrl = destPathCompiler(args.params)\n\n    const [pathname, hash] = newUrl.split('#', 2)\n    if (destHostnameCompiler) {\n      parsedDestination.hostname = destHostnameCompiler(args.params)\n    }\n    parsedDestination.pathname = pathname\n    parsedDestination.hash = `${hash ? '#' : ''}${hash || ''}`\n    delete (parsedDestination as any).search\n  } catch (err: any) {\n    if (err.message.match(/Expected .*? to not repeat, but got an array/)) {\n      throw new Error(\n        `To use a multi-match in the destination you must add \\`*\\` at the end of the param name to signify it should repeat. https://nextjs.org/docs/messages/invalid-multi-match`\n      )\n    }\n    throw err\n  }\n\n  // Query merge order lowest priority to highest\n  // 1. initial URL query values\n  // 2. path segment values\n  // 3. destination specified query values\n  parsedDestination.query = {\n    ...query,\n    ...parsedDestination.query,\n  }\n\n  return {\n    newUrl,\n    destQuery,\n    parsedDestination,\n  }\n}\n","import { format as formatUrl, parse as parseUrl } from 'url';\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path';\nimport { getPathMatch } from '../shared/lib/router/utils/path-match';\nimport { getNamedRouteRegex } from '../shared/lib/router/utils/route-regex';\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher';\nimport { matchHas, prepareDestination } from '../shared/lib/router/utils/prepare-destination';\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash';\nimport { normalizeRscURL } from '../shared/lib/router/utils/app-paths';\nimport { NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER, NEXT_CACHE_REVALIDATED_TAGS_HEADER, NEXT_INTERCEPTION_MARKER_PREFIX, NEXT_QUERY_PARAM_PREFIX } from '../lib/constants';\nimport { normalizeNextQueryParam } from './web/utils';\nexport function normalizeVercelUrl(req, paramKeys, defaultRouteRegex) {\n    // make sure to normalize req.url on Vercel to strip dynamic and rewrite\n    // params from the query which are added during routing\n    const _parsedUrl = parseUrl(req.url, true);\n    delete _parsedUrl.search;\n    for (const key of Object.keys(_parsedUrl.query)){\n        const isNextQueryPrefix = key !== NEXT_QUERY_PARAM_PREFIX && key.startsWith(NEXT_QUERY_PARAM_PREFIX);\n        const isNextInterceptionMarkerPrefix = key !== NEXT_INTERCEPTION_MARKER_PREFIX && key.startsWith(NEXT_INTERCEPTION_MARKER_PREFIX);\n        if (isNextQueryPrefix || isNextInterceptionMarkerPrefix || paramKeys.includes(key) || defaultRouteRegex && Object.keys(defaultRouteRegex.groups).includes(key)) {\n            delete _parsedUrl.query[key];\n        }\n    }\n    req.url = formatUrl(_parsedUrl);\n}\nexport function interpolateDynamicPath(pathname, params, defaultRouteRegex) {\n    if (!defaultRouteRegex) return pathname;\n    for (const param of Object.keys(defaultRouteRegex.groups)){\n        const { optional, repeat } = defaultRouteRegex.groups[param];\n        let builtParam = `[${repeat ? '...' : ''}${param}]`;\n        if (optional) {\n            builtParam = `[${builtParam}]`;\n        }\n        let paramValue;\n        const value = params[param];\n        if (Array.isArray(value)) {\n            paramValue = value.map((v)=>v && encodeURIComponent(v)).join('/');\n        } else if (value) {\n            paramValue = encodeURIComponent(value);\n        } else {\n            paramValue = '';\n        }\n        pathname = pathname.replaceAll(builtParam, paramValue);\n    }\n    return pathname;\n}\nexport function normalizeDynamicRouteParams(query, defaultRouteRegex, defaultRouteMatches, ignoreMissingOptional) {\n    let hasValidParams = true;\n    let params = {};\n    for (const key of Object.keys(defaultRouteRegex.groups)){\n        let value = query[key];\n        if (typeof value === 'string') {\n            value = normalizeRscURL(value);\n        } else if (Array.isArray(value)) {\n            value = value.map(normalizeRscURL);\n        }\n        // if the value matches the default value we can't rely\n        // on the parsed params, this is used to signal if we need\n        // to parse x-now-route-matches or not\n        const defaultValue = defaultRouteMatches[key];\n        const isOptional = defaultRouteRegex.groups[key].optional;\n        const isDefaultValue = Array.isArray(defaultValue) ? defaultValue.some((defaultVal)=>{\n            return Array.isArray(value) ? value.some((val)=>val.includes(defaultVal)) : value == null ? void 0 : value.includes(defaultVal);\n        }) : value == null ? void 0 : value.includes(defaultValue);\n        if (isDefaultValue || typeof value === 'undefined' && !(isOptional && ignoreMissingOptional)) {\n            return {\n                params: {},\n                hasValidParams: false\n            };\n        }\n        // non-provided optional values should be undefined so normalize\n        // them to undefined\n        if (isOptional && (!value || Array.isArray(value) && value.length === 1 && // fallback optional catch-all SSG pages have\n        // [[...paramName]] for the root path on Vercel\n        (value[0] === 'index' || value[0] === `[[...${key}]]`))) {\n            value = undefined;\n            delete query[key];\n        }\n        // query values from the proxy aren't already split into arrays\n        // so make sure to normalize catch-all values\n        if (value && typeof value === 'string' && defaultRouteRegex.groups[key].repeat) {\n            value = value.split('/');\n        }\n        if (value) {\n            params[key] = value;\n        }\n    }\n    return {\n        params,\n        hasValidParams\n    };\n}\nexport function getUtils({ page, i18n, basePath, rewrites, pageIsDynamic, trailingSlash, caseSensitive }) {\n    let defaultRouteRegex;\n    let dynamicRouteMatcher;\n    let defaultRouteMatches;\n    if (pageIsDynamic) {\n        defaultRouteRegex = getNamedRouteRegex(page, {\n            prefixRouteKeys: false\n        });\n        dynamicRouteMatcher = getRouteMatcher(defaultRouteRegex);\n        defaultRouteMatches = dynamicRouteMatcher(page);\n    }\n    function handleRewrites(req, parsedUrl) {\n        const rewriteParams = {};\n        let fsPathname = parsedUrl.pathname;\n        const matchesPage = ()=>{\n            const fsPathnameNoSlash = removeTrailingSlash(fsPathname || '');\n            return fsPathnameNoSlash === removeTrailingSlash(page) || (dynamicRouteMatcher == null ? void 0 : dynamicRouteMatcher(fsPathnameNoSlash));\n        };\n        const checkRewrite = (rewrite)=>{\n            const matcher = getPathMatch(rewrite.source + (trailingSlash ? '(/)?' : ''), {\n                removeUnnamedParams: true,\n                strict: true,\n                sensitive: !!caseSensitive\n            });\n            if (!parsedUrl.pathname) return false;\n            let params = matcher(parsedUrl.pathname);\n            if ((rewrite.has || rewrite.missing) && params) {\n                const hasParams = matchHas(req, parsedUrl.query, rewrite.has, rewrite.missing);\n                if (hasParams) {\n                    Object.assign(params, hasParams);\n                } else {\n                    params = false;\n                }\n            }\n            if (params) {\n                const { parsedDestination, destQuery } = prepareDestination({\n                    appendParamsToQuery: true,\n                    destination: rewrite.destination,\n                    params: params,\n                    query: parsedUrl.query\n                });\n                // if the rewrite destination is external break rewrite chain\n                if (parsedDestination.protocol) {\n                    return true;\n                }\n                Object.assign(rewriteParams, destQuery, params);\n                Object.assign(parsedUrl.query, parsedDestination.query);\n                delete parsedDestination.query;\n                Object.assign(parsedUrl, parsedDestination);\n                fsPathname = parsedUrl.pathname;\n                if (!fsPathname) return false;\n                if (basePath) {\n                    fsPathname = fsPathname.replace(new RegExp(`^${basePath}`), '') || '/';\n                }\n                if (i18n) {\n                    const result = normalizeLocalePath(fsPathname, i18n.locales);\n                    fsPathname = result.pathname;\n                    parsedUrl.query.nextInternalLocale = result.detectedLocale || params.nextInternalLocale;\n                }\n                if (fsPathname === page) {\n                    return true;\n                }\n                if (pageIsDynamic && dynamicRouteMatcher) {\n                    const dynamicParams = dynamicRouteMatcher(fsPathname);\n                    if (dynamicParams) {\n                        parsedUrl.query = {\n                            ...parsedUrl.query,\n                            ...dynamicParams\n                        };\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n        for (const rewrite of rewrites.beforeFiles || []){\n            checkRewrite(rewrite);\n        }\n        if (fsPathname !== page) {\n            let finished = false;\n            for (const rewrite of rewrites.afterFiles || []){\n                finished = checkRewrite(rewrite);\n                if (finished) break;\n            }\n            if (!finished && !matchesPage()) {\n                for (const rewrite of rewrites.fallback || []){\n                    finished = checkRewrite(rewrite);\n                    if (finished) break;\n                }\n            }\n        }\n        return rewriteParams;\n    }\n    function getParamsFromRouteMatches(routeMatchesHeader) {\n        // If we don't have a default route regex, we can't get params from route\n        // matches\n        if (!defaultRouteRegex) return null;\n        const { groups, routeKeys } = defaultRouteRegex;\n        const matcher = getRouteMatcher({\n            re: {\n                // Simulate a RegExp match from the \\`req.url\\` input\n                exec: (str)=>{\n                    // Normalize all the prefixed query params.\n                    const obj = Object.fromEntries(new URLSearchParams(str));\n                    for (const [key, value] of Object.entries(obj)){\n                        const normalizedKey = normalizeNextQueryParam(key);\n                        if (!normalizedKey) continue;\n                        obj[normalizedKey] = value;\n                        delete obj[key];\n                    }\n                    // Use all the named route keys.\n                    const result = {};\n                    for (const keyName of Object.keys(routeKeys)){\n                        const paramName = routeKeys[keyName];\n                        // If this param name is not a valid parameter name, then skip it.\n                        if (!paramName) continue;\n                        const group = groups[paramName];\n                        const value = obj[keyName];\n                        // When we're missing a required param, we can't match the route.\n                        if (!group.optional && !value) return null;\n                        result[group.pos] = value;\n                    }\n                    return result;\n                }\n            },\n            groups\n        });\n        const routeMatches = matcher(routeMatchesHeader);\n        if (!routeMatches) return null;\n        return routeMatches;\n    }\n    return {\n        handleRewrites,\n        defaultRouteRegex,\n        dynamicRouteMatcher,\n        defaultRouteMatches,\n        getParamsFromRouteMatches,\n        /**\n     * Normalize dynamic route params.\n     *\n     * @param query - The query params to normalize.\n     * @param ignoreMissingOptional - Whether to ignore missing optional params.\n     * @returns The normalized params and whether they are valid.\n     */ normalizeDynamicRouteParams: (query, ignoreMissingOptional)=>{\n            if (!defaultRouteRegex || !defaultRouteMatches) {\n                return {\n                    params: {},\n                    hasValidParams: false\n                };\n            }\n            return normalizeDynamicRouteParams(query, defaultRouteRegex, defaultRouteMatches, ignoreMissingOptional);\n        },\n        normalizeVercelUrl: (req, paramKeys)=>normalizeVercelUrl(req, paramKeys, defaultRouteRegex),\n        interpolateDynamicPath: (pathname, params)=>interpolateDynamicPath(pathname, params, defaultRouteRegex)\n    };\n}\nexport function getPreviouslyRevalidatedTags(headers, previewModeId) {\n    return typeof headers[NEXT_CACHE_REVALIDATED_TAGS_HEADER] === 'string' && headers[NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER] === previewModeId ? headers[NEXT_CACHE_REVALIDATED_TAGS_HEADER].split(',') : [];\n}\n\n//# sourceMappingURL=server-utils.js.map","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","'use strict';\n\nvar s;\nif (process.env.NODE_ENV === 'production') {\n  s = require('./cjs/react-server-dom-webpack-server.edge.production.js');\n} else {\n  s = require('./cjs/react-server-dom-webpack-server.edge.development.js');\n}\n\nif (s.unstable_prerender) {\n  exports.unstable_prerender = s.unstable_prerender;\n}\n","import { ensureLeadingSlash } from './ensure-leading-slash'\nimport { isDynamicRoute } from '../router/utils'\nimport { NormalizeError } from '../utils'\n\n/**\n * Takes a page and transforms it into its file counterpart ensuring that the\n * output is normalized. Note this function is not idempotent because a page\n * `/index` can be referencing `/index/index.js` and `/index/index` could be\n * referencing `/index/index/index.js`. Examples:\n *  - `/` -> `/index`\n *  - `/index/foo` -> `/index/index/foo`\n *  - `/index` -> `/index/index`\n */\nexport function normalizePagePath(page: string): string {\n  const normalized =\n    /^\\/index(\\/|$)/.test(page) && !isDynamicRoute(page)\n      ? `/index${page}`\n      : page === '/'\n        ? '/index'\n        : ensureLeadingSlash(page)\n\n  if (process.env.NEXT_RUNTIME !== 'edge') {\n    const { posix } = require('path')\n    const resolvedPage = posix.normalize(normalized)\n    if (resolvedPage !== normalized) {\n      throw new NormalizeError(\n        `Requested and resolved page mismatch: ${normalized} ${resolvedPage}`\n      )\n    }\n  }\n\n  return normalized\n}\n","/**\n * A `Promise.withResolvers` implementation that exposes the `resolve` and\n * `reject` functions on a `Promise`.\n *\n * @see https://tc39.es/proposal-promise-with-resolvers/\n */ export class DetachedPromise {\n    constructor(){\n        let resolve;\n        let reject;\n        // Create the promise and assign the resolvers to the object.\n        this.promise = new Promise((res, rej)=>{\n            resolve = res;\n            reject = rej;\n        });\n        // We know that resolvers is defined because the Promise constructor runs\n        // synchronously.\n        this.resolve = resolve;\n        this.reject = reject;\n    }\n}\n\n//# sourceMappingURL=detached-promise.js.map","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.react-server.production.js');\n} else {\n  module.exports = require('./cjs/react.react-server.development.js');\n}\n","import type {\n  FlightRouterState,\n  Segment,\n} from '../../../server/app-render/types'\nimport { INTERCEPTION_ROUTE_MARKERS } from '../../../shared/lib/router/utils/interception-routes'\nimport type { Params } from '../../../server/request/params'\nimport {\n  isGroupSegment,\n  DEFAULT_SEGMENT_KEY,\n  PAGE_SEGMENT_KEY,\n} from '../../../shared/lib/segment'\nimport { matchSegment } from '../match-segments'\n\nconst removeLeadingSlash = (segment: string): string => {\n  return segment[0] === '/' ? segment.slice(1) : segment\n}\n\nconst segmentToPathname = (segment: Segment): string => {\n  if (typeof segment === 'string') {\n    // 'children' is not a valid path -- it's technically a parallel route that corresponds with the current segment's page\n    // if we don't skip it, then the computed pathname might be something like `/children` which doesn't make sense.\n    if (segment === 'children') return ''\n\n    return segment\n  }\n\n  return segment[1]\n}\n\nfunction normalizeSegments(segments: string[]): string {\n  return (\n    segments.reduce((acc, segment) => {\n      segment = removeLeadingSlash(segment)\n      if (segment === '' || isGroupSegment(segment)) {\n        return acc\n      }\n\n      return `${acc}/${segment}`\n    }, '') || '/'\n  )\n}\n\nexport function extractPathFromFlightRouterState(\n  flightRouterState: FlightRouterState\n): string | undefined {\n  const segment = Array.isArray(flightRouterState[0])\n    ? flightRouterState[0][1]\n    : flightRouterState[0]\n\n  if (\n    segment === DEFAULT_SEGMENT_KEY ||\n    INTERCEPTION_ROUTE_MARKERS.some((m) => segment.startsWith(m))\n  )\n    return undefined\n\n  if (segment.startsWith(PAGE_SEGMENT_KEY)) return ''\n\n  const segments = [segmentToPathname(segment)]\n  const parallelRoutes = flightRouterState[1] ?? {}\n\n  const childrenPath = parallelRoutes.children\n    ? extractPathFromFlightRouterState(parallelRoutes.children)\n    : undefined\n\n  if (childrenPath !== undefined) {\n    segments.push(childrenPath)\n  } else {\n    for (const [key, value] of Object.entries(parallelRoutes)) {\n      if (key === 'children') continue\n\n      const childPath = extractPathFromFlightRouterState(value)\n\n      if (childPath !== undefined) {\n        segments.push(childPath)\n      }\n    }\n  }\n\n  return normalizeSegments(segments)\n}\n\nfunction computeChangedPathImpl(\n  treeA: FlightRouterState,\n  treeB: FlightRouterState\n): string | null {\n  const [segmentA, parallelRoutesA] = treeA\n  const [segmentB, parallelRoutesB] = treeB\n\n  const normalizedSegmentA = segmentToPathname(segmentA)\n  const normalizedSegmentB = segmentToPathname(segmentB)\n\n  if (\n    INTERCEPTION_ROUTE_MARKERS.some(\n      (m) =>\n        normalizedSegmentA.startsWith(m) || normalizedSegmentB.startsWith(m)\n    )\n  ) {\n    return ''\n  }\n\n  if (!matchSegment(segmentA, segmentB)) {\n    // once we find where the tree changed, we compute the rest of the path by traversing the tree\n    return extractPathFromFlightRouterState(treeB) ?? ''\n  }\n\n  for (const parallelRouterKey in parallelRoutesA) {\n    if (parallelRoutesB[parallelRouterKey]) {\n      const changedPath = computeChangedPathImpl(\n        parallelRoutesA[parallelRouterKey],\n        parallelRoutesB[parallelRouterKey]\n      )\n      if (changedPath !== null) {\n        return `${segmentToPathname(segmentB)}/${changedPath}`\n      }\n    }\n  }\n\n  return null\n}\n\nexport function computeChangedPath(\n  treeA: FlightRouterState,\n  treeB: FlightRouterState\n): string | null {\n  const changedPath = computeChangedPathImpl(treeA, treeB)\n\n  if (changedPath == null || changedPath === '/') {\n    return changedPath\n  }\n\n  // lightweight normalization to remove route groups\n  return normalizeSegments(changedPath.split('/'))\n}\n\n/**\n * Recursively extracts dynamic parameters from FlightRouterState.\n */\nexport function getSelectedParams(\n  currentTree: FlightRouterState,\n  params: Params = {}\n): Params {\n  const parallelRoutes = currentTree[1]\n\n  for (const parallelRoute of Object.values(parallelRoutes)) {\n    const segment = parallelRoute[0]\n    const isDynamicParameter = Array.isArray(segment)\n    const segmentValue = isDynamicParameter ? segment[1] : segment\n    if (!segmentValue || segmentValue.startsWith(PAGE_SEGMENT_KEY)) continue\n\n    // Ensure catchAll and optional catchall are turned into an array\n    const isCatchAll =\n      isDynamicParameter && (segment[2] === 'c' || segment[2] === 'oc')\n\n    if (isCatchAll) {\n      params[segment[0]] = segment[1].split('/')\n    } else if (isDynamicParameter) {\n      params[segment[0]] = segment[1]\n    }\n\n    params = getSelectedParams(parallelRoute, params)\n  }\n\n  return params\n}\n","import { startTransition } from 'react'\nimport { ACTION_SERVER_ACTION } from './components/router-reducer/router-reducer-types'\nimport { dispatchAppRouterAction } from './components/use-action-queue'\n\nexport async function callServer(actionId: string, actionArgs: any[]) {\n  return new Promise((resolve, reject) => {\n    startTransition(() => {\n      dispatchAppRouterAction({\n        type: ACTION_SERVER_ACTION,\n        actionId,\n        actionArgs,\n        resolve,\n        reject,\n      })\n    })\n  })\n}\n","import { useContext } from 'react'\nimport { PathnameContext } from '../../shared/lib/hooks-client-context.shared-runtime'\n\n/**\n * This checks to see if the current render has any unknown route parameters.\n * It's used to trigger a different render path in the error boundary.\n *\n * @returns true if there are any unknown route parameters, false otherwise\n */\nfunction hasFallbackRouteParams() {\n  if (typeof window === 'undefined') {\n    // AsyncLocalStorage should not be included in the client bundle.\n    const { workAsyncStorage } =\n      require('../../server/app-render/work-async-storage.external') as typeof import('../../server/app-render/work-async-storage.external')\n\n    const workStore = workAsyncStorage.getStore()\n    if (!workStore) return false\n\n    const { fallbackRouteParams } = workStore\n    if (!fallbackRouteParams || fallbackRouteParams.size === 0) return false\n\n    return true\n  }\n\n  return false\n}\n\n/**\n * This returns a `null` value if there are any unknown route parameters, and\n * otherwise returns the pathname from the context. This is an alternative to\n * `usePathname` that is used in the error boundary to avoid rendering the\n * error boundary when there are unknown route parameters. This doesn't throw\n * when accessed with unknown route parameters.\n *\n * @returns\n *\n * @internal\n */\nexport function useUntrackedPathname(): string | null {\n  // If there are any unknown route parameters we would typically throw\n  // an error, but this internal method allows us to return a null value instead\n  // for components that do not propagate the pathname to the static shell (like\n  // the error boundary).\n  if (hasFallbackRouteParams()) {\n    return null\n  }\n\n  // This shouldn't cause any issues related to conditional rendering because\n  // the environment will be consistent for the render.\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useContext(PathnameContext)\n}\n","(()=>{\"use strict\";var e={328:e=>{function hash(e){var r=5381,_=e.length;while(_){r=r*33^e.charCodeAt(--_)}return r>>>0}e.exports=hash}};var r={};function __nccwpck_require__(_){var a=r[_];if(a!==undefined){return a.exports}var t=r[_]={exports:{}};var i=true;try{e[_](t,t.exports,__nccwpck_require__);i=false}finally{if(i)delete r[_]}return t.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var _=__nccwpck_require__(328);module.exports=_})();","/**\n * Parse cookies from the `headers` of request\n * @param req request object\n */ export function getCookieParser(headers) {\n    return function parseCookie() {\n        const { cookie } = headers;\n        if (!cookie) {\n            return {};\n        }\n        const { parse: parseCookieFn } = require('next/dist/compiled/cookie');\n        return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie);\n    };\n}\n\n//# sourceMappingURL=get-cookie-parser.js.map","export async function getEdgeInstrumentationModule() {\n    const instrumentation = '_ENTRIES' in globalThis && _ENTRIES.middleware_instrumentation && await _ENTRIES.middleware_instrumentation;\n    return instrumentation;\n}\nlet instrumentationModulePromise = null;\nasync function registerInstrumentation() {\n    // Ensure registerInstrumentation is not called in production build\n    if (process.env.NEXT_PHASE === 'phase-production-build') return;\n    if (!instrumentationModulePromise) {\n        instrumentationModulePromise = getEdgeInstrumentationModule();\n    }\n    const instrumentation = await instrumentationModulePromise;\n    if (instrumentation == null ? void 0 : instrumentation.register) {\n        try {\n            await instrumentation.register();\n        } catch (err) {\n            err.message = `An error occurred while loading instrumentation hook: ${err.message}`;\n            throw err;\n        }\n    }\n}\nexport async function edgeInstrumentationOnRequestError(...args) {\n    const instrumentation = await getEdgeInstrumentationModule();\n    try {\n        var _instrumentation_onRequestError;\n        await (instrumentation == null ? void 0 : (_instrumentation_onRequestError = instrumentation.onRequestError) == null ? void 0 : _instrumentation_onRequestError.call(instrumentation, ...args));\n    } catch (err) {\n        // Log the soft error and continue, since the original error has already been thrown\n        console.error('Error in instrumentation.onRequestError:', err);\n    }\n}\nlet registerInstrumentationPromise = null;\nexport function ensureInstrumentationRegistered() {\n    if (!registerInstrumentationPromise) {\n        registerInstrumentationPromise = registerInstrumentation();\n    }\n    return registerInstrumentationPromise;\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n    // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n    return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n    const proxy = new Proxy(function() {}, {\n        get (_obj, prop) {\n            if (prop === 'then') {\n                return {};\n            }\n            throw Object.defineProperty(new Error(getUnsupportedModuleErrorMessage(moduleName)), \"__NEXT_ERROR_CODE\", {\n                value: \"E394\",\n                enumerable: false,\n                configurable: true\n            });\n        },\n        construct () {\n            throw Object.defineProperty(new Error(getUnsupportedModuleErrorMessage(moduleName)), \"__NEXT_ERROR_CODE\", {\n                value: \"E394\",\n                enumerable: false,\n                configurable: true\n            });\n        },\n        apply (_target, _this, args) {\n            if (typeof args[0] === 'function') {\n                return args[0](proxy);\n            }\n            throw Object.defineProperty(new Error(getUnsupportedModuleErrorMessage(moduleName)), \"__NEXT_ERROR_CODE\", {\n                value: \"E394\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    });\n    return new Proxy({}, {\n        get: ()=>proxy\n    });\n}\nfunction enhanceGlobals() {\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n        return;\n    }\n    // The condition is true when the \"process\" module is provided\n    if (process !== global.process) {\n        // prefer local process but global.process has correct \"env\"\n        process.env = global.process.env;\n        global.process = process;\n    }\n    // to allow building code that import but does not use node.js modules,\n    // webpack will expect this function to exist in global scope\n    Object.defineProperty(globalThis, '__import_unsupported', {\n        value: __import_unsupported,\n        enumerable: false,\n        configurable: false\n    });\n    // Eagerly fire instrumentation hook to make the startup faster.\n    void ensureInstrumentationRegistered();\n}\nenhanceGlobals();\n\n//# sourceMappingURL=globals.js.map","import type { Segment } from '../../server/app-render/types'\n\nexport function isGroupSegment(segment: string) {\n  // Use array[0] for performant purpose\n  return segment[0] === '(' && segment.endsWith(')')\n}\n\nexport function isParallelRouteSegment(segment: string) {\n  return segment.startsWith('@') && segment !== '@children'\n}\n\nexport function addSearchParamsIfPageSegment(\n  segment: Segment,\n  searchParams: Record<string, string | string[] | undefined>\n) {\n  const isPageSegment = segment.includes(PAGE_SEGMENT_KEY)\n\n  if (isPageSegment) {\n    const stringifiedQuery = JSON.stringify(searchParams)\n    return stringifiedQuery !== '{}'\n      ? PAGE_SEGMENT_KEY + '?' + stringifiedQuery\n      : PAGE_SEGMENT_KEY\n  }\n\n  return segment\n}\n\nexport const PAGE_SEGMENT_KEY = '__PAGE__'\nexport const DEFAULT_SEGMENT_KEY = '__DEFAULT__'\n","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */\nexport function removeTrailingSlash(route: string) {\n  return route.replace(/\\/$/, '') || '/'\n}\n","import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash'\nimport { isGroupSegment } from '../../segment'\n\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */\nexport function normalizeAppPath(route: string) {\n  return ensureLeadingSlash(\n    route.split('/').reduce((pathname, segment, index, segments) => {\n      // Empty segments are ignored.\n      if (!segment) {\n        return pathname\n      }\n\n      // Groups are ignored.\n      if (isGroupSegment(segment)) {\n        return pathname\n      }\n\n      // Parallel segments are ignored.\n      if (segment[0] === '@') {\n        return pathname\n      }\n\n      // The last segment (if it's a leaf) should be ignored.\n      if (\n        (segment === 'page' || segment === 'route') &&\n        index === segments.length - 1\n      ) {\n        return pathname\n      }\n\n      return `${pathname}/${segment}`\n    }, '')\n  )\n}\n\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */\nexport function normalizeRscURL(url: string) {\n  return url.replace(\n    /\\.rsc($|\\?)/,\n    // $1 ensures `?` is preserved\n    '$1'\n  )\n}\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers';\nconst INTERNAL_QUERY_NAMES = [\n    NEXT_RSC_UNION_QUERY\n];\nexport function stripInternalQueries(query) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        delete query[name];\n    }\n}\nexport function stripInternalSearchParams(url) {\n    const isStringUrl = typeof url === 'string';\n    const instance = isStringUrl ? new URL(url) : url;\n    instance.searchParams.delete(NEXT_RSC_UNION_QUERY);\n    return isStringUrl ? instance.toString() : instance;\n}\n\n//# sourceMappingURL=internal-utils.js.map","import { normalizeAppPath } from './app-paths'\n\n// order matters here, the first match will be used\nexport const INTERCEPTION_ROUTE_MARKERS = [\n  '(..)(..)',\n  '(.)',\n  '(..)',\n  '(...)',\n] as const\n\nexport function isInterceptionRouteAppPath(path: string): boolean {\n  // TODO-APP: add more serious validation\n  return (\n    path\n      .split('/')\n      .find((segment) =>\n        INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n      ) !== undefined\n  )\n}\n\nexport function extractInterceptionRouteInformation(path: string) {\n  let interceptingRoute: string | undefined,\n    marker: (typeof INTERCEPTION_ROUTE_MARKERS)[number] | undefined,\n    interceptedRoute: string | undefined\n\n  for (const segment of path.split('/')) {\n    marker = INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n    if (marker) {\n      ;[interceptingRoute, interceptedRoute] = path.split(marker, 2)\n      break\n    }\n  }\n\n  if (!interceptingRoute || !marker || !interceptedRoute) {\n    throw new Error(\n      `Invalid interception route: ${path}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`\n    )\n  }\n\n  interceptingRoute = normalizeAppPath(interceptingRoute) // normalize the path, e.g. /(blog)/feed -> /feed\n\n  switch (marker) {\n    case '(.)':\n      // (.) indicates that we should match with sibling routes, so we just need to append the intercepted route to the intercepting route\n      if (interceptingRoute === '/') {\n        interceptedRoute = `/${interceptedRoute}`\n      } else {\n        interceptedRoute = interceptingRoute + '/' + interceptedRoute\n      }\n      break\n    case '(..)':\n      // (..) indicates that we should match at one level up, so we need to remove the last segment of the intercepting route\n      if (interceptingRoute === '/') {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..) marker at the root level, use (.) instead.`\n        )\n      }\n      interceptedRoute = interceptingRoute\n        .split('/')\n        .slice(0, -1)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    case '(...)':\n      // (...) will match the route segment in the root directory, so we need to use the root directory to prepend the intercepted route\n      interceptedRoute = '/' + interceptedRoute\n      break\n    case '(..)(..)':\n      // (..)(..) indicates that we should match at two levels up, so we need to remove the last two segments of the intercepting route\n\n      const splitInterceptingRoute = interceptingRoute.split('/')\n      if (splitInterceptingRoute.length <= 2) {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..)(..) marker at the root level or one level up.`\n        )\n      }\n\n      interceptedRoute = splitInterceptingRoute\n        .slice(0, -2)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    default:\n      throw new Error('Invariant: unexpected marker')\n  }\n\n  return { interceptingRoute, interceptedRoute }\n}\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","export var RouteKind = /*#__PURE__*/ function(RouteKind) {\n    /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */ RouteKind[\"PAGES\"] = \"PAGES\";\n    /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */ RouteKind[\"PAGES_API\"] = \"PAGES_API\";\n    /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */ RouteKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */ RouteKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */ RouteKind[\"IMAGE\"] = \"IMAGE\";\n    return RouteKind;\n}({});\n\n//# sourceMappingURL=route-kind.js.map","'use client'\n\nimport type { FetchServerResponseResult } from '../../client/components/router-reducer/fetch-server-response'\nimport type {\n  FocusAndScrollRef,\n  PrefetchKind,\n} from '../../client/components/router-reducer/router-reducer-types'\nimport type {\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../server/app-render/types'\nimport React from 'react'\n\nexport type ChildSegmentMap = Map<string, CacheNode>\n\n/**\n * Cache node used in app-router / layout-router.\n */\nexport type CacheNode = ReadyCacheNode | LazyCacheNode\n\nexport type LoadingModuleData =\n  | [React.JSX.Element, React.ReactNode, React.ReactNode]\n  | null\n\n/** viewport metadata node */\nexport type HeadData = React.ReactNode\n\nexport type LazyCacheNode = {\n  /**\n   * When rsc is null, this is a lazily-initialized cache node.\n   *\n   * If the app attempts to render it, it triggers a lazy data fetch,\n   * postpones the render, and schedules an update to a new tree.\n   *\n   * TODO: This mechanism should not be used when PPR is enabled, though it\n   * currently is in some cases until we've implemented partial\n   * segment fetching.\n   */\n  rsc: null\n\n  /**\n   * A prefetched version of the segment data. See explanation in corresponding\n   * field of ReadyCacheNode (below).\n   *\n   * Since LazyCacheNode mostly only exists in the non-PPR implementation, this\n   * will usually be null, but it could have been cloned from a previous\n   * CacheNode that was created by the PPR implementation. Eventually we want\n   * to migrate everything away from LazyCacheNode entirely.\n   */\n  prefetchRsc: React.ReactNode\n\n  /**\n   * A pending response for the lazy data fetch. If this is not present\n   * during render, it is lazily created.\n   */\n  lazyData: Promise<FetchServerResponseResult> | null\n\n  prefetchHead: HeadData | null\n\n  head: HeadData\n\n  loading: LoadingModuleData | Promise<LoadingModuleData>\n\n  /**\n   * Child parallel routes.\n   */\n  parallelRoutes: Map<string, ChildSegmentMap>\n\n  /**\n   * The timestamp of the navigation that last updated the CacheNode's data. If\n   * a CacheNode is reused from a previous navigation, this value is not\n   * updated. Used to track the staleness of the data.\n   */\n  navigatedAt: number\n}\n\nexport type ReadyCacheNode = {\n  /**\n   * When rsc is not null, it represents the RSC data for the\n   * corresponding segment.\n   *\n   * `null` is a valid React Node but because segment data is always a\n   * <LayoutRouter> component, we can use `null` to represent empty.\n   *\n   * TODO: For additional type safety, update this type to\n   * Exclude<React.ReactNode, null>. Need to update createEmptyCacheNode to\n   * accept rsc as an argument, or just inline the callers.\n   */\n  rsc: React.ReactNode\n\n  /**\n   * Represents a static version of the segment that can be shown immediately,\n   * and may or may not contain dynamic holes. It's prefetched before a\n   * navigation occurs.\n   *\n   * During rendering, we will choose whether to render `rsc` or `prefetchRsc`\n   * with `useDeferredValue`. As with the `rsc` field, a value of `null` means\n   * no value was provided. In this case, the LayoutRouter will go straight to\n   * rendering the `rsc` value; if that one is also missing, it will suspend and\n   * trigger a lazy fetch.\n   */\n  prefetchRsc: React.ReactNode\n\n  /**\n   * There should never be a lazy data request in this case.\n   */\n  lazyData: null\n  prefetchHead: HeadData | null\n\n  head: HeadData\n\n  loading: LoadingModuleData | Promise<LoadingModuleData>\n\n  parallelRoutes: Map<string, ChildSegmentMap>\n\n  navigatedAt: number\n}\n\nexport interface NavigateOptions {\n  scroll?: boolean\n}\n\nexport interface PrefetchOptions {\n  kind: PrefetchKind\n}\n\nexport interface AppRouterInstance {\n  /**\n   * Navigate to the previous history entry.\n   */\n  back(): void\n  /**\n   * Navigate to the next history entry.\n   */\n  forward(): void\n  /**\n   * Refresh the current page.\n   */\n  refresh(): void\n  /**\n   * Refresh the current page. Use in development only.\n   * @internal\n   */\n  hmrRefresh(): void\n  /**\n   * Navigate to the provided href.\n   * Pushes a new history entry.\n   */\n  push(href: string, options?: NavigateOptions): void\n  /**\n   * Navigate to the provided href.\n   * Replaces the current history entry.\n   */\n  replace(href: string, options?: NavigateOptions): void\n  /**\n   * Prefetch the provided href.\n   */\n  prefetch(href: string, options?: PrefetchOptions): void\n}\n\nexport const AppRouterContext = React.createContext<AppRouterInstance | null>(\n  null\n)\nexport const LayoutRouterContext = React.createContext<{\n  parentTree: FlightRouterState\n  parentCacheNode: CacheNode\n  parentSegmentPath: FlightSegmentPath | null\n  url: string\n} | null>(null)\n\nexport const GlobalLayoutRouterContext = React.createContext<{\n  tree: FlightRouterState\n  focusAndScrollRef: FocusAndScrollRef\n  nextUrl: string | null\n}>(null as any)\n\nexport const TemplateContext = React.createContext<React.ReactNode>(null as any)\n\nif (process.env.NODE_ENV !== 'production') {\n  AppRouterContext.displayName = 'AppRouterContext'\n  LayoutRouterContext.displayName = 'LayoutRouterContext'\n  GlobalLayoutRouterContext.displayName = 'GlobalLayoutRouterContext'\n  TemplateContext.displayName = 'TemplateContext'\n}\n\nexport const MissingSlotContext = React.createContext<Set<string>>(new Set())\n","(function(){var e={452:function(e){\"use strict\";e.exports=require(\"next/dist/compiled/querystring-es3\")}};var t={};function __nccwpck_require__(o){var a=t[o];if(a!==undefined){return a.exports}var s=t[o]={exports:{}};var n=true;try{e[o](s,s.exports,__nccwpck_require__);n=false}finally{if(n)delete t[o]}return s.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var o={};!function(){var e=o;var t,a=(t=__nccwpck_require__(452))&&\"object\"==typeof t&&\"default\"in t?t.default:t,s=/https?|ftp|gopher|file/;function r(e){\"string\"==typeof e&&(e=d(e));var t=function(e,t,o){var a=e.auth,s=e.hostname,n=e.protocol||\"\",p=e.pathname||\"\",c=e.hash||\"\",i=e.query||\"\",u=!1;a=a?encodeURIComponent(a).replace(/%3A/i,\":\")+\"@\":\"\",e.host?u=a+e.host:s&&(u=a+(~s.indexOf(\":\")?\"[\"+s+\"]\":s),e.port&&(u+=\":\"+e.port)),i&&\"object\"==typeof i&&(i=t.encode(i));var f=e.search||i&&\"?\"+i||\"\";return n&&\":\"!==n.substr(-1)&&(n+=\":\"),e.slashes||(!n||o.test(n))&&!1!==u?(u=\"//\"+(u||\"\"),p&&\"/\"!==p[0]&&(p=\"/\"+p)):u||(u=\"\"),c&&\"#\"!==c[0]&&(c=\"#\"+c),f&&\"?\"!==f[0]&&(f=\"?\"+f),{protocol:n,host:u,pathname:p=p.replace(/[?#]/g,encodeURIComponent),search:f=f.replace(\"#\",\"%23\"),hash:c}}(e,a,s);return\"\"+t.protocol+t.host+t.pathname+t.search+t.hash}var n=\"http://\",p=\"w.w\",c=n+p,i=/^([a-z0-9.+-]*:\\/\\/\\/)([a-z0-9.+-]:\\/*)?/i,u=/https?|ftp|gopher|file/;function h(e,t){var o=\"string\"==typeof e?d(e):e;e=\"object\"==typeof e?r(e):e;var a=d(t),s=\"\";o.protocol&&!o.slashes&&(s=o.protocol,e=e.replace(o.protocol,\"\"),s+=\"/\"===t[0]||\"/\"===e[0]?\"/\":\"\"),s&&a.protocol&&(s=\"\",a.slashes||(s=a.protocol,t=t.replace(a.protocol,\"\")));var p=e.match(i);p&&!a.protocol&&(e=e.substr((s=p[1]+(p[2]||\"\")).length),/^\\/\\/[^/]/.test(t)&&(s=s.slice(0,-1)));var f=new URL(e,c+\"/\"),m=new URL(t,f).toString().replace(c,\"\"),v=a.protocol||o.protocol;return v+=o.slashes||a.slashes?\"//\":\"\",!s&&v?m=m.replace(n,v):s&&(m=m.replace(n,\"\")),u.test(m)||~t.indexOf(\".\")||\"/\"===e.slice(-1)||\"/\"===t.slice(-1)||\"/\"!==m.slice(-1)||(m=m.slice(0,-1)),s&&(m=s+(\"/\"===m[0]?m.substr(1):m)),m}function l(){}l.prototype.parse=d,l.prototype.format=r,l.prototype.resolve=h,l.prototype.resolveObject=h;var f=/^https?|ftp|gopher|file/,m=/^(.*?)([#?].*)/,v=/^([a-z0-9.+-]*:)(\\/{0,3})(.*)/i,_=/^([a-z0-9.+-]*:)?\\/\\/\\/*/i,b=/^([a-z0-9.+-]*:)(\\/{0,2})\\[(.*)\\]$/i;function d(e,t,o){if(void 0===t&&(t=!1),void 0===o&&(o=!1),e&&\"object\"==typeof e&&e instanceof l)return e;var s=(e=e.trim()).match(m);e=s?s[1].replace(/\\\\/g,\"/\")+s[2]:e.replace(/\\\\/g,\"/\"),b.test(e)&&\"/\"!==e.slice(-1)&&(e+=\"/\");var n=!/(^javascript)/.test(e)&&e.match(v),i=_.test(e),u=\"\";n&&(f.test(n[1])||(u=n[1].toLowerCase(),e=\"\"+n[2]+n[3]),n[2]||(i=!1,f.test(n[1])?(u=n[1],e=\"\"+n[3]):e=\"//\"+n[3]),3!==n[2].length&&1!==n[2].length||(u=n[1],e=\"/\"+n[3]));var g,y=(s?s[1]:e).match(/^https?:\\/\\/[^/]+(:[0-9]+)(?=\\/|$)/),w=y&&y[1],x=new l,C=\"\",U=\"\";try{g=new URL(e)}catch(t){C=t,u||o||!/^\\/\\//.test(e)||/^\\/\\/.+[@.]/.test(e)||(U=\"/\",e=e.substr(1));try{g=new URL(e,c)}catch(e){return x.protocol=u,x.href=u,x}}x.slashes=i&&!U,x.host=g.host===p?\"\":g.host,x.hostname=g.hostname===p?\"\":g.hostname.replace(/(\\[|\\])/g,\"\"),x.protocol=C?u||null:g.protocol,x.search=g.search.replace(/\\\\/g,\"%5C\"),x.hash=g.hash.replace(/\\\\/g,\"%5C\");var j=e.split(\"#\");!x.search&&~j[0].indexOf(\"?\")&&(x.search=\"?\"),x.hash||\"\"!==j[1]||(x.hash=\"#\"),x.query=t?a.decode(g.search.substr(1)):x.search.substr(1),x.pathname=U+(n?function(e){return e.replace(/['^|`]/g,(function(e){return\"%\"+e.charCodeAt().toString(16).toUpperCase()})).replace(/((?:%[0-9A-F]{2})+)/g,(function(e,t){try{return decodeURIComponent(t).split(\"\").map((function(e){var t=e.charCodeAt();return t>256||/^[a-z0-9]$/i.test(e)?e:\"%\"+t.toString(16).toUpperCase()})).join(\"\")}catch(e){return t}}))}(g.pathname):g.pathname),\"about:\"===x.protocol&&\"blank\"===x.pathname&&(x.protocol=\"\",x.pathname=\"\"),C&&\"/\"!==e[0]&&(x.pathname=x.pathname.substr(1)),u&&!f.test(u)&&\"/\"!==e.slice(-1)&&\"/\"===x.pathname&&(x.pathname=\"\"),x.path=x.pathname+x.search,x.auth=[g.username,g.password].map(decodeURIComponent).filter(Boolean).join(\":\"),x.port=g.port,w&&!x.host.endsWith(w)&&(x.host+=w,x.port=w.slice(1)),x.href=U?\"\"+x.pathname+x.search+x.hash:r(x);var q=/^(file)/.test(x.href)?[\"host\",\"hostname\"]:[];return Object.keys(x).forEach((function(e){~q.indexOf(e)||(x[e]=x[e]||null)})),x}e.parse=d,e.format=r,e.resolve=h,e.resolveObject=function(e,t){return d(h(e,t))},e.Url=l}();module.exports=o})();","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { HTTPAccessErrorFallback } from './http-access-fallback/error-fallback'\n\nexport default function Unauthorized() {\n  return (\n    <HTTPAccessErrorFallback\n      status={401}\n      message=\"You're not authorized to access this page.\"\n    />\n  )\n}\n","const sharedAsyncLocalStorageNotAvailableError = Object.defineProperty(new Error('Invariant: AsyncLocalStorage accessed in runtime where it is not available'), \"__NEXT_ERROR_CODE\", {\n    value: \"E504\",\n    enumerable: false,\n    configurable: true\n});\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    static bind(fn) {\n        return fn;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = typeof globalThis !== 'undefined' && globalThis.AsyncLocalStorage;\nexport function createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nexport function bindSnapshot(fn) {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.bind(fn);\n    }\n    return FakeAsyncLocalStorage.bind(fn);\n}\nexport function createSnapshot() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.snapshot();\n    }\n    return function(fn, ...args) {\n        return fn(...args);\n    };\n}\n\n//# sourceMappingURL=async-local-storage.js.map","const sharedAsyncLocalStorageNotAvailableError = Object.defineProperty(new Error('Invariant: AsyncLocalStorage accessed in runtime where it is not available'), \"__NEXT_ERROR_CODE\", {\n    value: \"E504\",\n    enumerable: false,\n    configurable: true\n});\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    static bind(fn) {\n        return fn;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = typeof globalThis !== 'undefined' && globalThis.AsyncLocalStorage;\nexport function createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nexport function bindSnapshot(fn) {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.bind(fn);\n    }\n    return FakeAsyncLocalStorage.bind(fn);\n}\nexport function createSnapshot() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.snapshot();\n    }\n    return function(fn, ...args) {\n        return fn(...args);\n    };\n}\n\n//# sourceMappingURL=async-local-storage.js.map","/** Monitor when the consumer finishes reading the response body.\nthat's as close as we can get to `res.on('close')` using web APIs.\n*/ export function trackBodyConsumed(body, onEnd) {\n    if (typeof body === 'string') {\n        const generator = async function* generate() {\n            const encoder = new TextEncoder();\n            yield encoder.encode(body);\n            onEnd();\n        };\n        // @ts-expect-error BodyInit typings doesn't seem to include AsyncIterables even though it's supported in practice\n        return generator();\n    } else {\n        return trackStreamConsumed(body, onEnd);\n    }\n}\nexport function trackStreamConsumed(stream, onEnd) {\n    // NOTE: This function must handle `stream` being aborted or cancelled,\n    // so it can't just be this:\n    //\n    //   return stream.pipeThrough(new TransformStream({ flush() { onEnd() } }))\n    //\n    // because that doesn't handle cancellations.\n    // (and cancellation handling via `Transformer.cancel` is only available in node >20)\n    const dest = new TransformStream();\n    const runOnEnd = ()=>onEnd();\n    stream.pipeTo(dest.writable).then(runOnEnd, runOnEnd);\n    return dest.readable;\n}\nexport class CloseController {\n    onClose(callback) {\n        if (this.isClosed) {\n            throw Object.defineProperty(new Error('Cannot subscribe to a closed CloseController'), \"__NEXT_ERROR_CODE\", {\n                value: \"E365\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        this.target.addEventListener('close', callback);\n        this.listeners++;\n    }\n    dispatchClose() {\n        if (this.isClosed) {\n            throw Object.defineProperty(new Error('Cannot close a CloseController multiple times'), \"__NEXT_ERROR_CODE\", {\n                value: \"E229\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (this.listeners > 0) {\n            this.target.dispatchEvent(new Event('close'));\n        }\n        this.isClosed = true;\n    }\n    constructor(){\n        this.target = new EventTarget();\n        this.listeners = 0;\n        this.isClosed = false;\n    }\n}\n\n//# sourceMappingURL=web-on-close.js.map","'use client'\nimport React, { useEffect } from 'react'\nimport type { AppRouterInstance } from '../../shared/lib/app-router-context.shared-runtime'\nimport { useRouter } from './navigation'\nimport { getRedirectTypeFromError, getURLFromRedirectError } from './redirect'\nimport { RedirectType, isRedirectError } from './redirect-error'\n\ninterface RedirectBoundaryProps {\n  router: AppRouterInstance\n  children: React.ReactNode\n}\n\nfunction HandleRedirect({\n  redirect,\n  reset,\n  redirectType,\n}: {\n  redirect: string\n  redirectType: RedirectType\n  reset: () => void\n}) {\n  const router = useRouter()\n\n  useEffect(() => {\n    React.startTransition(() => {\n      if (redirectType === RedirectType.push) {\n        router.push(redirect, {})\n      } else {\n        router.replace(redirect, {})\n      }\n      reset()\n    })\n  }, [redirect, redirectType, reset, router])\n\n  return null\n}\n\nexport class RedirectErrorBoundary extends React.Component<\n  RedirectBoundaryProps,\n  { redirect: string | null; redirectType: RedirectType | null }\n> {\n  constructor(props: RedirectBoundaryProps) {\n    super(props)\n    this.state = { redirect: null, redirectType: null }\n  }\n\n  static getDerivedStateFromError(error: any) {\n    if (isRedirectError(error)) {\n      const url = getURLFromRedirectError(error)\n      const redirectType = getRedirectTypeFromError(error)\n      return { redirect: url, redirectType }\n    }\n    // Re-throw if error is not for redirect\n    throw error\n  }\n\n  // Explicit type is needed to avoid the generated `.d.ts` having a wide return type that could be specific to the `@types/react` version.\n  render(): React.ReactNode {\n    const { redirect, redirectType } = this.state\n    if (redirect !== null && redirectType !== null) {\n      return (\n        <HandleRedirect\n          redirect={redirect}\n          redirectType={redirectType}\n          reset={() => this.setState({ redirect: null })}\n        />\n      )\n    }\n\n    return this.props.children\n  }\n}\n\nexport function RedirectBoundary({ children }: { children: React.ReactNode }) {\n  const router = useRouter()\n  return (\n    <RedirectErrorBoundary router={router}>{children}</RedirectErrorBoundary>\n  )\n}\n","export var CachedRouteKind = /*#__PURE__*/ function(CachedRouteKind) {\n    CachedRouteKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    CachedRouteKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    CachedRouteKind[\"PAGES\"] = \"PAGES\";\n    CachedRouteKind[\"FETCH\"] = \"FETCH\";\n    CachedRouteKind[\"REDIRECT\"] = \"REDIRECT\";\n    CachedRouteKind[\"IMAGE\"] = \"IMAGE\";\n    return CachedRouteKind;\n}({});\nexport var IncrementalCacheKind = /*#__PURE__*/ function(IncrementalCacheKind) {\n    IncrementalCacheKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    IncrementalCacheKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    IncrementalCacheKind[\"PAGES\"] = \"PAGES\";\n    IncrementalCacheKind[\"FETCH\"] = \"FETCH\";\n    IncrementalCacheKind[\"IMAGE\"] = \"IMAGE\";\n    return IncrementalCacheKind;\n}({});\n\n//# sourceMappingURL=types.js.map","export class LRUCache {\n    constructor(maxSize, calculateSize){\n        this.cache = new Map();\n        this.sizes = new Map();\n        this.totalSize = 0;\n        this.maxSize = maxSize;\n        this.calculateSize = calculateSize || (()=>1);\n    }\n    set(key, value) {\n        if (!key || !value) return;\n        const size = this.calculateSize(value);\n        if (size > this.maxSize) {\n            console.warn('Single item size exceeds maxSize');\n            return;\n        }\n        if (this.cache.has(key)) {\n            this.totalSize -= this.sizes.get(key) || 0;\n        }\n        this.cache.set(key, value);\n        this.sizes.set(key, size);\n        this.totalSize += size;\n        this.touch(key);\n    }\n    has(key) {\n        if (!key) return false;\n        this.touch(key);\n        return Boolean(this.cache.get(key));\n    }\n    get(key) {\n        if (!key) return;\n        const value = this.cache.get(key);\n        if (value === undefined) {\n            return undefined;\n        }\n        this.touch(key);\n        return value;\n    }\n    touch(key) {\n        const value = this.cache.get(key);\n        if (value !== undefined) {\n            this.cache.delete(key);\n            this.cache.set(key, value);\n            this.evictIfNecessary();\n        }\n    }\n    evictIfNecessary() {\n        while(this.totalSize > this.maxSize && this.cache.size > 0){\n            this.evictLeastRecentlyUsed();\n        }\n    }\n    evictLeastRecentlyUsed() {\n        const lruKey = this.cache.keys().next().value;\n        if (lruKey !== undefined) {\n            const lruSize = this.sizes.get(lruKey) || 0;\n            this.totalSize -= lruSize;\n            this.cache.delete(lruKey);\n            this.sizes.delete(lruKey);\n        }\n    }\n    reset() {\n        this.cache.clear();\n        this.sizes.clear();\n        this.totalSize = 0;\n    }\n    keys() {\n        return [\n            ...this.cache.keys()\n        ];\n    }\n    remove(key) {\n        if (this.cache.has(key)) {\n            this.totalSize -= this.sizes.get(key) || 0;\n            this.cache.delete(key);\n            this.sizes.delete(key);\n        }\n    }\n    clear() {\n        this.cache.clear();\n        this.sizes.clear();\n        this.totalSize = 0;\n    }\n    get size() {\n        return this.cache.size;\n    }\n    get currentSize() {\n        return this.totalSize;\n    }\n}\n\n//# sourceMappingURL=lru-cache.js.map","import { RequestCookies } from '../cookies';\nimport { ResponseCookies } from '../cookies';\nimport { ReflectAdapter } from './reflect';\nimport { workAsyncStorage } from '../../../app-render/work-async-storage.external';\nimport { getExpectedRequestStore } from '../../../app-render/work-unit-async-storage.external';\n/**\n * @internal\n */ export class ReadonlyRequestCookiesError extends Error {\n    constructor(){\n        super('Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#options');\n    }\n    static callable() {\n        throw new ReadonlyRequestCookiesError();\n    }\n}\nexport class RequestCookiesAdapter {\n    static seal(cookies) {\n        return new Proxy(cookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'clear':\n                    case 'delete':\n                    case 'set':\n                        return ReadonlyRequestCookiesError.callable;\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n}\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for('next.mutated.cookies');\nexport function getModifiedCookieValues(cookies) {\n    const modified = cookies[SYMBOL_MODIFY_COOKIE_VALUES];\n    if (!modified || !Array.isArray(modified) || modified.length === 0) {\n        return [];\n    }\n    return modified;\n}\nexport function appendMutableCookies(headers, mutableCookies) {\n    const modifiedCookieValues = getModifiedCookieValues(mutableCookies);\n    if (modifiedCookieValues.length === 0) {\n        return false;\n    }\n    // Return a new response that extends the response with\n    // the modified cookies as fallbacks. `res` cookies\n    // will still take precedence.\n    const resCookies = new ResponseCookies(headers);\n    const returnedCookies = resCookies.getAll();\n    // Set the modified cookies as fallbacks.\n    for (const cookie of modifiedCookieValues){\n        resCookies.set(cookie);\n    }\n    // Set the original cookies as the final values.\n    for (const cookie of returnedCookies){\n        resCookies.set(cookie);\n    }\n    return true;\n}\nexport class MutableRequestCookiesAdapter {\n    static wrap(cookies, onUpdateCookies) {\n        const responseCookies = new ResponseCookies(new Headers());\n        for (const cookie of cookies.getAll()){\n            responseCookies.set(cookie);\n        }\n        let modifiedValues = [];\n        const modifiedCookies = new Set();\n        const updateResponseCookies = ()=>{\n            // TODO-APP: change method of getting workStore\n            const workStore = workAsyncStorage.getStore();\n            if (workStore) {\n                workStore.pathWasRevalidated = true;\n            }\n            const allCookies = responseCookies.getAll();\n            modifiedValues = allCookies.filter((c)=>modifiedCookies.has(c.name));\n            if (onUpdateCookies) {\n                const serializedCookies = [];\n                for (const cookie of modifiedValues){\n                    const tempCookies = new ResponseCookies(new Headers());\n                    tempCookies.set(cookie);\n                    serializedCookies.push(tempCookies.toString());\n                }\n                onUpdateCookies(serializedCookies);\n            }\n        };\n        const wrappedCookies = new Proxy(responseCookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    // A special symbol to get the modified cookie values\n                    case SYMBOL_MODIFY_COOKIE_VALUES:\n                        return modifiedValues;\n                    // TODO: Throw error if trying to set a cookie after the response\n                    // headers have been set.\n                    case 'delete':\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === 'string' ? args[0] : args[0].name);\n                            try {\n                                target.delete(...args);\n                                return wrappedCookies;\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    case 'set':\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === 'string' ? args[0] : args[0].name);\n                            try {\n                                target.set(...args);\n                                return wrappedCookies;\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n        return wrappedCookies;\n    }\n}\nexport function wrapWithMutableAccessCheck(responseCookies) {\n    const wrappedCookies = new Proxy(responseCookies, {\n        get (target, prop, receiver) {\n            switch(prop){\n                case 'delete':\n                    return function(...args) {\n                        ensureCookiesAreStillMutable('cookies().delete');\n                        target.delete(...args);\n                        return wrappedCookies;\n                    };\n                case 'set':\n                    return function(...args) {\n                        ensureCookiesAreStillMutable('cookies().set');\n                        target.set(...args);\n                        return wrappedCookies;\n                    };\n                default:\n                    return ReflectAdapter.get(target, prop, receiver);\n            }\n        }\n    });\n    return wrappedCookies;\n}\nexport function areCookiesMutableInCurrentPhase(requestStore) {\n    return requestStore.phase === 'action';\n}\n/** Ensure that cookies() starts throwing on mutation\n * if we changed phases and can no longer mutate.\n *\n * This can happen when going:\n *   'render' -> 'after'\n *   'action' -> 'render'\n * */ function ensureCookiesAreStillMutable(callingExpression) {\n    const requestStore = getExpectedRequestStore(callingExpression);\n    if (!areCookiesMutableInCurrentPhase(requestStore)) {\n        // TODO: maybe we can give a more precise error message based on callingExpression?\n        throw new ReadonlyRequestCookiesError();\n    }\n}\nexport function responseCookiesToRequestCookies(responseCookies) {\n    const requestCookies = new RequestCookies(new Headers());\n    for (const cookie of responseCookies.getAll()){\n        requestCookies.set(cookie);\n    }\n    return requestCookies;\n}\n\n//# sourceMappingURL=request-cookies.js.map","// Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { UrlObject } from 'url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport * as querystring from './querystring'\n\nconst slashedProtocols = /https?|ftp|gopher|file/\n\nexport function formatUrl(urlObj: UrlObject) {\n  let { auth, hostname } = urlObj\n  let protocol = urlObj.protocol || ''\n  let pathname = urlObj.pathname || ''\n  let hash = urlObj.hash || ''\n  let query = urlObj.query || ''\n  let host: string | false = false\n\n  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : ''\n\n  if (urlObj.host) {\n    host = auth + urlObj.host\n  } else if (hostname) {\n    host = auth + (~hostname.indexOf(':') ? `[${hostname}]` : hostname)\n    if (urlObj.port) {\n      host += ':' + urlObj.port\n    }\n  }\n\n  if (query && typeof query === 'object') {\n    query = String(querystring.urlQueryToSearchParams(query as ParsedUrlQuery))\n  }\n\n  let search = urlObj.search || (query && `?${query}`) || ''\n\n  if (protocol && !protocol.endsWith(':')) protocol += ':'\n\n  if (\n    urlObj.slashes ||\n    ((!protocol || slashedProtocols.test(protocol)) && host !== false)\n  ) {\n    host = '//' + (host || '')\n    if (pathname && pathname[0] !== '/') pathname = '/' + pathname\n  } else if (!host) {\n    host = ''\n  }\n\n  if (hash && hash[0] !== '#') hash = '#' + hash\n  if (search && search[0] !== '?') search = '?' + search\n\n  pathname = pathname.replace(/[?#]/g, encodeURIComponent)\n  search = search.replace('#', '%23')\n\n  return `${protocol}${host}${pathname}${search}${hash}`\n}\n\nexport const urlObjectKeys = [\n  'auth',\n  'hash',\n  'host',\n  'hostname',\n  'href',\n  'path',\n  'pathname',\n  'port',\n  'protocol',\n  'query',\n  'search',\n  'slashes',\n]\n\nexport function formatWithValidation(url: UrlObject): string {\n  if (process.env.NODE_ENV === 'development') {\n    if (url !== null && typeof url === 'object') {\n      Object.keys(url).forEach((key) => {\n        if (!urlObjectKeys.includes(key)) {\n          console.warn(\n            `Unknown key passed via urlObject into url.format: ${key}`\n          )\n        }\n      })\n    }\n  }\n\n  return formatUrl(url)\n}\n","import { useCallback, useRef, type Ref } from 'react'\n\n// This is a compatibility hook to support React 18 and 19 refs.\n// In 19, a cleanup function from refs may be returned.\n// In 18, returning a cleanup function creates a warning.\n// Since we take userspace refs, we don't know ahead of time if a cleanup function will be returned.\n// This implements cleanup functions with the old behavior in 18.\n// We know refs are always called alternating with `null` and then `T`.\n// So a call with `null` means we need to call the previous cleanup functions.\nexport function useMergedRef<TElement>(\n  refA: Ref<TElement>,\n  refB: Ref<TElement>\n): Ref<TElement> {\n  const cleanupA = useRef<(() => void) | null>(null)\n  const cleanupB = useRef<(() => void) | null>(null)\n\n  // NOTE: In theory, we could skip the wrapping if only one of the refs is non-null.\n  // (this happens often if the user doesn't pass a ref to Link/Form/Image)\n  // But this can cause us to leak a cleanup-ref into user code (e.g. via `<Link legacyBehavior>`),\n  // and the user might pass that ref into ref-merging library that doesn't support cleanup refs\n  // (because it hasn't been updated for React 19)\n  // which can then cause things to blow up, because a cleanup-returning ref gets called with `null`.\n  // So in practice, it's safer to be defensive and always wrap the ref, even on React 19.\n  return useCallback(\n    (current: TElement | null): void => {\n      if (current === null) {\n        const cleanupFnA = cleanupA.current\n        if (cleanupFnA) {\n          cleanupA.current = null\n          cleanupFnA()\n        }\n        const cleanupFnB = cleanupB.current\n        if (cleanupFnB) {\n          cleanupB.current = null\n          cleanupFnB()\n        }\n      } else {\n        if (refA) {\n          cleanupA.current = applyRef(refA, current)\n        }\n        if (refB) {\n          cleanupB.current = applyRef(refB, current)\n        }\n      }\n    },\n    [refA, refB]\n  )\n}\n\nfunction applyRef<TElement>(\n  refA: NonNullable<Ref<TElement>>,\n  current: TElement\n) {\n  if (typeof refA === 'function') {\n    const cleanup = refA(current)\n    if (typeof cleanup === 'function') {\n      return cleanup\n    } else {\n      return () => refA(null)\n    }\n  } else {\n    refA.current = current\n    return () => {\n      refA.current = null\n    }\n  }\n}\n","import { isAbsoluteUrl, getLocationOrigin } from '../../utils'\nimport { hasBasePath } from '../../../../client/has-base-path'\n\n/**\n * Detects whether a given url is routable by the Next.js router (browser only).\n */\nexport function isLocalURL(url: string): boolean {\n  // prevent a hydration mismatch on href for url with anchor refs\n  if (!isAbsoluteUrl(url)) return true\n  try {\n    // absolute urls can be local if they are on the same origin\n    const locationOrigin = getLocationOrigin()\n    const resolved = new URL(url, locationOrigin)\n    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname)\n  } catch (_) {\n    return false\n  }\n}\n","'use client'\n\nimport React, { createContext, useContext, useOptimistic, useRef } from 'react'\nimport type { UrlObject } from 'url'\nimport { formatUrl } from '../../shared/lib/router/utils/format-url'\nimport { AppRouterContext } from '../../shared/lib/app-router-context.shared-runtime'\nimport { PrefetchKind } from '../components/router-reducer/router-reducer-types'\nimport { useMergedRef } from '../use-merged-ref'\nimport { isAbsoluteUrl } from '../../shared/lib/utils'\nimport { addBasePath } from '../add-base-path'\nimport { warnOnce } from '../../shared/lib/utils/warn-once'\nimport type { PENDING_LINK_STATUS } from '../components/links'\nimport {\n  IDLE_LINK_STATUS,\n  mountLinkInstance,\n  onNavigationIntent,\n  unmountLinkForCurrentNavigation,\n  unmountPrefetchableInstance,\n  type LinkInstance,\n} from '../components/links'\nimport { isLocalURL } from '../../shared/lib/router/utils/is-local-url'\nimport { dispatchNavigateAction } from '../components/app-router-instance'\nimport { errorOnce } from '../../shared/lib/utils/error-once'\n\ntype Url = string | UrlObject\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T]\ntype OptionalKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? K : never\n}[keyof T]\n\ntype OnNavigateEventHandler = (event: { preventDefault: () => void }) => void\n\ntype InternalLinkProps = {\n  /**\n   * **Required**. The path or URL to navigate to. It can also be an object (similar to `URL`).\n   *\n   * @example\n   * ```tsx\n   * // Navigate to /dashboard:\n   * <Link href=\"/dashboard\">Dashboard</Link>\n   *\n   * // Navigate to /about?name=test:\n   * <Link href={{ pathname: '/about', query: { name: 'test' } }}>\n   *   About\n   * </Link>\n   * ```\n   *\n   * @remarks\n   * - For external URLs, use a fully qualified URL such as `https://...`.\n   * - In the App Router, dynamic routes must not include bracketed segments in `href`.\n   */\n  href: Url\n\n  /**\n   * @deprecated v10.0.0: `href` props pointing to a dynamic route are\n   * automatically resolved and no longer require the `as` prop.\n   */\n  as?: Url\n\n  /**\n   * Replace the current `history` state instead of adding a new URL into the stack.\n   *\n   * @defaultValue `false`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/about\" replace>\n   *   About (replaces the history state)\n   * </Link>\n   * ```\n   */\n  replace?: boolean\n\n  /**\n   * Whether to override the default scroll behavior. If `true`, Next.js attempts to maintain\n   * the scroll position if the newly navigated page is still visible. If not, it scrolls to the top.\n   *\n   * If `false`, Next.js will not modify the scroll behavior at all.\n   *\n   * @defaultValue `true`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/dashboard\" scroll={false}>\n   *   No auto scroll\n   * </Link>\n   * ```\n   */\n  scroll?: boolean\n\n  /**\n   * Update the path of the current page without rerunning data fetching methods\n   * like `getStaticProps`, `getServerSideProps`, or `getInitialProps`.\n   *\n   * @remarks\n   * `shallow` only applies to the Pages Router. For the App Router, see the\n   * [following documentation](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#using-the-native-history-api).\n   *\n   * @defaultValue `false`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/blog\" shallow>\n   *   Shallow navigation\n   * </Link>\n   * ```\n   */\n  shallow?: boolean\n\n  /**\n   * Forces `Link` to pass its `href` to the child component. Useful if the child is a custom\n   * component that wraps an `<a>` tag, or if you're using certain styling libraries.\n   *\n   * @defaultValue `false`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/dashboard\" passHref>\n   *   <MyStyledAnchor>Dashboard</MyStyledAnchor>\n   * </Link>\n   * ```\n   */\n  passHref?: boolean\n\n  /**\n   * Prefetch the page in the background.\n   * Any `<Link />` that is in the viewport (initially or through scroll) will be prefetched.\n   * Prefetch can be disabled by passing `prefetch={false}`.\n   *\n   * @remarks\n   * Prefetching is only enabled in production.\n   *\n   * - In the **App Router**:\n   *   - `null` (default): Prefetch behavior depends on static vs dynamic routes:\n   *     - Static routes: fully prefetched\n   *     - Dynamic routes: partial prefetch to the nearest segment with a `loading.js`\n   *   - `true`: Always prefetch the full route and data.\n   *   - `false`: Disable prefetching on both viewport and hover.\n   * - In the **Pages Router**:\n   *   - `true` (default): Prefetches the route and data in the background on viewport or hover.\n   *   - `false`: Prefetch only on hover, not on viewport.\n   *\n   * @defaultValue `true` (Pages Router) or `null` (App Router)\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/dashboard\" prefetch={false}>\n   *   Dashboard\n   * </Link>\n   * ```\n   */\n  prefetch?: boolean | null\n\n  /**\n   * (unstable) Switch to a dynamic prefetch on hover. Effectively the same as\n   * updating the prefetch prop to `true` in a mouse event.\n   */\n  unstable_dynamicOnHover?: boolean\n\n  /**\n   * The active locale is automatically prepended in the Pages Router. `locale` allows for providing\n   * a different locale, or can be set to `false` to opt out of automatic locale behavior.\n   *\n   * @remarks\n   * Note: locale only applies in the Pages Router and is ignored in the App Router.\n   *\n   * @example\n   * ```tsx\n   * // Use the 'fr' locale:\n   * <Link href=\"/about\" locale=\"fr\">\n   *   About (French)\n   * </Link>\n   *\n   * // Disable locale prefix:\n   * <Link href=\"/about\" locale={false}>\n   *   About (no locale prefix)\n   * </Link>\n   * ```\n   */\n  locale?: string | false\n\n  /**\n   * Enable legacy link behavior, requiring an `<a>` tag to wrap the child content\n   * if the child is a string or number.\n   *\n   * @deprecated This will be removed in v16\n   * @defaultValue `false`\n   * @see https://github.com/vercel/next.js/commit/489e65ed98544e69b0afd7e0cfc3f9f6c2b803b7\n   */\n  legacyBehavior?: boolean\n\n  /**\n   * Optional event handler for when the mouse pointer is moved onto the `<Link>`.\n   */\n  onMouseEnter?: React.MouseEventHandler<HTMLAnchorElement>\n\n  /**\n   * Optional event handler for when the `<Link>` is touched.\n   */\n  onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n\n  /**\n   * Optional event handler for when the `<Link>` is clicked.\n   */\n  onClick?: React.MouseEventHandler<HTMLAnchorElement>\n\n  /**\n   * Optional event handler for when the `<Link>` is navigated.\n   */\n  onNavigate?: OnNavigateEventHandler\n}\n\n// TODO-APP: Include the full set of Anchor props\n// adding this to the publicly exported type currently breaks existing apps\n\n// `RouteInferType` is a stub here to avoid breaking `typedRoutes` when the type\n// isn't generated yet. It will be replaced when the webpack plugin runs.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport type LinkProps<RouteInferType = any> = InternalLinkProps\ntype LinkPropsRequired = RequiredKeys<LinkProps>\ntype LinkPropsOptional = OptionalKeys<Omit<InternalLinkProps, 'locale'>>\n\nfunction isModifiedEvent(event: React.MouseEvent): boolean {\n  const eventTarget = event.currentTarget as HTMLAnchorElement | SVGAElement\n  const target = eventTarget.getAttribute('target')\n  return (\n    (target && target !== '_self') ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey || // triggers resource download\n    (event.nativeEvent && event.nativeEvent.which === 2)\n  )\n}\n\nfunction linkClicked(\n  e: React.MouseEvent,\n  href: string,\n  as: string,\n  linkInstanceRef: React.RefObject<LinkInstance | null>,\n  replace?: boolean,\n  scroll?: boolean,\n  onNavigate?: OnNavigateEventHandler\n): void {\n  const { nodeName } = e.currentTarget\n\n  // anchors inside an svg have a lowercase nodeName\n  const isAnchorNodeName = nodeName.toUpperCase() === 'A'\n\n  if (\n    (isAnchorNodeName && isModifiedEvent(e)) ||\n    e.currentTarget.hasAttribute('download')\n  ) {\n    // ignore click for browser’s default behavior\n    return\n  }\n\n  if (!isLocalURL(href)) {\n    if (replace) {\n      // browser default behavior does not replace the history state\n      // so we need to do it manually\n      e.preventDefault()\n      location.replace(href)\n    }\n\n    // ignore click for browser’s default behavior\n    return\n  }\n\n  e.preventDefault()\n\n  const navigate = () => {\n    if (onNavigate) {\n      let isDefaultPrevented = false\n\n      onNavigate({\n        preventDefault: () => {\n          isDefaultPrevented = true\n        },\n      })\n\n      if (isDefaultPrevented) {\n        return\n      }\n    }\n\n    dispatchNavigateAction(\n      as || href,\n      replace ? 'replace' : 'push',\n      scroll ?? true,\n      linkInstanceRef.current\n    )\n  }\n\n  React.startTransition(navigate)\n}\n\nfunction formatStringOrUrl(urlObjOrString: UrlObject | string): string {\n  if (typeof urlObjOrString === 'string') {\n    return urlObjOrString\n  }\n\n  return formatUrl(urlObjOrString)\n}\n\n/**\n * A React component that extends the HTML `<a>` element to provide\n * [prefetching](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#2-prefetching)\n * and client-side navigation. This is the primary way to navigate between routes in Next.js.\n *\n * @remarks\n * - Prefetching is only enabled in production.\n *\n * @see https://nextjs.org/docs/app/api-reference/components/link\n */\nexport default function LinkComponent(\n  props: LinkProps & {\n    children: React.ReactNode\n    ref: React.Ref<HTMLAnchorElement>\n  }\n) {\n  const [linkStatus, setOptimisticLinkStatus] = useOptimistic(IDLE_LINK_STATUS)\n\n  let children: React.ReactNode\n\n  const linkInstanceRef = useRef<LinkInstance | null>(null)\n\n  const {\n    href: hrefProp,\n    as: asProp,\n    children: childrenProp,\n    prefetch: prefetchProp = null,\n    passHref,\n    replace,\n    shallow,\n    scroll,\n    onClick,\n    onMouseEnter: onMouseEnterProp,\n    onTouchStart: onTouchStartProp,\n    legacyBehavior = false,\n    onNavigate,\n    ref: forwardedRef,\n    unstable_dynamicOnHover,\n    ...restProps\n  } = props\n\n  children = childrenProp\n\n  if (\n    legacyBehavior &&\n    (typeof children === 'string' || typeof children === 'number')\n  ) {\n    children = <a>{children}</a>\n  }\n\n  const router = React.useContext(AppRouterContext)\n\n  const prefetchEnabled = prefetchProp !== false\n  /**\n   * The possible states for prefetch are:\n   * - null: this is the default \"auto\" mode, where we will prefetch partially if the link is in the viewport\n   * - true: we will prefetch if the link is visible and prefetch the full page, not just partially\n   * - false: we will not prefetch if in the viewport at all\n   * - 'unstable_dynamicOnHover': this starts in \"auto\" mode, but switches to \"full\" when the link is hovered\n   */\n  const appPrefetchKind =\n    prefetchProp === null ? PrefetchKind.AUTO : PrefetchKind.FULL\n\n  if (process.env.NODE_ENV !== 'production') {\n    function createPropError(args: {\n      key: string\n      expected: string\n      actual: string\n    }) {\n      return new Error(\n        `Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` +\n          (typeof window !== 'undefined'\n            ? \"\\nOpen your browser's console to view the Component stack trace.\"\n            : '')\n      )\n    }\n\n    // TypeScript trick for type-guarding:\n    const requiredPropsGuard: Record<LinkPropsRequired, true> = {\n      href: true,\n    } as const\n    const requiredProps: LinkPropsRequired[] = Object.keys(\n      requiredPropsGuard\n    ) as LinkPropsRequired[]\n    requiredProps.forEach((key: LinkPropsRequired) => {\n      if (key === 'href') {\n        if (\n          props[key] == null ||\n          (typeof props[key] !== 'string' && typeof props[key] !== 'object')\n        ) {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: props[key] === null ? 'null' : typeof props[key],\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _: never = key\n      }\n    })\n\n    // TypeScript trick for type-guarding:\n    const optionalPropsGuard: Record<LinkPropsOptional, true> = {\n      as: true,\n      replace: true,\n      scroll: true,\n      shallow: true,\n      passHref: true,\n      prefetch: true,\n      unstable_dynamicOnHover: true,\n      onClick: true,\n      onMouseEnter: true,\n      onTouchStart: true,\n      legacyBehavior: true,\n      onNavigate: true,\n    } as const\n    const optionalProps: LinkPropsOptional[] = Object.keys(\n      optionalPropsGuard\n    ) as LinkPropsOptional[]\n    optionalProps.forEach((key: LinkPropsOptional) => {\n      const valType = typeof props[key]\n\n      if (key === 'as') {\n        if (props[key] && valType !== 'string' && valType !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: valType,\n          })\n        }\n      } else if (\n        key === 'onClick' ||\n        key === 'onMouseEnter' ||\n        key === 'onTouchStart' ||\n        key === 'onNavigate'\n      ) {\n        if (props[key] && valType !== 'function') {\n          throw createPropError({\n            key,\n            expected: '`function`',\n            actual: valType,\n          })\n        }\n      } else if (\n        key === 'replace' ||\n        key === 'scroll' ||\n        key === 'shallow' ||\n        key === 'passHref' ||\n        key === 'prefetch' ||\n        key === 'legacyBehavior' ||\n        key === 'unstable_dynamicOnHover'\n      ) {\n        if (props[key] != null && valType !== 'boolean') {\n          throw createPropError({\n            key,\n            expected: '`boolean`',\n            actual: valType,\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _: never = key\n      }\n    })\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (props.locale) {\n      warnOnce(\n        'The `locale` prop is not supported in `next/link` while using the `app` router. Read more about app router internalization: https://nextjs.org/docs/app/building-your-application/routing/internationalization'\n      )\n    }\n    if (!asProp) {\n      let href: string | undefined\n      if (typeof hrefProp === 'string') {\n        href = hrefProp\n      } else if (\n        typeof hrefProp === 'object' &&\n        typeof hrefProp.pathname === 'string'\n      ) {\n        href = hrefProp.pathname\n      }\n\n      if (href) {\n        const hasDynamicSegment = href\n          .split('/')\n          .some((segment) => segment.startsWith('[') && segment.endsWith(']'))\n\n        if (hasDynamicSegment) {\n          throw new Error(\n            `Dynamic href \\`${href}\\` found in <Link> while using the \\`/app\\` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href`\n          )\n        }\n      }\n    }\n  }\n\n  const { href, as } = React.useMemo(() => {\n    const resolvedHref = formatStringOrUrl(hrefProp)\n    return {\n      href: resolvedHref,\n      as: asProp ? formatStringOrUrl(asProp) : resolvedHref,\n    }\n  }, [hrefProp, asProp])\n\n  // This will return the first child, if multiple are provided it will throw an error\n  let child: any\n  if (legacyBehavior) {\n    if (process.env.NODE_ENV === 'development') {\n      if (onClick) {\n        console.warn(\n          `\"onClick\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link`\n        )\n      }\n      if (onMouseEnterProp) {\n        console.warn(\n          `\"onMouseEnter\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link`\n        )\n      }\n      try {\n        child = React.Children.only(children)\n      } catch (err) {\n        if (!children) {\n          throw new Error(\n            `No children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`\n          )\n        }\n        throw new Error(\n          `Multiple children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` +\n            (typeof window !== 'undefined'\n              ? \" \\nOpen your browser's console to view the Component stack trace.\"\n              : '')\n        )\n      }\n    } else {\n      child = React.Children.only(children)\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if ((children as any)?.type === 'a') {\n        throw new Error(\n          'Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor'\n        )\n      }\n    }\n  }\n\n  const childRef: any = legacyBehavior\n    ? child && typeof child === 'object' && child.ref\n    : forwardedRef\n\n  // Use a callback ref to attach an IntersectionObserver to the anchor tag on\n  // mount. In the future we will also use this to keep track of all the\n  // currently mounted <Link> instances, e.g. so we can re-prefetch them after\n  // a revalidation or refresh.\n  const observeLinkVisibilityOnMount = React.useCallback(\n    (element: HTMLAnchorElement | SVGAElement) => {\n      if (router !== null) {\n        linkInstanceRef.current = mountLinkInstance(\n          element,\n          href,\n          router,\n          appPrefetchKind,\n          prefetchEnabled,\n          setOptimisticLinkStatus\n        )\n      }\n\n      return () => {\n        if (linkInstanceRef.current) {\n          unmountLinkForCurrentNavigation(linkInstanceRef.current)\n          linkInstanceRef.current = null\n        }\n        unmountPrefetchableInstance(element)\n      }\n    },\n    [prefetchEnabled, href, router, appPrefetchKind, setOptimisticLinkStatus]\n  )\n\n  const mergedRef = useMergedRef(observeLinkVisibilityOnMount, childRef)\n\n  const childProps: {\n    onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n    onMouseEnter: React.MouseEventHandler<HTMLAnchorElement>\n    onClick: React.MouseEventHandler<HTMLAnchorElement>\n    href?: string\n    ref?: any\n  } = {\n    ref: mergedRef,\n    onClick(e) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!e) {\n          throw new Error(\n            `Component rendered inside next/link has to pass click event to \"onClick\" prop.`\n          )\n        }\n      }\n\n      if (!legacyBehavior && typeof onClick === 'function') {\n        onClick(e)\n      }\n\n      if (\n        legacyBehavior &&\n        child.props &&\n        typeof child.props.onClick === 'function'\n      ) {\n        child.props.onClick(e)\n      }\n\n      if (!router) {\n        return\n      }\n\n      if (e.defaultPrevented) {\n        return\n      }\n\n      linkClicked(e, href, as, linkInstanceRef, replace, scroll, onNavigate)\n    },\n    onMouseEnter(e) {\n      if (!legacyBehavior && typeof onMouseEnterProp === 'function') {\n        onMouseEnterProp(e)\n      }\n\n      if (\n        legacyBehavior &&\n        child.props &&\n        typeof child.props.onMouseEnter === 'function'\n      ) {\n        child.props.onMouseEnter(e)\n      }\n\n      if (!router) {\n        return\n      }\n\n      if (!prefetchEnabled || process.env.NODE_ENV === 'development') {\n        return\n      }\n\n      const upgradeToDynamicPrefetch = unstable_dynamicOnHover === true\n      onNavigationIntent(\n        e.currentTarget as HTMLAnchorElement | SVGAElement,\n        upgradeToDynamicPrefetch\n      )\n    },\n    onTouchStart: process.env.__NEXT_LINK_NO_TOUCH_START\n      ? undefined\n      : function onTouchStart(e) {\n          if (!legacyBehavior && typeof onTouchStartProp === 'function') {\n            onTouchStartProp(e)\n          }\n\n          if (\n            legacyBehavior &&\n            child.props &&\n            typeof child.props.onTouchStart === 'function'\n          ) {\n            child.props.onTouchStart(e)\n          }\n\n          if (!router) {\n            return\n          }\n\n          if (!prefetchEnabled) {\n            return\n          }\n\n          const upgradeToDynamicPrefetch = unstable_dynamicOnHover === true\n          onNavigationIntent(\n            e.currentTarget as HTMLAnchorElement | SVGAElement,\n            upgradeToDynamicPrefetch\n          )\n        },\n  }\n\n  // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n  // defined, we specify the current 'href', so that repetition is not needed by the user.\n  // If the url is absolute, we can bypass the logic to prepend the basePath.\n  if (isAbsoluteUrl(as)) {\n    childProps.href = as\n  } else if (\n    !legacyBehavior ||\n    passHref ||\n    (child.type === 'a' && !('href' in child.props))\n  ) {\n    childProps.href = addBasePath(as)\n  }\n\n  let link: React.ReactNode\n\n  if (legacyBehavior) {\n    if (process.env.NODE_ENV === 'development') {\n      errorOnce(\n        '`legacyBehavior` is deprecated and will be removed in a future ' +\n          'release. A codemod is available to upgrade your components:\\n\\n' +\n          'npx @next/codemod@latest new-link .\\n\\n' +\n          'Learn more: https://nextjs.org/docs/app/building-your-application/upgrading/codemods#remove-a-tags-from-link-components'\n      )\n    }\n    link = React.cloneElement(child, childProps)\n  } else {\n    link = (\n      <a {...restProps} {...childProps}>\n        {children}\n      </a>\n    )\n  }\n\n  return (\n    <LinkStatusContext.Provider value={linkStatus}>\n      {link}\n    </LinkStatusContext.Provider>\n  )\n}\n\nconst LinkStatusContext = createContext<\n  typeof PENDING_LINK_STATUS | typeof IDLE_LINK_STATUS\n>(IDLE_LINK_STATUS)\n\nexport const useLinkStatus = () => {\n  return useContext(LinkStatusContext)\n}\n","/**\n * This module is for next.js server internal usage of path module.\n * It will use native path module for nodejs runtime.\n * It will use path-browserify polyfill for edge runtime.\n */\nlet path\n\nif (process.env.NEXT_RUNTIME === 'edge') {\n  path = require('next/dist/compiled/path-browserify')\n} else {\n  path = require('path')\n}\n\nmodule.exports = path\n","import type { ParsedUrlQuery } from 'querystring'\nimport { getLocationOrigin } from '../../utils'\nimport { searchParamsToUrlQuery } from './querystring'\n\nexport interface ParsedRelativeUrl {\n  hash: string\n  href: string\n  pathname: string\n  query: ParsedUrlQuery\n  search: string\n}\n\n/**\n * Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative\n * (e.g. `./hello`) then at least base must be.\n * Absolute urls are rejected with one exception, in the browser, absolute urls that are on\n * the current origin will be parsed as relative\n */\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery?: true\n): ParsedRelativeUrl\nexport function parseRelativeUrl(\n  url: string,\n  base: string | undefined,\n  parseQuery: false\n): Omit<ParsedRelativeUrl, 'query'>\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery = true\n): ParsedRelativeUrl | Omit<ParsedRelativeUrl, 'query'> {\n  const globalBase = new URL(\n    typeof window === 'undefined' ? 'http://n' : getLocationOrigin()\n  )\n\n  const resolvedBase = base\n    ? new URL(base, globalBase)\n    : url.startsWith('.')\n      ? new URL(\n          typeof window === 'undefined' ? 'http://n' : window.location.href\n        )\n      : globalBase\n\n  const { pathname, searchParams, search, hash, href, origin } = new URL(\n    url,\n    resolvedBase\n  )\n\n  if (origin !== globalBase.origin) {\n    throw new Error(`invariant: invalid relative URL, router received ${url}`)\n  }\n\n  return {\n    pathname,\n    query: parseQuery ? searchParamsToUrlQuery(searchParams) : undefined,\n    search,\n    hash,\n    href: href.slice(origin.length),\n  }\n}\n","// This regex contains the bots that we need to do a blocking render for and can't safely stream the response\n// due to how they parse the DOM. For example, they might explicitly check for metadata in the `head` tag, so we can't stream metadata tags after the `head` was sent.\nexport const HTML_LIMITED_BOT_UA_RE =\n  /Mediapartners-Google|Slurp|DuckDuckBot|baiduspider|yandex|sogou|bitlybot|tumblr|vkShare|quora link preview|redditbot|ia_archiver|Bingbot|BingPreview|applebot|facebookexternalhit|facebookcatalog|Twitterbot|LinkedInBot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|Yeti/i\n","import { HTML_LIMITED_BOT_UA_RE } from './html-bots'\n\n// Bot crawler that will spin up a headless browser and execute JS\nconst HEADLESS_BROWSER_BOT_UA_RE =\n  /Googlebot|Google-PageRenderer|AdsBot-Google|googleweblight|Storebot-Google/i\n\nexport const HTML_LIMITED_BOT_UA_RE_STRING = HTML_LIMITED_BOT_UA_RE.source\n\nexport { HTML_LIMITED_BOT_UA_RE }\n\nfunction isDomBotUA(userAgent: string) {\n  return HEADLESS_BROWSER_BOT_UA_RE.test(userAgent)\n}\n\nfunction isHtmlLimitedBotUA(userAgent: string) {\n  return HTML_LIMITED_BOT_UA_RE.test(userAgent)\n}\n\nexport function isBot(userAgent: string): boolean {\n  return isDomBotUA(userAgent) || isHtmlLimitedBotUA(userAgent)\n}\n\nexport function getBotType(userAgent: string): 'dom' | 'html' | undefined {\n  if (isDomBotUA(userAgent)) {\n    return 'dom'\n  }\n  if (isHtmlLimitedBotUA(userAgent)) {\n    return 'html'\n  }\n  return undefined\n}\n","/**\n * In edge runtime, these props directly accessed from environment variables.\n *   - local: env vars will be injected through edge-runtime as runtime env vars\n *   - deployment: env vars will be replaced by edge build pipeline\n */ export function getEdgePreviewProps() {\n    return {\n        previewModeId: process.env.NODE_ENV === 'production' ? process.env.__NEXT_PREVIEW_MODE_ID : 'development-id',\n        previewModeSigningKey: process.env.__NEXT_PREVIEW_MODE_SIGNING_KEY || '',\n        previewModeEncryptionKey: process.env.__NEXT_PREVIEW_MODE_ENCRYPTION_KEY || ''\n    };\n}\n\n//# sourceMappingURL=get-edge-preview-props.js.map","/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */ export const scheduleOnNextTick = (cb)=>{\n    // We use Promise.resolve().then() here so that the operation is scheduled at\n    // the end of the promise job queue, we then add it to the next process tick\n    // to ensure it's evaluated afterwards.\n    //\n    // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n    //\n    Promise.resolve().then(()=>{\n        if (process.env.NEXT_RUNTIME === 'edge') {\n            setTimeout(cb, 0);\n        } else {\n            process.nextTick(cb);\n        }\n    });\n};\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */ export const scheduleImmediate = (cb)=>{\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        setTimeout(cb, 0);\n    } else {\n        setImmediate(cb);\n    }\n};\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */ export function atLeastOneTask() {\n    return new Promise((resolve)=>scheduleImmediate(resolve));\n}\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */ export function waitAtLeastOneReactRenderTask() {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        return new Promise((r)=>setTimeout(r, 0));\n    } else {\n        return new Promise((r)=>setImmediate(r));\n    }\n}\n\n//# sourceMappingURL=scheduler.js.map","import { ReflectAdapter } from '../web/spec-extension/adapters/reflect';\nimport { abortAndThrowOnSynchronousRequestDataAccess, throwToInterruptStaticGeneration, postponeWithTracking, trackSynchronousRequestDataAccessInDev } from '../app-render/dynamic-rendering';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { describeStringPropertyAccess, wellKnownProperties } from '../../shared/lib/utils/reflect-utils';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger';\nimport { scheduleImmediate } from '../../lib/scheduler';\nexport function createParamsFromClient(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderParams(underlyingParams, workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderParams(underlyingParams, workStore);\n}\nexport const createServerParamsForMetadata = createServerParamsForServerSegment;\n// routes always runs in RSC context so it is equivalent to a Server Page Component\nexport function createServerParamsForRoute(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderParams(underlyingParams, workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderParams(underlyingParams, workStore);\n}\nexport function createServerParamsForServerSegment(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderParams(underlyingParams, workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderParams(underlyingParams, workStore);\n}\nexport function createPrerenderParamsForClientSegment(underlyingParams, workStore) {\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    if (prerenderStore && prerenderStore.type === 'prerender') {\n        const fallbackParams = workStore.fallbackRouteParams;\n        if (fallbackParams) {\n            for(let key in underlyingParams){\n                if (fallbackParams.has(key)) {\n                    // This params object has one of more fallback params so we need to consider\n                    // the awaiting of this params object \"dynamic\". Since we are in dynamicIO mode\n                    // we encode this as a promise that never resolves\n                    return makeHangingPromise(prerenderStore.renderSignal, '`params`');\n                }\n            }\n        }\n    }\n    // We're prerendering in a mode that does not abort. We resolve the promise without\n    // any tracking because we're just transporting a value from server to client where the tracking\n    // will be applied.\n    return Promise.resolve(underlyingParams);\n}\nfunction createPrerenderParams(underlyingParams, workStore, prerenderStore) {\n    const fallbackParams = workStore.fallbackRouteParams;\n    if (fallbackParams) {\n        let hasSomeFallbackParams = false;\n        for(const key in underlyingParams){\n            if (fallbackParams.has(key)) {\n                hasSomeFallbackParams = true;\n                break;\n            }\n        }\n        if (hasSomeFallbackParams) {\n            // params need to be treated as dynamic because we have at least one fallback param\n            if (prerenderStore.type === 'prerender') {\n                // We are in a dynamicIO (PPR or otherwise) prerender\n                return makeAbortingExoticParams(underlyingParams, workStore.route, prerenderStore);\n            }\n            // remaining cases are prerender-ppr and prerender-legacy\n            // We aren't in a dynamicIO prerender but we do have fallback params at this\n            // level so we need to make an erroring exotic params object which will postpone\n            // if you access the fallback params\n            return makeErroringExoticParams(underlyingParams, fallbackParams, workStore, prerenderStore);\n        }\n    }\n    // We don't have any fallback params so we have an entirely static safe params object\n    return makeUntrackedExoticParams(underlyingParams);\n}\nfunction createRenderParams(underlyingParams, workStore) {\n    if (process.env.NODE_ENV === 'development' && !workStore.isPrefetchRequest) {\n        return makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams, workStore);\n    } else {\n        return makeUntrackedExoticParams(underlyingParams);\n    }\n}\nconst CachedParams = new WeakMap();\nfunction makeAbortingExoticParams(underlyingParams, route, prerenderStore) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const promise = makeHangingPromise(prerenderStore.renderSignal, '`params`');\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            Object.defineProperty(promise, prop, {\n                get () {\n                    const expression = describeStringPropertyAccess('params', prop);\n                    const error = createParamsAccessError(route, expression);\n                    abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n                },\n                set (newValue) {\n                    Object.defineProperty(promise, prop, {\n                        value: newValue,\n                        writable: true,\n                        enumerable: true\n                    });\n                },\n                enumerable: true,\n                configurable: true\n            });\n        }\n    });\n    return promise;\n}\nfunction makeErroringExoticParams(underlyingParams, fallbackParams, workStore, prerenderStore) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const augmentedUnderlying = {\n        ...underlyingParams\n    };\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(augmentedUnderlying);\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            if (fallbackParams.has(prop)) {\n                Object.defineProperty(augmentedUnderlying, prop, {\n                    get () {\n                        const expression = describeStringPropertyAccess('params', prop);\n                        // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n                        // for params is only dynamic when we're generating a fallback shell\n                        // and even when `dynamic = \"error\"` we still support generating dynamic\n                        // fallback shells\n                        // TODO remove this comment when dynamicIO is the default since there\n                        // will be no `dynamic = \"error\"`\n                        if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no dynamicIO)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                    },\n                    enumerable: true\n                });\n                Object.defineProperty(promise, prop, {\n                    get () {\n                        const expression = describeStringPropertyAccess('params', prop);\n                        // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n                        // for params is only dynamic when we're generating a fallback shell\n                        // and even when `dynamic = \"error\"` we still support generating dynamic\n                        // fallback shells\n                        // TODO remove this comment when dynamicIO is the default since there\n                        // will be no `dynamic = \"error\"`\n                        if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no dynamicIO)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                    },\n                    set (newValue) {\n                        Object.defineProperty(promise, prop, {\n                            value: newValue,\n                            writable: true,\n                            enumerable: true\n                        });\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n            } else {\n                ;\n                promise[prop] = underlyingParams[prop];\n            }\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedExoticParams(underlyingParams) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(underlyingParams);\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            ;\n            promise[prop] = underlyingParams[prop];\n        }\n    });\n    return promise;\n}\nfunction makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams, store) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = new Promise((resolve)=>scheduleImmediate(()=>resolve(underlyingParams)));\n    const proxiedProperties = new Set();\n    const unproxiedProperties = [];\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n            // These properties cannot be shadowed because they need to be the\n            // true underlying value for Promises to work correctly at runtime\n            unproxiedProperties.push(prop);\n        } else {\n            proxiedProperties.add(prop);\n            promise[prop] = underlyingParams[prop];\n        }\n    });\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (typeof prop === 'string') {\n                if (// We are accessing a property that was proxied to the promise instance\n                proxiedProperties.has(prop)) {\n                    const expression = describeStringPropertyAccess('params', prop);\n                    syncIODev(store.route, expression);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        set (target, prop, value, receiver) {\n            if (typeof prop === 'string') {\n                proxiedProperties.delete(prop);\n            }\n            return ReflectAdapter.set(target, prop, value, receiver);\n        },\n        ownKeys (target) {\n            const expression = '`...params` or similar expression';\n            syncIODev(store.route, expression, unproxiedProperties);\n            return Reflect.ownKeys(target);\n        }\n    });\n    CachedParams.set(underlyingParams, proxiedPromise);\n    return proxiedPromise;\n}\nfunction syncIODev(route, expression, missingProperties) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore && workUnitStore.type === 'request' && workUnitStore.prerenderPhase === true) {\n        // When we're rendering dynamically in dev we need to advance out of the\n        // Prerender environment when we read Request data synchronously\n        const requestStore = workUnitStore;\n        trackSynchronousRequestDataAccessInDev(requestStore);\n    }\n    // In all cases we warn normally\n    if (missingProperties && missingProperties.length > 0) {\n        warnForIncompleteEnumeration(route, expression, missingProperties);\n    } else {\n        warnForSyncAccess(route, expression);\n    }\n}\nconst warnForSyncAccess = createDedupedByCallsiteServerErrorLoggerDev(createParamsAccessError);\nconst warnForIncompleteEnumeration = createDedupedByCallsiteServerErrorLoggerDev(createIncompleteEnumerationError);\nfunction createParamsAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`params\\` should be awaited before using its properties. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E307\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction createIncompleteEnumerationError(route, expression, missingProperties) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`params\\` should be awaited before using its properties. ` + `The following properties were not available through enumeration ` + `because they conflict with builtin property names: ` + `${describeListOfPropertyNames(missingProperties)}. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E482\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction describeListOfPropertyNames(properties) {\n    switch(properties.length){\n        case 0:\n            throw Object.defineProperty(new InvariantError('Expected describeListOfPropertyNames to be called with a non-empty list of strings.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E531\",\n                enumerable: false,\n                configurable: true\n            });\n        case 1:\n            return `\\`${properties[0]}\\``;\n        case 2:\n            return `\\`${properties[0]}\\` and \\`${properties[1]}\\``;\n        default:\n            {\n                let description = '';\n                for(let i = 0; i < properties.length - 1; i++){\n                    description += `\\`${properties[i]}\\`, `;\n                }\n                description += `, and \\`${properties[properties.length - 1]}\\``;\n                return description;\n            }\n    }\n}\n\n//# sourceMappingURL=params.js.map","/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","import {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from './interception-routes'\n\n// Identify /.*[param].*/ in route string\nconst TEST_ROUTE = /\\/[^/]*\\[[^/]+\\][^/]*(?=\\/|$)/\n\n// Identify /[param]/ in route string\nconst TEST_STRICT_ROUTE = /\\/\\[[^/]+\\](?=\\/|$)/\n\n/**\n * Check if a route is dynamic.\n *\n * @param route - The route to check.\n * @param strict - Whether to use strict mode which prohibits segments with prefixes/suffixes (default: true).\n * @returns Whether the route is dynamic.\n */\nexport function isDynamicRoute(route: string, strict: boolean = true): boolean {\n  if (isInterceptionRouteAppPath(route)) {\n    route = extractInterceptionRouteInformation(route).interceptedRoute\n  }\n\n  if (strict) {\n    return TEST_STRICT_ROUTE.test(route)\n  }\n\n  return TEST_ROUTE.test(route)\n}\n","/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */ // Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react';\nimport { DynamicServerError } from '../../client/components/hooks-server-context';\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { METADATA_BOUNDARY_NAME, VIEWPORT_BOUNDARY_NAME, OUTLET_BOUNDARY_NAME } from '../../lib/metadata/metadata-constants';\nimport { scheduleOnNextTick } from '../../lib/scheduler';\nconst hasPostpone = typeof React.unstable_postpone === 'function';\nexport function createDynamicTrackingState(isDebugDynamicAccesses) {\n    return {\n        isDebugDynamicAccesses,\n        dynamicAccesses: [],\n        syncDynamicExpression: undefined,\n        syncDynamicErrorWithStack: null\n    };\n}\nexport function createDynamicValidationState() {\n    return {\n        hasSuspendedDynamic: false,\n        hasDynamicMetadata: false,\n        hasDynamicViewport: false,\n        hasSyncDynamicErrors: false,\n        dynamicErrors: []\n    };\n}\nexport function getFirstDynamicReason(trackingState) {\n    var _trackingState_dynamicAccesses_;\n    return (_trackingState_dynamicAccesses_ = trackingState.dynamicAccesses[0]) == null ? void 0 : _trackingState_dynamicAccesses_.expression;\n}\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */ export function markCurrentScopeAsDynamic(store, workUnitStore, expression) {\n    if (workUnitStore) {\n        if (workUnitStore.type === 'cache' || workUnitStore.type === 'unstable-cache') {\n            // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n            // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n            // forbidden inside a cache scope.\n            return;\n        }\n    }\n    // If we're forcing dynamic rendering or we're forcing static rendering, we\n    // don't need to do anything here because the entire page is already dynamic\n    // or it's static and it should not throw or postpone here.\n    if (store.forceDynamic || store.forceStatic) return;\n    if (store.dynamicShouldError) {\n        throw Object.defineProperty(new StaticGenBailoutError(`Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n            value: \"E553\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    if (workUnitStore) {\n        if (workUnitStore.type === 'prerender-ppr') {\n            postponeWithTracking(store.route, expression, workUnitStore.dynamicTracking);\n        } else if (workUnitStore.type === 'prerender-legacy') {\n            workUnitStore.revalidate = 0;\n            // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n            const err = Object.defineProperty(new DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`), \"__NEXT_ERROR_CODE\", {\n                value: \"E550\",\n                enumerable: false,\n                configurable: true\n            });\n            store.dynamicUsageDescription = expression;\n            store.dynamicUsageStack = err.stack;\n            throw err;\n        } else if (process.env.NODE_ENV === 'development' && workUnitStore && workUnitStore.type === 'request') {\n            workUnitStore.usedDynamic = true;\n        }\n    }\n}\n/**\n * This function communicates that some dynamic path parameter was read. This\n * differs from the more general `trackDynamicDataAccessed` in that it is will\n * not error when `dynamic = \"error\"` is set.\n *\n * @param store The static generation store\n * @param expression The expression that was accessed dynamically\n */ export function trackFallbackParamAccessed(store, expression) {\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    if (!prerenderStore || prerenderStore.type !== 'prerender-ppr') return;\n    postponeWithTracking(store.route, expression, prerenderStore.dynamicTracking);\n}\n/**\n * This function is meant to be used when prerendering without dynamicIO or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */ export function throwToInterruptStaticGeneration(expression, store, prerenderStore) {\n    // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n    const err = Object.defineProperty(new DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`), \"__NEXT_ERROR_CODE\", {\n        value: \"E558\",\n        enumerable: false,\n        configurable: true\n    });\n    prerenderStore.revalidate = 0;\n    store.dynamicUsageDescription = expression;\n    store.dynamicUsageStack = err.stack;\n    throw err;\n}\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */ export function trackDynamicDataInDynamicRender(_store, workUnitStore) {\n    if (workUnitStore) {\n        if (workUnitStore.type === 'cache' || workUnitStore.type === 'unstable-cache') {\n            // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n            // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n            // forbidden inside a cache scope.\n            return;\n        }\n        if (workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-legacy') {\n            workUnitStore.revalidate = 0;\n        }\n        if (process.env.NODE_ENV === 'development' && workUnitStore.type === 'request') {\n            workUnitStore.usedDynamic = true;\n        }\n    }\n}\n// Despite it's name we don't actually abort unless we have a controller to call abort on\n// There are times when we let a prerender run long to discover caches where we want the semantics\n// of tracking dynamic access without terminating the prerender early\nfunction abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore) {\n    const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`;\n    const error = createPrerenderInterruptedError(reason);\n    prerenderStore.controller.abort(error);\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nexport function abortOnSynchronousPlatformIOAccess(route, expression, errorWithStack, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        if (dynamicTracking.syncDynamicErrorWithStack === null) {\n            dynamicTracking.syncDynamicExpression = expression;\n            dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n        }\n    }\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n}\nexport function trackSynchronousPlatformIOAccessInDev(requestStore) {\n    // We don't actually have a controller to abort but we do the semantic equivalent by\n    // advancing the request store out of prerender mode\n    requestStore.prerenderPhase = false;\n}\n/**\n * use this function when prerendering with dynamicIO. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in dynamicIO mode.\n *\n * @internal\n */ export function abortAndThrowOnSynchronousRequestDataAccess(route, expression, errorWithStack, prerenderStore) {\n    const prerenderSignal = prerenderStore.controller.signal;\n    if (prerenderSignal.aborted === false) {\n        // TODO it would be better to move this aborted check into the callsite so we can avoid making\n        // the error object when it isn't relevant to the aborting of the prerender however\n        // since we need the throw semantics regardless of whether we abort it is easier to land\n        // this way. See how this was handled with `abortOnSynchronousPlatformIOAccess` for a closer\n        // to ideal implementation\n        const dynamicTracking = prerenderStore.dynamicTracking;\n        if (dynamicTracking) {\n            if (dynamicTracking.syncDynamicErrorWithStack === null) {\n                dynamicTracking.syncDynamicExpression = expression;\n                dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n                if (prerenderStore.validating === true) {\n                    // We always log Request Access in dev at the point of calling the function\n                    // So we mark the dynamic validation as not requiring it to be printed\n                    dynamicTracking.syncDynamicLogged = true;\n                }\n            }\n        }\n        abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n    }\n    throw createPrerenderInterruptedError(`Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`);\n}\n// For now these implementations are the same so we just reexport\nexport const trackSynchronousRequestDataAccessInDev = trackSynchronousPlatformIOAccessInDev;\nexport function Postpone({ reason, route }) {\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    const dynamicTracking = prerenderStore && prerenderStore.type === 'prerender-ppr' ? prerenderStore.dynamicTracking : null;\n    postponeWithTracking(route, reason, dynamicTracking);\n}\nexport function postponeWithTracking(route, expression, dynamicTracking) {\n    assertPostpone();\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n    React.unstable_postpone(createPostponeReason(route, expression));\n}\nfunction createPostponeReason(route, expression) {\n    return `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` + `React throws this special object to indicate where. It should not be caught by ` + `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`;\n}\nexport function isDynamicPostpone(err) {\n    if (typeof err === 'object' && err !== null && typeof err.message === 'string') {\n        return isDynamicPostponeReason(err.message);\n    }\n    return false;\n}\nfunction isDynamicPostponeReason(reason) {\n    return reason.includes('needs to bail out of prerendering at this point because it used') && reason.includes('Learn more: https://nextjs.org/docs/messages/ppr-caught-error');\n}\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n    throw Object.defineProperty(new Error('Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n        value: \"E296\",\n        enumerable: false,\n        configurable: true\n    });\n}\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED';\nfunction createPrerenderInterruptedError(message) {\n    const error = Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n    error.digest = NEXT_PRERENDER_INTERRUPTED;\n    return error;\n}\nexport function isPrerenderInterruptedError(error) {\n    return typeof error === 'object' && error !== null && error.digest === NEXT_PRERENDER_INTERRUPTED && 'name' in error && 'message' in error && error instanceof Error;\n}\nexport function accessedDynamicData(dynamicAccesses) {\n    return dynamicAccesses.length > 0;\n}\nexport function consumeDynamicAccess(serverDynamic, clientDynamic) {\n    // We mutate because we only call this once we are no longer writing\n    // to the dynamicTrackingState and it's more efficient than creating a new\n    // array.\n    serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses);\n    return serverDynamic.dynamicAccesses;\n}\nexport function formatDynamicAPIAccesses(dynamicAccesses) {\n    return dynamicAccesses.filter((access)=>typeof access.stack === 'string' && access.stack.length > 0).map(({ expression, stack })=>{\n        stack = stack.split('\\n')// Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4).filter((line)=>{\n            // Exclude Next.js internals from the stack trace.\n            if (line.includes('node_modules/next/')) {\n                return false;\n            }\n            // Exclude anonymous functions from the stack trace.\n            if (line.includes(' (<anonymous>)')) {\n                return false;\n            }\n            // Exclude Node.js internals from the stack trace.\n            if (line.includes(' (node:')) {\n                return false;\n            }\n            return true;\n        }).join('\\n');\n        return `Dynamic API Usage Debug - ${expression}:\\n${stack}`;\n    });\n}\nfunction assertPostpone() {\n    if (!hasPostpone) {\n        throw Object.defineProperty(new Error(`Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`), \"__NEXT_ERROR_CODE\", {\n            value: \"E224\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */ export function createPostponedAbortSignal(reason) {\n    assertPostpone();\n    const controller = new AbortController();\n    // We get our hands on a postpone instance by calling postpone and catching the throw\n    try {\n        React.unstable_postpone(reason);\n    } catch (x) {\n        controller.abort(x);\n    }\n    return controller.signal;\n}\n/**\n * In a prerender, we may end up with hanging Promises as inputs due them\n * stalling on connection() or because they're loading dynamic data. In that\n * case we need to abort the encoding of arguments since they'll never complete.\n */ export function createHangingInputAbortSignal(workUnitStore) {\n    const controller = new AbortController();\n    if (workUnitStore.cacheSignal) {\n        // If we have a cacheSignal it means we're in a prospective render. If the input\n        // we're waiting on is coming from another cache, we do want to wait for it so that\n        // we can resolve this cache entry too.\n        workUnitStore.cacheSignal.inputReady().then(()=>{\n            controller.abort();\n        });\n    } else {\n        // Otherwise we're in the final render and we should already have all our caches\n        // filled. We might still be waiting on some microtasks so we wait one tick before\n        // giving up. When we give up, we still want to render the content of this cache\n        // as deeply as we can so that we can suspend as deeply as possible in the tree\n        // or not at all if we don't end up waiting for the input.\n        scheduleOnNextTick(()=>controller.abort());\n    }\n    return controller.signal;\n}\nexport function annotateDynamicAccess(expression, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nexport function useDynamicRouteParams(expression) {\n    const workStore = workAsyncStorage.getStore();\n    if (workStore && workStore.isStaticGeneration && workStore.fallbackRouteParams && workStore.fallbackRouteParams.size > 0) {\n        // There are fallback route params, we should track these as dynamic\n        // accesses.\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        if (workUnitStore) {\n            // We're prerendering with dynamicIO or PPR or both\n            if (workUnitStore.type === 'prerender') {\n                // We are in a prerender with dynamicIO semantics\n                // We are going to hang here and never resolve. This will cause the currently\n                // rendering component to effectively be a dynamic hole\n                React.use(makeHangingPromise(workUnitStore.renderSignal, expression));\n            } else if (workUnitStore.type === 'prerender-ppr') {\n                // We're prerendering with PPR\n                postponeWithTracking(workStore.route, expression, workUnitStore.dynamicTracking);\n            } else if (workUnitStore.type === 'prerender-legacy') {\n                throwToInterruptStaticGeneration(expression, workStore, workUnitStore);\n            }\n        }\n    }\n}\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/;\nconst hasMetadataRegex = new RegExp(`\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`);\nconst hasViewportRegex = new RegExp(`\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`);\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`);\nexport function trackAllowedDynamicAccess(route, componentStack, dynamicValidation, serverDynamic, clientDynamic) {\n    if (hasOutletRegex.test(componentStack)) {\n        // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n        return;\n    } else if (hasMetadataRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicMetadata = true;\n        return;\n    } else if (hasViewportRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicViewport = true;\n        return;\n    } else if (hasSuspenseRegex.test(componentStack)) {\n        dynamicValidation.hasSuspendedDynamic = true;\n        return;\n    } else if (serverDynamic.syncDynamicErrorWithStack || clientDynamic.syncDynamicErrorWithStack) {\n        dynamicValidation.hasSyncDynamicErrors = true;\n        return;\n    } else {\n        const message = `Route \"${route}\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. We don't have the exact line number added to error messages yet but you can see which component in the stack below. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense`;\n        const error = createErrorWithComponentStack(message, componentStack);\n        dynamicValidation.dynamicErrors.push(error);\n        return;\n    }\n}\nfunction createErrorWithComponentStack(message, componentStack) {\n    const error = Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n    error.stack = 'Error: ' + message + componentStack;\n    return error;\n}\nexport function throwIfDisallowedDynamic(route, dynamicValidation, serverDynamic, clientDynamic) {\n    let syncError;\n    let syncExpression;\n    let syncLogged;\n    if (serverDynamic.syncDynamicErrorWithStack) {\n        syncError = serverDynamic.syncDynamicErrorWithStack;\n        syncExpression = serverDynamic.syncDynamicExpression;\n        syncLogged = serverDynamic.syncDynamicLogged === true;\n    } else if (clientDynamic.syncDynamicErrorWithStack) {\n        syncError = clientDynamic.syncDynamicErrorWithStack;\n        syncExpression = clientDynamic.syncDynamicExpression;\n        syncLogged = clientDynamic.syncDynamicLogged === true;\n    } else {\n        syncError = null;\n        syncExpression = undefined;\n        syncLogged = false;\n    }\n    if (dynamicValidation.hasSyncDynamicErrors && syncError) {\n        if (!syncLogged) {\n            // In dev we already log errors about sync dynamic access. But during builds we need to ensure\n            // the offending sync error is logged before we exit the build\n            console.error(syncError);\n        }\n        // The actual error should have been logged when the sync access ocurred\n        throw new StaticGenBailoutError();\n    }\n    const dynamicErrors = dynamicValidation.dynamicErrors;\n    if (dynamicErrors.length) {\n        for(let i = 0; i < dynamicErrors.length; i++){\n            console.error(dynamicErrors[i]);\n        }\n        throw new StaticGenBailoutError();\n    }\n    if (!dynamicValidation.hasSuspendedDynamic) {\n        if (dynamicValidation.hasDynamicMetadata) {\n            if (syncError) {\n                console.error(syncError);\n                throw Object.defineProperty(new StaticGenBailoutError(`Route \"${route}\" has a \\`generateMetadata\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E608\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            throw Object.defineProperty(new StaticGenBailoutError(`Route \"${route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateMetadata\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E534\",\n                enumerable: false,\n                configurable: true\n            });\n        } else if (dynamicValidation.hasDynamicViewport) {\n            if (syncError) {\n                console.error(syncError);\n                throw Object.defineProperty(new StaticGenBailoutError(`Route \"${route}\" has a \\`generateViewport\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E573\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            throw Object.defineProperty(new StaticGenBailoutError(`Route \"${route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateViewport\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E590\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n}\n\n//# sourceMappingURL=dynamic-rendering.js.map","const ERROR_MESSAGE = 'Internal Error: do not use legacy react-dom/server APIs. If you encountered this error, please open an issue on the Next.js repo.';\nfunction error() {\n    throw Object.defineProperty(new Error(ERROR_MESSAGE), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n}\nvar b;\nif (process.env.NODE_ENV === 'production') {\n    b = require('next/dist/compiled/react-dom/cjs/react-dom-server.edge.production.js');\n} else {\n    b = require('next/dist/compiled/react-dom/cjs/react-dom-server.edge.development.js');\n}\nexports.version = b.version;\nexports.renderToReadableStream = b.renderToReadableStream;\nexports.renderToString = error;\nexports.renderToStaticMarkup = error;\nif (b.resume) {\n    exports.resume = b.resume;\n}\n\n//# sourceMappingURL=react-dom-server-edge.js.map","import type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport { fillLazyItemsTillLeafWithHead } from './fill-lazy-items-till-leaf-with-head'\nimport { fillCacheWithNewSubTreeData } from './fill-cache-with-new-subtree-data'\nimport type { PrefetchCacheEntry } from './router-reducer-types'\nimport type { NormalizedFlightData } from '../../flight-data-helpers'\n\nexport function applyFlightData(\n  navigatedAt: number,\n  existingCache: CacheNode,\n  cache: CacheNode,\n  flightData: NormalizedFlightData,\n  prefetchEntry?: PrefetchCacheEntry\n): boolean {\n  // The one before last item is the router state tree patch\n  const { tree: treePatch, seedData, head, isRootRender } = flightData\n\n  // Handles case where prefetch only returns the router tree patch without rendered components.\n  if (seedData === null) {\n    return false\n  }\n\n  if (isRootRender) {\n    const rsc = seedData[1]\n    const loading = seedData[3]\n    cache.loading = loading\n    cache.rsc = rsc\n    // This is a PPR-only field. When PPR is enabled, we shouldn't hit\n    // this path during a navigation, but until PPR is fully implemented\n    // yet it's possible the existing node does have a non-null\n    // `prefetchRsc`. As an incremental step, we'll just de-opt to the\n    // old behavior — no PPR value.\n    cache.prefetchRsc = null\n    fillLazyItemsTillLeafWithHead(\n      navigatedAt,\n      cache,\n      existingCache,\n      treePatch,\n      seedData,\n      head,\n      prefetchEntry\n    )\n  } else {\n    // Copy rsc for the root node of the cache.\n    cache.rsc = existingCache.rsc\n    // This is a PPR-only field. Unlike the previous branch, since we're\n    // just cloning the existing cache node, we might as well keep the\n    // PPR value, if it exists.\n    cache.prefetchRsc = existingCache.prefetchRsc\n    cache.parallelRoutes = new Map(existingCache.parallelRoutes)\n    cache.loading = existingCache.loading\n    // Create a copy of the existing cache with the rsc applied.\n    fillCacheWithNewSubTreeData(\n      navigatedAt,\n      cache,\n      existingCache,\n      flightData,\n      prefetchEntry\n    )\n  }\n\n  return true\n}\n","(function(){var e={452:function(e){\"use strict\";e.exports=require(\"next/dist/compiled/querystring-es3\")}};var t={};function __nccwpck_require__(o){var a=t[o];if(a!==undefined){return a.exports}var s=t[o]={exports:{}};var n=true;try{e[o](s,s.exports,__nccwpck_require__);n=false}finally{if(n)delete t[o]}return s.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var o={};!function(){var e=o;var t,a=(t=__nccwpck_require__(452))&&\"object\"==typeof t&&\"default\"in t?t.default:t,s=/https?|ftp|gopher|file/;function r(e){\"string\"==typeof e&&(e=d(e));var t=function(e,t,o){var a=e.auth,s=e.hostname,n=e.protocol||\"\",p=e.pathname||\"\",c=e.hash||\"\",i=e.query||\"\",u=!1;a=a?encodeURIComponent(a).replace(/%3A/i,\":\")+\"@\":\"\",e.host?u=a+e.host:s&&(u=a+(~s.indexOf(\":\")?\"[\"+s+\"]\":s),e.port&&(u+=\":\"+e.port)),i&&\"object\"==typeof i&&(i=t.encode(i));var f=e.search||i&&\"?\"+i||\"\";return n&&\":\"!==n.substr(-1)&&(n+=\":\"),e.slashes||(!n||o.test(n))&&!1!==u?(u=\"//\"+(u||\"\"),p&&\"/\"!==p[0]&&(p=\"/\"+p)):u||(u=\"\"),c&&\"#\"!==c[0]&&(c=\"#\"+c),f&&\"?\"!==f[0]&&(f=\"?\"+f),{protocol:n,host:u,pathname:p=p.replace(/[?#]/g,encodeURIComponent),search:f=f.replace(\"#\",\"%23\"),hash:c}}(e,a,s);return\"\"+t.protocol+t.host+t.pathname+t.search+t.hash}var n=\"http://\",p=\"w.w\",c=n+p,i=/^([a-z0-9.+-]*:\\/\\/\\/)([a-z0-9.+-]:\\/*)?/i,u=/https?|ftp|gopher|file/;function h(e,t){var o=\"string\"==typeof e?d(e):e;e=\"object\"==typeof e?r(e):e;var a=d(t),s=\"\";o.protocol&&!o.slashes&&(s=o.protocol,e=e.replace(o.protocol,\"\"),s+=\"/\"===t[0]||\"/\"===e[0]?\"/\":\"\"),s&&a.protocol&&(s=\"\",a.slashes||(s=a.protocol,t=t.replace(a.protocol,\"\")));var p=e.match(i);p&&!a.protocol&&(e=e.substr((s=p[1]+(p[2]||\"\")).length),/^\\/\\/[^/]/.test(t)&&(s=s.slice(0,-1)));var f=new URL(e,c+\"/\"),m=new URL(t,f).toString().replace(c,\"\"),v=a.protocol||o.protocol;return v+=o.slashes||a.slashes?\"//\":\"\",!s&&v?m=m.replace(n,v):s&&(m=m.replace(n,\"\")),u.test(m)||~t.indexOf(\".\")||\"/\"===e.slice(-1)||\"/\"===t.slice(-1)||\"/\"!==m.slice(-1)||(m=m.slice(0,-1)),s&&(m=s+(\"/\"===m[0]?m.substr(1):m)),m}function l(){}l.prototype.parse=d,l.prototype.format=r,l.prototype.resolve=h,l.prototype.resolveObject=h;var f=/^https?|ftp|gopher|file/,m=/^(.*?)([#?].*)/,v=/^([a-z0-9.+-]*:)(\\/{0,3})(.*)/i,_=/^([a-z0-9.+-]*:)?\\/\\/\\/*/i,b=/^([a-z0-9.+-]*:)(\\/{0,2})\\[(.*)\\]$/i;function d(e,t,o){if(void 0===t&&(t=!1),void 0===o&&(o=!1),e&&\"object\"==typeof e&&e instanceof l)return e;var s=(e=e.trim()).match(m);e=s?s[1].replace(/\\\\/g,\"/\")+s[2]:e.replace(/\\\\/g,\"/\"),b.test(e)&&\"/\"!==e.slice(-1)&&(e+=\"/\");var n=!/(^javascript)/.test(e)&&e.match(v),i=_.test(e),u=\"\";n&&(f.test(n[1])||(u=n[1].toLowerCase(),e=\"\"+n[2]+n[3]),n[2]||(i=!1,f.test(n[1])?(u=n[1],e=\"\"+n[3]):e=\"//\"+n[3]),3!==n[2].length&&1!==n[2].length||(u=n[1],e=\"/\"+n[3]));var g,y=(s?s[1]:e).match(/^https?:\\/\\/[^/]+(:[0-9]+)(?=\\/|$)/),w=y&&y[1],x=new l,C=\"\",U=\"\";try{g=new URL(e)}catch(t){C=t,u||o||!/^\\/\\//.test(e)||/^\\/\\/.+[@.]/.test(e)||(U=\"/\",e=e.substr(1));try{g=new URL(e,c)}catch(e){return x.protocol=u,x.href=u,x}}x.slashes=i&&!U,x.host=g.host===p?\"\":g.host,x.hostname=g.hostname===p?\"\":g.hostname.replace(/(\\[|\\])/g,\"\"),x.protocol=C?u||null:g.protocol,x.search=g.search.replace(/\\\\/g,\"%5C\"),x.hash=g.hash.replace(/\\\\/g,\"%5C\");var j=e.split(\"#\");!x.search&&~j[0].indexOf(\"?\")&&(x.search=\"?\"),x.hash||\"\"!==j[1]||(x.hash=\"#\"),x.query=t?a.decode(g.search.substr(1)):x.search.substr(1),x.pathname=U+(n?function(e){return e.replace(/['^|`]/g,(function(e){return\"%\"+e.charCodeAt().toString(16).toUpperCase()})).replace(/((?:%[0-9A-F]{2})+)/g,(function(e,t){try{return decodeURIComponent(t).split(\"\").map((function(e){var t=e.charCodeAt();return t>256||/^[a-z0-9]$/i.test(e)?e:\"%\"+t.toString(16).toUpperCase()})).join(\"\")}catch(e){return t}}))}(g.pathname):g.pathname),\"about:\"===x.protocol&&\"blank\"===x.pathname&&(x.protocol=\"\",x.pathname=\"\"),C&&\"/\"!==e[0]&&(x.pathname=x.pathname.substr(1)),u&&!f.test(u)&&\"/\"!==e.slice(-1)&&\"/\"===x.pathname&&(x.pathname=\"\"),x.path=x.pathname+x.search,x.auth=[g.username,g.password].map(decodeURIComponent).filter(Boolean).join(\":\"),x.port=g.port,w&&!x.host.endsWith(w)&&(x.host+=w,x.port=w.slice(1)),x.href=U?\"\"+x.pathname+x.search+x.hash:r(x);var q=/^(file)/.test(x.href)?[\"host\",\"hostname\"]:[];return Object.keys(x).forEach((function(e){~q.indexOf(e)||(x[e]=x[e]||null)})),x}e.parse=d,e.format=r,e.resolve=h,e.resolveObject=function(e,t){return d(h(e,t))},e.Url=l}();module.exports=o})();","/**\n * This is the default \"use cache\" handler it defaults to an in-memory store.\n * In-memory caches are fragile and should not use stale-while-revalidate\n * semantics on the caches because it's not worth warming up an entry that's\n * likely going to get evicted before we get to use it anyway. However, we also\n * don't want to reuse a stale entry for too long so stale entries should be\n * considered expired/missing in such cache handlers.\n */ import { LRUCache } from '../lru-cache';\nimport { isStale, tagsManifest } from '../incremental-cache/tags-manifest.external';\n// LRU cache default to max 50 MB but in future track\nconst memoryCache = new LRUCache(50 * 1024 * 1024, (entry)=>entry.size);\nconst pendingSets = new Map();\nconst debug = process.env.NEXT_PRIVATE_DEBUG_CACHE ? console.debug.bind(console, 'DefaultCacheHandler:') : undefined;\nconst DefaultCacheHandler = {\n    async get (cacheKey) {\n        const pendingPromise = pendingSets.get(cacheKey);\n        if (pendingPromise) {\n            debug == null ? void 0 : debug('get', cacheKey, 'pending');\n            await pendingPromise;\n        }\n        const privateEntry = memoryCache.get(cacheKey);\n        if (!privateEntry) {\n            debug == null ? void 0 : debug('get', cacheKey, 'not found');\n            return undefined;\n        }\n        const entry = privateEntry.entry;\n        if (performance.timeOrigin + performance.now() > entry.timestamp + entry.revalidate * 1000) {\n            // In-memory caches should expire after revalidate time because it is\n            // unlikely that a new entry will be able to be used before it is dropped\n            // from the cache.\n            debug == null ? void 0 : debug('get', cacheKey, 'expired');\n            return undefined;\n        }\n        if (isStale(entry.tags, entry.timestamp)) {\n            debug == null ? void 0 : debug('get', cacheKey, 'had stale tag');\n            return undefined;\n        }\n        const [returnStream, newSaved] = entry.value.tee();\n        entry.value = newSaved;\n        debug == null ? void 0 : debug('get', cacheKey, 'found', {\n            tags: entry.tags,\n            timestamp: entry.timestamp,\n            revalidate: entry.revalidate,\n            expire: entry.expire\n        });\n        return {\n            ...entry,\n            value: returnStream\n        };\n    },\n    async set (cacheKey, pendingEntry) {\n        debug == null ? void 0 : debug('set', cacheKey, 'start');\n        let resolvePending = ()=>{};\n        const pendingPromise = new Promise((resolve)=>{\n            resolvePending = resolve;\n        });\n        pendingSets.set(cacheKey, pendingPromise);\n        const entry = await pendingEntry;\n        let size = 0;\n        try {\n            const [value, clonedValue] = entry.value.tee();\n            entry.value = value;\n            const reader = clonedValue.getReader();\n            for(let chunk; !(chunk = await reader.read()).done;){\n                size += Buffer.from(chunk.value).byteLength;\n            }\n            memoryCache.set(cacheKey, {\n                entry,\n                isErrored: false,\n                errorRetryCount: 0,\n                size\n            });\n            debug == null ? void 0 : debug('set', cacheKey, 'done');\n        } catch (err) {\n            // TODO: store partial buffer with error after we retry 3 times\n            debug == null ? void 0 : debug('set', cacheKey, 'failed', err);\n        } finally{\n            resolvePending();\n            pendingSets.delete(cacheKey);\n        }\n    },\n    async refreshTags () {\n    // Nothing to do for an in-memory cache handler.\n    },\n    async getExpiration (...tags) {\n        const expiration = Math.max(...tags.map((tag)=>tagsManifest.get(tag) ?? 0));\n        debug == null ? void 0 : debug('getExpiration', {\n            tags,\n            expiration\n        });\n        return expiration;\n    },\n    async expireTags (...tags) {\n        const timestamp = Math.round(performance.timeOrigin + performance.now());\n        debug == null ? void 0 : debug('expireTags', {\n            tags,\n            timestamp\n        });\n        for (const tag of tags){\n            // TODO: update file-system-cache?\n            tagsManifest.set(tag, timestamp);\n        }\n    }\n};\nexport default DefaultCacheHandler;\n\n//# sourceMappingURL=default.js.map","import DefaultCacheHandler from '../lib/cache-handlers/default';\nconst debug = process.env.NEXT_PRIVATE_DEBUG_CACHE ? (message, ...args)=>{\n    console.log(`use-cache: ${message}`, ...args);\n} : undefined;\nconst handlersSymbol = Symbol.for('@next/cache-handlers');\nconst handlersMapSymbol = Symbol.for('@next/cache-handlers-map');\nconst handlersSetSymbol = Symbol.for('@next/cache-handlers-set');\n/**\n * The reference to the cache handlers. We store the cache handlers on the\n * global object so that we can access the same instance across different\n * boundaries (such as different copies of the same module).\n */ const reference = globalThis;\n/**\n * Initialize the cache handlers.\n * @returns `true` if the cache handlers were initialized, `false` if they were already initialized.\n */ export function initializeCacheHandlers() {\n    // If the cache handlers have already been initialized, don't do it again.\n    if (reference[handlersMapSymbol]) {\n        debug == null ? void 0 : debug('cache handlers already initialized');\n        return false;\n    }\n    debug == null ? void 0 : debug('initializing cache handlers');\n    reference[handlersMapSymbol] = new Map();\n    // Initialize the cache from the symbol contents first.\n    if (reference[handlersSymbol]) {\n        let fallback;\n        if (reference[handlersSymbol].DefaultCache) {\n            debug == null ? void 0 : debug('setting \"default\" cache handler from symbol');\n            fallback = reference[handlersSymbol].DefaultCache;\n        } else {\n            debug == null ? void 0 : debug('setting \"default\" cache handler from default');\n            fallback = DefaultCacheHandler;\n        }\n        reference[handlersMapSymbol].set('default', fallback);\n        if (reference[handlersSymbol].RemoteCache) {\n            debug == null ? void 0 : debug('setting \"remote\" cache handler from symbol');\n            reference[handlersMapSymbol].set('remote', reference[handlersSymbol].RemoteCache);\n        } else {\n            debug == null ? void 0 : debug('setting \"remote\" cache handler from default');\n            reference[handlersMapSymbol].set('remote', fallback);\n        }\n    } else {\n        debug == null ? void 0 : debug('setting \"default\" cache handler from default');\n        reference[handlersMapSymbol].set('default', DefaultCacheHandler);\n        debug == null ? void 0 : debug('setting \"remote\" cache handler from default');\n        reference[handlersMapSymbol].set('remote', DefaultCacheHandler);\n    }\n    // Create a set of the cache handlers.\n    reference[handlersSetSymbol] = new Set(reference[handlersMapSymbol].values());\n    return true;\n}\n/**\n * Get a cache handler by kind.\n * @param kind - The kind of cache handler to get.\n * @returns The cache handler, or `undefined` if it does not exist.\n * @throws If the cache handlers are not initialized.\n */ export function getCacheHandler(kind) {\n    // This should never be called before initializeCacheHandlers.\n    if (!reference[handlersMapSymbol]) {\n        throw Object.defineProperty(new Error('Cache handlers not initialized'), \"__NEXT_ERROR_CODE\", {\n            value: \"E649\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    return reference[handlersMapSymbol].get(kind);\n}\n/**\n * Get a set iterator over the cache handlers.\n * @returns An iterator over the cache handlers, or `undefined` if they are not\n * initialized.\n */ export function getCacheHandlers() {\n    if (!reference[handlersSetSymbol]) {\n        return undefined;\n    }\n    return reference[handlersSetSymbol].values();\n}\n/**\n * Get a map iterator over the cache handlers (keyed by kind).\n * @returns An iterator over the cache handler entries, or `undefined` if they\n * are not initialized.\n * @throws If the cache handlers are not initialized.\n */ export function getCacheHandlerEntries() {\n    if (!reference[handlersMapSymbol]) {\n        return undefined;\n    }\n    return reference[handlersMapSymbol].entries();\n}\n/**\n * Set a cache handler by kind.\n * @param kind - The kind of cache handler to set.\n * @param cacheHandler - The cache handler to set.\n */ export function setCacheHandler(kind, cacheHandler) {\n    // This should never be called before initializeCacheHandlers.\n    if (!reference[handlersMapSymbol] || !reference[handlersSetSymbol]) {\n        throw Object.defineProperty(new Error('Cache handlers not initialized'), \"__NEXT_ERROR_CODE\", {\n            value: \"E649\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    debug == null ? void 0 : debug('setting cache handler for \"%s\"', kind);\n    reference[handlersMapSymbol].set(kind, cacheHandler);\n    reference[handlersSetSymbol].add(cacheHandler);\n}\n\n//# sourceMappingURL=handlers.js.map","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;Object.defineProperty(r,\"__esModule\",{value:true});function lexer(e){var r=[];var n=0;while(n<e.length){var t=e[n];if(t===\"*\"||t===\"+\"||t===\"?\"){r.push({type:\"MODIFIER\",index:n,value:e[n++]});continue}if(t===\"\\\\\"){r.push({type:\"ESCAPED_CHAR\",index:n++,value:e[n++]});continue}if(t===\"{\"){r.push({type:\"OPEN\",index:n,value:e[n++]});continue}if(t===\"}\"){r.push({type:\"CLOSE\",index:n,value:e[n++]});continue}if(t===\":\"){var i=\"\";var a=n+1;while(a<e.length){var o=e.charCodeAt(a);if(o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122||o===95){i+=e[a++];continue}break}if(!i)throw new TypeError(\"Missing parameter name at \"+n);r.push({type:\"NAME\",index:n,value:i});n=a;continue}if(t===\"(\"){var f=1;var u=\"\";var a=n+1;if(e[a]===\"?\"){throw new TypeError('Pattern cannot start with \"?\" at '+a)}while(a<e.length){if(e[a]===\"\\\\\"){u+=e[a++]+e[a++];continue}if(e[a]===\")\"){f--;if(f===0){a++;break}}else if(e[a]===\"(\"){f++;if(e[a+1]!==\"?\"){throw new TypeError(\"Capturing groups are not allowed at \"+a)}}u+=e[a++]}if(f)throw new TypeError(\"Unbalanced pattern at \"+n);if(!u)throw new TypeError(\"Missing pattern at \"+n);r.push({type:\"PATTERN\",index:n,value:u});n=a;continue}r.push({type:\"CHAR\",index:n,value:e[n++]})}r.push({type:\"END\",index:n,value:\"\"});return r}function parse(e,r){if(r===void 0){r={}}var n=lexer(e);var t=r.prefixes,i=t===void 0?\"./\":t;var a=\"[^\"+escapeString(r.delimiter||\"/#?\")+\"]+?\";var o=[];var f=0;var u=0;var p=\"\";var tryConsume=function(e){if(u<n.length&&n[u].type===e)return n[u++].value};var mustConsume=function(e){var r=tryConsume(e);if(r!==undefined)return r;var t=n[u],i=t.type,a=t.index;throw new TypeError(\"Unexpected \"+i+\" at \"+a+\", expected \"+e)};var consumeText=function(){var e=\"\";var r;while(r=tryConsume(\"CHAR\")||tryConsume(\"ESCAPED_CHAR\")){e+=r}return e};while(u<n.length){var v=tryConsume(\"CHAR\");var c=tryConsume(\"NAME\");var s=tryConsume(\"PATTERN\");if(c||s){var d=v||\"\";if(i.indexOf(d)===-1){p+=d;d=\"\"}if(p){o.push(p);p=\"\"}o.push({name:c||f++,prefix:d,suffix:\"\",pattern:s||a,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}var g=v||tryConsume(\"ESCAPED_CHAR\");if(g){p+=g;continue}if(p){o.push(p);p=\"\"}var x=tryConsume(\"OPEN\");if(x){var d=consumeText();var l=tryConsume(\"NAME\")||\"\";var h=tryConsume(\"PATTERN\")||\"\";var m=consumeText();mustConsume(\"CLOSE\");o.push({name:l||(h?f++:\"\"),pattern:l&&!h?a:h,prefix:d,suffix:m,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}mustConsume(\"END\")}return o}r.parse=parse;function compile(e,r){return tokensToFunction(parse(e,r),r)}r.compile=compile;function tokensToFunction(e,r){if(r===void 0){r={}}var n=flags(r);var t=r.encode,i=t===void 0?function(e){return e}:t,a=r.validate,o=a===void 0?true:a;var f=e.map((function(e){if(typeof e===\"object\"){return new RegExp(\"^(?:\"+e.pattern+\")$\",n)}}));return function(r){var n=\"\";for(var t=0;t<e.length;t++){var a=e[t];if(typeof a===\"string\"){n+=a;continue}var u=r?r[a.name]:undefined;var p=a.modifier===\"?\"||a.modifier===\"*\";var v=a.modifier===\"*\"||a.modifier===\"+\";if(Array.isArray(u)){if(!v){throw new TypeError('Expected \"'+a.name+'\" to not repeat, but got an array')}if(u.length===0){if(p)continue;throw new TypeError('Expected \"'+a.name+'\" to not be empty')}for(var c=0;c<u.length;c++){var s=i(u[c],a);if(o&&!f[t].test(s)){throw new TypeError('Expected all \"'+a.name+'\" to match \"'+a.pattern+'\", but got \"'+s+'\"')}n+=a.prefix+s+a.suffix}continue}if(typeof u===\"string\"||typeof u===\"number\"){var s=i(String(u),a);if(o&&!f[t].test(s)){throw new TypeError('Expected \"'+a.name+'\" to match \"'+a.pattern+'\", but got \"'+s+'\"')}n+=a.prefix+s+a.suffix;continue}if(p)continue;var d=v?\"an array\":\"a string\";throw new TypeError('Expected \"'+a.name+'\" to be '+d)}return n}}r.tokensToFunction=tokensToFunction;function match(e,r){var n=[];var t=pathToRegexp(e,n,r);return regexpToFunction(t,n,r)}r.match=match;function regexpToFunction(e,r,n){if(n===void 0){n={}}var t=n.decode,i=t===void 0?function(e){return e}:t;return function(n){var t=e.exec(n);if(!t)return false;var a=t[0],o=t.index;var f=Object.create(null);var _loop_1=function(e){if(t[e]===undefined)return\"continue\";var n=r[e-1];if(n.modifier===\"*\"||n.modifier===\"+\"){f[n.name]=t[e].split(n.prefix+n.suffix).map((function(e){return i(e,n)}))}else{f[n.name]=i(t[e],n)}};for(var u=1;u<t.length;u++){_loop_1(u)}return{path:a,index:o,params:f}}}r.regexpToFunction=regexpToFunction;function escapeString(e){return e.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g,\"\\\\$1\")}function flags(e){return e&&e.sensitive?\"\":\"i\"}function regexpToRegexp(e,r){if(!r)return e;var n=e.source.match(/\\((?!\\?)/g);if(n){for(var t=0;t<n.length;t++){r.push({name:t,prefix:\"\",suffix:\"\",modifier:\"\",pattern:\"\"})}}return e}function arrayToRegexp(e,r,n){var t=e.map((function(e){return pathToRegexp(e,r,n).source}));return new RegExp(\"(?:\"+t.join(\"|\")+\")\",flags(n))}function stringToRegexp(e,r,n){return tokensToRegexp(parse(e,n),r,n)}function tokensToRegexp(e,r,n){if(n===void 0){n={}}var t=n.strict,i=t===void 0?false:t,a=n.start,o=a===void 0?true:a,f=n.end,u=f===void 0?true:f,p=n.encode,v=p===void 0?function(e){return e}:p;var c=\"[\"+escapeString(n.endsWith||\"\")+\"]|$\";var s=\"[\"+escapeString(n.delimiter||\"/#?\")+\"]\";var d=o?\"^\":\"\";for(var g=0,x=e;g<x.length;g++){var l=x[g];if(typeof l===\"string\"){d+=escapeString(v(l))}else{var h=escapeString(v(l.prefix));var m=escapeString(v(l.suffix));if(l.pattern){if(r)r.push(l);if(h||m){if(l.modifier===\"+\"||l.modifier===\"*\"){var E=l.modifier===\"*\"?\"?\":\"\";d+=\"(?:\"+h+\"((?:\"+l.pattern+\")(?:\"+m+h+\"(?:\"+l.pattern+\"))*)\"+m+\")\"+E}else{d+=\"(?:\"+h+\"(\"+l.pattern+\")\"+m+\")\"+l.modifier}}else{d+=\"(\"+l.pattern+\")\"+l.modifier}}else{d+=\"(?:\"+h+m+\")\"+l.modifier}}}if(u){if(!i)d+=s+\"?\";d+=!n.endsWith?\"$\":\"(?=\"+c+\")\"}else{var T=e[e.length-1];var y=typeof T===\"string\"?s.indexOf(T[T.length-1])>-1:T===undefined;if(!i){d+=\"(?:\"+s+\"(?=\"+c+\"))?\"}if(!y){d+=\"(?=\"+s+\"|\"+c+\")\"}}return new RegExp(d,flags(n))}r.tokensToRegexp=tokensToRegexp;function pathToRegexp(e,r,n){if(e instanceof RegExp)return regexpToRegexp(e,r);if(Array.isArray(e))return arrayToRegexp(e,r,n);return stringToRegexp(e,r,n)}r.pathToRegexp=pathToRegexp})();module.exports=e})();","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    handleFetch: null,\n    interceptFetch: null,\n    reader: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    handleFetch: function() {\n        return handleFetch;\n    },\n    interceptFetch: function() {\n        return interceptFetch;\n    },\n    reader: function() {\n        return reader;\n    }\n});\nconst _context = require(\"./context\");\nconst reader = {\n    url (req) {\n        return req.url;\n    },\n    header (req, name) {\n        return req.headers.get(name);\n    }\n};\nfunction getTestStack() {\n    let stack = (new Error().stack ?? '').split('\\n');\n    // Skip the first line and find first non-empty line.\n    for(let i = 1; i < stack.length; i++){\n        if (stack[i].length > 0) {\n            stack = stack.slice(i);\n            break;\n        }\n    }\n    // Filter out franmework lines.\n    stack = stack.filter((f)=>!f.includes('/next/dist/'));\n    // At most 5 lines.\n    stack = stack.slice(0, 5);\n    // Cleanup some internal info and trim.\n    stack = stack.map((s)=>s.replace('webpack-internal:///(rsc)/', '').trim());\n    return stack.join('    ');\n}\nasync function buildProxyRequest(testData, request) {\n    const { url, method, headers, body, cache, credentials, integrity, mode, redirect, referrer, referrerPolicy } = request;\n    return {\n        testData,\n        api: 'fetch',\n        request: {\n            url,\n            method,\n            headers: [\n                ...Array.from(headers),\n                [\n                    'next-test-stack',\n                    getTestStack()\n                ]\n            ],\n            body: body ? Buffer.from(await request.arrayBuffer()).toString('base64') : null,\n            cache,\n            credentials,\n            integrity,\n            mode,\n            redirect,\n            referrer,\n            referrerPolicy\n        }\n    };\n}\nfunction buildResponse(proxyResponse) {\n    const { status, headers, body } = proxyResponse.response;\n    return new Response(body ? Buffer.from(body, 'base64') : null, {\n        status,\n        headers: new Headers(headers)\n    });\n}\nasync function handleFetch(originalFetch, request) {\n    const testInfo = (0, _context.getTestReqInfo)(request, reader);\n    if (!testInfo) {\n        // Passthrough non-test requests.\n        return originalFetch(request);\n    }\n    const { testData, proxyPort } = testInfo;\n    const proxyRequest = await buildProxyRequest(testData, request);\n    const resp = await originalFetch(`http://localhost:${proxyPort}`, {\n        method: 'POST',\n        body: JSON.stringify(proxyRequest),\n        next: {\n            // @ts-ignore\n            internal: true\n        }\n    });\n    if (!resp.ok) {\n        throw Object.defineProperty(new Error(`Proxy request failed: ${resp.status}`), \"__NEXT_ERROR_CODE\", {\n            value: \"E146\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const proxyResponse = await resp.json();\n    const { api } = proxyResponse;\n    switch(api){\n        case 'continue':\n            return originalFetch(request);\n        case 'abort':\n        case 'unhandled':\n            throw Object.defineProperty(new Error(`Proxy request aborted [${request.method} ${request.url}]`), \"__NEXT_ERROR_CODE\", {\n                value: \"E145\",\n                enumerable: false,\n                configurable: true\n            });\n        default:\n            break;\n    }\n    return buildResponse(proxyResponse);\n}\nfunction interceptFetch(originalFetch) {\n    global.fetch = function testFetch(input, init) {\n        var _init_next;\n        // Passthrough internal requests.\n        // @ts-ignore\n        if (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next.internal) {\n            return originalFetch(input, init);\n        }\n        return handleFetch(originalFetch, new Request(input, init));\n    };\n    return ()=>{\n        global.fetch = originalFetch;\n    };\n}\n\n//# sourceMappingURL=fetch.js.map","// This gets assigned as a side-effect during app initialization. Because it\n// represents the build used to create the JS bundle, it should never change\n// after being set, so we store it in a global variable.\n//\n// When performing RSC requests, if the incoming data has a different build ID,\n// we perform an MPA navigation/refresh to load the updated build and ensure\n// that the client and server in sync.\n\n// Starts as an empty string. In practice, because setAppBuildId is called\n// during initialization before hydration starts, this will always get\n// reassigned to the actual build ID before it's ever needed by a navigation.\n// If for some reasons it didn't, due to a bug or race condition, then on\n// navigation the build comparision would fail and trigger an MPA navigation.\nlet globalBuildId: string = ''\n\nexport function setAppBuildId(buildId: string) {\n  globalBuildId = buildId\n}\n\nexport function getAppBuildId(): string {\n  return globalBuildId\n}\n","'use client'\nimport { hexHash } from '../../../shared/lib/hash'\nimport {\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_ROUTER_SEGMENT_PREFETCH_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_URL,\n  NEXT_RSC_UNION_QUERY,\n} from '../app-router-headers'\nimport type { RequestHeaders } from './fetch-server-response'\n\n/**\n * Mutates the provided URL by adding a cache-busting search parameter for CDNs that don't\n * support custom headers. This helps avoid caching conflicts by making each request unique.\n *\n * Rather than relying on the Vary header which some CDNs ignore, we append a search param\n * to create a unique URL that forces a fresh request.\n *\n * Example:\n * URL before: https://example.com/path?query=1\n * URL after: https://example.com/path?query=1&_rsc=abc123\n *\n * Note: This function mutates the input URL directly and does not return anything.\n *\n * TODO: Since we need to use a search param anyway, we could simplify by removing the custom\n * headers approach entirely and just use search params.\n */\nexport const setCacheBustingSearchParam = (\n  url: URL,\n  headers: RequestHeaders\n): void => {\n  const uniqueCacheKey = hexHash(\n    [\n      headers[NEXT_ROUTER_PREFETCH_HEADER] || '0',\n      headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER] || '0',\n      headers[NEXT_ROUTER_STATE_TREE_HEADER],\n      headers[NEXT_URL],\n    ].join(',')\n  )\n\n  /**\n   * Note that we intentionally do not use `url.searchParams.set` here:\n   *\n   * const url = new URL('https://example.com/search?q=custom%20spacing');\n   * url.searchParams.set('_rsc', 'abc123');\n   * console.log(url.toString()); // Outputs: https://example.com/search?q=custom+spacing&_rsc=abc123\n   *                                                                             ^ <--- this is causing confusion\n   * This is in fact intended based on https://url.spec.whatwg.org/#interface-urlsearchparams, but\n   * we want to preserve the %20 as %20 if that's what the user passed in, hence the custom\n   * logic below.\n   */\n  const existingSearch = url.search\n  const rawQuery = existingSearch.startsWith('?')\n    ? existingSearch.slice(1)\n    : existingSearch\n  const pairs = rawQuery.split('&').filter(Boolean)\n  pairs.push(`${NEXT_RSC_UNION_QUERY}=${uniqueCacheKey}`)\n  url.search = pairs.length ? `?${pairs.join('&')}` : ''\n}\n","'use client'\n\n// @ts-ignore\n// eslint-disable-next-line import/no-extraneous-dependencies\n// import { createFromReadableStream } from 'react-server-dom-webpack/client'\nconst { createFromReadableStream } = (\n  !!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')\n) as typeof import('react-server-dom-webpack/client')\n\nimport type {\n  FlightRouterState,\n  NavigationFlightResponse,\n} from '../../../server/app-render/types'\n\nimport type { NEXT_ROUTER_SEGMENT_PREFETCH_HEADER } from '../app-router-headers'\nimport {\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_RSC_UNION_QUERY,\n  NEXT_URL,\n  RSC_HEADER,\n  RSC_CONTENT_TYPE_HEADER,\n  NEXT_HMR_REFRESH_HEADER,\n  NEXT_DID_POSTPONE_HEADER,\n  NEXT_ROUTER_STALE_TIME_HEADER,\n} from '../app-router-headers'\nimport { callServer } from '../../app-call-server'\nimport { findSourceMapURL } from '../../app-find-source-map-url'\nimport { PrefetchKind } from './router-reducer-types'\nimport {\n  normalizeFlightData,\n  prepareFlightRouterStateForRequest,\n  type NormalizedFlightData,\n} from '../../flight-data-helpers'\nimport { getAppBuildId } from '../../app-build-id'\nimport { setCacheBustingSearchParam } from './set-cache-busting-search-param'\n\nexport interface FetchServerResponseOptions {\n  readonly flightRouterState: FlightRouterState\n  readonly nextUrl: string | null\n  readonly prefetchKind?: PrefetchKind\n  readonly isHmrRefresh?: boolean\n}\n\nexport type FetchServerResponseResult = {\n  flightData: NormalizedFlightData[] | string\n  canonicalUrl: URL | undefined\n  couldBeIntercepted: boolean\n  prerendered: boolean\n  postponed: boolean\n  staleTime: number\n}\n\nexport type RequestHeaders = {\n  [RSC_HEADER]?: '1'\n  [NEXT_ROUTER_STATE_TREE_HEADER]?: string\n  [NEXT_URL]?: string\n  [NEXT_ROUTER_PREFETCH_HEADER]?: '1'\n  [NEXT_ROUTER_SEGMENT_PREFETCH_HEADER]?: string\n  'x-deployment-id'?: string\n  [NEXT_HMR_REFRESH_HEADER]?: '1'\n  // A header that is only added in test mode to assert on fetch priority\n  'Next-Test-Fetch-Priority'?: RequestInit['priority']\n}\n\nexport function urlToUrlWithoutFlightMarker(url: string): URL {\n  const urlWithoutFlightParameters = new URL(url, location.origin)\n  urlWithoutFlightParameters.searchParams.delete(NEXT_RSC_UNION_QUERY)\n  if (process.env.NODE_ENV === 'production') {\n    if (\n      process.env.__NEXT_CONFIG_OUTPUT === 'export' &&\n      urlWithoutFlightParameters.pathname.endsWith('.txt')\n    ) {\n      const { pathname } = urlWithoutFlightParameters\n      const length = pathname.endsWith('/index.txt') ? 10 : 4\n      // Slice off `/index.txt` or `.txt` from the end of the pathname\n      urlWithoutFlightParameters.pathname = pathname.slice(0, -length)\n    }\n  }\n  return urlWithoutFlightParameters\n}\n\nfunction doMpaNavigation(url: string): FetchServerResponseResult {\n  return {\n    flightData: urlToUrlWithoutFlightMarker(url).toString(),\n    canonicalUrl: undefined,\n    couldBeIntercepted: false,\n    prerendered: false,\n    postponed: false,\n    staleTime: -1,\n  }\n}\n\nlet abortController = new AbortController()\n\nif (typeof window !== 'undefined') {\n  // Abort any in-flight requests when the page is unloaded, e.g. due to\n  // reloading the page or performing hard navigations. This allows us to ignore\n  // what would otherwise be a thrown TypeError when the browser cancels the\n  // requests.\n  window.addEventListener('pagehide', () => {\n    abortController.abort()\n  })\n\n  // Use a fresh AbortController instance on pageshow, e.g. when navigating back\n  // and the JavaScript execution context is restored by the browser.\n  window.addEventListener('pageshow', () => {\n    abortController = new AbortController()\n  })\n}\n\n/**\n * Fetch the flight data for the provided url. Takes in the current router state\n * to decide what to render server-side.\n */\nexport async function fetchServerResponse(\n  url: URL,\n  options: FetchServerResponseOptions\n): Promise<FetchServerResponseResult> {\n  const { flightRouterState, nextUrl, prefetchKind } = options\n\n  const headers: RequestHeaders = {\n    // Enable flight response\n    [RSC_HEADER]: '1',\n    // Provide the current router state\n    [NEXT_ROUTER_STATE_TREE_HEADER]: prepareFlightRouterStateForRequest(\n      flightRouterState,\n      options.isHmrRefresh\n    ),\n  }\n\n  /**\n   * Three cases:\n   * - `prefetchKind` is `undefined`, it means it's a normal navigation, so we want to prefetch the page data fully\n   * - `prefetchKind` is `full` - we want to prefetch the whole page so same as above\n   * - `prefetchKind` is `auto` - if the page is dynamic, prefetch the page data partially, if static prefetch the page data fully\n   */\n  if (prefetchKind === PrefetchKind.AUTO) {\n    headers[NEXT_ROUTER_PREFETCH_HEADER] = '1'\n  }\n\n  if (process.env.NODE_ENV === 'development' && options.isHmrRefresh) {\n    headers[NEXT_HMR_REFRESH_HEADER] = '1'\n  }\n\n  if (nextUrl) {\n    headers[NEXT_URL] = nextUrl\n  }\n\n  try {\n    // When creating a \"temporary\" prefetch (the \"on-demand\" prefetch that gets created on navigation, if one doesn't exist)\n    // we send the request with a \"high\" priority as it's in response to a user interaction that could be blocking a transition.\n    // Otherwise, all other prefetches are sent with a \"low\" priority.\n    // We use \"auto\" for in all other cases to match the existing default, as this function is shared outside of prefetching.\n    const fetchPriority = prefetchKind\n      ? prefetchKind === PrefetchKind.TEMPORARY\n        ? 'high'\n        : 'low'\n      : 'auto'\n\n    if (process.env.NODE_ENV === 'production') {\n      if (process.env.__NEXT_CONFIG_OUTPUT === 'export') {\n        // In \"output: export\" mode, we can't rely on headers to distinguish\n        // between HTML and RSC requests. Instead, we append an extra prefix\n        // to the request.\n        url = new URL(url)\n        if (url.pathname.endsWith('/')) {\n          url.pathname += 'index.txt'\n        } else {\n          url.pathname += '.txt'\n        }\n      }\n    }\n\n    const res = await createFetch(\n      url,\n      headers,\n      fetchPriority,\n      abortController.signal\n    )\n\n    const responseUrl = urlToUrlWithoutFlightMarker(res.url)\n    const canonicalUrl = res.redirected ? responseUrl : undefined\n\n    const contentType = res.headers.get('content-type') || ''\n    const interception = !!res.headers.get('vary')?.includes(NEXT_URL)\n    const postponed = !!res.headers.get(NEXT_DID_POSTPONE_HEADER)\n    const staleTimeHeaderSeconds = res.headers.get(\n      NEXT_ROUTER_STALE_TIME_HEADER\n    )\n    const staleTime =\n      staleTimeHeaderSeconds !== null\n        ? parseInt(staleTimeHeaderSeconds, 10) * 1000\n        : -1\n    let isFlightResponse = contentType.startsWith(RSC_CONTENT_TYPE_HEADER)\n\n    if (process.env.NODE_ENV === 'production') {\n      if (process.env.__NEXT_CONFIG_OUTPUT === 'export') {\n        if (!isFlightResponse) {\n          isFlightResponse = contentType.startsWith('text/plain')\n        }\n      }\n    }\n\n    // If fetch returns something different than flight response handle it like a mpa navigation\n    // If the fetch was not 200, we also handle it like a mpa navigation\n    if (!isFlightResponse || !res.ok || !res.body) {\n      // in case the original URL came with a hash, preserve it before redirecting to the new URL\n      if (url.hash) {\n        responseUrl.hash = url.hash\n      }\n\n      return doMpaNavigation(responseUrl.toString())\n    }\n\n    // We may navigate to a page that requires a different Webpack runtime.\n    // In prod, every page will have the same Webpack runtime.\n    // In dev, the Webpack runtime is minimal for each page.\n    // We need to ensure the Webpack runtime is updated before executing client-side JS of the new page.\n    if (process.env.NODE_ENV !== 'production' && !process.env.TURBOPACK) {\n      await require('../react-dev-overlay/app/hot-reloader-client').waitForWebpackRuntimeHotUpdate()\n    }\n\n    // Handle the `fetch` readable stream that can be unwrapped by `React.use`.\n    const flightStream = postponed\n      ? createUnclosingPrefetchStream(res.body)\n      : res.body\n    const response = await (createFromNextReadableStream(\n      flightStream\n    ) as Promise<NavigationFlightResponse>)\n\n    if (getAppBuildId() !== response.b) {\n      return doMpaNavigation(res.url)\n    }\n\n    return {\n      flightData: normalizeFlightData(response.f),\n      canonicalUrl: canonicalUrl,\n      couldBeIntercepted: interception,\n      prerendered: response.S,\n      postponed,\n      staleTime,\n    }\n  } catch (err) {\n    if (!abortController.signal.aborted) {\n      console.error(\n        `Failed to fetch RSC payload for ${url}. Falling back to browser navigation.`,\n        err\n      )\n    }\n\n    // If fetch fails handle it like a mpa navigation\n    // TODO-APP: Add a test for the case where a CORS request fails, e.g. external url redirect coming from the response.\n    // See https://github.com/vercel/next.js/issues/43605#issuecomment-1451617521 for a reproduction.\n    return {\n      flightData: url.toString(),\n      canonicalUrl: undefined,\n      couldBeIntercepted: false,\n      prerendered: false,\n      postponed: false,\n      staleTime: -1,\n    }\n  }\n}\n\nexport function createFetch(\n  url: URL,\n  headers: RequestHeaders,\n  fetchPriority: 'auto' | 'high' | 'low' | null,\n  signal?: AbortSignal\n) {\n  const fetchUrl = new URL(url)\n\n  // TODO: In output: \"export\" mode, the headers do nothing. Omit them (and the\n  // cache busting search param) from the request so they're\n  // maximally cacheable.\n  setCacheBustingSearchParam(fetchUrl, headers)\n\n  if (process.env.__NEXT_TEST_MODE && fetchPriority !== null) {\n    headers['Next-Test-Fetch-Priority'] = fetchPriority\n  }\n\n  if (process.env.NEXT_DEPLOYMENT_ID) {\n    headers['x-deployment-id'] = process.env.NEXT_DEPLOYMENT_ID\n  }\n\n  return fetch(fetchUrl, {\n    // Backwards compat for older browsers. `same-origin` is the default in modern browsers.\n    credentials: 'same-origin',\n    headers,\n    priority: fetchPriority || undefined,\n    signal,\n  })\n}\n\nexport function createFromNextReadableStream(\n  flightStream: ReadableStream<Uint8Array>\n): Promise<unknown> {\n  return createFromReadableStream(flightStream, {\n    callServer,\n    findSourceMapURL,\n  })\n}\n\nfunction createUnclosingPrefetchStream(\n  originalFlightStream: ReadableStream<Uint8Array>\n): ReadableStream<Uint8Array> {\n  // When PPR is enabled, prefetch streams may contain references that never\n  // resolve, because that's how we encode dynamic data access. In the decoded\n  // object returned by the Flight client, these are reified into hanging\n  // promises that suspend during render, which is effectively what we want.\n  // The UI resolves when it switches to the dynamic data stream\n  // (via useDeferredValue(dynamic, static)).\n  //\n  // However, the Flight implementation currently errors if the server closes\n  // the response before all the references are resolved. As a cheat to work\n  // around this, we wrap the original stream in a new stream that never closes,\n  // and therefore doesn't error.\n  const reader = originalFlightStream.getReader()\n  return new ReadableStream({\n    async pull(controller) {\n      while (true) {\n        const { done, value } = await reader.read()\n        if (!done) {\n          // Pass to the target stream and keep consuming the Flight response\n          // from the server.\n          controller.enqueue(value)\n          continue\n        }\n        // The server stream has closed. Exit, but intentionally do not close\n        // the target stream.\n        return\n      }\n    },\n  })\n}\n","export function isHangingPromiseRejectionError(err) {\n    if (typeof err !== 'object' || err === null || !('digest' in err)) {\n        return false;\n    }\n    return err.digest === HANGING_PROMISE_REJECTION;\n}\nconst HANGING_PROMISE_REJECTION = 'HANGING_PROMISE_REJECTION';\nclass HangingPromiseRejectionError extends Error {\n    constructor(expression){\n        super(`During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context.`), this.expression = expression, this.digest = HANGING_PROMISE_REJECTION;\n    }\n}\nconst abortListenersBySignal = new WeakMap();\n/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for dynamicIO where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */ export function makeHangingPromise(signal, expression) {\n    if (signal.aborted) {\n        return Promise.reject(new HangingPromiseRejectionError(expression));\n    } else {\n        const hangingPromise = new Promise((_, reject)=>{\n            const boundRejection = reject.bind(null, new HangingPromiseRejectionError(expression));\n            let currentListeners = abortListenersBySignal.get(signal);\n            if (currentListeners) {\n                currentListeners.push(boundRejection);\n            } else {\n                const listeners = [\n                    boundRejection\n                ];\n                abortListenersBySignal.set(signal, listeners);\n                signal.addEventListener('abort', ()=>{\n                    for(let i = 0; i < listeners.length; i++){\n                        listeners[i]();\n                    }\n                }, {\n                    once: true\n                });\n            }\n        });\n        // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n        // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n        // your own promise out of it you'll need to ensure you handle the error when it rejects.\n        hangingPromise.catch(ignoreReject);\n        return hangingPromise;\n    }\n}\nfunction ignoreReject() {}\n\n//# sourceMappingURL=dynamic-rendering-utils.js.map","/**\n * Create a \"Thenable\" that does not resolve. This is used to suspend indefinitely when data is not available yet.\n */\nexport const unresolvedThenable = {\n  then: () => {},\n} as PromiseLike<void>\n","import type { DomainLocale } from '../../../server/config-shared'\n\nexport function detectDomainLocale(\n  domainItems?: readonly DomainLocale[],\n  hostname?: string,\n  detectedLocale?: string\n) {\n  if (!domainItems) return\n\n  if (detectedLocale) {\n    detectedLocale = detectedLocale.toLowerCase()\n  }\n\n  for (const item of domainItems) {\n    // remove port if present\n    const domainHostname = item.domain?.split(':', 1)[0].toLowerCase()\n    if (\n      hostname === domainHostname ||\n      detectedLocale === item.defaultLocale.toLowerCase() ||\n      item.locales?.some((locale) => locale.toLowerCase() === detectedLocale)\n    ) {\n      return item\n    }\n  }\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */\nexport function addPathSuffix(path: string, suffix?: string) {\n  if (!path.startsWith('/') || !suffix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${pathname}${suffix}${query}${hash}`\n}\n","import { addPathPrefix } from './add-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */\nexport function addLocale(\n  path: string,\n  locale?: string | false,\n  defaultLocale?: string,\n  ignorePrefix?: boolean\n) {\n  // If no locale was given or the locale is the default locale, we don't need\n  // to prefix the path.\n  if (!locale || locale === defaultLocale) return path\n\n  const lower = path.toLowerCase()\n\n  // If the path is an API path or the path already has the locale prefix, we\n  // don't need to prefix the path.\n  if (!ignorePrefix) {\n    if (pathHasPrefix(lower, '/api')) return path\n    if (pathHasPrefix(lower, `/${locale.toLowerCase()}`)) return path\n  }\n\n  // Add the locale prefix to the path.\n  return addPathPrefix(path, `/${locale}`)\n}\n","import type { NextPathnameInfo } from './get-next-pathname-info'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { addPathPrefix } from './add-path-prefix'\nimport { addPathSuffix } from './add-path-suffix'\nimport { addLocale } from './add-locale'\n\ninterface ExtendedInfo extends NextPathnameInfo {\n  defaultLocale?: string\n  ignorePrefix?: boolean\n}\n\nexport function formatNextPathnameInfo(info: ExtendedInfo) {\n  let pathname = addLocale(\n    info.pathname,\n    info.locale,\n    info.buildId ? undefined : info.defaultLocale,\n    info.ignorePrefix\n  )\n\n  if (info.buildId || !info.trailingSlash) {\n    pathname = removeTrailingSlash(pathname)\n  }\n\n  if (info.buildId) {\n    pathname = addPathSuffix(\n      addPathPrefix(pathname, `/_next/data/${info.buildId}`),\n      info.pathname === '/' ? 'index.json' : '.json'\n    )\n  }\n\n  pathname = addPathPrefix(pathname, info.basePath)\n  return !info.buildId && info.trailingSlash\n    ? !pathname.endsWith('/')\n      ? addPathSuffix(pathname, '/')\n      : pathname\n    : removeTrailingSlash(pathname)\n}\n","import { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale';\nimport { formatNextPathnameInfo } from '../../shared/lib/router/utils/format-next-pathname-info';\nimport { getHostname } from '../../shared/lib/get-hostname';\nimport { getNextPathnameInfo } from '../../shared/lib/router/utils/get-next-pathname-info';\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'));\n}\nconst Internal = Symbol('NextURLInternal');\nexport class NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === 'object' && 'pathname' in baseOrOpts || typeof baseOrOpts === 'string') {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: ''\n        };\n        this.analyze();\n    }\n    analyze() {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig, _this_Internal_domainLocale, _this_Internal_options_nextConfig_i18n1, _this_Internal_options_nextConfig1;\n        const info = getNextPathnameInfo(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE,\n            i18nProvider: this[Internal].options.i18nProvider\n        });\n        const hostname = getHostname(this[Internal].url, this[Internal].options.headers);\n        this[Internal].domainLocale = this[Internal].options.i18nProvider ? this[Internal].options.i18nProvider.detectDomainLocale(hostname) : detectDomainLocale((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.domains, hostname);\n        const defaultLocale = ((_this_Internal_domainLocale = this[Internal].domainLocale) == null ? void 0 : _this_Internal_domainLocale.defaultLocale) || ((_this_Internal_options_nextConfig1 = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n1 = _this_Internal_options_nextConfig1.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n1.defaultLocale);\n        this[Internal].url.pathname = info.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = info.basePath ?? '';\n        this[Internal].buildId = info.buildId;\n        this[Internal].locale = info.locale ?? defaultLocale;\n        this[Internal].trailingSlash = info.trailingSlash;\n    }\n    formatPathname() {\n        return formatNextPathnameInfo({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? '';\n    }\n    set locale(locale) {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig;\n        if (!this[Internal].locale || !((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.locales.includes(locale))) {\n            throw Object.defineProperty(new TypeError(`The NextURL configuration includes no locale \"${locale}\"`), \"__NEXT_ERROR_CODE\", {\n                value: \"E597\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyze();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith('/') ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for('edge-runtime.inspect.custom')]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n}\n\n//# sourceMappingURL=next-url.js.map","import { HTTPAccessErrorFallback } from './http-access-fallback/error-fallback'\n\nexport default function Forbidden() {\n  return (\n    <HTTPAccessErrorFallback\n      status={403}\n      message=\"This page could not be accessed.\"\n    />\n  )\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-dom.react-server.production.js');\n} else {\n  module.exports = require('./cjs/react-dom.react-server.development.js');\n}\n","import { pathHasPrefix } from '../shared/lib/router/utils/path-has-prefix'\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nexport function hasBasePath(path: string): boolean {\n  return pathHasPrefix(path, basePath)\n}\n","export const ENCODED_TAGS = {\n    // opening tags do not have the closing `>` since they can contain other attributes such as `<body className=''>`\n    OPENING: {\n        // <html\n        HTML: new Uint8Array([\n            60,\n            104,\n            116,\n            109,\n            108\n        ]),\n        // <body\n        BODY: new Uint8Array([\n            60,\n            98,\n            111,\n            100,\n            121\n        ])\n    },\n    CLOSED: {\n        // </head>\n        HEAD: new Uint8Array([\n            60,\n            47,\n            104,\n            101,\n            97,\n            100,\n            62\n        ]),\n        // </body>\n        BODY: new Uint8Array([\n            60,\n            47,\n            98,\n            111,\n            100,\n            121,\n            62\n        ]),\n        // </html>\n        HTML: new Uint8Array([\n            60,\n            47,\n            104,\n            116,\n            109,\n            108,\n            62\n        ]),\n        // </body></html>\n        BODY_AND_HTML: new Uint8Array([\n            60,\n            47,\n            98,\n            111,\n            100,\n            121,\n            62,\n            60,\n            47,\n            104,\n            116,\n            109,\n            108,\n            62\n        ])\n    }\n};\n\n//# sourceMappingURL=encodedTags.js.map","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import type { Key } from 'next/dist/compiled/path-to-regexp'\nimport { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport { regexpToFunction } from 'next/dist/compiled/path-to-regexp'\n\ninterface Options {\n  /**\n   * A transformer function that will be applied to the regexp generated\n   * from the provided path and path-to-regexp.\n   */\n  regexModifier?: (regex: string) => string\n  /**\n   * When true the function will remove all unnamed parameters\n   * from the matched parameters.\n   */\n  removeUnnamedParams?: boolean\n  /**\n   * When true the regexp won't allow an optional trailing delimiter\n   * to match.\n   */\n  strict?: boolean\n\n  /**\n   * When true the matcher will be case-sensitive, defaults to false\n   */\n  sensitive?: boolean\n}\n\nexport type PatchMatcher = (\n  pathname: string,\n  params?: Record<string, any>\n) => Record<string, any> | false\n\n/**\n * Generates a path matcher function for a given path and options based on\n * path-to-regexp. By default the match will be case insensitive, non strict\n * and delimited by `/`.\n */\nexport function getPathMatch(path: string, options?: Options): PatchMatcher {\n  const keys: Key[] = []\n  const regexp = pathToRegexp(path, keys, {\n    delimiter: '/',\n    sensitive:\n      typeof options?.sensitive === 'boolean' ? options.sensitive : false,\n    strict: options?.strict,\n  })\n\n  const matcher = regexpToFunction<Record<string, any>>(\n    options?.regexModifier\n      ? new RegExp(options.regexModifier(regexp.source), regexp.flags)\n      : regexp,\n    keys\n  )\n\n  /**\n   * A matcher function that will check if a given pathname matches the path\n   * given in the builder function. When the path does not match it will return\n   * `false` but if it does it will return an object with the matched params\n   * merged with the params provided in the second argument.\n   */\n  return (pathname, params) => {\n    // If no pathname is provided it's not a match.\n    if (typeof pathname !== 'string') return false\n\n    const match = matcher(pathname)\n\n    // If the path did not match `false` will be returned.\n    if (!match) return false\n\n    /**\n     * If unnamed params are not allowed they must be removed from\n     * the matched parameters. path-to-regexp uses \"string\" for named and\n     * \"number\" for unnamed parameters.\n     */\n    if (options?.removeUnnamedParams) {\n      for (const key of keys) {\n        if (typeof key.name === 'number') {\n          delete match.params[key.name]\n        }\n      }\n    }\n\n    return { ...params, ...match.params }\n  }\n}\n","'use client'\n\nimport React, { type JSX } from 'react'\nimport { useUntrackedPathname } from './navigation-untracked'\nimport { isNextRouterError } from './is-next-router-error'\nimport { handleHardNavError } from './nav-failure-handler'\n\nconst workAsyncStorage =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/work-async-storage.external') as typeof import('../../server/app-render/work-async-storage.external')\n      ).workAsyncStorage\n    : undefined\n\nconst styles = {\n  error: {\n    // https://github.com/sindresorhus/modern-normalize/blob/main/modern-normalize.css#L38-L52\n    fontFamily:\n      'system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"',\n    height: '100vh',\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    fontSize: '14px',\n    fontWeight: 400,\n    lineHeight: '28px',\n    margin: '0 8px',\n  },\n} as const\n\nexport type ErrorComponent = React.ComponentType<{\n  error: Error\n  // global-error, there's no `reset` function;\n  // regular error boundary, there's a `reset` function.\n  reset?: () => void\n}>\n\nexport interface ErrorBoundaryProps {\n  children?: React.ReactNode\n  errorComponent: ErrorComponent | undefined\n  errorStyles?: React.ReactNode | undefined\n  errorScripts?: React.ReactNode | undefined\n}\n\ninterface ErrorBoundaryHandlerProps extends ErrorBoundaryProps {\n  pathname: string | null\n  errorComponent: ErrorComponent\n}\n\ninterface ErrorBoundaryHandlerState {\n  error: Error | null\n  previousPathname: string | null\n}\n\n// if we are revalidating we want to re-throw the error so the\n// function crashes so we can maintain our previous cache\n// instead of caching the error page\nfunction HandleISRError({ error }: { error: any }) {\n  if (workAsyncStorage) {\n    const store = workAsyncStorage.getStore()\n    if (store?.isRevalidate || store?.isStaticGeneration) {\n      console.error(error)\n      throw error\n    }\n  }\n\n  return null\n}\n\nexport class ErrorBoundaryHandler extends React.Component<\n  ErrorBoundaryHandlerProps,\n  ErrorBoundaryHandlerState\n> {\n  constructor(props: ErrorBoundaryHandlerProps) {\n    super(props)\n    this.state = { error: null, previousPathname: this.props.pathname }\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    if (isNextRouterError(error)) {\n      // Re-throw if an expected internal Next.js router error occurs\n      // this means it should be handled by a different boundary (such as a NotFound boundary in a parent segment)\n      throw error\n    }\n\n    return { error }\n  }\n\n  static getDerivedStateFromProps(\n    props: ErrorBoundaryHandlerProps,\n    state: ErrorBoundaryHandlerState\n  ): ErrorBoundaryHandlerState | null {\n    const { error } = state\n\n    // if we encounter an error while\n    // a navigation is pending we shouldn't render\n    // the error boundary and instead should fallback\n    // to a hard navigation to attempt recovering\n    if (process.env.__NEXT_APP_NAV_FAIL_HANDLING) {\n      if (error && handleHardNavError(error)) {\n        // clear error so we don't render anything\n        return {\n          error: null,\n          previousPathname: props.pathname,\n        }\n      }\n    }\n\n    /**\n     * Handles reset of the error boundary when a navigation happens.\n     * Ensures the error boundary does not stay enabled when navigating to a new page.\n     * Approach of setState in render is safe as it checks the previous pathname and then overrides\n     * it as outlined in https://react.dev/reference/react/useState#storing-information-from-previous-renders\n     */\n    if (props.pathname !== state.previousPathname && state.error) {\n      return {\n        error: null,\n        previousPathname: props.pathname,\n      }\n    }\n    return {\n      error: state.error,\n      previousPathname: props.pathname,\n    }\n  }\n\n  reset = () => {\n    this.setState({ error: null })\n  }\n\n  // Explicit type is needed to avoid the generated `.d.ts` having a wide return type that could be specific to the `@types/react` version.\n  render(): React.ReactNode {\n    if (this.state.error) {\n      return (\n        <>\n          <HandleISRError error={this.state.error} />\n          {this.props.errorStyles}\n          {this.props.errorScripts}\n          <this.props.errorComponent\n            error={this.state.error}\n            reset={this.reset}\n          />\n        </>\n      )\n    }\n\n    return this.props.children\n  }\n}\n\nexport type GlobalErrorComponent = React.ComponentType<{\n  error: any\n}>\nexport function GlobalError({ error }: { error: any }) {\n  const digest: string | undefined = error?.digest\n  return (\n    <html id=\"__next_error__\">\n      <head></head>\n      <body>\n        <HandleISRError error={error} />\n        <div style={styles.error}>\n          <div>\n            <h2 style={styles.text}>\n              Application error: a {digest ? 'server' : 'client'}-side exception\n              has occurred while loading {window.location.hostname} (see the{' '}\n              {digest ? 'server logs' : 'browser console'} for more\n              information).\n            </h2>\n            {digest ? <p style={styles.text}>{`Digest: ${digest}`}</p> : null}\n          </div>\n        </div>\n      </body>\n    </html>\n  )\n}\n\n// Exported so that the import signature in the loaders can be identical to user\n// supplied custom global error signatures.\nexport default GlobalError\n\n/**\n * Handles errors through `getDerivedStateFromError`.\n * Renders the provided error component and provides a way to `reset` the error boundary state.\n */\n\n/**\n * Renders error boundary with the provided \"errorComponent\" property as the fallback.\n * If no \"errorComponent\" property is provided it renders the children without an error boundary.\n */\nexport function ErrorBoundary({\n  errorComponent,\n  errorStyles,\n  errorScripts,\n  children,\n}: ErrorBoundaryProps & {\n  children: React.ReactNode\n}): JSX.Element {\n  // When we're rendering the missing params shell, this will return null. This\n  // is because we won't be rendering any not found boundaries or error\n  // boundaries for the missing params shell. When this runs on the client\n  // (where these errors can occur), we will get the correct pathname.\n  const pathname = useUntrackedPathname()\n  if (errorComponent) {\n    return (\n      <ErrorBoundaryHandler\n        pathname={pathname}\n        errorComponent={errorComponent}\n        errorStyles={errorStyles}\n        errorScripts={errorScripts}\n      >\n        {children}\n      </ErrorBoundaryHandler>\n    )\n  }\n\n  return <>{children}</>\n}\n","export const NEXT_QUERY_PARAM_PREFIX = 'nxtP';\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI';\nexport const MATCHED_PATH_HEADER = 'x-matched-path';\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate';\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = 'x-prerender-revalidate-if-generated';\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc';\nexport const RSC_SEGMENTS_DIR_SUFFIX = '.segments';\nexport const RSC_SEGMENT_SUFFIX = '.segment.rsc';\nexport const RSC_SUFFIX = '.rsc';\nexport const ACTION_SUFFIX = '.action';\nexport const NEXT_DATA_SUFFIX = '.json';\nexport const NEXT_META_SUFFIX = '.meta';\nexport const NEXT_BODY_SUFFIX = '.body';\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags';\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags';\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = 'x-next-revalidate-tag-token';\nexport const NEXT_RESUME_HEADER = 'next-resume';\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 128;\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256;\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_';\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000;\n// in seconds, represents revalidate=false. I.e. never revaliate.\n// We use this value since it can be represented as a V8 SMI for optimal performance.\n// It can also be serialized as JSON if it ever leaks accidentally as an actual value.\nexport const INFINITE_CACHE = 0xfffffffe;\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware';\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation';\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages';\nexport const DOT_NEXT_ALIAS = 'private-dot-next';\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir';\nexport const APP_DIR_ALIAS = 'private-next-app-dir';\nexport const RSC_MOD_REF_PROXY_ALIAS = 'private-next-rsc-mod-ref-proxy';\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate';\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference';\nexport const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper';\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption';\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS = 'private-next-rsc-action-client-wrapper';\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;\nexport const GSP_NO_RETURNED_VALUE = 'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?';\nexport const GSSP_NO_RETURNED_VALUE = 'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?';\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR = 'The `unstable_revalidate` property is available for general use.\\n' + 'Please use `revalidate` instead.';\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;\nexport const ESLINT_DEFAULT_DIRS = [\n    'app',\n    'pages',\n    'components',\n    'lib',\n    'src'\n];\nexport const SERVER_RUNTIME = {\n    edge: 'edge',\n    experimentalEdge: 'experimental-edge',\n    nodejs: 'nodejs'\n};\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */ const WEBPACK_LAYERS_NAMES = {\n    /**\n   * The layer for the shared code between the client and server bundles.\n   */ shared: 'shared',\n    /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes and metadata routes.\n   */ reactServerComponents: 'rsc',\n    /**\n   * Server Side Rendering layer for app (ssr).\n   */ serverSideRendering: 'ssr',\n    /**\n   * The browser client bundle layer for actions.\n   */ actionBrowser: 'action-browser',\n    /**\n   * The Node.js bundle layer for the API routes.\n   */ apiNode: 'api-node',\n    /**\n   * The Edge Lite bundle layer for the API routes.\n   */ apiEdge: 'api-edge',\n    /**\n   * The layer for the middleware code.\n   */ middleware: 'middleware',\n    /**\n   * The layer for the instrumentation hooks.\n   */ instrument: 'instrument',\n    /**\n   * The layer for assets on the edge.\n   */ edgeAsset: 'edge-asset',\n    /**\n   * The browser client bundle layer for App directory.\n   */ appPagesBrowser: 'app-pages-browser',\n    /**\n   * The browser client bundle layer for Pages directory.\n   */ pagesDirBrowser: 'pages-dir-browser',\n    /**\n   * The Edge Lite bundle layer for Pages directory.\n   */ pagesDirEdge: 'pages-dir-edge',\n    /**\n   * The Node.js bundle layer for Pages directory.\n   */ pagesDirNode: 'pages-dir-node'\n};\nconst WEBPACK_LAYERS = {\n    ...WEBPACK_LAYERS_NAMES,\n    GROUP: {\n        builtinReact: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser\n        ],\n        serverOnly: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.instrument,\n            WEBPACK_LAYERS_NAMES.middleware\n        ],\n        neutralTarget: [\n            // pages api\n            WEBPACK_LAYERS_NAMES.apiNode,\n            WEBPACK_LAYERS_NAMES.apiEdge\n        ],\n        clientOnly: [\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser\n        ],\n        bundled: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser,\n            WEBPACK_LAYERS_NAMES.shared,\n            WEBPACK_LAYERS_NAMES.instrument,\n            WEBPACK_LAYERS_NAMES.middleware\n        ],\n        appPages: [\n            // app router pages and layouts\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser,\n            WEBPACK_LAYERS_NAMES.actionBrowser\n        ]\n    }\n};\nconst WEBPACK_RESOURCE_QUERIES = {\n    edgeSSREntry: '__next_edge_ssr_entry__',\n    metadata: '__next_metadata__',\n    metadataRoute: '__next_metadata_route__',\n    metadataImageMeta: '__next_metadata_image_meta__'\n};\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES };\n\n//# sourceMappingURL=constants.js.map","import { bold, green, magenta, red, yellow, white } from '../../lib/picocolors';\nimport { LRUCache } from '../../server/lib/lru-cache';\nexport const prefixes = {\n    wait: white(bold('○')),\n    error: red(bold('⨯')),\n    warn: yellow(bold('⚠')),\n    ready: '▲',\n    info: white(bold(' ')),\n    event: green(bold('✓')),\n    trace: magenta(bold('»'))\n};\nconst LOGGING_METHOD = {\n    log: 'log',\n    warn: 'warn',\n    error: 'error'\n};\nfunction prefixedLog(prefixType, ...message) {\n    if ((message[0] === '' || message[0] === undefined) && message.length === 1) {\n        message.shift();\n    }\n    const consoleMethod = prefixType in LOGGING_METHOD ? LOGGING_METHOD[prefixType] : 'log';\n    const prefix = prefixes[prefixType];\n    // If there's no message, don't print the prefix but a new line\n    if (message.length === 0) {\n        console[consoleMethod]('');\n    } else {\n        // Ensure if there's ANSI escape codes it's concatenated into one string.\n        // Chrome DevTool can only handle color if it's in one string.\n        if (message.length === 1 && typeof message[0] === 'string') {\n            console[consoleMethod](' ' + prefix + ' ' + message[0]);\n        } else {\n            console[consoleMethod](' ' + prefix, ...message);\n        }\n    }\n}\nexport function bootstrap(...message) {\n    // logging format: ' <prefix> <message>'\n    // e.g. ' ✓ Compiled successfully'\n    // Add spaces to align with the indent of other logs\n    console.log('   ' + message.join(' '));\n}\nexport function wait(...message) {\n    prefixedLog('wait', ...message);\n}\nexport function error(...message) {\n    prefixedLog('error', ...message);\n}\nexport function warn(...message) {\n    prefixedLog('warn', ...message);\n}\nexport function ready(...message) {\n    prefixedLog('ready', ...message);\n}\nexport function info(...message) {\n    prefixedLog('info', ...message);\n}\nexport function event(...message) {\n    prefixedLog('event', ...message);\n}\nexport function trace(...message) {\n    prefixedLog('trace', ...message);\n}\nconst warnOnceCache = new LRUCache(10000, (value)=>value.length);\nexport function warnOnce(...message) {\n    const key = message.join(' ');\n    if (!warnOnceCache.has(key)) {\n        warnOnceCache.set(key, key);\n        warn(...message);\n    }\n}\n\n//# sourceMappingURL=log.js.map","/**\n * Entry point to the Segment Cache implementation.\n *\n * All code related to the Segment Cache lives `segment-cache-impl` directory.\n * Callers access it through this indirection.\n *\n * This is to ensure the code is dead code eliminated from the bundle if the\n * flag is disabled.\n *\n * TODO: This is super tedious. Since experimental flags are an essential part\n * of our workflow, we should establish a better pattern for dead code\n * elimination. Ideally it would be done at the bundler level, like how React's\n * build process works. In the React repo, you don't even need to add any extra\n * configuration per experiment — if the code is not reachable, it gets stripped\n * from the build automatically by Rollup. Or, shorter term, we could stub out\n * experimental modules at build time by updating the build config, i.e. a more\n * automated version of what I'm doing manually in this file.\n */\n\nexport type { NavigationResult } from './segment-cache-impl/navigation'\nexport type { PrefetchTask } from './segment-cache-impl/scheduler'\n\nconst notEnabled: any = () => {\n  throw new Error(\n    'Segment Cache experiment is not enabled. This is a bug in Next.js.'\n  )\n}\n\nexport const prefetch: typeof import('./segment-cache-impl/prefetch').prefetch =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return require('./segment-cache-impl/prefetch').prefetch(...args)\n      }\n    : notEnabled\n\nexport const navigate: typeof import('./segment-cache-impl/navigation').navigate =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return require('./segment-cache-impl/navigation').navigate(...args)\n      }\n    : notEnabled\n\nexport const revalidateEntireCache: typeof import('./segment-cache-impl/cache').revalidateEntireCache =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return require('./segment-cache-impl/cache').revalidateEntireCache(\n          ...args\n        )\n      }\n    : notEnabled\n\nexport const getCurrentCacheVersion: typeof import('./segment-cache-impl/cache').getCurrentCacheVersion =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return require('./segment-cache-impl/cache').getCurrentCacheVersion(\n          ...args\n        )\n      }\n    : notEnabled\n\nexport const schedulePrefetchTask: typeof import('./segment-cache-impl/scheduler').schedulePrefetchTask =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return require('./segment-cache-impl/scheduler').schedulePrefetchTask(\n          ...args\n        )\n      }\n    : notEnabled\n\nexport const cancelPrefetchTask: typeof import('./segment-cache-impl/scheduler').cancelPrefetchTask =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return require('./segment-cache-impl/scheduler').cancelPrefetchTask(\n          ...args\n        )\n      }\n    : notEnabled\n\nexport const reschedulePrefetchTask: typeof import('./segment-cache-impl/scheduler').reschedulePrefetchTask =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return require('./segment-cache-impl/scheduler').reschedulePrefetchTask(\n          ...args\n        )\n      }\n    : notEnabled\n\nexport const createCacheKey: typeof import('./segment-cache-impl/cache-key').createCacheKey =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return require('./segment-cache-impl/cache-key').createCacheKey(...args)\n      }\n    : notEnabled\n\n/**\n * Below are public constants. They're small enough that we don't need to\n * DCE them.\n */\n\nexport const enum NavigationResultTag {\n  MPA,\n  Success,\n  NoOp,\n  Async,\n}\n\n/**\n * The priority of the prefetch task. Higher numbers are higher priority.\n */\nexport const enum PrefetchPriority {\n  /**\n   * Assigned to any visible link that was hovered/touched at some point. This\n   * is not removed on mouse exit, because a link that was momentarily\n   * hovered is more likely to to be interacted with than one that was not.\n   */\n  Intent = 2,\n  /**\n   * The default priority for prefetch tasks.\n   */\n  Default = 1,\n  /**\n   * Assigned to tasks when they spawn non-blocking background work, like\n   * revalidating a partially cached entry to see if more data is available.\n   */\n  Background = 0,\n}\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies,\n  parseCookie: () => parseCookie,\n  parseSetCookie: () => parseSetCookie,\n  stringifyCookie: () => stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction stringifyCookie(c) {\n  var _a;\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n    \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n    \"partitioned\" in c && c.partitioned && \"Partitioned\",\n    \"priority\" in c && c.priority && `Priority=${c.priority}`\n  ].filter(Boolean);\n  const stringified = `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}`;\n  return attrs.length === 0 ? stringified : `${stringified}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    if (splitAt === -1) {\n      map.set(pair, \"true\");\n      continue;\n    }\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookie(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookie(setCookie);\n  const {\n    domain,\n    expires,\n    httponly,\n    maxage,\n    path,\n    samesite,\n    secure,\n    partitioned,\n    priority\n  } = Object.fromEntries(\n    attributes.map(([key, value2]) => [\n      key.toLowerCase().replace(/-/g, \"\"),\n      value2\n    ])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true },\n    ...priority && { priority: parsePriority(priority) },\n    ...partitioned && { partitioned: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\"low\", \"medium\", \"high\"];\nfunction parsePriority(string) {\n  string = string.toLowerCase();\n  return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookie(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  /**\n   * The amount of cookies received from the client\n   */\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => stringifyCookie(value2)).join(\"; \")\n    );\n    return this;\n  }\n  /**\n   * Delete the cookies matching the passed name or names in the request.\n   */\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => stringifyCookie(value)).join(\"; \")\n    );\n    return result;\n  }\n  /**\n   * Delete all the cookies in the cookies in the request.\n   */\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  /**\n   * Format the cookies in the request as a string for logging\n   */\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a, _b, _c;\n    this._headers = responseHeaders;\n    const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookie(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */\n  delete(...args) {\n    const [name, options] = typeof args[0] === \"string\" ? [args[0]] : [args[0].name, args[0]];\n    return this.set({ ...options, name, value: \"\", expires: /* @__PURE__ */ new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(stringifyCookie).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = stringifyCookie(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (typeof cookie.expires === \"number\") {\n    cookie.expires = new Date(cookie.expires);\n  }\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RequestCookies,\n  ResponseCookies,\n  parseCookie,\n  parseSetCookie,\n  stringifyCookie\n});\n","export const NEXT_QUERY_PARAM_PREFIX = 'nxtP';\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI';\nexport const MATCHED_PATH_HEADER = 'x-matched-path';\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate';\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = 'x-prerender-revalidate-if-generated';\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc';\nexport const RSC_SEGMENTS_DIR_SUFFIX = '.segments';\nexport const RSC_SEGMENT_SUFFIX = '.segment.rsc';\nexport const RSC_SUFFIX = '.rsc';\nexport const ACTION_SUFFIX = '.action';\nexport const NEXT_DATA_SUFFIX = '.json';\nexport const NEXT_META_SUFFIX = '.meta';\nexport const NEXT_BODY_SUFFIX = '.body';\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags';\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags';\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = 'x-next-revalidate-tag-token';\nexport const NEXT_RESUME_HEADER = 'next-resume';\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 128;\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256;\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_';\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000;\n// in seconds, represents revalidate=false. I.e. never revaliate.\n// We use this value since it can be represented as a V8 SMI for optimal performance.\n// It can also be serialized as JSON if it ever leaks accidentally as an actual value.\nexport const INFINITE_CACHE = 0xfffffffe;\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware';\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation';\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages';\nexport const DOT_NEXT_ALIAS = 'private-dot-next';\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir';\nexport const APP_DIR_ALIAS = 'private-next-app-dir';\nexport const RSC_MOD_REF_PROXY_ALIAS = 'next/dist/build/webpack/loaders/next-flight-loader/module-proxy';\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate';\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference';\nexport const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper';\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption';\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS = 'private-next-rsc-action-client-wrapper';\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;\nexport const GSP_NO_RETURNED_VALUE = 'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?';\nexport const GSSP_NO_RETURNED_VALUE = 'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?';\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR = 'The `unstable_revalidate` property is available for general use.\\n' + 'Please use `revalidate` instead.';\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;\nexport const ESLINT_DEFAULT_DIRS = [\n    'app',\n    'pages',\n    'components',\n    'lib',\n    'src'\n];\nexport const SERVER_RUNTIME = {\n    edge: 'edge',\n    experimentalEdge: 'experimental-edge',\n    nodejs: 'nodejs'\n};\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */ const WEBPACK_LAYERS_NAMES = {\n    /**\n   * The layer for the shared code between the client and server bundles.\n   */ shared: 'shared',\n    /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes and metadata routes.\n   */ reactServerComponents: 'rsc',\n    /**\n   * Server Side Rendering layer for app (ssr).\n   */ serverSideRendering: 'ssr',\n    /**\n   * The browser client bundle layer for actions.\n   */ actionBrowser: 'action-browser',\n    /**\n   * The Node.js bundle layer for the API routes.\n   */ apiNode: 'api-node',\n    /**\n   * The Edge Lite bundle layer for the API routes.\n   */ apiEdge: 'api-edge',\n    /**\n   * The layer for the middleware code.\n   */ middleware: 'middleware',\n    /**\n   * The layer for the instrumentation hooks.\n   */ instrument: 'instrument',\n    /**\n   * The layer for assets on the edge.\n   */ edgeAsset: 'edge-asset',\n    /**\n   * The browser client bundle layer for App directory.\n   */ appPagesBrowser: 'app-pages-browser',\n    /**\n   * The browser client bundle layer for Pages directory.\n   */ pagesDirBrowser: 'pages-dir-browser',\n    /**\n   * The Edge Lite bundle layer for Pages directory.\n   */ pagesDirEdge: 'pages-dir-edge',\n    /**\n   * The Node.js bundle layer for Pages directory.\n   */ pagesDirNode: 'pages-dir-node'\n};\nconst WEBPACK_LAYERS = {\n    ...WEBPACK_LAYERS_NAMES,\n    GROUP: {\n        builtinReact: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser\n        ],\n        serverOnly: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.instrument,\n            WEBPACK_LAYERS_NAMES.middleware\n        ],\n        neutralTarget: [\n            // pages api\n            WEBPACK_LAYERS_NAMES.apiNode,\n            WEBPACK_LAYERS_NAMES.apiEdge\n        ],\n        clientOnly: [\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser\n        ],\n        bundled: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser,\n            WEBPACK_LAYERS_NAMES.shared,\n            WEBPACK_LAYERS_NAMES.instrument,\n            WEBPACK_LAYERS_NAMES.middleware\n        ],\n        appPages: [\n            // app router pages and layouts\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser,\n            WEBPACK_LAYERS_NAMES.actionBrowser\n        ]\n    }\n};\nconst WEBPACK_RESOURCE_QUERIES = {\n    edgeSSREntry: '__next_edge_ssr_entry__',\n    metadata: '__next_metadata__',\n    metadataRoute: '__next_metadata_route__',\n    metadataImageMeta: '__next_metadata_image_meta__'\n};\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES };\n\n//# sourceMappingURL=constants.js.map","'use client'\n\nimport type { ParsedUrlQuery } from 'querystring'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\nimport type { Params } from '../../server/request/params'\n\n/**\n * When the Page is a client component we send the params and searchParams to this client wrapper\n * where they are turned into dynamically tracked values before being passed to the actual Page component.\n *\n * additionally we may send promises representing the params and searchParams. We don't ever use these passed\n * values but it can be necessary for the sender to send a Promise that doesn't resolve in certain situations.\n * It is up to the caller to decide if the promises are needed.\n */\nexport function ClientPageRoot({\n  Component,\n  searchParams,\n  params,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  promises,\n}: {\n  Component: React.ComponentType<any>\n  searchParams: ParsedUrlQuery\n  params: Params\n  promises?: Array<Promise<any>>\n}) {\n  if (typeof window === 'undefined') {\n    const { workAsyncStorage } =\n      require('../../server/app-render/work-async-storage.external') as typeof import('../../server/app-render/work-async-storage.external')\n\n    let clientSearchParams: Promise<ParsedUrlQuery>\n    let clientParams: Promise<Params>\n    // We are going to instrument the searchParams prop with tracking for the\n    // appropriate context. We wrap differently in prerendering vs rendering\n    const store = workAsyncStorage.getStore()\n    if (!store) {\n      throw new InvariantError(\n        'Expected workStore to exist when handling searchParams in a client Page.'\n      )\n    }\n\n    const { createSearchParamsFromClient } =\n      require('../../server/request/search-params') as typeof import('../../server/request/search-params')\n    clientSearchParams = createSearchParamsFromClient(searchParams, store)\n\n    const { createParamsFromClient } =\n      require('../../server/request/params') as typeof import('../../server/request/params')\n    clientParams = createParamsFromClient(params, store)\n\n    return <Component params={clientParams} searchParams={clientSearchParams} />\n  } else {\n    const { createRenderSearchParamsFromClient } =\n      require('../request/search-params.browser') as typeof import('../request/search-params.browser')\n    const clientSearchParams = createRenderSearchParamsFromClient(searchParams)\n    const { createRenderParamsFromClient } =\n      require('../request/params.browser') as typeof import('../request/params.browser')\n    const clientParams = createRenderParamsFromClient(params)\n\n    return <Component params={clientParams} searchParams={clientSearchParams} />\n  }\n}\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","/* eslint-disable no-redeclare */ // FIXME: (wyattjoh) this is a temporary solution to allow us to pass data between bundled modules\nexport const NEXT_REQUEST_META = Symbol.for('NextInternalRequestMeta');\nexport function getRequestMeta(req, key) {\n    const meta = req[NEXT_REQUEST_META] || {};\n    return typeof key === 'string' ? meta[key] : meta;\n}\n/**\n * Sets the request metadata.\n *\n * @param req the request to set the metadata on\n * @param meta the metadata to set\n * @returns the mutated request metadata\n */ export function setRequestMeta(req, meta) {\n    req[NEXT_REQUEST_META] = meta;\n    return meta;\n}\n/**\n * Adds a value to the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to set\n * @param value the value to set\n * @returns the mutated request metadata\n */ export function addRequestMeta(request, key, value) {\n    const meta = getRequestMeta(request);\n    meta[key] = value;\n    return setRequestMeta(request, meta);\n}\n/**\n * Removes a key from the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to remove\n * @returns the mutated request metadata\n */ export function removeRequestMeta(request, key) {\n    const meta = getRequestMeta(request);\n    delete meta[key];\n    return setRequestMeta(request, meta);\n}\n\n//# sourceMappingURL=request-meta.js.map","const DYNAMIC_ERROR_CODE = 'DYNAMIC_SERVER_USAGE'\n\nexport class DynamicServerError extends Error {\n  digest: typeof DYNAMIC_ERROR_CODE = DYNAMIC_ERROR_CODE\n\n  constructor(public readonly description: string) {\n    super(`Dynamic server usage: ${description}`)\n  }\n}\n\nexport function isDynamicServerError(err: unknown): err is DynamicServerError {\n  if (\n    typeof err !== 'object' ||\n    err === null ||\n    !('digest' in err) ||\n    typeof err.digest !== 'string'\n  ) {\n    return false\n  }\n\n  return err.digest === DYNAMIC_ERROR_CODE\n}\n","import { CSSProperties } from 'react';\n\nexport type ToastType = 'success' | 'error' | 'loading' | 'blank' | 'custom';\nexport type ToastPosition =\n  | 'top-left'\n  | 'top-center'\n  | 'top-right'\n  | 'bottom-left'\n  | 'bottom-center'\n  | 'bottom-right';\n\nexport type Renderable = React.ReactElement | string | null;\n\nexport interface IconTheme {\n  primary: string;\n  secondary: string;\n}\n\nexport type ValueFunction<TValue, TArg> = (arg: TArg) => TValue;\nexport type ValueOrFunction<TValue, TArg> =\n  | TValue\n  | ValueFunction<TValue, TArg>;\n\nconst isFunction = <TValue, TArg>(\n  valOrFunction: ValueOrFunction<TValue, TArg>\n): valOrFunction is ValueFunction<TValue, TArg> =>\n  typeof valOrFunction === 'function';\n\nexport const resolveValue = <TValue, TArg>(\n  valOrFunction: ValueOrFunction<TValue, TArg>,\n  arg: TArg\n): TValue => (isFunction(valOrFunction) ? valOrFunction(arg) : valOrFunction);\n\nexport interface Toast {\n  type: ToastType;\n  id: string;\n  message: ValueOrFunction<Renderable, Toast>;\n  icon?: Renderable;\n  duration?: number;\n  pauseDuration: number;\n  position?: ToastPosition;\n  removeDelay?: number;\n\n  ariaProps: {\n    role: 'status' | 'alert';\n    'aria-live': 'assertive' | 'off' | 'polite';\n  };\n\n  style?: CSSProperties;\n  className?: string;\n  iconTheme?: IconTheme;\n\n  createdAt: number;\n  visible: boolean;\n  dismissed: boolean;\n  height?: number;\n}\n\nexport type ToastOptions = Partial<\n  Pick<\n    Toast,\n    | 'id'\n    | 'icon'\n    | 'duration'\n    | 'ariaProps'\n    | 'className'\n    | 'style'\n    | 'position'\n    | 'iconTheme'\n    | 'removeDelay'\n  >\n>;\n\nexport type DefaultToastOptions = ToastOptions & {\n  [key in ToastType]?: ToastOptions;\n};\n\nexport interface ToasterProps {\n  position?: ToastPosition;\n  toastOptions?: DefaultToastOptions;\n  reverseOrder?: boolean;\n  gutter?: number;\n  containerStyle?: React.CSSProperties;\n  containerClassName?: string;\n  children?: (toast: Toast) => React.ReactElement;\n}\n\nexport interface ToastWrapperProps {\n  id: string;\n  className?: string;\n  style?: React.CSSProperties;\n  onHeightUpdate: (id: string, height: number) => void;\n  children?: React.ReactNode;\n}\n","export const genId = (() => {\n  let count = 0;\n  return () => {\n    return (++count).toString();\n  };\n})();\n\nexport const prefersReducedMotion = (() => {\n  // Cache result\n  let shouldReduceMotion: boolean | undefined = undefined;\n\n  return () => {\n    if (shouldReduceMotion === undefined && typeof window !== 'undefined') {\n      const mediaQuery = matchMedia('(prefers-reduced-motion: reduce)');\n      shouldReduceMotion = !mediaQuery || mediaQuery.matches;\n    }\n    return shouldReduceMotion;\n  };\n})();\n","import { useEffect, useState, useRef } from 'react';\nimport { DefaultToastOptions, Toast, ToastType } from './types';\n\nconst TOAST_LIMIT = 20;\n\nexport enum ActionType {\n  ADD_TOAST,\n  UPDATE_TOAST,\n  UPSERT_TOAST,\n  DISMISS_TOAST,\n  REMOVE_TOAST,\n  START_PAUSE,\n  END_PAUSE,\n}\n\ntype Action =\n  | {\n      type: ActionType.ADD_TOAST;\n      toast: Toast;\n    }\n  | {\n      type: ActionType.UPSERT_TOAST;\n      toast: Toast;\n    }\n  | {\n      type: ActionType.UPDATE_TOAST;\n      toast: Partial<Toast>;\n    }\n  | {\n      type: ActionType.DISMISS_TOAST;\n      toastId?: string;\n    }\n  | {\n      type: ActionType.REMOVE_TOAST;\n      toastId?: string;\n    }\n  | {\n      type: ActionType.START_PAUSE;\n      time: number;\n    }\n  | {\n      type: ActionType.END_PAUSE;\n      time: number;\n    };\n\ninterface State {\n  toasts: Toast[];\n  pausedAt: number | undefined;\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case ActionType.ADD_TOAST:\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      };\n\n    case ActionType.UPDATE_TOAST:\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      };\n\n    case ActionType.UPSERT_TOAST:\n      const { toast } = action;\n      return reducer(state, {\n        type: state.toasts.find((t) => t.id === toast.id)\n          ? ActionType.UPDATE_TOAST\n          : ActionType.ADD_TOAST,\n        toast,\n      });\n\n    case ActionType.DISMISS_TOAST:\n      const { toastId } = action;\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                dismissed: true,\n                visible: false,\n              }\n            : t\n        ),\n      };\n    case ActionType.REMOVE_TOAST:\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      };\n\n    case ActionType.START_PAUSE:\n      return {\n        ...state,\n        pausedAt: action.time,\n      };\n\n    case ActionType.END_PAUSE:\n      const diff = action.time - (state.pausedAt || 0);\n\n      return {\n        ...state,\n        pausedAt: undefined,\n        toasts: state.toasts.map((t) => ({\n          ...t,\n          pauseDuration: t.pauseDuration + diff,\n        })),\n      };\n  }\n};\n\nconst listeners: Array<(state: State) => void> = [];\n\nlet memoryState: State = { toasts: [], pausedAt: undefined };\n\nexport const dispatch = (action: Action) => {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach((listener) => {\n    listener(memoryState);\n  });\n};\n\nexport const defaultTimeouts: {\n  [key in ToastType]: number;\n} = {\n  blank: 4000,\n  error: 4000,\n  success: 2000,\n  loading: Infinity,\n  custom: 4000,\n};\n\nexport const useStore = (toastOptions: DefaultToastOptions = {}): State => {\n  const [state, setState] = useState<State>(memoryState);\n  const initial = useRef(memoryState);\n\n  // TODO: Switch to useSyncExternalStore when targeting React 18+\n  useEffect(() => {\n    if (initial.current !== memoryState) {\n      setState(memoryState);\n    }\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, []);\n\n  const mergedToasts = state.toasts.map((t) => ({\n    ...toastOptions,\n    ...toastOptions[t.type],\n    ...t,\n    removeDelay:\n      t.removeDelay ||\n      toastOptions[t.type]?.removeDelay ||\n      toastOptions?.removeDelay,\n    duration:\n      t.duration ||\n      toastOptions[t.type]?.duration ||\n      toastOptions?.duration ||\n      defaultTimeouts[t.type],\n    style: {\n      ...toastOptions.style,\n      ...toastOptions[t.type]?.style,\n      ...t.style,\n    },\n  }));\n\n  return {\n    ...state,\n    toasts: mergedToasts,\n  };\n};\n","import {\n  Renderable,\n  Toast,\n  ToastOptions,\n  ToastType,\n  DefaultToastOptions,\n  ValueOrFunction,\n  resolveValue,\n} from './types';\nimport { genId } from './utils';\nimport { dispatch, ActionType } from './store';\n\ntype Message = ValueOrFunction<Renderable, Toast>;\n\ntype ToastHandler = (message: Message, options?: ToastOptions) => string;\n\nconst createToast = (\n  message: Message,\n  type: ToastType = 'blank',\n  opts?: ToastOptions\n): Toast => ({\n  createdAt: Date.now(),\n  visible: true,\n  dismissed: false,\n  type,\n  ariaProps: {\n    role: 'status',\n    'aria-live': 'polite',\n  },\n  message,\n  pauseDuration: 0,\n  ...opts,\n  id: opts?.id || genId(),\n});\n\nconst createHandler =\n  (type?: ToastType): ToastHandler =>\n  (message, options) => {\n    const toast = createToast(message, type, options);\n    dispatch({ type: ActionType.UPSERT_TOAST, toast });\n    return toast.id;\n  };\n\nconst toast = (message: Message, opts?: ToastOptions) =>\n  createHandler('blank')(message, opts);\n\ntoast.error = createHandler('error');\ntoast.success = createHandler('success');\ntoast.loading = createHandler('loading');\ntoast.custom = createHandler('custom');\n\ntoast.dismiss = (toastId?: string) => {\n  dispatch({\n    type: ActionType.DISMISS_TOAST,\n    toastId,\n  });\n};\n\ntoast.remove = (toastId?: string) =>\n  dispatch({ type: ActionType.REMOVE_TOAST, toastId });\n\ntoast.promise = <T>(\n  promise: Promise<T> | (() => Promise<T>),\n  msgs: {\n    loading: Renderable;\n    success?: ValueOrFunction<Renderable, T>;\n    error?: ValueOrFunction<Renderable, any>;\n  },\n  opts?: DefaultToastOptions\n) => {\n  const id = toast.loading(msgs.loading, { ...opts, ...opts?.loading });\n\n  if (typeof promise === 'function') {\n    promise = promise();\n  }\n\n  promise\n    .then((p) => {\n      const successMessage = msgs.success\n        ? resolveValue(msgs.success, p)\n        : undefined;\n\n      if (successMessage) {\n        toast.success(successMessage, {\n          id,\n          ...opts,\n          ...opts?.success,\n        });\n      } else {\n        toast.dismiss(id);\n      }\n      return p;\n    })\n    .catch((e) => {\n      const errorMessage = msgs.error ? resolveValue(msgs.error, e) : undefined;\n\n      if (errorMessage) {\n        toast.error(errorMessage, {\n          id,\n          ...opts,\n          ...opts?.error,\n        });\n      } else {\n        toast.dismiss(id);\n      }\n    });\n\n  return promise;\n};\n\nexport { toast };\n","import { useEffect, useCallback } from 'react';\nimport { dispatch, ActionType, useStore } from './store';\nimport { toast } from './toast';\nimport { DefaultToastOptions, Toast, ToastPosition } from './types';\n\nconst updateHeight = (toastId: string, height: number) => {\n  dispatch({\n    type: ActionType.UPDATE_TOAST,\n    toast: { id: toastId, height },\n  });\n};\nconst startPause = () => {\n  dispatch({\n    type: ActionType.START_PAUSE,\n    time: Date.now(),\n  });\n};\n\nconst toastTimeouts = new Map<Toast['id'], ReturnType<typeof setTimeout>>();\n\nexport const REMOVE_DELAY = 1000;\n\nconst addToRemoveQueue = (toastId: string, removeDelay = REMOVE_DELAY) => {\n  if (toastTimeouts.has(toastId)) {\n    return;\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId);\n    dispatch({\n      type: ActionType.REMOVE_TOAST,\n      toastId: toastId,\n    });\n  }, removeDelay);\n\n  toastTimeouts.set(toastId, timeout);\n};\n\nexport const useToaster = (toastOptions?: DefaultToastOptions) => {\n  const { toasts, pausedAt } = useStore(toastOptions);\n\n  useEffect(() => {\n    if (pausedAt) {\n      return;\n    }\n\n    const now = Date.now();\n    const timeouts = toasts.map((t) => {\n      if (t.duration === Infinity) {\n        return;\n      }\n\n      const durationLeft =\n        (t.duration || 0) + t.pauseDuration - (now - t.createdAt);\n\n      if (durationLeft < 0) {\n        if (t.visible) {\n          toast.dismiss(t.id);\n        }\n        return;\n      }\n      return setTimeout(() => toast.dismiss(t.id), durationLeft);\n    });\n\n    return () => {\n      timeouts.forEach((timeout) => timeout && clearTimeout(timeout));\n    };\n  }, [toasts, pausedAt]);\n\n  const endPause = useCallback(() => {\n    if (pausedAt) {\n      dispatch({ type: ActionType.END_PAUSE, time: Date.now() });\n    }\n  }, [pausedAt]);\n\n  const calculateOffset = useCallback(\n    (\n      toast: Toast,\n      opts?: {\n        reverseOrder?: boolean;\n        gutter?: number;\n        defaultPosition?: ToastPosition;\n      }\n    ) => {\n      const { reverseOrder = false, gutter = 8, defaultPosition } = opts || {};\n\n      const relevantToasts = toasts.filter(\n        (t) =>\n          (t.position || defaultPosition) ===\n            (toast.position || defaultPosition) && t.height\n      );\n      const toastIndex = relevantToasts.findIndex((t) => t.id === toast.id);\n      const toastsBefore = relevantToasts.filter(\n        (toast, i) => i < toastIndex && toast.visible\n      ).length;\n\n      const offset = relevantToasts\n        .filter((t) => t.visible)\n        .slice(...(reverseOrder ? [toastsBefore + 1] : [0, toastsBefore]))\n        .reduce((acc, t) => acc + (t.height || 0) + gutter, 0);\n\n      return offset;\n    },\n    [toasts]\n  );\n\n  useEffect(() => {\n    // Add dismissed toasts to remove queue\n    toasts.forEach((toast) => {\n      if (toast.dismissed) {\n        addToRemoveQueue(toast.id, toast.removeDelay);\n      } else {\n        // If toast becomes visible again, remove it from the queue\n        const timeout = toastTimeouts.get(toast.id);\n        if (timeout) {\n          clearTimeout(timeout);\n          toastTimeouts.delete(toast.id);\n        }\n      }\n    });\n  }, [toasts]);\n\n  return {\n    toasts,\n    handlers: {\n      updateHeight,\n      startPause,\n      endPause,\n      calculateOffset,\n    },\n  };\n};\n","import * as React from 'react';\nimport { styled, keyframes } from 'goober';\n\nimport { Toast, ToastPosition, resolveValue, Renderable } from '../core/types';\nimport { ToastIcon } from './toast-icon';\nimport { prefersReducedMotion } from '../core/utils';\n\nconst enterAnimation = (factor: number) => `\n0% {transform: translate3d(0,${factor * -200}%,0) scale(.6); opacity:.5;}\n100% {transform: translate3d(0,0,0) scale(1); opacity:1;}\n`;\n\nconst exitAnimation = (factor: number) => `\n0% {transform: translate3d(0,0,-1px) scale(1); opacity:1;}\n100% {transform: translate3d(0,${factor * -150}%,-1px) scale(.6); opacity:0;}\n`;\n\nconst fadeInAnimation = `0%{opacity:0;} 100%{opacity:1;}`;\nconst fadeOutAnimation = `0%{opacity:1;} 100%{opacity:0;}`;\n\nconst ToastBarBase = styled('div')`\n  display: flex;\n  align-items: center;\n  background: #fff;\n  color: #363636;\n  line-height: 1.3;\n  will-change: transform;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);\n  max-width: 350px;\n  pointer-events: auto;\n  padding: 8px 10px;\n  border-radius: 8px;\n`;\n\nconst Message = styled('div')`\n  display: flex;\n  justify-content: center;\n  margin: 4px 10px;\n  color: inherit;\n  flex: 1 1 auto;\n  white-space: pre-line;\n`;\n\ninterface ToastBarProps {\n  toast: Toast;\n  position?: ToastPosition;\n  style?: React.CSSProperties;\n  children?: (components: {\n    icon: Renderable;\n    message: Renderable;\n  }) => Renderable;\n}\n\nconst getAnimationStyle = (\n  position: ToastPosition,\n  visible: boolean\n): React.CSSProperties => {\n  const top = position.includes('top');\n  const factor = top ? 1 : -1;\n\n  const [enter, exit] = prefersReducedMotion()\n    ? [fadeInAnimation, fadeOutAnimation]\n    : [enterAnimation(factor), exitAnimation(factor)];\n\n  return {\n    animation: visible\n      ? `${keyframes(enter)} 0.35s cubic-bezier(.21,1.02,.73,1) forwards`\n      : `${keyframes(exit)} 0.4s forwards cubic-bezier(.06,.71,.55,1)`,\n  };\n};\n\nexport const ToastBar: React.FC<ToastBarProps> = React.memo(\n  ({ toast, position, style, children }) => {\n    const animationStyle: React.CSSProperties = toast.height\n      ? getAnimationStyle(\n          toast.position || position || 'top-center',\n          toast.visible\n        )\n      : { opacity: 0 };\n\n    const icon = <ToastIcon toast={toast} />;\n    const message = (\n      <Message {...toast.ariaProps}>\n        {resolveValue(toast.message, toast)}\n      </Message>\n    );\n\n    return (\n      <ToastBarBase\n        className={toast.className}\n        style={{\n          ...animationStyle,\n          ...style,\n          ...toast.style,\n        }}\n      >\n        {typeof children === 'function' ? (\n          children({\n            icon,\n            message,\n          })\n        ) : (\n          <>\n            {icon}\n            {message}\n          </>\n        )}\n      </ToastBarBase>\n    );\n  }\n);\n","import * as React from 'react';\nimport { styled, keyframes } from 'goober';\n\nimport { Toast } from '../core/types';\nimport { ErrorIcon, ErrorTheme } from './error';\nimport { LoaderIcon, LoaderTheme } from './loader';\nimport { CheckmarkIcon, CheckmarkTheme } from './checkmark';\n\nconst StatusWrapper = styled('div')`\n  position: absolute;\n`;\n\nconst IndicatorWrapper = styled('div')`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 20px;\n  min-height: 20px;\n`;\n\nconst enter = keyframes`\nfrom {\n  transform: scale(0.6);\n  opacity: 0.4;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}`;\n\nexport const AnimatedIconWrapper = styled('div')`\n  position: relative;\n  transform: scale(0.6);\n  opacity: 0.4;\n  min-width: 20px;\n  animation: ${enter} 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n`;\n\nexport type IconThemes = Partial<{\n  success: CheckmarkTheme;\n  error: ErrorTheme;\n  loading: LoaderTheme;\n}>;\n\nexport const ToastIcon: React.FC<{\n  toast: Toast;\n}> = ({ toast }) => {\n  const { icon, type, iconTheme } = toast;\n  if (icon !== undefined) {\n    if (typeof icon === 'string') {\n      return <AnimatedIconWrapper>{icon}</AnimatedIconWrapper>;\n    } else {\n      return icon;\n    }\n  }\n\n  if (type === 'blank') {\n    return null;\n  }\n\n  return (\n    <IndicatorWrapper>\n      <LoaderIcon {...iconTheme} />\n      {type !== 'loading' && (\n        <StatusWrapper>\n          {type === 'error' ? (\n            <ErrorIcon {...iconTheme} />\n          ) : (\n            <CheckmarkIcon {...iconTheme} />\n          )}\n        </StatusWrapper>\n      )}\n    </IndicatorWrapper>\n  );\n};\n","import { styled, keyframes } from 'goober';\n\nconst circleAnimation = keyframes`\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n transform: scale(1) rotate(45deg);\n  opacity: 1;\n}`;\n\nconst firstLineAnimation = keyframes`\nfrom {\n  transform: scale(0);\n  opacity: 0;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}`;\n\nconst secondLineAnimation = keyframes`\nfrom {\n  transform: scale(0) rotate(90deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(90deg);\n\topacity: 1;\n}`;\n\nexport interface ErrorTheme {\n  primary?: string;\n  secondary?: string;\n}\n\nexport const ErrorIcon = styled('div')<ErrorTheme>`\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ${(p) => p.primary || '#ff4b4b'};\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: ${circleAnimation} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n\n  &:after,\n  &:before {\n    content: '';\n    animation: ${firstLineAnimation} 0.15s ease-out forwards;\n    animation-delay: 150ms;\n    position: absolute;\n    border-radius: 3px;\n    opacity: 0;\n    background: ${(p) => p.secondary || '#fff'};\n    bottom: 9px;\n    left: 4px;\n    height: 2px;\n    width: 12px;\n  }\n\n  &:before {\n    animation: ${secondLineAnimation} 0.15s ease-out forwards;\n    animation-delay: 180ms;\n    transform: rotate(90deg);\n  }\n`;\n","import { styled, keyframes } from 'goober';\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nexport interface LoaderTheme {\n  primary?: string;\n  secondary?: string;\n}\n\nexport const LoaderIcon = styled('div')<LoaderTheme>`\n  width: 12px;\n  height: 12px;\n  box-sizing: border-box;\n  border: 2px solid;\n  border-radius: 100%;\n  border-color: ${(p) => p.secondary || '#e0e0e0'};\n  border-right-color: ${(p) => p.primary || '#616161'};\n  animation: ${rotate} 1s linear infinite;\n`;\n","import { styled, keyframes } from 'goober';\n\nconst circleAnimation = keyframes`\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(45deg);\n\topacity: 1;\n}`;\n\nconst checkmarkAnimation = keyframes`\n0% {\n\theight: 0;\n\twidth: 0;\n\topacity: 0;\n}\n40% {\n  height: 0;\n\twidth: 6px;\n\topacity: 1;\n}\n100% {\n  opacity: 1;\n  height: 10px;\n}`;\n\nexport interface CheckmarkTheme {\n  primary?: string;\n  secondary?: string;\n}\n\nexport const CheckmarkIcon = styled('div')<CheckmarkTheme>`\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ${(p) => p.primary || '#61d345'};\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: ${circleAnimation} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n  &:after {\n    content: '';\n    box-sizing: border-box;\n    animation: ${checkmarkAnimation} 0.2s ease-out forwards;\n    opacity: 0;\n    animation-delay: 200ms;\n    position: absolute;\n    border-right: 2px solid;\n    border-bottom: 2px solid;\n    border-color: ${(p) => p.secondary || '#fff'};\n    bottom: 6px;\n    left: 6px;\n    height: 10px;\n    width: 6px;\n  }\n`;\n","import { css, setup } from 'goober';\nimport * as React from 'react';\nimport {\n  resolveValue,\n  ToasterProps,\n  ToastPosition,\n  ToastWrapperProps,\n} from '../core/types';\nimport { useToaster } from '../core/use-toaster';\nimport { prefersReducedMotion } from '../core/utils';\nimport { ToastBar } from './toast-bar';\n\nsetup(React.createElement);\n\nconst ToastWrapper = ({\n  id,\n  className,\n  style,\n  onHeightUpdate,\n  children,\n}: ToastWrapperProps) => {\n  const ref = React.useCallback(\n    (el: HTMLElement | null) => {\n      if (el) {\n        const updateHeight = () => {\n          const height = el.getBoundingClientRect().height;\n          onHeightUpdate(id, height);\n        };\n        updateHeight();\n        new MutationObserver(updateHeight).observe(el, {\n          subtree: true,\n          childList: true,\n          characterData: true,\n        });\n      }\n    },\n    [id, onHeightUpdate]\n  );\n\n  return (\n    <div ref={ref} className={className} style={style}>\n      {children}\n    </div>\n  );\n};\n\nconst getPositionStyle = (\n  position: ToastPosition,\n  offset: number\n): React.CSSProperties => {\n  const top = position.includes('top');\n  const verticalStyle: React.CSSProperties = top ? { top: 0 } : { bottom: 0 };\n  const horizontalStyle: React.CSSProperties = position.includes('center')\n    ? {\n        justifyContent: 'center',\n      }\n    : position.includes('right')\n    ? {\n        justifyContent: 'flex-end',\n      }\n    : {};\n  return {\n    left: 0,\n    right: 0,\n    display: 'flex',\n    position: 'absolute',\n    transition: prefersReducedMotion()\n      ? undefined\n      : `all 230ms cubic-bezier(.21,1.02,.73,1)`,\n    transform: `translateY(${offset * (top ? 1 : -1)}px)`,\n    ...verticalStyle,\n    ...horizontalStyle,\n  };\n};\n\nconst activeClass = css`\n  z-index: 9999;\n  > * {\n    pointer-events: auto;\n  }\n`;\n\nconst DEFAULT_OFFSET = 16;\n\nexport const Toaster: React.FC<ToasterProps> = ({\n  reverseOrder,\n  position = 'top-center',\n  toastOptions,\n  gutter,\n  children,\n  containerStyle,\n  containerClassName,\n}) => {\n  const { toasts, handlers } = useToaster(toastOptions);\n\n  return (\n    <div\n      id=\"_rht_toaster\"\n      style={{\n        position: 'fixed',\n        zIndex: 9999,\n        top: DEFAULT_OFFSET,\n        left: DEFAULT_OFFSET,\n        right: DEFAULT_OFFSET,\n        bottom: DEFAULT_OFFSET,\n        pointerEvents: 'none',\n        ...containerStyle,\n      }}\n      className={containerClassName}\n      onMouseEnter={handlers.startPause}\n      onMouseLeave={handlers.endPause}\n    >\n      {toasts.map((t) => {\n        const toastPosition = t.position || position;\n        const offset = handlers.calculateOffset(t, {\n          reverseOrder,\n          gutter,\n          defaultPosition: position,\n        });\n        const positionStyle = getPositionStyle(toastPosition, offset);\n\n        return (\n          <ToastWrapper\n            id={t.id}\n            key={t.id}\n            onHeightUpdate={handlers.updateHeight}\n            className={t.visible ? activeClass : ''}\n            style={positionStyle}\n          >\n            {t.type === 'custom' ? (\n              resolveValue(t.message, t)\n            ) : children ? (\n              children(t)\n            ) : (\n              <ToastBar toast={t} position={toastPosition} />\n            )}\n          </ToastWrapper>\n        );\n      })}\n    </div>\n  );\n};\n","import { toast } from './core/toast';\n\nexport * from './headless';\n\nexport { ToastBar } from './components/toast-bar';\nexport { ToastIcon } from './components/toast-icon';\nexport { Toaster } from './components/toaster';\nexport { CheckmarkIcon } from './components/checkmark';\nexport { ErrorIcon } from './components/error';\nexport { LoaderIcon } from './components/loader';\n\nexport { toast };\nexport default toast;\n","import { trackFallbackParamAccessed } from '../../server/app-render/dynamic-rendering';\nexport function createMetadataContext(pathname, renderOpts) {\n    return {\n        pathname,\n        trailingSlash: renderOpts.trailingSlash,\n        isStaticMetadataRouteFile: false\n    };\n}\nexport function createTrackedMetadataContext(pathname, renderOpts, workStore) {\n    return {\n        // Use the regular metadata context, but we trap the pathname access.\n        ...createMetadataContext(pathname, renderOpts),\n        // Setup the trap around the pathname access so we can track when the\n        // pathname is accessed while resolving metadata which would indicate it's\n        // being used to resolve a relative URL. If that's the case, we don't want\n        // to provide it, and instead we should error.\n        get pathname () {\n            if (workStore && workStore.isStaticGeneration && workStore.fallbackRouteParams && workStore.fallbackRouteParams.size > 0) {\n                trackFallbackParamAccessed(workStore, 'metadata relative url resolving');\n            }\n            return pathname;\n        }\n    };\n}\n\n//# sourceMappingURL=metadata-context.js.map","import { RSC_CONTENT_TYPE_HEADER } from '../../client/components/app-router-headers';\nimport RenderResult from '../render-result';\n/**\n * Flight Response is always set to RSC_CONTENT_TYPE_HEADER to ensure it does not get interpreted as HTML.\n */ export class FlightRenderResult extends RenderResult {\n    constructor(response, metadata = {}){\n        super(response, {\n            contentType: RSC_CONTENT_TYPE_HEADER,\n            metadata\n        });\n    }\n}\n\n//# sourceMappingURL=flight-render-result.js.map","const invalidServerComponentReactHooks = [\n  'useDeferredValue',\n  'useEffect',\n  'useImperativeHandle',\n  'useInsertionEffect',\n  'useLayoutEffect',\n  'useReducer',\n  'useRef',\n  'useState',\n  'useSyncExternalStore',\n  'useTransition',\n  'experimental_useOptimistic',\n  'useOptimistic',\n]\n\nfunction setMessage(error: Error, message: string): void {\n  error.message = message\n  if (error.stack) {\n    const lines = error.stack.split('\\n')\n    lines[0] = message\n    error.stack = lines.join('\\n')\n  }\n}\n\n/**\n * Input:\n * Error: Something went wrong\n    at funcName (/path/to/file.js:10:5)\n    at anotherFunc (/path/to/file.js:15:10)\n \n * Output:\n    at funcName (/path/to/file.js:10:5)\n    at anotherFunc (/path/to/file.js:15:10) \n */\nexport function getStackWithoutErrorMessage(error: Error): string {\n  const stack = error.stack\n  if (!stack) return ''\n  return stack.replace(/^[^\\n]*\\n/, '')\n}\n\nexport function formatServerError(error: Error): void {\n  if (typeof error?.message !== 'string') return\n\n  if (\n    error.message.includes(\n      'Class extends value undefined is not a constructor or null'\n    )\n  ) {\n    const addedMessage =\n      'This might be caused by a React Class Component being rendered in a Server Component, React Class Components only works in Client Components. Read more: https://nextjs.org/docs/messages/class-component-in-server-component'\n\n    // If this error instance already has the message, don't add it again\n    if (error.message.includes(addedMessage)) return\n\n    setMessage(\n      error,\n      `${error.message}\n\n${addedMessage}`\n    )\n    return\n  }\n\n  if (error.message.includes('createContext is not a function')) {\n    setMessage(\n      error,\n      'createContext only works in Client Components. Add the \"use client\" directive at the top of the file to use it. Read more: https://nextjs.org/docs/messages/context-in-server-component'\n    )\n    return\n  }\n\n  for (const clientHook of invalidServerComponentReactHooks) {\n    const regex = new RegExp(`\\\\b${clientHook}\\\\b.*is not a function`)\n    if (regex.test(error.message)) {\n      setMessage(\n        error,\n        `${clientHook} only works in Client Components. Add the \"use client\" directive at the top of the file to use it. Read more: https://nextjs.org/docs/messages/react-client-hook-in-server-component`\n      )\n      return\n    }\n  }\n}\n","const ERROR_CODE_DELIMITER = '@';\n/**\n * Augments the digest field of errors thrown in React Server Components (RSC) with an error code.\n * Since RSC errors can only be serialized through the digest field, this provides a way to include\n * an additional error code that can be extracted client-side via `extractNextErrorCode`.\n *\n * The error code is appended to the digest string with a semicolon separator, allowing it to be\n * parsed out later while preserving the original digest value.\n */ export const createDigestWithErrorCode = (thrownValue, originalDigest)=>{\n    if (typeof thrownValue === 'object' && thrownValue !== null && '__NEXT_ERROR_CODE' in thrownValue) {\n        return `${originalDigest}${ERROR_CODE_DELIMITER}${thrownValue.__NEXT_ERROR_CODE}`;\n    }\n    return originalDigest;\n};\n/**\n * Copies the error code from one error to another by setting the __NEXT_ERROR_CODE property.\n * This allows error codes to be preserved when wrapping or transforming errors.\n */ export const copyNextErrorCode = (source, target)=>{\n    const errorCode = extractNextErrorCode(source);\n    if (errorCode && typeof target === 'object' && target !== null) {\n        Object.defineProperty(target, '__NEXT_ERROR_CODE', {\n            value: errorCode,\n            enumerable: false,\n            configurable: true\n        });\n    }\n};\nexport const extractNextErrorCode = (error)=>{\n    if (typeof error === 'object' && error !== null && '__NEXT_ERROR_CODE' in error && typeof error.__NEXT_ERROR_CODE === 'string') {\n        return error.__NEXT_ERROR_CODE;\n    }\n    if (typeof error === 'object' && error !== null && 'digest' in error && typeof error.digest === 'string') {\n        const segments = error.digest.split(ERROR_CODE_DELIMITER);\n        const errorCode = segments.find((segment)=>segment.startsWith('E'));\n        return errorCode;\n    }\n    return undefined;\n};\n\n//# sourceMappingURL=error-telemetry-utils.js.map","import stringHash from 'next/dist/compiled/string-hash';\nimport { formatServerError } from '../../lib/format-server-error';\nimport { SpanStatusCode, getTracer } from '../lib/trace/tracer';\nimport { isAbortError } from '../pipe-readable';\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr';\nimport { isDynamicServerError } from '../../client/components/hooks-server-context';\nimport { isNextRouterError } from '../../client/components/is-next-router-error';\nimport { getProperError } from '../../lib/is-error';\nimport { createDigestWithErrorCode } from '../../lib/error-telemetry-utils';\n/**\n * Returns a digest for well-known Next.js errors, otherwise `undefined`. If a\n * digest is returned this also means that the error does not need to be\n * reported.\n */ export function getDigestForWellKnownError(error) {\n    // If we're bailing out to CSR, we don't need to log the error.\n    if (isBailoutToCSRError(error)) return error.digest;\n    // If this is a navigation error, we don't need to log the error.\n    if (isNextRouterError(error)) return error.digest;\n    // If this error occurs, we know that we should be stopping the static\n    // render. This is only thrown in static generation when PPR is not enabled,\n    // which causes the whole page to be marked as dynamic. We don't need to\n    // tell the user about this error, as it's not actionable.\n    if (isDynamicServerError(error)) return error.digest;\n    return undefined;\n}\nexport function createFlightReactServerErrorHandler(shouldFormatError, onReactServerRenderError) {\n    return (thrownValue)=>{\n        if (typeof thrownValue === 'string') {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            return stringHash(thrownValue).toString();\n        }\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        const digest = getDigestForWellKnownError(thrownValue);\n        if (digest) {\n            return digest;\n        }\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (!err.digest) {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            err.digest = stringHash(err.message + err.stack || '').toString();\n        }\n        // Format server errors in development to add more helpful error messages\n        if (shouldFormatError) {\n            formatServerError(err);\n        }\n        // Record exception in an active span, if available.\n        const span = getTracer().getActiveScopeSpan();\n        if (span) {\n            span.recordException(err);\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: err.message\n            });\n        }\n        onReactServerRenderError(err);\n        return createDigestWithErrorCode(thrownValue, err.digest);\n    };\n}\nexport function createHTMLReactServerErrorHandler(shouldFormatError, isNextExport, reactServerErrors, silenceLogger, onReactServerRenderError) {\n    return (thrownValue)=>{\n        var _err_message;\n        if (typeof thrownValue === 'string') {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            return stringHash(thrownValue).toString();\n        }\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        const digest = getDigestForWellKnownError(thrownValue);\n        if (digest) {\n            return digest;\n        }\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (!err.digest) {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            err.digest = stringHash(err.message + (err.stack || '')).toString();\n        }\n        // @TODO by putting this here and not at the top it is possible that\n        // we don't error the build in places we actually expect to\n        if (!reactServerErrors.has(err.digest)) {\n            reactServerErrors.set(err.digest, err);\n        }\n        // Format server errors in development to add more helpful error messages\n        if (shouldFormatError) {\n            formatServerError(err);\n        }\n        // Don't log the suppressed error during export\n        if (!(isNextExport && (err == null ? void 0 : (_err_message = err.message) == null ? void 0 : _err_message.includes('The specific message is omitted in production builds to avoid leaking sensitive details.')))) {\n            // Record exception in an active span, if available.\n            const span = getTracer().getActiveScopeSpan();\n            if (span) {\n                span.recordException(err);\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: err.message\n                });\n            }\n            if (!silenceLogger) {\n                onReactServerRenderError == null ? void 0 : onReactServerRenderError(err);\n            }\n        }\n        return createDigestWithErrorCode(thrownValue, err.digest);\n    };\n}\nexport function createHTMLErrorHandler(shouldFormatError, isNextExport, reactServerErrors, allCapturedErrors, silenceLogger, onHTMLRenderSSRError) {\n    return (thrownValue, errorInfo)=>{\n        var _err_message;\n        let isSSRError = true;\n        allCapturedErrors.push(thrownValue);\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        const digest = getDigestForWellKnownError(thrownValue);\n        if (digest) {\n            return digest;\n        }\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (err.digest) {\n            if (reactServerErrors.has(err.digest)) {\n                // This error is likely an obfuscated error from react-server.\n                // We recover the original error here.\n                thrownValue = reactServerErrors.get(err.digest);\n                isSSRError = false;\n            } else {\n            // The error is not from react-server but has a digest\n            // from other means so we don't need to produce a new one\n            }\n        } else {\n            err.digest = stringHash(err.message + ((errorInfo == null ? void 0 : errorInfo.componentStack) || err.stack || '')).toString();\n        }\n        // Format server errors in development to add more helpful error messages\n        if (shouldFormatError) {\n            formatServerError(err);\n        }\n        // Don't log the suppressed error during export\n        if (!(isNextExport && (err == null ? void 0 : (_err_message = err.message) == null ? void 0 : _err_message.includes('The specific message is omitted in production builds to avoid leaking sensitive details.')))) {\n            // Record exception in an active span, if available.\n            const span = getTracer().getActiveScopeSpan();\n            if (span) {\n                span.recordException(err);\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: err.message\n                });\n            }\n            if (!silenceLogger && // HTML errors contain RSC errors as well, filter them out before reporting\n            isSSRError) {\n                onHTMLRenderSSRError(err, errorInfo);\n            }\n        }\n        return createDigestWithErrorCode(thrownValue, err.digest);\n    };\n}\nexport function isUserLandError(err) {\n    return !isAbortError(err) && !isBailoutToCSRError(err) && !isNextRouterError(err);\n}\n\n//# sourceMappingURL=create-error-handler.js.map","export const dynamicParamTypes = {\n    catchall: 'c',\n    'catchall-intercepted': 'ci',\n    'optional-catchall': 'oc',\n    dynamic: 'd',\n    'dynamic-intercepted': 'di'\n};\n/**\n * Shorten the dynamic param in order to make it smaller when transmitted to the browser.\n */ export function getShortDynamicParamType(type) {\n    const short = dynamicParamTypes[type];\n    if (!short) {\n        throw Object.defineProperty(new Error('Unknown dynamic param type'), \"__NEXT_ERROR_CODE\", {\n            value: \"E378\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    return short;\n}\n\n//# sourceMappingURL=get-short-dynamic-param-type.js.map","import { INTERCEPTION_ROUTE_MARKERS } from '../../shared/lib/router/utils/interception-routes';\n/**\n * Parse dynamic route segment to type of parameter\n */ export function getSegmentParam(segment) {\n    const interceptionMarker = INTERCEPTION_ROUTE_MARKERS.find((marker)=>segment.startsWith(marker));\n    // if an interception marker is part of the path segment, we need to jump ahead\n    // to the relevant portion for param parsing\n    if (interceptionMarker) {\n        segment = segment.slice(interceptionMarker.length);\n    }\n    if (segment.startsWith('[[...') && segment.endsWith(']]')) {\n        return {\n            // TODO-APP: Optional catchall does not currently work with parallel routes,\n            // so for now aren't handling a potential interception marker.\n            type: 'optional-catchall',\n            param: segment.slice(5, -2)\n        };\n    }\n    if (segment.startsWith('[...') && segment.endsWith(']')) {\n        return {\n            type: interceptionMarker ? 'catchall-intercepted' : 'catchall',\n            param: segment.slice(4, -1)\n        };\n    }\n    if (segment.startsWith('[') && segment.endsWith(']')) {\n        return {\n            type: interceptionMarker ? 'dynamic-intercepted' : 'dynamic',\n            param: segment.slice(1, -1)\n        };\n    }\n    return null;\n}\n\n//# sourceMappingURL=get-segment-param.js.map","// This utility is based on https://github.com/zertosh/htmlescape\n// License: https://github.com/zertosh/htmlescape/blob/0527ca7156a524d256101bb310a9f970f63078ad/LICENSE\nconst ESCAPE_LOOKUP = {\n    '&': '\\\\u0026',\n    '>': '\\\\u003e',\n    '<': '\\\\u003c',\n    '\\u2028': '\\\\u2028',\n    '\\u2029': '\\\\u2029'\n};\nexport const ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nexport function htmlEscapeJsonString(str) {\n    return str.replace(ESCAPE_REGEX, (match)=>ESCAPE_LOOKUP[match]);\n}\n\n//# sourceMappingURL=htmlescape.js.map","import { ESCAPE_REGEX } from '../htmlescape';\nexport function getScriptNonceFromHeader(cspHeaderValue) {\n    var _directive_split_slice_map_find;\n    const directives = cspHeaderValue// Directives are split by ';'.\n    .split(';').map((directive)=>directive.trim());\n    // First try to find the directive for the 'script-src', otherwise try to\n    // fallback to the 'default-src'.\n    const directive = directives.find((dir)=>dir.startsWith('script-src')) || directives.find((dir)=>dir.startsWith('default-src'));\n    // If no directive could be found, then we're done.\n    if (!directive) {\n        return;\n    }\n    // Extract the nonce from the directive\n    const nonce = (_directive_split_slice_map_find = directive.split(' ')// Remove the 'strict-src'/'default-src' string, this can't be the nonce.\n    .slice(1).map((source)=>source.trim())// Find the first source with the 'nonce-' prefix.\n    .find((source)=>source.startsWith(\"'nonce-\") && source.length > 8 && source.endsWith(\"'\"))) == null ? void 0 : _directive_split_slice_map_find.slice(7, -1);\n    // If we could't find the nonce, then we're done.\n    if (!nonce) {\n        return;\n    }\n    // Don't accept the nonce value if it contains HTML escape characters.\n    // Technically, the spec requires a base64'd value, but this is just an\n    // extra layer.\n    if (ESCAPE_REGEX.test(nonce)) {\n        throw Object.defineProperty(new Error('Nonce value from Content-Security-Policy contained HTML escape characters.\\nLearn more: https://nextjs.org/docs/messages/nonce-contained-invalid-characters'), \"__NEXT_ERROR_CODE\", {\n            value: \"E440\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    return nonce;\n}\n\n//# sourceMappingURL=get-script-nonce-from-header.js.map","import s from 'next/dist/compiled/superstruct';\nconst dynamicParamTypesSchema = s.enums([\n    'c',\n    'ci',\n    'oc',\n    'd',\n    'di'\n]);\nconst segmentSchema = s.union([\n    s.string(),\n    s.tuple([\n        s.string(),\n        s.string(),\n        dynamicParamTypesSchema\n    ])\n]);\n// unfortunately the tuple is not understood well by Describe so we have to\n// use any here. This does not have any impact on the runtime type since the validation\n// does work correctly.\nexport const flightRouterStateSchema = s.tuple([\n    segmentSchema,\n    s.record(s.string(), s.lazy(()=>flightRouterStateSchema)),\n    s.optional(s.nullable(s.string())),\n    s.optional(s.nullable(s.union([\n        s.literal('refetch'),\n        s.literal('refresh'),\n        s.literal('inside-shared-layout')\n    ]))),\n    s.optional(s.boolean())\n]);\n\n//# sourceMappingURL=types.js.map","import { flightRouterStateSchema } from './types';\nimport { assert } from 'next/dist/compiled/superstruct';\nexport function parseAndValidateFlightRouterState(stateHeader) {\n    if (typeof stateHeader === 'undefined') {\n        return undefined;\n    }\n    if (Array.isArray(stateHeader)) {\n        throw Object.defineProperty(new Error('Multiple router state headers were sent. This is not allowed.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E418\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    // We limit the size of the router state header to ~40kb. This is to prevent\n    // a malicious user from sending a very large header and slowing down the\n    // resolving of the router state.\n    // This is around 2,000 nested or parallel route segment states:\n    // '{\"children\":[\"\",{}]}'.length === 20.\n    if (stateHeader.length > 20 * 2000) {\n        throw Object.defineProperty(new Error('The router state header was too large.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E142\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    try {\n        const state = JSON.parse(decodeURIComponent(stateHeader));\n        assert(state, flightRouterStateSchema);\n        return state;\n    } catch  {\n        throw Object.defineProperty(new Error('The router state header was sent but could not be parsed.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E10\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\n\n//# sourceMappingURL=parse-and-validate-flight-router-state.js.map","import { addSearchParamsIfPageSegment } from '../../shared/lib/segment';\nexport function createFlightRouterStateFromLoaderTree([segment, parallelRoutes, { layout }], getDynamicParamFromSegment, searchParams, rootLayoutIncluded = false) {\n    const dynamicParam = getDynamicParamFromSegment(segment);\n    const treeSegment = dynamicParam ? dynamicParam.treeSegment : segment;\n    const segmentTree = [\n        addSearchParamsIfPageSegment(treeSegment, searchParams),\n        {}\n    ];\n    if (!rootLayoutIncluded && typeof layout !== 'undefined') {\n        rootLayoutIncluded = true;\n        segmentTree[4] = true;\n    }\n    segmentTree[1] = Object.keys(parallelRoutes).reduce((existingValue, currentValue)=>{\n        existingValue[currentValue] = createFlightRouterStateFromLoaderTree(parallelRoutes[currentValue], getDynamicParamFromSegment, searchParams, rootLayoutIncluded);\n        return existingValue;\n    }, {});\n    return segmentTree;\n}\n\n//# sourceMappingURL=create-flight-router-state-from-loader-tree.js.map","export const ipcForbiddenHeaders = [\n    'accept-encoding',\n    'keepalive',\n    'keep-alive',\n    'content-encoding',\n    'transfer-encoding',\n    // https://github.com/nodejs/undici/issues/1470\n    'connection',\n    // marked as unsupported by undici: https://github.com/nodejs/undici/blob/c83b084879fa0bb8e0469d31ec61428ac68160d5/lib/core/request.js#L354\n    'expect'\n];\nexport const actionsForbiddenHeaders = [\n    ...ipcForbiddenHeaders,\n    'content-length',\n    'set-cookie'\n];\nexport const filterReqHeaders = (headers, forbiddenHeaders)=>{\n    // Some browsers are not matching spec and sending Content-Length: 0. This causes issues in undici\n    // https://github.com/nodejs/undici/issues/2046\n    if (headers['content-length'] && headers['content-length'] === '0') {\n        delete headers['content-length'];\n    }\n    for (const [key, value] of Object.entries(headers)){\n        if (forbiddenHeaders.includes(key) || !(Array.isArray(value) || typeof value === 'string')) {\n            delete headers[key];\n        }\n    }\n    return headers;\n};\n// These are headers that are only used internally and should\n// not be honored from the external request\nconst INTERNAL_HEADERS = [\n    'x-middleware-rewrite',\n    'x-middleware-redirect',\n    'x-middleware-set-cookie',\n    'x-middleware-skip',\n    'x-middleware-override-headers',\n    'x-middleware-next',\n    'x-now-route-matches',\n    'x-matched-path'\n];\nexport const filterInternalHeaders = (headers)=>{\n    for(const header in headers){\n        if (INTERNAL_HEADERS.includes(header)) {\n            delete headers[header];\n        }\n    }\n};\n\n//# sourceMappingURL=utils.js.map","// micromatch is only available at node runtime, so it cannot be used here since the code path that calls this function\n// can be run from edge. This is a simple implementation that safely achieves the required functionality.\n// the goal is to match the functionality for remotePatterns as defined here -\n// https://nextjs.org/docs/app/api-reference/components/image#remotepatterns\n// TODO - retrofit micromatch to work in edge and use that instead\nfunction matchWildcardDomain(domain, pattern) {\n    const domainParts = domain.split('.');\n    const patternParts = pattern.split('.');\n    if (patternParts.length < 1) {\n        // pattern is empty and therefore invalid to match against\n        return false;\n    }\n    if (domainParts.length < patternParts.length) {\n        // domain has too few segments and thus cannot match\n        return false;\n    }\n    // Prevent wildcards from matching entire domains (e.g. '**' or '*.com')\n    // This ensures wildcards can only match subdomains, not the main domain\n    if (patternParts.length === 1 && (patternParts[0] === '*' || patternParts[0] === '**')) {\n        return false;\n    }\n    while(patternParts.length){\n        const patternPart = patternParts.pop();\n        const domainPart = domainParts.pop();\n        switch(patternPart){\n            case '':\n                {\n                    // invalid pattern. pattern segments must be non empty\n                    return false;\n                }\n            case '*':\n                {\n                    // wildcard matches anything so we continue if the domain part is non-empty\n                    if (domainPart) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n            case '**':\n                {\n                    // if this is not the last item in the pattern the pattern is invalid\n                    if (patternParts.length > 0) {\n                        return false;\n                    }\n                    // recursive wildcard matches anything so we terminate here if the domain part is non empty\n                    return domainPart !== undefined;\n                }\n            default:\n                {\n                    if (domainPart !== patternPart) {\n                        return false;\n                    }\n                }\n        }\n    }\n    // We exhausted the pattern. If we also exhausted the domain we have a match\n    return domainParts.length === 0;\n}\nexport const isCsrfOriginAllowed = (originDomain, allowedOrigins = [])=>{\n    return allowedOrigins.some((allowedOrigin)=>allowedOrigin && (allowedOrigin === originDomain || matchWildcardDomain(originDomain, allowedOrigin)));\n};\n\n//# sourceMappingURL=csrf-protection.js.map","import { RSC_HEADER, RSC_CONTENT_TYPE_HEADER, NEXT_ROUTER_STATE_TREE_HEADER, ACTION_HEADER } from '../../client/components/app-router-headers';\nimport { getAccessFallbackHTTPStatus, isHTTPAccessFallbackError } from '../../client/components/http-access-fallback/http-access-fallback';\nimport { getRedirectTypeFromError, getURLFromRedirectError } from '../../client/components/redirect';\nimport { isRedirectError } from '../../client/components/redirect-error';\nimport RenderResult from '../render-result';\nimport { FlightRenderResult } from './flight-render-result';\nimport { filterReqHeaders, actionsForbiddenHeaders } from '../lib/server-ipc/utils';\nimport { getModifiedCookieValues } from '../web/spec-extension/adapters/request-cookies';\nimport { NEXT_CACHE_REVALIDATED_TAGS_HEADER, NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER } from '../../lib/constants';\nimport { getServerActionRequestMetadata } from '../lib/server-action-request-meta';\nimport { isCsrfOriginAllowed } from './csrf-protection';\nimport { warn } from '../../build/output/log';\nimport { RequestCookies, ResponseCookies } from '../web/spec-extension/cookies';\nimport { HeadersAdapter } from '../web/spec-extension/adapters/headers';\nimport { fromNodeOutgoingHttpHeaders } from '../web/utils';\nimport { selectWorkerForForwarding } from './action-utils';\nimport { isNodeNextRequest, isWebNextRequest } from '../base-http/helpers';\nimport { RedirectStatusCode } from '../../client/components/redirect-status-code';\nimport { synchronizeMutableCookies } from '../async-storage/request-store';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { executeRevalidates } from '../revalidation-utils';\nfunction formDataFromSearchQueryString(query) {\n    const searchParams = new URLSearchParams(query);\n    const formData = new FormData();\n    for (const [key, value] of searchParams){\n        formData.append(key, value);\n    }\n    return formData;\n}\nfunction nodeHeadersToRecord(headers) {\n    const record = {};\n    for (const [key, value] of Object.entries(headers)){\n        if (value !== undefined) {\n            record[key] = Array.isArray(value) ? value.join(', ') : `${value}`;\n        }\n    }\n    return record;\n}\nfunction getForwardedHeaders(req, res) {\n    // Get request headers and cookies\n    const requestHeaders = req.headers;\n    const requestCookies = new RequestCookies(HeadersAdapter.from(requestHeaders));\n    // Get response headers and cookies\n    const responseHeaders = res.getHeaders();\n    const responseCookies = new ResponseCookies(fromNodeOutgoingHttpHeaders(responseHeaders));\n    // Merge request and response headers\n    const mergedHeaders = filterReqHeaders({\n        ...nodeHeadersToRecord(requestHeaders),\n        ...nodeHeadersToRecord(responseHeaders)\n    }, actionsForbiddenHeaders);\n    // Merge cookies into requestCookies, so responseCookies always take precedence\n    // and overwrite/delete those from requestCookies.\n    responseCookies.getAll().forEach((cookie)=>{\n        if (typeof cookie.value === 'undefined') {\n            requestCookies.delete(cookie.name);\n        } else {\n            requestCookies.set(cookie);\n        }\n    });\n    // Update the 'cookie' header with the merged cookies\n    mergedHeaders['cookie'] = requestCookies.toString();\n    // Remove headers that should not be forwarded\n    delete mergedHeaders['transfer-encoding'];\n    return new Headers(mergedHeaders);\n}\nfunction addRevalidationHeader(res, { workStore, requestStore }) {\n    var _workStore_pendingRevalidatedTags;\n    // If a tag was revalidated, the client router needs to invalidate all the\n    // client router cache as they may be stale. And if a path was revalidated, the\n    // client needs to invalidate all subtrees below that path.\n    // To keep the header size small, we use a tuple of\n    // [[revalidatedPaths], isTagRevalidated ? 1 : 0, isCookieRevalidated ? 1 : 0]\n    // instead of a JSON object.\n    // TODO-APP: Currently the prefetch cache doesn't have subtree information,\n    // so we need to invalidate the entire cache if a path was revalidated.\n    // TODO-APP: Currently paths are treated as tags, so the second element of the tuple\n    // is always empty.\n    const isTagRevalidated = ((_workStore_pendingRevalidatedTags = workStore.pendingRevalidatedTags) == null ? void 0 : _workStore_pendingRevalidatedTags.length) ? 1 : 0;\n    const isCookieRevalidated = getModifiedCookieValues(requestStore.mutableCookies).length ? 1 : 0;\n    res.setHeader('x-action-revalidated', JSON.stringify([\n        [],\n        isTagRevalidated,\n        isCookieRevalidated\n    ]));\n}\n/**\n * Forwards a server action request to a separate worker. Used when the requested action is not available in the current worker.\n */ async function createForwardedActionResponse(req, res, host, workerPathname, basePath, workStore) {\n    var _workStore_incrementalCache;\n    if (!host) {\n        throw Object.defineProperty(new Error('Invariant: Missing `host` header from a forwarded Server Actions request.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E226\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const forwardedHeaders = getForwardedHeaders(req, res);\n    // indicate that this action request was forwarded from another worker\n    // we use this to skip rendering the flight tree so that we don't update the UI\n    // with the response from the forwarded worker\n    forwardedHeaders.set('x-action-forwarded', '1');\n    const proto = ((_workStore_incrementalCache = workStore.incrementalCache) == null ? void 0 : _workStore_incrementalCache.requestProtocol) || 'https';\n    // For standalone or the serverful mode, use the internal origin directly\n    // other than the host headers from the request.\n    const origin = process.env.__NEXT_PRIVATE_ORIGIN || `${proto}://${host.value}`;\n    const fetchUrl = new URL(`${origin}${basePath}${workerPathname}`);\n    try {\n        var _response_headers_get;\n        let body;\n        if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME === 'edge' && isWebNextRequest(req)) {\n            if (!req.body) {\n                throw Object.defineProperty(new Error('Invariant: missing request body.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E333\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            body = req.body;\n        } else if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME !== 'edge' && isNodeNextRequest(req)) {\n            body = req.stream();\n        } else {\n            throw Object.defineProperty(new Error('Invariant: Unknown request type.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E114\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        // Forward the request to the new worker\n        const response = await fetch(fetchUrl, {\n            method: 'POST',\n            body,\n            duplex: 'half',\n            headers: forwardedHeaders,\n            redirect: 'manual',\n            next: {\n                // @ts-ignore\n                internal: 1\n            }\n        });\n        if ((_response_headers_get = response.headers.get('content-type')) == null ? void 0 : _response_headers_get.startsWith(RSC_CONTENT_TYPE_HEADER)) {\n            // copy the headers from the redirect response to the response we're sending\n            for (const [key, value] of response.headers){\n                if (!actionsForbiddenHeaders.includes(key)) {\n                    res.setHeader(key, value);\n                }\n            }\n            return new FlightRenderResult(response.body);\n        } else {\n            var // Since we aren't consuming the response body, we cancel it to avoid memory leaks\n            _response_body;\n            (_response_body = response.body) == null ? void 0 : _response_body.cancel();\n        }\n    } catch (err) {\n        // we couldn't stream the forwarded response, so we'll just return an empty response\n        console.error(`failed to forward action response`, err);\n    }\n    return RenderResult.fromStatic('{}');\n}\n/**\n * Returns the parsed redirect URL if we deem that it is hosted by us.\n *\n * We handle both relative and absolute redirect URLs.\n *\n * In case the redirect URL is not relative to the application we return `null`.\n */ function getAppRelativeRedirectUrl(basePath, host, redirectUrl) {\n    if (redirectUrl.startsWith('/') || redirectUrl.startsWith('.')) {\n        // Make sure we are appending the basePath to relative URLS\n        return new URL(`${basePath}${redirectUrl}`, 'http://n');\n    }\n    const parsedRedirectUrl = new URL(redirectUrl);\n    if ((host == null ? void 0 : host.value) !== parsedRedirectUrl.host) {\n        return null;\n    }\n    // At this point the hosts are the same, just confirm we\n    // are routing to a path underneath the `basePath`\n    return parsedRedirectUrl.pathname.startsWith(basePath) ? parsedRedirectUrl : null;\n}\nasync function createRedirectRenderResult(req, res, originalHost, redirectUrl, redirectType, basePath, workStore) {\n    res.setHeader('x-action-redirect', `${redirectUrl};${redirectType}`);\n    // If we're redirecting to another route of this Next.js application, we'll\n    // try to stream the response from the other worker path. When that works,\n    // we can save an extra roundtrip and avoid a full page reload.\n    // When the redirect URL starts with a `/` or is to the same host, under the\n    // `basePath` we treat it as an app-relative redirect;\n    const appRelativeRedirectUrl = getAppRelativeRedirectUrl(basePath, originalHost, redirectUrl);\n    if (appRelativeRedirectUrl) {\n        var _workStore_incrementalCache;\n        if (!originalHost) {\n            throw Object.defineProperty(new Error('Invariant: Missing `host` header from a forwarded Server Actions request.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E226\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        const forwardedHeaders = getForwardedHeaders(req, res);\n        forwardedHeaders.set(RSC_HEADER, '1');\n        const proto = ((_workStore_incrementalCache = workStore.incrementalCache) == null ? void 0 : _workStore_incrementalCache.requestProtocol) || 'https';\n        // For standalone or the serverful mode, use the internal origin directly\n        // other than the host headers from the request.\n        const origin = process.env.__NEXT_PRIVATE_ORIGIN || `${proto}://${originalHost.value}`;\n        const fetchUrl = new URL(`${origin}${appRelativeRedirectUrl.pathname}${appRelativeRedirectUrl.search}`);\n        if (workStore.pendingRevalidatedTags) {\n            var _workStore_incrementalCache_prerenderManifest_preview, _workStore_incrementalCache_prerenderManifest, _workStore_incrementalCache1;\n            forwardedHeaders.set(NEXT_CACHE_REVALIDATED_TAGS_HEADER, workStore.pendingRevalidatedTags.join(','));\n            forwardedHeaders.set(NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER, ((_workStore_incrementalCache1 = workStore.incrementalCache) == null ? void 0 : (_workStore_incrementalCache_prerenderManifest = _workStore_incrementalCache1.prerenderManifest) == null ? void 0 : (_workStore_incrementalCache_prerenderManifest_preview = _workStore_incrementalCache_prerenderManifest.preview) == null ? void 0 : _workStore_incrementalCache_prerenderManifest_preview.previewModeId) || '');\n        }\n        // Ensures that when the path was revalidated we don't return a partial response on redirects\n        forwardedHeaders.delete(NEXT_ROUTER_STATE_TREE_HEADER);\n        // When an action follows a redirect, it's no longer handling an action: it's just a normal RSC request\n        // to the requested URL. We should remove the `next-action` header so that it's not treated as an action\n        forwardedHeaders.delete(ACTION_HEADER);\n        try {\n            var _response_headers_get;\n            const response = await fetch(fetchUrl, {\n                method: 'GET',\n                headers: forwardedHeaders,\n                next: {\n                    // @ts-ignore\n                    internal: 1\n                }\n            });\n            if ((_response_headers_get = response.headers.get('content-type')) == null ? void 0 : _response_headers_get.startsWith(RSC_CONTENT_TYPE_HEADER)) {\n                // copy the headers from the redirect response to the response we're sending\n                for (const [key, value] of response.headers){\n                    if (!actionsForbiddenHeaders.includes(key)) {\n                        res.setHeader(key, value);\n                    }\n                }\n                return new FlightRenderResult(response.body);\n            } else {\n                var // Since we aren't consuming the response body, we cancel it to avoid memory leaks\n                _response_body;\n                (_response_body = response.body) == null ? void 0 : _response_body.cancel();\n            }\n        } catch (err) {\n            // we couldn't stream the redirect response, so we'll just do a normal redirect\n            console.error(`failed to get redirect response`, err);\n        }\n    }\n    return RenderResult.fromStatic('{}');\n}\n;\n/**\n * Ensures the value of the header can't create long logs.\n */ function limitUntrustedHeaderValueForLogs(value) {\n    return value.length > 100 ? value.slice(0, 100) + '...' : value;\n}\nexport function parseHostHeader(headers, originDomain) {\n    var _forwardedHostHeader_split_, _forwardedHostHeader_split;\n    const forwardedHostHeader = headers['x-forwarded-host'];\n    const forwardedHostHeaderValue = forwardedHostHeader && Array.isArray(forwardedHostHeader) ? forwardedHostHeader[0] : forwardedHostHeader == null ? void 0 : (_forwardedHostHeader_split = forwardedHostHeader.split(',')) == null ? void 0 : (_forwardedHostHeader_split_ = _forwardedHostHeader_split[0]) == null ? void 0 : _forwardedHostHeader_split_.trim();\n    const hostHeader = headers['host'];\n    if (originDomain) {\n        return forwardedHostHeaderValue === originDomain ? {\n            type: \"x-forwarded-host\",\n            value: forwardedHostHeaderValue\n        } : hostHeader === originDomain ? {\n            type: \"host\",\n            value: hostHeader\n        } : undefined;\n    }\n    return forwardedHostHeaderValue ? {\n        type: \"x-forwarded-host\",\n        value: forwardedHostHeaderValue\n    } : hostHeader ? {\n        type: \"host\",\n        value: hostHeader\n    } : undefined;\n}\nexport async function handleAction({ req, res, ComponentMod, serverModuleMap, generateFlight, workStore, requestStore, serverActions, ctx }) {\n    const contentType = req.headers['content-type'];\n    const { serverActionsManifest, page } = ctx.renderOpts;\n    const { actionId, isURLEncodedAction, isMultipartAction, isFetchAction, isPossibleServerAction } = getServerActionRequestMetadata(req);\n    // If it can't be a Server Action, skip handling.\n    // Note that this can be a false positive -- any multipart/urlencoded POST can get us here,\n    // But won't know if it's an MPA action or not until we call `decodeAction` below.\n    if (!isPossibleServerAction) {\n        return;\n    }\n    if (workStore.isStaticGeneration) {\n        throw Object.defineProperty(new Error(\"Invariant: server actions can't be handled during static rendering\"), \"__NEXT_ERROR_CODE\", {\n            value: \"E359\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    let temporaryReferences;\n    const finalizeAndGenerateFlight = (...args)=>{\n        // When we switch to the render phase, cookies() will return\n        // `workUnitStore.cookies` instead of `workUnitStore.userspaceMutableCookies`.\n        // We want the render to see any cookie writes that we performed during the action,\n        // so we need to update the immutable cookies to reflect the changes.\n        synchronizeMutableCookies(requestStore);\n        // The server action might have toggled draft mode, so we need to reflect\n        // that in the work store to be up-to-date for subsequent rendering.\n        workStore.isDraftMode = requestStore.draftMode.isEnabled;\n        return generateFlight(...args);\n    };\n    // When running actions the default is no-store, you can still `cache: 'force-cache'`\n    workStore.fetchCache = 'default-no-store';\n    const originDomain = typeof req.headers['origin'] === 'string' ? new URL(req.headers['origin']).host : undefined;\n    const host = parseHostHeader(req.headers);\n    let warning = undefined;\n    function warnBadServerActionRequest() {\n        if (warning) {\n            warn(warning);\n        }\n    }\n    // This is to prevent CSRF attacks. If `x-forwarded-host` is set, we need to\n    // ensure that the request is coming from the same host.\n    if (!originDomain) {\n        // This might be an old browser that doesn't send `host` header. We ignore\n        // this case.\n        warning = 'Missing `origin` header from a forwarded Server Actions request.';\n    } else if (!host || originDomain !== host.value) {\n        // If the customer sets a list of allowed origins, we'll allow the request.\n        // These are considered safe but might be different from forwarded host set\n        // by the infra (i.e. reverse proxies).\n        if (isCsrfOriginAllowed(originDomain, serverActions == null ? void 0 : serverActions.allowedOrigins)) {\n        // Ignore it\n        } else {\n            if (host) {\n                // This seems to be an CSRF attack. We should not proceed the action.\n                console.error(`\\`${host.type}\\` header with value \\`${limitUntrustedHeaderValueForLogs(host.value)}\\` does not match \\`origin\\` header with value \\`${limitUntrustedHeaderValueForLogs(originDomain)}\\` from a forwarded Server Actions request. Aborting the action.`);\n            } else {\n                // This is an attack. We should not proceed the action.\n                console.error(`\\`x-forwarded-host\\` or \\`host\\` headers are not provided. One of these is needed to compare the \\`origin\\` header from a forwarded Server Actions request. Aborting the action.`);\n            }\n            const error = Object.defineProperty(new Error('Invalid Server Actions request.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E80\",\n                enumerable: false,\n                configurable: true\n            });\n            if (isFetchAction) {\n                res.statusCode = 500;\n                await executeRevalidates(workStore);\n                const promise = Promise.reject(error);\n                try {\n                    // we need to await the promise to trigger the rejection early\n                    // so that it's already handled by the time we call\n                    // the RSC runtime. Otherwise, it will throw an unhandled\n                    // promise rejection error in the renderer.\n                    await promise;\n                } catch  {\n                // swallow error, it's gonna be handled on the client\n                }\n                return {\n                    type: 'done',\n                    result: await finalizeAndGenerateFlight(req, ctx, requestStore, {\n                        actionResult: promise,\n                        // if the page was not revalidated, we can skip the rendering the flight tree\n                        skipFlight: !workStore.pathWasRevalidated,\n                        temporaryReferences\n                    })\n                };\n            }\n            throw error;\n        }\n    }\n    // ensure we avoid caching server actions unexpectedly\n    res.setHeader('Cache-Control', 'no-cache, no-store, max-age=0, must-revalidate');\n    let boundActionArguments = [];\n    const { actionAsyncStorage } = ComponentMod;\n    let actionResult;\n    let formState;\n    let actionModId;\n    const actionWasForwarded = Boolean(req.headers['x-action-forwarded']);\n    if (actionId) {\n        const forwardedWorker = selectWorkerForForwarding(actionId, page, serverActionsManifest);\n        // If forwardedWorker is truthy, it means there isn't a worker for the action\n        // in the current handler, so we forward the request to a worker that has the action.\n        if (forwardedWorker) {\n            return {\n                type: 'done',\n                result: await createForwardedActionResponse(req, res, host, forwardedWorker, ctx.renderOpts.basePath, workStore)\n            };\n        }\n    }\n    try {\n        await actionAsyncStorage.run({\n            isAction: true\n        }, async ()=>{\n            if (// The type check here ensures that `req` is correctly typed, and the\n            // environment variable check provides dead code elimination.\n            process.env.NEXT_RUNTIME === 'edge' && isWebNextRequest(req)) {\n                if (!req.body) {\n                    throw Object.defineProperty(new Error('invariant: Missing request body.'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E364\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                // TODO: add body limit\n                // Use react-server-dom-webpack/server.edge\n                const { createTemporaryReferenceSet, decodeReply, decodeAction, decodeFormState } = ComponentMod;\n                temporaryReferences = createTemporaryReferenceSet();\n                if (isMultipartAction) {\n                    // TODO-APP: Add streaming support\n                    const formData = await req.request.formData();\n                    if (isFetchAction) {\n                        boundActionArguments = await decodeReply(formData, serverModuleMap, {\n                            temporaryReferences\n                        });\n                    } else {\n                        const action = await decodeAction(formData, serverModuleMap);\n                        if (typeof action === 'function') {\n                            // Only warn if it's a server action, otherwise skip for other post requests\n                            warnBadServerActionRequest();\n                            let actionReturnedState;\n                            requestStore.phase = 'action';\n                            try {\n                                actionReturnedState = await workUnitAsyncStorage.run(requestStore, action);\n                            } finally{\n                                requestStore.phase = 'render';\n                            }\n                            formState = await decodeFormState(actionReturnedState, formData, serverModuleMap);\n                        }\n                        // Skip the fetch path\n                        return;\n                    }\n                } else {\n                    try {\n                        actionModId = getActionModIdOrError(actionId, serverModuleMap);\n                    } catch (err) {\n                        if (actionId !== null) {\n                            console.error(err);\n                        }\n                        return {\n                            type: 'not-found'\n                        };\n                    }\n                    const chunks = [];\n                    const reader = req.body.getReader();\n                    while(true){\n                        const { done, value } = await reader.read();\n                        if (done) {\n                            break;\n                        }\n                        chunks.push(value);\n                    }\n                    const actionData = Buffer.concat(chunks).toString('utf-8');\n                    if (isURLEncodedAction) {\n                        const formData = formDataFromSearchQueryString(actionData);\n                        boundActionArguments = await decodeReply(formData, serverModuleMap, {\n                            temporaryReferences\n                        });\n                    } else {\n                        boundActionArguments = await decodeReply(actionData, serverModuleMap, {\n                            temporaryReferences\n                        });\n                    }\n                }\n            } else if (// The type check here ensures that `req` is correctly typed, and the\n            // environment variable check provides dead code elimination.\n            process.env.NEXT_RUNTIME !== 'edge' && isNodeNextRequest(req)) {\n                // Use react-server-dom-webpack/server.node which supports streaming\n                const { createTemporaryReferenceSet, decodeReply, decodeReplyFromBusboy, decodeAction, decodeFormState } = require(`./react-server.node`);\n                temporaryReferences = createTemporaryReferenceSet();\n                const { Transform } = require('node:stream');\n                const defaultBodySizeLimit = '1 MB';\n                const bodySizeLimit = (serverActions == null ? void 0 : serverActions.bodySizeLimit) ?? defaultBodySizeLimit;\n                const bodySizeLimitBytes = bodySizeLimit !== defaultBodySizeLimit ? require('next/dist/compiled/bytes').parse(bodySizeLimit) : 1024 * 1024 // 1 MB\n                ;\n                let size = 0;\n                const body = req.body.pipe(new Transform({\n                    transform (chunk, encoding, callback) {\n                        size += Buffer.byteLength(chunk, encoding);\n                        if (size > bodySizeLimitBytes) {\n                            const { ApiError } = require('../api-utils');\n                            callback(Object.defineProperty(new ApiError(413, `Body exceeded ${bodySizeLimit} limit.\n                To configure the body size limit for Server Actions, see: https://nextjs.org/docs/app/api-reference/next-config-js/serverActions#bodysizelimit`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E394\",\n                                enumerable: false,\n                                configurable: true\n                            }));\n                            return;\n                        }\n                        callback(null, chunk);\n                    }\n                }));\n                if (isMultipartAction) {\n                    if (isFetchAction) {\n                        const busboy = require('busboy')({\n                            defParamCharset: 'utf8',\n                            headers: req.headers,\n                            limits: {\n                                fieldSize: bodySizeLimitBytes\n                            }\n                        });\n                        body.pipe(busboy);\n                        boundActionArguments = await decodeReplyFromBusboy(busboy, serverModuleMap, {\n                            temporaryReferences\n                        });\n                    } else {\n                        // React doesn't yet publish a busboy version of decodeAction\n                        // so we polyfill the parsing of FormData.\n                        const fakeRequest = new Request('http://localhost', {\n                            method: 'POST',\n                            // @ts-expect-error\n                            headers: {\n                                'Content-Type': contentType\n                            },\n                            body: new ReadableStream({\n                                start: (controller)=>{\n                                    body.on('data', (chunk)=>{\n                                        controller.enqueue(new Uint8Array(chunk));\n                                    });\n                                    body.on('end', ()=>{\n                                        controller.close();\n                                    });\n                                    body.on('error', (err)=>{\n                                        controller.error(err);\n                                    });\n                                }\n                            }),\n                            duplex: 'half'\n                        });\n                        const formData = await fakeRequest.formData();\n                        const action = await decodeAction(formData, serverModuleMap);\n                        if (typeof action === 'function') {\n                            // Only warn if it's a server action, otherwise skip for other post requests\n                            warnBadServerActionRequest();\n                            let actionReturnedState;\n                            requestStore.phase = 'action';\n                            try {\n                                actionReturnedState = await workUnitAsyncStorage.run(requestStore, action);\n                            } finally{\n                                requestStore.phase = 'render';\n                            }\n                            formState = await decodeFormState(actionReturnedState, formData, serverModuleMap);\n                        }\n                        // Skip the fetch path\n                        return;\n                    }\n                } else {\n                    try {\n                        actionModId = getActionModIdOrError(actionId, serverModuleMap);\n                    } catch (err) {\n                        if (actionId !== null) {\n                            console.error(err);\n                        }\n                        return {\n                            type: 'not-found'\n                        };\n                    }\n                    const chunks = [];\n                    for await (const chunk of req.body){\n                        chunks.push(Buffer.from(chunk));\n                    }\n                    const actionData = Buffer.concat(chunks).toString('utf-8');\n                    if (isURLEncodedAction) {\n                        const formData = formDataFromSearchQueryString(actionData);\n                        boundActionArguments = await decodeReply(formData, serverModuleMap, {\n                            temporaryReferences\n                        });\n                    } else {\n                        boundActionArguments = await decodeReply(actionData, serverModuleMap, {\n                            temporaryReferences\n                        });\n                    }\n                }\n            } else {\n                throw Object.defineProperty(new Error('Invariant: Unknown request type.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E114\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            // actions.js\n            // app/page.js\n            //   action worker1\n            //     appRender1\n            // app/foo/page.js\n            //   action worker2\n            //     appRender\n            // / -> fire action -> POST / -> appRender1 -> modId for the action file\n            // /foo -> fire action -> POST /foo -> appRender2 -> modId for the action file\n            try {\n                actionModId = actionModId ?? getActionModIdOrError(actionId, serverModuleMap);\n            } catch (err) {\n                if (actionId !== null) {\n                    console.error(err);\n                }\n                return {\n                    type: 'not-found'\n                };\n            }\n            const actionMod = await ComponentMod.__next_app__.require(actionModId);\n            const actionHandler = actionMod[// `actionId` must exist if we got here, as otherwise we would have thrown an error above\n            actionId];\n            let returnVal;\n            requestStore.phase = 'action';\n            try {\n                returnVal = await workUnitAsyncStorage.run(requestStore, ()=>actionHandler.apply(null, boundActionArguments));\n            } finally{\n                requestStore.phase = 'render';\n            }\n            // For form actions, we need to continue rendering the page.\n            if (isFetchAction) {\n                await executeRevalidates(workStore);\n                addRevalidationHeader(res, {\n                    workStore,\n                    requestStore\n                });\n                actionResult = await finalizeAndGenerateFlight(req, ctx, requestStore, {\n                    actionResult: Promise.resolve(returnVal),\n                    // if the page was not revalidated, or if the action was forwarded from another worker, we can skip the rendering the flight tree\n                    skipFlight: !workStore.pathWasRevalidated || actionWasForwarded,\n                    temporaryReferences\n                });\n            }\n        });\n        return {\n            type: 'done',\n            result: actionResult,\n            formState\n        };\n    } catch (err) {\n        if (isRedirectError(err)) {\n            const redirectUrl = getURLFromRedirectError(err);\n            const redirectType = getRedirectTypeFromError(err);\n            await executeRevalidates(workStore);\n            addRevalidationHeader(res, {\n                workStore,\n                requestStore\n            });\n            // if it's a fetch action, we'll set the status code for logging/debugging purposes\n            // but we won't set a Location header, as the redirect will be handled by the client router\n            res.statusCode = RedirectStatusCode.SeeOther;\n            if (isFetchAction) {\n                return {\n                    type: 'done',\n                    result: await createRedirectRenderResult(req, res, host, redirectUrl, redirectType, ctx.renderOpts.basePath, workStore)\n                };\n            }\n            res.setHeader('Location', redirectUrl);\n            return {\n                type: 'done',\n                result: RenderResult.fromStatic('')\n            };\n        } else if (isHTTPAccessFallbackError(err)) {\n            res.statusCode = getAccessFallbackHTTPStatus(err);\n            await executeRevalidates(workStore);\n            addRevalidationHeader(res, {\n                workStore,\n                requestStore\n            });\n            if (isFetchAction) {\n                const promise = Promise.reject(err);\n                try {\n                    // we need to await the promise to trigger the rejection early\n                    // so that it's already handled by the time we call\n                    // the RSC runtime. Otherwise, it will throw an unhandled\n                    // promise rejection error in the renderer.\n                    await promise;\n                } catch  {\n                // swallow error, it's gonna be handled on the client\n                }\n                return {\n                    type: 'done',\n                    result: await finalizeAndGenerateFlight(req, ctx, requestStore, {\n                        skipFlight: false,\n                        actionResult: promise,\n                        temporaryReferences\n                    })\n                };\n            }\n            return {\n                type: 'not-found'\n            };\n        }\n        if (isFetchAction) {\n            res.statusCode = 500;\n            await executeRevalidates(workStore);\n            const promise = Promise.reject(err);\n            try {\n                // we need to await the promise to trigger the rejection early\n                // so that it's already handled by the time we call\n                // the RSC runtime. Otherwise, it will throw an unhandled\n                // promise rejection error in the renderer.\n                await promise;\n            } catch  {\n            // swallow error, it's gonna be handled on the client\n            }\n            return {\n                type: 'done',\n                result: await generateFlight(req, ctx, requestStore, {\n                    actionResult: promise,\n                    // if the page was not revalidated, or if the action was forwarded from another worker, we can skip the rendering the flight tree\n                    skipFlight: !workStore.pathWasRevalidated || actionWasForwarded,\n                    temporaryReferences\n                })\n            };\n        }\n        throw err;\n    }\n}\n/**\n * Attempts to find the module ID for the action from the module map. When this fails, it could be a deployment skew where\n * the action came from a different deployment. It could also simply be an invalid POST request that is not a server action.\n * In either case, we'll throw an error to be handled by the caller.\n */ function getActionModIdOrError(actionId, serverModuleMap) {\n    var _serverModuleMap_actionId;\n    // if we're missing the action ID header, we can't do any further processing\n    if (!actionId) {\n        throw Object.defineProperty(new InvariantError(\"Missing 'next-action' header.\"), \"__NEXT_ERROR_CODE\", {\n            value: \"E664\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const actionModId = (_serverModuleMap_actionId = serverModuleMap[actionId]) == null ? void 0 : _serverModuleMap_actionId.id;\n    if (!actionModId) {\n        throw Object.defineProperty(new Error(`Failed to find Server Action \"${actionId}\". This request might be from an older or newer deployment.\\nRead more: https://nextjs.org/docs/messages/failed-to-find-server-action`), \"__NEXT_ERROR_CODE\", {\n            value: \"E665\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    return actionModId;\n}\n\n//# sourceMappingURL=action-handler.js.map","// Provider for the `useServerInsertedHTML` API to register callbacks to insert\n// elements into the HTML stream.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { ServerInsertedHTMLContext } from '../../shared/lib/server-inserted-html.shared-runtime';\nexport function createServerInsertedHTML() {\n    const serverInsertedHTMLCallbacks = [];\n    const addInsertedHtml = (handler)=>{\n        serverInsertedHTMLCallbacks.push(handler);\n    };\n    return {\n        ServerInsertedHTMLProvider ({ children }) {\n            return /*#__PURE__*/ _jsx(ServerInsertedHTMLContext.Provider, {\n                value: addInsertedHtml,\n                children: children\n            });\n        },\n        renderServerInsertedHTML () {\n            return serverInsertedHTMLCallbacks.map((callback, index)=>/*#__PURE__*/ _jsx(React.Fragment, {\n                    children: callback()\n                }, '__next_server_inserted__' + index));\n        }\n    };\n}\n\n//# sourceMappingURL=server-inserted-html.js.map","export function encodeURIPath(file: string) {\n  return file\n    .split('/')\n    .map((p) => encodeURIComponent(p))\n    .join('/')\n}\n","import { encodeURIPath } from '../../shared/lib/encode-uri-path';\nimport ReactDOM from 'react-dom';\nexport function getRequiredScripts(buildManifest, assetPrefix, crossOrigin, SRIManifest, qs, nonce, pagePath) {\n    var _buildManifest_rootMainFilesTree;\n    let preinitScripts;\n    let preinitScriptCommands = [];\n    const bootstrapScript = {\n        src: '',\n        crossOrigin\n    };\n    const files = (((_buildManifest_rootMainFilesTree = buildManifest.rootMainFilesTree) == null ? void 0 : _buildManifest_rootMainFilesTree[pagePath]) || buildManifest.rootMainFiles).map(encodeURIPath);\n    if (files.length === 0) {\n        throw Object.defineProperty(new Error('Invariant: missing bootstrap script. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n            value: \"E459\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    if (SRIManifest) {\n        bootstrapScript.src = `${assetPrefix}/_next/` + files[0] + qs;\n        bootstrapScript.integrity = SRIManifest[files[0]];\n        for(let i = 1; i < files.length; i++){\n            const src = `${assetPrefix}/_next/` + files[i] + qs;\n            const integrity = SRIManifest[files[i]];\n            preinitScriptCommands.push(src, integrity);\n        }\n        preinitScripts = ()=>{\n            // preinitScriptCommands is a double indexed array of src/integrity pairs\n            for(let i = 0; i < preinitScriptCommands.length; i += 2){\n                ReactDOM.preinit(preinitScriptCommands[i], {\n                    as: 'script',\n                    integrity: preinitScriptCommands[i + 1],\n                    crossOrigin,\n                    nonce\n                });\n            }\n        };\n    } else {\n        bootstrapScript.src = `${assetPrefix}/_next/` + files[0] + qs;\n        for(let i = 1; i < files.length; i++){\n            const src = `${assetPrefix}/_next/` + files[i] + qs;\n            preinitScriptCommands.push(src);\n        }\n        preinitScripts = ()=>{\n            // preinitScriptCommands is a singled indexed array of src values\n            for(let i = 0; i < preinitScriptCommands.length; i++){\n                ReactDOM.preinit(preinitScriptCommands[i], {\n                    as: 'script',\n                    nonce,\n                    crossOrigin\n                });\n            }\n        };\n    }\n    return [\n        preinitScripts,\n        bootstrapScript\n    ];\n}\n\n//# sourceMappingURL=required-scripts.js.map","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { isHTTPAccessFallbackError } from '../../client/components/http-access-fallback/http-access-fallback';\nimport { getURLFromRedirectError, getRedirectStatusCodeFromError } from '../../client/components/redirect';\nimport { isRedirectError } from '../../client/components/redirect-error';\nimport { renderToReadableStream } from 'react-dom/server.edge';\nimport { streamToString } from '../stream-utils/node-web-streams-helper';\nimport { RedirectStatusCode } from '../../client/components/redirect-status-code';\nimport { addPathPrefix } from '../../shared/lib/router/utils/add-path-prefix';\nexport function makeGetServerInsertedHTML({ polyfills, renderServerInsertedHTML, serverCapturedErrors, tracingMetadata, basePath }) {\n    let flushedErrorMetaTagsUntilIndex = 0;\n    // flag for static content that only needs to be flushed once\n    let hasFlushedInitially = false;\n    const polyfillTags = polyfills.map((polyfill)=>{\n        return /*#__PURE__*/ _jsx(\"script\", {\n            ...polyfill\n        }, polyfill.src);\n    });\n    return async function getServerInsertedHTML() {\n        // Loop through all the errors that have been captured but not yet\n        // flushed.\n        const errorMetaTags = [];\n        while(flushedErrorMetaTagsUntilIndex < serverCapturedErrors.length){\n            const error = serverCapturedErrors[flushedErrorMetaTagsUntilIndex];\n            flushedErrorMetaTagsUntilIndex++;\n            if (isHTTPAccessFallbackError(error)) {\n                errorMetaTags.push(/*#__PURE__*/ _jsx(\"meta\", {\n                    name: \"robots\",\n                    content: \"noindex\"\n                }, error.digest), process.env.NODE_ENV === 'development' ? /*#__PURE__*/ _jsx(\"meta\", {\n                    name: \"next-error\",\n                    content: \"not-found\"\n                }, \"next-error\") : null);\n            } else if (isRedirectError(error)) {\n                const redirectUrl = addPathPrefix(getURLFromRedirectError(error), basePath);\n                const statusCode = getRedirectStatusCodeFromError(error);\n                const isPermanent = statusCode === RedirectStatusCode.PermanentRedirect ? true : false;\n                if (redirectUrl) {\n                    errorMetaTags.push(/*#__PURE__*/ _jsx(\"meta\", {\n                        id: \"__next-page-redirect\",\n                        httpEquiv: \"refresh\",\n                        content: `${isPermanent ? 0 : 1};url=${redirectUrl}`\n                    }, error.digest));\n                }\n            }\n        }\n        const traceMetaTags = (tracingMetadata || []).map(({ key, value }, index)=>/*#__PURE__*/ _jsx(\"meta\", {\n                name: key,\n                content: value\n            }, `next-trace-data-${index}`));\n        const serverInsertedHTML = renderServerInsertedHTML();\n        // Skip React rendering if we know the content is empty.\n        if (polyfillTags.length === 0 && traceMetaTags.length === 0 && errorMetaTags.length === 0 && Array.isArray(serverInsertedHTML) && serverInsertedHTML.length === 0) {\n            return '';\n        }\n        const stream = await renderToReadableStream(/*#__PURE__*/ _jsxs(_Fragment, {\n            children: [\n                /* Insert the polyfills if they haven't been flushed yet. */ hasFlushedInitially ? null : polyfillTags,\n                serverInsertedHTML,\n                hasFlushedInitially ? null : traceMetaTags,\n                errorMetaTags\n            ]\n        }), {\n            // Larger chunk because this isn't sent over the network.\n            // Let's set it to 1MB.\n            progressiveChunkSize: 1024 * 1024\n        });\n        hasFlushedInitially = true;\n        // There's no need to wait for the stream to be ready\n        // e.g. calling `await stream.allReady` because `streamToString` will\n        // wait and decode the stream progressively with better parallelism.\n        return streamToString(stream);\n    };\n}\n\n//# sourceMappingURL=make-get-server-inserted-html.js.map","/**\n * Get external stylesheet link hrefs based on server CSS manifest.\n */ export function getLinkAndScriptTags(clientReferenceManifest, filePath, injectedCSS, injectedScripts, collectNewImports) {\n    var _clientReferenceManifest_entryJSFiles;\n    const filePathWithoutExt = filePath.replace(/\\.[^.]+$/, '');\n    const cssChunks = new Set();\n    const jsChunks = new Set();\n    const entryCSSFiles = clientReferenceManifest.entryCSSFiles[filePathWithoutExt];\n    const entryJSFiles = ((_clientReferenceManifest_entryJSFiles = clientReferenceManifest.entryJSFiles) == null ? void 0 : _clientReferenceManifest_entryJSFiles[filePathWithoutExt]) ?? [];\n    if (entryCSSFiles) {\n        for (const css of entryCSSFiles){\n            if (!injectedCSS.has(css.path)) {\n                if (collectNewImports) {\n                    injectedCSS.add(css.path);\n                }\n                cssChunks.add(css);\n            }\n        }\n    }\n    if (entryJSFiles) {\n        for (const file of entryJSFiles){\n            if (!injectedScripts.has(file)) {\n                if (collectNewImports) {\n                    injectedScripts.add(file);\n                }\n                jsChunks.add(file);\n            }\n        }\n    }\n    return {\n        styles: [\n            ...cssChunks\n        ],\n        scripts: [\n            ...jsChunks\n        ]\n    };\n}\n\n//# sourceMappingURL=get-css-inlined-link-tags.js.map","/**\n * Get hrefs for fonts to preload\n * Returns null if there are no fonts at all.\n * Returns string[] if there are fonts to preload (font paths)\n * Returns empty string[] if there are fonts but none to preload and no other fonts have been preloaded\n * Returns null if there are fonts but none to preload and at least some were previously preloaded\n */ export function getPreloadableFonts(nextFontManifest, filePath, injectedFontPreloadTags) {\n    if (!nextFontManifest || !filePath) {\n        return null;\n    }\n    const filepathWithoutExtension = filePath.replace(/\\.[^.]+$/, '');\n    const fontFiles = new Set();\n    let foundFontUsage = false;\n    const preloadedFontFiles = nextFontManifest.app[filepathWithoutExtension];\n    if (preloadedFontFiles) {\n        foundFontUsage = true;\n        for (const fontFile of preloadedFontFiles){\n            if (!injectedFontPreloadTags.has(fontFile)) {\n                fontFiles.add(fontFile);\n                injectedFontPreloadTags.add(fontFile);\n            }\n        }\n    }\n    if (fontFiles.size) {\n        return [\n            ...fontFiles\n        ].sort();\n    } else if (foundFontUsage && injectedFontPreloadTags.size === 0) {\n        return [];\n    } else {\n        return null;\n    }\n}\n\n//# sourceMappingURL=get-preloadable-fonts.js.map","export function hasLoadingComponentInTree(tree) {\n    const [, parallelRoutes, { loading }] = tree;\n    if (loading) {\n        return true;\n    }\n    return Object.values(parallelRoutes).some((parallelRoute)=>hasLoadingComponentInTree(parallelRoute));\n}\n\n//# sourceMappingURL=has-loading-component-in-tree.js.map","export interface ServerReferenceInfo {\n  type: 'server-action' | 'use-cache'\n  usedArgs: [boolean, boolean, boolean, boolean, boolean, boolean]\n  hasRestArgs: boolean\n}\n\n/**\n * Extracts info about the server reference for the given server reference ID by\n * parsing the first byte of the hex-encoded ID.\n *\n * ```\n * Bit positions: [7]      [6] [5] [4] [3] [2] [1]  [0]\n * Bits:          typeBit  argMask                  restArgs\n * ```\n *\n * If the `typeBit` is `1` the server reference represents a `\"use cache\"`\n * function, otherwise a server action.\n *\n * The `argMask` encodes whether the function uses the argument at the\n * respective position.\n *\n * The `restArgs` bit indicates whether the function uses a rest parameter. It's\n * also set to 1 if the function has more than 6 args.\n *\n * @param id hex-encoded server reference ID\n */\nexport function extractInfoFromServerReferenceId(\n  id: string\n): ServerReferenceInfo {\n  const infoByte = parseInt(id.slice(0, 2), 16)\n  const typeBit = (infoByte >> 7) & 0x1\n  const argMask = (infoByte >> 1) & 0x3f\n  const restArgs = infoByte & 0x1\n  const usedArgs = Array(6)\n\n  for (let index = 0; index < 6; index++) {\n    const bitPosition = 5 - index\n    const bit = (argMask >> bitPosition) & 0x1\n    usedArgs[index] = bit === 1\n  }\n\n  return {\n    type: typeBit === 1 ? 'use-cache' : 'server-action',\n    usedArgs: usedArgs as [\n      boolean,\n      boolean,\n      boolean,\n      boolean,\n      boolean,\n      boolean,\n    ],\n    hasRestArgs: restArgs === 1,\n  }\n}\n\n/**\n * Creates a sparse array containing only the used arguments based on the\n * provided action info.\n */\nexport function omitUnusedArgs(\n  args: unknown[],\n  info: ServerReferenceInfo\n): unknown[] {\n  const filteredArgs = new Array(args.length)\n\n  for (let index = 0; index < args.length; index++) {\n    if (\n      (index < 6 && info.usedArgs[index]) ||\n      // This assumes that the server reference info byte has the restArgs bit\n      // set to 1 if there are more than 6 args.\n      (index >= 6 && info.hasRestArgs)\n    ) {\n      filteredArgs[index] = args[index]\n    }\n  }\n\n  return filteredArgs\n}\n","import { extractInfoFromServerReferenceId } from '../shared/lib/server-reference-info';\nexport function isServerReference(value) {\n    return value.$$typeof === Symbol.for('react.server.reference');\n}\nexport function isUseCacheFunction(value) {\n    if (!isServerReference(value)) {\n        return false;\n    }\n    const { type } = extractInfoFromServerReferenceId(value.$$id);\n    return type === 'use-cache';\n}\nexport function isClientReference(mod) {\n    const defaultExport = (mod == null ? void 0 : mod.default) || mod;\n    return (defaultExport == null ? void 0 : defaultExport.$$typeof) === Symbol.for('react.client.reference');\n}\n\n//# sourceMappingURL=client-and-server-references.js.map","import { DEFAULT_SEGMENT_KEY } from '../../shared/lib/segment';\nexport async function getLayoutOrPageModule(loaderTree) {\n    const { layout, page, defaultPage } = loaderTree[2];\n    const isLayout = typeof layout !== 'undefined';\n    const isPage = typeof page !== 'undefined';\n    const isDefaultPage = typeof defaultPage !== 'undefined' && loaderTree[0] === DEFAULT_SEGMENT_KEY;\n    let mod = undefined;\n    let modType = undefined;\n    let filePath = undefined;\n    if (isLayout) {\n        mod = await layout[0]();\n        modType = 'layout';\n        filePath = layout[1];\n    } else if (isPage) {\n        mod = await page[0]();\n        modType = 'page';\n        filePath = page[1];\n    } else if (isDefaultPage) {\n        mod = await defaultPage[0]();\n        modType = 'page';\n        filePath = defaultPage[1];\n    }\n    return {\n        mod,\n        modType,\n        filePath\n    };\n}\nexport async function getComponentTypeModule(loaderTree, moduleType) {\n    const { [moduleType]: module } = loaderTree[2];\n    if (typeof module !== 'undefined') {\n        return await module[0]();\n    }\n    return undefined;\n}\n\n//# sourceMappingURL=app-dir-module.js.map","/**\n * Interop between \"export default\" and \"module.exports\".\n */ export function interopDefault(mod) {\n    return mod.default || mod;\n}\n\n//# sourceMappingURL=interop-default.js.map","import { DEFAULT_SEGMENT_KEY } from '../../shared/lib/segment';\nexport function parseLoaderTree(tree) {\n    const [segment, parallelRoutes, modules] = tree;\n    const { layout } = modules;\n    let { page } = modules;\n    // a __DEFAULT__ segment means that this route didn't match any of the\n    // segments in the route, so we should use the default page\n    page = segment === DEFAULT_SEGMENT_KEY ? modules.defaultPage : page;\n    const layoutOrPagePath = (layout == null ? void 0 : layout[1]) || (page == null ? void 0 : page[1]);\n    return {\n        page,\n        segment,\n        modules,\n        layoutOrPagePath,\n        parallelRoutes\n    };\n}\n\n//# sourceMappingURL=parse-loader-tree.js.map","const isDev = process.env.NODE_ENV === 'development';\nconst isTurbopack = !!process.env.TURBOPACK;\nexport function getAssetQueryString(ctx, addTimestamp) {\n    let qs = '';\n    // In development we add the request timestamp to allow react to\n    // reload assets when a new RSC response is received.\n    // Turbopack handles HMR of assets itself and react doesn't need to reload them\n    // so this approach is not needed for Turbopack.\n    const shouldAddVersion = isDev && !isTurbopack && addTimestamp;\n    if (shouldAddVersion) {\n        qs += `?v=${ctx.requestTimestamp}`;\n    }\n    if (ctx.renderOpts.deploymentId) {\n        qs += `${shouldAddVersion ? '&' : '?'}dpl=${ctx.renderOpts.deploymentId}`;\n    }\n    return qs;\n}\n\n//# sourceMappingURL=get-asset-query-string.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { encodeURIPath } from '../../shared/lib/encode-uri-path';\nimport { getAssetQueryString } from './get-asset-query-string';\n/**\n * Abstracts the rendering of CSS files based on whether they are inlined or not.\n * For inlined CSS, renders a <style> tag with the CSS content directly embedded.\n * For external CSS files, renders a <link> tag pointing to the CSS file.\n */ export function renderCssResource(entryCssFiles, ctx, preloadCallbacks) {\n    return entryCssFiles.map((entryCssFile, index)=>{\n        // `Precedence` is an opt-in signal for React to handle resource\n        // loading and deduplication, etc. It's also used as the key to sort\n        // resources so they will be injected in the correct order.\n        // During HMR, it's critical to use different `precedence` values\n        // for different stylesheets, so their order will be kept.\n        // https://github.com/facebook/react/pull/25060\n        const precedence = process.env.NODE_ENV === 'development' ? 'next_' + entryCssFile.path : 'next';\n        // In dev, Safari and Firefox will cache the resource during HMR:\n        // - https://github.com/vercel/next.js/issues/5860\n        // - https://bugs.webkit.org/show_bug.cgi?id=187726\n        // Because of this, we add a `?v=` query to bypass the cache during\n        // development. We need to also make sure that the number is always\n        // increasing.\n        const fullHref = `${ctx.assetPrefix}/_next/${encodeURIPath(entryCssFile.path)}${getAssetQueryString(ctx, true)}`;\n        if (entryCssFile.inlined && !ctx.parsedRequestHeaders.isRSCRequest) {\n            return /*#__PURE__*/ _jsx(\"style\", {\n                nonce: ctx.nonce,\n                // @ts-ignore\n                precedence: precedence,\n                href: fullHref,\n                children: entryCssFile.content\n            }, index);\n        }\n        preloadCallbacks == null ? void 0 : preloadCallbacks.push(()=>{\n            ctx.componentMod.preloadStyle(fullHref, ctx.renderOpts.crossOrigin, ctx.nonce);\n        });\n        return /*#__PURE__*/ _jsx(\"link\", {\n            rel: \"stylesheet\",\n            href: fullHref,\n            // @ts-ignore\n            precedence: precedence,\n            crossOrigin: ctx.renderOpts.crossOrigin,\n            nonce: ctx.nonce\n        }, index);\n    });\n}\n\n//# sourceMappingURL=render-css-resource.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { interopDefault } from './interop-default';\nimport { getLinkAndScriptTags } from './get-css-inlined-link-tags';\nimport { getAssetQueryString } from './get-asset-query-string';\nimport { encodeURIPath } from '../../shared/lib/encode-uri-path';\nimport { renderCssResource } from './render-css-resource';\nexport async function createComponentStylesAndScripts({ filePath, getComponent, injectedCSS, injectedJS, ctx }) {\n    const { styles: entryCssFiles, scripts: jsHrefs } = getLinkAndScriptTags(ctx.clientReferenceManifest, filePath, injectedCSS, injectedJS);\n    const styles = renderCssResource(entryCssFiles, ctx);\n    const scripts = jsHrefs ? jsHrefs.map((href, index)=>/*#__PURE__*/ _jsx(\"script\", {\n            src: `${ctx.assetPrefix}/_next/${encodeURIPath(href)}${getAssetQueryString(ctx, true)}`,\n            async: true\n        }, `script-${index}`)) : null;\n    const Comp = interopDefault(await getComponent());\n    return [\n        Comp,\n        styles,\n        scripts\n    ];\n}\n\n//# sourceMappingURL=create-component-styles-and-scripts.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { getLinkAndScriptTags } from './get-css-inlined-link-tags';\nimport { getPreloadableFonts } from './get-preloadable-fonts';\nimport { getAssetQueryString } from './get-asset-query-string';\nimport { encodeURIPath } from '../../shared/lib/encode-uri-path';\nimport { renderCssResource } from './render-css-resource';\nexport function getLayerAssets({ ctx, layoutOrPagePath, injectedCSS: injectedCSSWithCurrentLayout, injectedJS: injectedJSWithCurrentLayout, injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout, preloadCallbacks }) {\n    const { styles: styleTags, scripts: scriptTags } = layoutOrPagePath ? getLinkAndScriptTags(ctx.clientReferenceManifest, layoutOrPagePath, injectedCSSWithCurrentLayout, injectedJSWithCurrentLayout, true) : {\n        styles: [],\n        scripts: []\n    };\n    const preloadedFontFiles = layoutOrPagePath ? getPreloadableFonts(ctx.renderOpts.nextFontManifest, layoutOrPagePath, injectedFontPreloadTagsWithCurrentLayout) : null;\n    if (preloadedFontFiles) {\n        if (preloadedFontFiles.length) {\n            for(let i = 0; i < preloadedFontFiles.length; i++){\n                const fontFilename = preloadedFontFiles[i];\n                const ext = /\\.(woff|woff2|eot|ttf|otf)$/.exec(fontFilename)[1];\n                const type = `font/${ext}`;\n                const href = `${ctx.assetPrefix}/_next/${encodeURIPath(fontFilename)}`;\n                preloadCallbacks.push(()=>{\n                    ctx.componentMod.preloadFont(href, type, ctx.renderOpts.crossOrigin, ctx.nonce);\n                });\n            }\n        } else {\n            try {\n                let url = new URL(ctx.assetPrefix);\n                preloadCallbacks.push(()=>{\n                    ctx.componentMod.preconnect(url.origin, 'anonymous', ctx.nonce);\n                });\n            } catch (error) {\n                // assetPrefix must not be a fully qualified domain name. We assume\n                // we should preconnect to same origin instead\n                preloadCallbacks.push(()=>{\n                    ctx.componentMod.preconnect('/', 'anonymous', ctx.nonce);\n                });\n            }\n        }\n    }\n    const styles = renderCssResource(styleTags, ctx, preloadCallbacks);\n    const scripts = scriptTags ? scriptTags.map((href, index)=>{\n        const fullSrc = `${ctx.assetPrefix}/_next/${encodeURIPath(href)}${getAssetQueryString(ctx, true)}`;\n        return /*#__PURE__*/ _jsx(\"script\", {\n            src: fullSrc,\n            async: true,\n            nonce: ctx.nonce\n        }, `script-${index}`);\n    }) : [];\n    return styles.length || scripts.length ? [\n        ...styles,\n        ...scripts\n    ] : null;\n}\n\n//# sourceMappingURL=get-layer-assets.js.map","/**\n * Based on https://github.com/facebook/react/blob/d4e78c42a94be027b4dc7ed2659a5fddfbf9bd4e/packages/react/src/ReactFetch.js\n */ import * as React from 'react';\nimport { cloneResponse } from './clone-response';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nconst simpleCacheKey = '[\"GET\",[],null,\"follow\",null,null,null,null]' // generateCacheKey(new Request('https://blank'));\n;\nfunction generateCacheKey(request) {\n    // We pick the fields that goes into the key used to dedupe requests.\n    // We don't include the `cache` field, because we end up using whatever\n    // caching resulted from the first request.\n    // Notably we currently don't consider non-standard (or future) options.\n    // This might not be safe. TODO: warn for non-standard extensions differing.\n    // IF YOU CHANGE THIS UPDATE THE simpleCacheKey ABOVE.\n    return JSON.stringify([\n        request.method,\n        Array.from(request.headers.entries()),\n        request.mode,\n        request.redirect,\n        request.credentials,\n        request.referrer,\n        request.referrerPolicy,\n        request.integrity\n    ]);\n}\nexport function createDedupeFetch(originalFetch) {\n    const getCacheEntries = React.cache(// eslint-disable-next-line @typescript-eslint/no-unused-vars -- url is the cache key\n    (url)=>[]);\n    return function dedupeFetch(resource, options) {\n        if (options && options.signal) {\n            // If we're passed a signal, then we assume that\n            // someone else controls the lifetime of this object and opts out of\n            // caching. It's effectively the opt-out mechanism.\n            // Ideally we should be able to check this on the Request but\n            // it always gets initialized with its own signal so we don't\n            // know if it's supposed to override - unless we also override the\n            // Request constructor.\n            return originalFetch(resource, options);\n        }\n        // Normalize the Request\n        let url;\n        let cacheKey;\n        if (typeof resource === 'string' && !options) {\n            // Fast path.\n            cacheKey = simpleCacheKey;\n            url = resource;\n        } else {\n            // Normalize the request.\n            // if resource is not a string or a URL (its an instance of Request)\n            // then do not instantiate a new Request but instead\n            // reuse the request as to not disturb the body in the event it's a ReadableStream.\n            const request = typeof resource === 'string' || resource instanceof URL ? new Request(resource, options) : resource;\n            if (request.method !== 'GET' && request.method !== 'HEAD' || request.keepalive) {\n                // We currently don't dedupe requests that might have side-effects. Those\n                // have to be explicitly cached. We assume that the request doesn't have a\n                // body if it's GET or HEAD.\n                // keepalive gets treated the same as if you passed a custom cache signal.\n                return originalFetch(resource, options);\n            }\n            cacheKey = generateCacheKey(request);\n            url = request.url;\n        }\n        const cacheEntries = getCacheEntries(url);\n        for(let i = 0, j = cacheEntries.length; i < j; i += 1){\n            const [key, promise] = cacheEntries[i];\n            if (key === cacheKey) {\n                return promise.then(()=>{\n                    const response = cacheEntries[i][2];\n                    if (!response) throw Object.defineProperty(new InvariantError('No cached response'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E579\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                    // We're cloning the response using this utility because there exists\n                    // a bug in the undici library around response cloning. See the\n                    // following pull request for more details:\n                    // https://github.com/vercel/next.js/pull/73274\n                    const [cloned1, cloned2] = cloneResponse(response);\n                    cacheEntries[i][2] = cloned2;\n                    return cloned1;\n                });\n            }\n        }\n        // We pass the original arguments here in case normalizing the Request\n        // doesn't include all the options in this environment.\n        const promise = originalFetch(resource, options);\n        const entry = [\n            cacheKey,\n            promise,\n            null\n        ];\n        cacheEntries.push(entry);\n        return promise.then((response)=>{\n            // We're cloning the response using this utility because there exists\n            // a bug in the undici library around response cloning. See the\n            // following pull request for more details:\n            // https://github.com/vercel/next.js/pull/73274\n            const [cloned1, cloned2] = cloneResponse(response);\n            entry[2] = cloned2;\n            return cloned1;\n        });\n    };\n}\n\n//# sourceMappingURL=dedupe-fetch.js.map","import { AppRenderSpan, NextNodeServerSpan } from './trace/constants';\nimport { getTracer, SpanKind } from './trace/tracer';\nimport { CACHE_ONE_YEAR, INFINITE_CACHE, NEXT_CACHE_TAG_MAX_ITEMS, NEXT_CACHE_TAG_MAX_LENGTH } from '../../lib/constants';\nimport { markCurrentScopeAsDynamic } from '../app-render/dynamic-rendering';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupeFetch } from './dedupe-fetch';\nimport { CachedRouteKind, IncrementalCacheKind } from '../response-cache';\nimport { waitAtLeastOneReactRenderTask } from '../../lib/scheduler';\nimport { cloneResponse } from './clone-response';\nconst isEdgeRuntime = process.env.NEXT_RUNTIME === 'edge';\nexport const NEXT_PATCH_SYMBOL = Symbol.for('next-patch');\nfunction isFetchPatched() {\n    return globalThis[NEXT_PATCH_SYMBOL] === true;\n}\nexport function validateRevalidate(revalidateVal, route) {\n    try {\n        let normalizedRevalidate = undefined;\n        if (revalidateVal === false) {\n            normalizedRevalidate = INFINITE_CACHE;\n        } else if (typeof revalidateVal === 'number' && !isNaN(revalidateVal) && revalidateVal > -1) {\n            normalizedRevalidate = revalidateVal;\n        } else if (typeof revalidateVal !== 'undefined') {\n            throw Object.defineProperty(new Error(`Invalid revalidate value \"${revalidateVal}\" on \"${route}\", must be a non-negative number or false`), \"__NEXT_ERROR_CODE\", {\n                value: \"E179\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        return normalizedRevalidate;\n    } catch (err) {\n        // handle client component error from attempting to check revalidate value\n        if (err instanceof Error && err.message.includes('Invalid revalidate')) {\n            throw err;\n        }\n        return undefined;\n    }\n}\nexport function validateTags(tags, description) {\n    const validTags = [];\n    const invalidTags = [];\n    for(let i = 0; i < tags.length; i++){\n        const tag = tags[i];\n        if (typeof tag !== 'string') {\n            invalidTags.push({\n                tag,\n                reason: 'invalid type, must be a string'\n            });\n        } else if (tag.length > NEXT_CACHE_TAG_MAX_LENGTH) {\n            invalidTags.push({\n                tag,\n                reason: `exceeded max length of ${NEXT_CACHE_TAG_MAX_LENGTH}`\n            });\n        } else {\n            validTags.push(tag);\n        }\n        if (validTags.length > NEXT_CACHE_TAG_MAX_ITEMS) {\n            console.warn(`Warning: exceeded max tag count for ${description}, dropped tags:`, tags.slice(i).join(', '));\n            break;\n        }\n    }\n    if (invalidTags.length > 0) {\n        console.warn(`Warning: invalid tags passed to ${description}: `);\n        for (const { tag, reason } of invalidTags){\n            console.log(`tag: \"${tag}\" ${reason}`);\n        }\n    }\n    return validTags;\n}\nfunction trackFetchMetric(workStore, ctx) {\n    var _workStore_requestEndedState;\n    // If the static generation store is not available, we can't track the fetch\n    if (!workStore) return;\n    if ((_workStore_requestEndedState = workStore.requestEndedState) == null ? void 0 : _workStore_requestEndedState.ended) return;\n    const isDebugBuild = (!!process.env.NEXT_DEBUG_BUILD || process.env.NEXT_SSG_FETCH_METRICS === '1') && workStore.isStaticGeneration;\n    const isDevelopment = process.env.NODE_ENV === 'development';\n    if (// The only time we want to track fetch metrics outside of development is when\n    // we are performing a static generation & we are in debug mode.\n    !isDebugBuild && !isDevelopment) {\n        return;\n    }\n    workStore.fetchMetrics ??= [];\n    workStore.fetchMetrics.push({\n        ...ctx,\n        end: performance.timeOrigin + performance.now(),\n        idx: workStore.nextFetchId || 0\n    });\n}\nexport function createPatchedFetcher(originFetch, { workAsyncStorage, workUnitAsyncStorage }) {\n    // Create the patched fetch function. We don't set the type here, as it's\n    // verified as the return value of this function.\n    const patched = async (input, init)=>{\n        var _init_method, _init_next;\n        let url;\n        try {\n            url = new URL(input instanceof Request ? input.url : input);\n            url.username = '';\n            url.password = '';\n        } catch  {\n            // Error caused by malformed URL should be handled by native fetch\n            url = undefined;\n        }\n        const fetchUrl = (url == null ? void 0 : url.href) ?? '';\n        const method = (init == null ? void 0 : (_init_method = init.method) == null ? void 0 : _init_method.toUpperCase()) || 'GET';\n        // Do create a new span trace for internal fetches in the\n        // non-verbose mode.\n        const isInternal = (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next.internal) === true;\n        const hideSpan = process.env.NEXT_OTEL_FETCH_DISABLED === '1';\n        // We don't track fetch metrics for internal fetches\n        // so it's not critical that we have a start time, as it won't be recorded.\n        // This is to workaround a flaky issue where performance APIs might\n        // not be available and will require follow-up investigation.\n        const fetchStart = isInternal ? undefined : performance.timeOrigin + performance.now();\n        const workStore = workAsyncStorage.getStore();\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        // During static generation we track cache reads so we can reason about when they fill\n        let cacheSignal = workUnitStore && workUnitStore.type === 'prerender' ? workUnitStore.cacheSignal : null;\n        if (cacheSignal) {\n            cacheSignal.beginRead();\n        }\n        const result = getTracer().trace(isInternal ? NextNodeServerSpan.internalFetch : AppRenderSpan.fetch, {\n            hideSpan,\n            kind: SpanKind.CLIENT,\n            spanName: [\n                'fetch',\n                method,\n                fetchUrl\n            ].filter(Boolean).join(' '),\n            attributes: {\n                'http.url': fetchUrl,\n                'http.method': method,\n                'net.peer.name': url == null ? void 0 : url.hostname,\n                'net.peer.port': (url == null ? void 0 : url.port) || undefined\n            }\n        }, async ()=>{\n            var _getRequestMeta;\n            // If this is an internal fetch, we should not do any special treatment.\n            if (isInternal) {\n                return originFetch(input, init);\n            }\n            // If the workStore is not available, we can't do any\n            // special treatment of fetch, therefore fallback to the original\n            // fetch implementation.\n            if (!workStore) {\n                return originFetch(input, init);\n            }\n            // We should also fallback to the original fetch implementation if we\n            // are in draft mode, it does not constitute a static generation.\n            if (workStore.isDraftMode) {\n                return originFetch(input, init);\n            }\n            const isRequestInput = input && typeof input === 'object' && typeof input.method === 'string';\n            const getRequestMeta = (field)=>{\n                // If request input is present but init is not, retrieve from input first.\n                const value = init == null ? void 0 : init[field];\n                return value || (isRequestInput ? input[field] : null);\n            };\n            let finalRevalidate = undefined;\n            const getNextField = (field)=>{\n                var _init_next, _init_next1, _input_next;\n                return typeof (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next[field]) !== 'undefined' ? init == null ? void 0 : (_init_next1 = init.next) == null ? void 0 : _init_next1[field] : isRequestInput ? (_input_next = input.next) == null ? void 0 : _input_next[field] : undefined;\n            };\n            // RequestInit doesn't keep extra fields e.g. next so it's\n            // only available if init is used separate\n            let currentFetchRevalidate = getNextField('revalidate');\n            const tags = validateTags(getNextField('tags') || [], `fetch ${input.toString()}`);\n            const revalidateStore = workUnitStore && (workUnitStore.type === 'cache' || workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-ppr' || workUnitStore.type === 'prerender-legacy') ? workUnitStore : undefined;\n            if (revalidateStore) {\n                if (Array.isArray(tags)) {\n                    // Collect tags onto parent caches or parent prerenders.\n                    const collectedTags = revalidateStore.tags ?? (revalidateStore.tags = []);\n                    for (const tag of tags){\n                        if (!collectedTags.includes(tag)) {\n                            collectedTags.push(tag);\n                        }\n                    }\n                }\n            }\n            const implicitTags = workUnitStore == null ? void 0 : workUnitStore.implicitTags;\n            // Inside unstable-cache we treat it the same as force-no-store on the\n            // page.\n            const pageFetchCacheMode = workUnitStore && workUnitStore.type === 'unstable-cache' ? 'force-no-store' : workStore.fetchCache;\n            const isUsingNoStore = !!workStore.isUnstableNoStore;\n            let currentFetchCacheConfig = getRequestMeta('cache');\n            let cacheReason = '';\n            let cacheWarning;\n            if (typeof currentFetchCacheConfig === 'string' && typeof currentFetchRevalidate !== 'undefined') {\n                // If the revalidate value conflicts with the cache value, we should warn the user and unset the conflicting values.\n                const isConflictingRevalidate = // revalidate: 0 and cache: force-cache\n                currentFetchCacheConfig === 'force-cache' && currentFetchRevalidate === 0 || // revalidate: >0 or revalidate: false and cache: no-store\n                currentFetchCacheConfig === 'no-store' && (currentFetchRevalidate > 0 || currentFetchRevalidate === false);\n                if (isConflictingRevalidate) {\n                    cacheWarning = `Specified \"cache: ${currentFetchCacheConfig}\" and \"revalidate: ${currentFetchRevalidate}\", only one should be specified.`;\n                    currentFetchCacheConfig = undefined;\n                    currentFetchRevalidate = undefined;\n                }\n            }\n            const hasExplicitFetchCacheOptOut = // fetch config itself signals not to cache\n            currentFetchCacheConfig === 'no-cache' || currentFetchCacheConfig === 'no-store' || // the fetch isn't explicitly caching and the segment level cache config signals not to cache\n            // note: `pageFetchCacheMode` is also set by being in an unstable_cache context.\n            pageFetchCacheMode === 'force-no-store' || pageFetchCacheMode === 'only-no-store';\n            // If no explicit fetch cache mode is set, but dynamic = `force-dynamic` is set,\n            // we shouldn't consider caching the fetch. This is because the `dynamic` cache\n            // is considered a \"top-level\" cache mode, whereas something like `fetchCache` is more\n            // fine-grained. Top-level modes are responsible for setting reasonable defaults for the\n            // other configurations.\n            const noFetchConfigAndForceDynamic = !pageFetchCacheMode && !currentFetchCacheConfig && !currentFetchRevalidate && workStore.forceDynamic;\n            if (// force-cache was specified without a revalidate value. We set the revalidate value to false\n            // which will signal the cache to not revalidate\n            currentFetchCacheConfig === 'force-cache' && typeof currentFetchRevalidate === 'undefined') {\n                currentFetchRevalidate = false;\n            } else if (// if we are inside of \"use cache\"/\"unstable_cache\"\n            // we shouldn't set the revalidate to 0 as it's overridden\n            // by the cache context\n            (workUnitStore == null ? void 0 : workUnitStore.type) !== 'cache' && (hasExplicitFetchCacheOptOut || noFetchConfigAndForceDynamic)) {\n                currentFetchRevalidate = 0;\n            }\n            if (currentFetchCacheConfig === 'no-cache' || currentFetchCacheConfig === 'no-store') {\n                cacheReason = `cache: ${currentFetchCacheConfig}`;\n            }\n            finalRevalidate = validateRevalidate(currentFetchRevalidate, workStore.route);\n            const _headers = getRequestMeta('headers');\n            const initHeaders = typeof (_headers == null ? void 0 : _headers.get) === 'function' ? _headers : new Headers(_headers || {});\n            const hasUnCacheableHeader = initHeaders.get('authorization') || initHeaders.get('cookie');\n            const isUnCacheableMethod = ![\n                'get',\n                'head'\n            ].includes(((_getRequestMeta = getRequestMeta('method')) == null ? void 0 : _getRequestMeta.toLowerCase()) || 'get');\n            /**\n         * We automatically disable fetch caching under the following conditions:\n         * - Fetch cache configs are not set. Specifically:\n         *    - A page fetch cache mode is not set (export const fetchCache=...)\n         *    - A fetch cache mode is not set in the fetch call (fetch(url, { cache: ... }))\n         *      or the fetch cache mode is set to 'default'\n         *    - A fetch revalidate value is not set in the fetch call (fetch(url, { revalidate: ... }))\n         * - OR the fetch comes after a configuration that triggered dynamic rendering (e.g., reading cookies())\n         *   and the fetch was considered uncacheable (e.g., POST method or has authorization headers)\n         */ const hasNoExplicitCacheConfig = // eslint-disable-next-line eqeqeq\n            pageFetchCacheMode == undefined && // eslint-disable-next-line eqeqeq\n            (currentFetchCacheConfig == undefined || // when considering whether to opt into the default \"no-cache\" fetch semantics,\n            // a \"default\" cache config should be treated the same as no cache config\n            currentFetchCacheConfig === 'default') && // eslint-disable-next-line eqeqeq\n            currentFetchRevalidate == undefined;\n            const autoNoCache = // this condition is hit for null/undefined\n            // eslint-disable-next-line eqeqeq\n            hasNoExplicitCacheConfig && // we disable automatic no caching behavior during build time SSG so that we can still\n            // leverage the fetch cache between SSG workers\n            !workStore.isPrerendering || (hasUnCacheableHeader || isUnCacheableMethod) && revalidateStore && revalidateStore.revalidate === 0;\n            if (hasNoExplicitCacheConfig && workUnitStore !== undefined && workUnitStore.type === 'prerender') {\n                // If we have no cache config, and we're in Dynamic I/O prerendering, it'll be a dynamic call.\n                // We don't have to issue that dynamic call.\n                if (cacheSignal) {\n                    cacheSignal.endRead();\n                    cacheSignal = null;\n                }\n                return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n            }\n            switch(pageFetchCacheMode){\n                case 'force-no-store':\n                    {\n                        cacheReason = 'fetchCache = force-no-store';\n                        break;\n                    }\n                case 'only-no-store':\n                    {\n                        if (currentFetchCacheConfig === 'force-cache' || typeof finalRevalidate !== 'undefined' && finalRevalidate > 0) {\n                            throw Object.defineProperty(new Error(`cache: 'force-cache' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-no-store'`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E448\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                        cacheReason = 'fetchCache = only-no-store';\n                        break;\n                    }\n                case 'only-cache':\n                    {\n                        if (currentFetchCacheConfig === 'no-store') {\n                            throw Object.defineProperty(new Error(`cache: 'no-store' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-cache'`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E521\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                        break;\n                    }\n                case 'force-cache':\n                    {\n                        if (typeof currentFetchRevalidate === 'undefined' || currentFetchRevalidate === 0) {\n                            cacheReason = 'fetchCache = force-cache';\n                            finalRevalidate = INFINITE_CACHE;\n                        }\n                        break;\n                    }\n                default:\n            }\n            if (typeof finalRevalidate === 'undefined') {\n                if (pageFetchCacheMode === 'default-cache' && !isUsingNoStore) {\n                    finalRevalidate = INFINITE_CACHE;\n                    cacheReason = 'fetchCache = default-cache';\n                } else if (pageFetchCacheMode === 'default-no-store') {\n                    finalRevalidate = 0;\n                    cacheReason = 'fetchCache = default-no-store';\n                } else if (isUsingNoStore) {\n                    finalRevalidate = 0;\n                    cacheReason = 'noStore call';\n                } else if (autoNoCache) {\n                    finalRevalidate = 0;\n                    cacheReason = 'auto no cache';\n                } else {\n                    // TODO: should we consider this case an invariant?\n                    cacheReason = 'auto cache';\n                    finalRevalidate = revalidateStore ? revalidateStore.revalidate : INFINITE_CACHE;\n                }\n            } else if (!cacheReason) {\n                cacheReason = `revalidate: ${finalRevalidate}`;\n            }\n            if (// when force static is configured we don't bail from\n            // `revalidate: 0` values\n            !(workStore.forceStatic && finalRevalidate === 0) && // we don't consider autoNoCache to switch to dynamic for ISR\n            !autoNoCache && // If the revalidate value isn't currently set or the value is less\n            // than the current revalidate value, we should update the revalidate\n            // value.\n            revalidateStore && finalRevalidate < revalidateStore.revalidate) {\n                // If we were setting the revalidate value to 0, we should try to\n                // postpone instead first.\n                if (finalRevalidate === 0) {\n                    if (workUnitStore && workUnitStore.type === 'prerender') {\n                        if (cacheSignal) {\n                            cacheSignal.endRead();\n                            cacheSignal = null;\n                        }\n                        return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n                    } else {\n                        markCurrentScopeAsDynamic(workStore, workUnitStore, `revalidate: 0 fetch ${input} ${workStore.route}`);\n                    }\n                }\n                // We only want to set the revalidate store's revalidate time if it\n                // was explicitly set for the fetch call, i.e. currentFetchRevalidate.\n                if (revalidateStore && currentFetchRevalidate === finalRevalidate) {\n                    revalidateStore.revalidate = finalRevalidate;\n                }\n            }\n            const isCacheableRevalidate = typeof finalRevalidate === 'number' && finalRevalidate > 0;\n            let cacheKey;\n            const { incrementalCache } = workStore;\n            const useCacheOrRequestStore = (workUnitStore == null ? void 0 : workUnitStore.type) === 'request' || (workUnitStore == null ? void 0 : workUnitStore.type) === 'cache' ? workUnitStore : undefined;\n            if (incrementalCache && (isCacheableRevalidate || (useCacheOrRequestStore == null ? void 0 : useCacheOrRequestStore.serverComponentsHmrCache))) {\n                try {\n                    cacheKey = await incrementalCache.generateCacheKey(fetchUrl, isRequestInput ? input : init);\n                } catch (err) {\n                    console.error(`Failed to generate cache key for`, input);\n                }\n            }\n            const fetchIdx = workStore.nextFetchId ?? 1;\n            workStore.nextFetchId = fetchIdx + 1;\n            let handleUnlock = ()=>Promise.resolve();\n            const doOriginalFetch = async (isStale, cacheReasonOverride)=>{\n                const requestInputFields = [\n                    'cache',\n                    'credentials',\n                    'headers',\n                    'integrity',\n                    'keepalive',\n                    'method',\n                    'mode',\n                    'redirect',\n                    'referrer',\n                    'referrerPolicy',\n                    'window',\n                    'duplex',\n                    // don't pass through signal when revalidating\n                    ...isStale ? [] : [\n                        'signal'\n                    ]\n                ];\n                if (isRequestInput) {\n                    const reqInput = input;\n                    const reqOptions = {\n                        body: reqInput._ogBody || reqInput.body\n                    };\n                    for (const field of requestInputFields){\n                        // @ts-expect-error custom fields\n                        reqOptions[field] = reqInput[field];\n                    }\n                    input = new Request(reqInput.url, reqOptions);\n                } else if (init) {\n                    const { _ogBody, body, signal, ...otherInput } = init;\n                    init = {\n                        ...otherInput,\n                        body: _ogBody || body,\n                        signal: isStale ? undefined : signal\n                    };\n                }\n                // add metadata to init without editing the original\n                const clonedInit = {\n                    ...init,\n                    next: {\n                        ...init == null ? void 0 : init.next,\n                        fetchType: 'origin',\n                        fetchIdx\n                    }\n                };\n                return originFetch(input, clonedInit).then(async (res)=>{\n                    if (!isStale && fetchStart) {\n                        trackFetchMetric(workStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason: cacheReasonOverride || cacheReason,\n                            cacheStatus: finalRevalidate === 0 || cacheReasonOverride ? 'skip' : 'miss',\n                            cacheWarning,\n                            status: res.status,\n                            method: clonedInit.method || 'GET'\n                        });\n                    }\n                    if (res.status === 200 && incrementalCache && cacheKey && (isCacheableRevalidate || (useCacheOrRequestStore == null ? void 0 : useCacheOrRequestStore.serverComponentsHmrCache))) {\n                        const normalizedRevalidate = finalRevalidate >= INFINITE_CACHE ? CACHE_ONE_YEAR : finalRevalidate;\n                        if (workUnitStore && workUnitStore.type === 'prerender') {\n                            // We are prerendering at build time or revalidate time with dynamicIO so we need to\n                            // buffer the response so we can guarantee it can be read in a microtask\n                            const bodyBuffer = await res.arrayBuffer();\n                            const fetchedData = {\n                                headers: Object.fromEntries(res.headers.entries()),\n                                body: Buffer.from(bodyBuffer).toString('base64'),\n                                status: res.status,\n                                url: res.url\n                            };\n                            // We can skip checking the serverComponentsHmrCache because we aren't in\n                            // dev mode.\n                            await incrementalCache.set(cacheKey, {\n                                kind: CachedRouteKind.FETCH,\n                                data: fetchedData,\n                                revalidate: normalizedRevalidate\n                            }, {\n                                fetchCache: true,\n                                fetchUrl,\n                                fetchIdx,\n                                tags\n                            });\n                            await handleUnlock();\n                            // We return a new Response to the caller.\n                            return new Response(bodyBuffer, {\n                                headers: res.headers,\n                                status: res.status,\n                                statusText: res.statusText\n                            });\n                        } else {\n                            // We're cloning the response using this utility because there\n                            // exists a bug in the undici library around response cloning.\n                            // See the following pull request for more details:\n                            // https://github.com/vercel/next.js/pull/73274\n                            const [cloned1, cloned2] = cloneResponse(res);\n                            // We are dynamically rendering including dev mode. We want to return\n                            // the response to the caller as soon as possible because it might stream\n                            // over a very long time.\n                            cloned1.arrayBuffer().then(async (arrayBuffer)=>{\n                                var _useCacheOrRequestStore_serverComponentsHmrCache;\n                                const bodyBuffer = Buffer.from(arrayBuffer);\n                                const fetchedData = {\n                                    headers: Object.fromEntries(cloned1.headers.entries()),\n                                    body: bodyBuffer.toString('base64'),\n                                    status: cloned1.status,\n                                    url: cloned1.url\n                                };\n                                useCacheOrRequestStore == null ? void 0 : (_useCacheOrRequestStore_serverComponentsHmrCache = useCacheOrRequestStore.serverComponentsHmrCache) == null ? void 0 : _useCacheOrRequestStore_serverComponentsHmrCache.set(cacheKey, fetchedData);\n                                if (isCacheableRevalidate) {\n                                    await incrementalCache.set(cacheKey, {\n                                        kind: CachedRouteKind.FETCH,\n                                        data: fetchedData,\n                                        revalidate: normalizedRevalidate\n                                    }, {\n                                        fetchCache: true,\n                                        fetchUrl,\n                                        fetchIdx,\n                                        tags\n                                    });\n                                }\n                            }).catch((error)=>console.warn(`Failed to set fetch cache`, input, error)).finally(handleUnlock);\n                            return cloned2;\n                        }\n                    }\n                    // we had response that we determined shouldn't be cached so we return it\n                    // and don't cache it. This also needs to unlock the cache lock we acquired.\n                    await handleUnlock();\n                    return res;\n                }).catch((error)=>{\n                    handleUnlock();\n                    throw error;\n                });\n            };\n            let cacheReasonOverride;\n            let isForegroundRevalidate = false;\n            let isHmrRefreshCache = false;\n            if (cacheKey && incrementalCache) {\n                let cachedFetchData;\n                if ((useCacheOrRequestStore == null ? void 0 : useCacheOrRequestStore.isHmrRefresh) && useCacheOrRequestStore.serverComponentsHmrCache) {\n                    cachedFetchData = useCacheOrRequestStore.serverComponentsHmrCache.get(cacheKey);\n                    isHmrRefreshCache = true;\n                }\n                if (isCacheableRevalidate && !cachedFetchData) {\n                    handleUnlock = await incrementalCache.lock(cacheKey);\n                    const entry = workStore.isOnDemandRevalidate ? null : await incrementalCache.get(cacheKey, {\n                        kind: IncrementalCacheKind.FETCH,\n                        revalidate: finalRevalidate,\n                        fetchUrl,\n                        fetchIdx,\n                        tags,\n                        softTags: implicitTags == null ? void 0 : implicitTags.tags\n                    });\n                    if (hasNoExplicitCacheConfig) {\n                        // We sometimes use the cache to dedupe fetches that do not specify a cache configuration\n                        // In these cases we want to make sure we still exclude them from prerenders if dynamicIO is on\n                        // so we introduce an artificial Task boundary here.\n                        if (workUnitStore && workUnitStore.type === 'prerender') {\n                            await waitAtLeastOneReactRenderTask();\n                        }\n                    }\n                    if (entry) {\n                        await handleUnlock();\n                    } else {\n                        // in dev, incremental cache response will be null in case the browser adds `cache-control: no-cache` in the request headers\n                        cacheReasonOverride = 'cache-control: no-cache (hard refresh)';\n                    }\n                    if ((entry == null ? void 0 : entry.value) && entry.value.kind === CachedRouteKind.FETCH) {\n                        // when stale and is revalidating we wait for fresh data\n                        // so the revalidated entry has the updated data\n                        if (workStore.isRevalidate && entry.isStale) {\n                            isForegroundRevalidate = true;\n                        } else {\n                            if (entry.isStale) {\n                                workStore.pendingRevalidates ??= {};\n                                if (!workStore.pendingRevalidates[cacheKey]) {\n                                    const pendingRevalidate = doOriginalFetch(true).then(async (response)=>({\n                                            body: await response.arrayBuffer(),\n                                            headers: response.headers,\n                                            status: response.status,\n                                            statusText: response.statusText\n                                        })).finally(()=>{\n                                        workStore.pendingRevalidates ??= {};\n                                        delete workStore.pendingRevalidates[cacheKey || ''];\n                                    });\n                                    // Attach the empty catch here so we don't get a \"unhandled\n                                    // promise rejection\" warning.\n                                    pendingRevalidate.catch(console.error);\n                                    workStore.pendingRevalidates[cacheKey] = pendingRevalidate;\n                                }\n                            }\n                            cachedFetchData = entry.value.data;\n                        }\n                    }\n                }\n                if (cachedFetchData) {\n                    if (fetchStart) {\n                        trackFetchMetric(workStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason,\n                            cacheStatus: isHmrRefreshCache ? 'hmr' : 'hit',\n                            cacheWarning,\n                            status: cachedFetchData.status || 200,\n                            method: (init == null ? void 0 : init.method) || 'GET'\n                        });\n                    }\n                    const response = new Response(Buffer.from(cachedFetchData.body, 'base64'), {\n                        headers: cachedFetchData.headers,\n                        status: cachedFetchData.status\n                    });\n                    Object.defineProperty(response, 'url', {\n                        value: cachedFetchData.url\n                    });\n                    return response;\n                }\n            }\n            if (workStore.isStaticGeneration && init && typeof init === 'object') {\n                const { cache } = init;\n                // Delete `cache` property as Cloudflare Workers will throw an error\n                if (isEdgeRuntime) delete init.cache;\n                if (cache === 'no-store') {\n                    // If enabled, we should bail out of static generation.\n                    if (workUnitStore && workUnitStore.type === 'prerender') {\n                        if (cacheSignal) {\n                            cacheSignal.endRead();\n                            cacheSignal = null;\n                        }\n                        return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n                    } else {\n                        markCurrentScopeAsDynamic(workStore, workUnitStore, `no-store fetch ${input} ${workStore.route}`);\n                    }\n                }\n                const hasNextConfig = 'next' in init;\n                const { next = {} } = init;\n                if (typeof next.revalidate === 'number' && revalidateStore && next.revalidate < revalidateStore.revalidate) {\n                    if (next.revalidate === 0) {\n                        // If enabled, we should bail out of static generation.\n                        if (workUnitStore && workUnitStore.type === 'prerender') {\n                            return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n                        } else {\n                            markCurrentScopeAsDynamic(workStore, workUnitStore, `revalidate: 0 fetch ${input} ${workStore.route}`);\n                        }\n                    }\n                    if (!workStore.forceStatic || next.revalidate !== 0) {\n                        revalidateStore.revalidate = next.revalidate;\n                    }\n                }\n                if (hasNextConfig) delete init.next;\n            }\n            // if we are revalidating the whole page via time or on-demand and\n            // the fetch cache entry is stale we should still de-dupe the\n            // origin hit if it's a cache-able entry\n            if (cacheKey && isForegroundRevalidate) {\n                const pendingRevalidateKey = cacheKey;\n                workStore.pendingRevalidates ??= {};\n                let pendingRevalidate = workStore.pendingRevalidates[pendingRevalidateKey];\n                if (pendingRevalidate) {\n                    const revalidatedResult = await pendingRevalidate;\n                    return new Response(revalidatedResult.body, {\n                        headers: revalidatedResult.headers,\n                        status: revalidatedResult.status,\n                        statusText: revalidatedResult.statusText\n                    });\n                }\n                // We used to just resolve the Response and clone it however for\n                // static generation with dynamicIO we need the response to be able to\n                // be resolved in a microtask and cloning the response will never have\n                // a body that can resolve in a microtask in node (as observed through\n                // experimentation) So instead we await the body and then when it is\n                // available we construct manually cloned Response objects with the\n                // body as an ArrayBuffer. This will be resolvable in a microtask\n                // making it compatible with dynamicIO.\n                const pendingResponse = doOriginalFetch(true, cacheReasonOverride)// We're cloning the response using this utility because there\n                // exists a bug in the undici library around response cloning.\n                // See the following pull request for more details:\n                // https://github.com/vercel/next.js/pull/73274\n                .then(cloneResponse);\n                pendingRevalidate = pendingResponse.then(async (responses)=>{\n                    const response = responses[0];\n                    return {\n                        body: await response.arrayBuffer(),\n                        headers: response.headers,\n                        status: response.status,\n                        statusText: response.statusText\n                    };\n                }).finally(()=>{\n                    var _workStore_pendingRevalidates;\n                    // If the pending revalidate is not present in the store, then\n                    // we have nothing to delete.\n                    if (!((_workStore_pendingRevalidates = workStore.pendingRevalidates) == null ? void 0 : _workStore_pendingRevalidates[pendingRevalidateKey])) {\n                        return;\n                    }\n                    delete workStore.pendingRevalidates[pendingRevalidateKey];\n                });\n                // Attach the empty catch here so we don't get a \"unhandled promise\n                // rejection\" warning\n                pendingRevalidate.catch(()=>{});\n                workStore.pendingRevalidates[pendingRevalidateKey] = pendingRevalidate;\n                return pendingResponse.then((responses)=>responses[1]);\n            } else {\n                return doOriginalFetch(false, cacheReasonOverride);\n            }\n        });\n        if (cacheSignal) {\n            try {\n                return await result;\n            } finally{\n                if (cacheSignal) {\n                    cacheSignal.endRead();\n                }\n            }\n        }\n        return result;\n    };\n    // Attach the necessary properties to the patched fetch function.\n    // We don't use this to determine if the fetch function has been patched,\n    // but for external consumers to determine if the fetch function has been\n    // patched.\n    patched.__nextPatched = true;\n    patched.__nextGetStaticStore = ()=>workAsyncStorage;\n    patched._nextOriginalFetch = originFetch;\n    globalThis[NEXT_PATCH_SYMBOL] = true;\n    return patched;\n}\n// we patch fetch to collect cache information used for\n// determining if a page is static or not\nexport function patchFetch(options) {\n    // If we've already patched fetch, we should not patch it again.\n    if (isFetchPatched()) return;\n    // Grab the original fetch function. We'll attach this so we can use it in\n    // the patched fetch function.\n    const original = createDedupeFetch(globalThis.fetch);\n    // Set the global fetch to the patched fetch.\n    globalThis.fetch = createPatchedFetcher(original, options);\n}\n\n//# sourceMappingURL=patch-fetch.js.map","import { notFound } from './not-found'\n\nexport const PARALLEL_ROUTE_DEFAULT_PATH =\n  'next/dist/client/components/parallel-route-default.js'\n\nexport default function ParallelRouteDefault() {\n  notFound()\n}\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { isClientReference, isUseCacheFunction } from '../../lib/client-and-server-references';\nimport { getLayoutOrPageModule } from '../lib/app-dir-module';\nimport { interopDefault } from './interop-default';\nimport { parseLoaderTree } from './parse-loader-tree';\nimport { createComponentStylesAndScripts } from './create-component-styles-and-scripts';\nimport { getLayerAssets } from './get-layer-assets';\nimport { hasLoadingComponentInTree } from './has-loading-component-in-tree';\nimport { validateRevalidate } from '../lib/patch-fetch';\nimport { PARALLEL_ROUTE_DEFAULT_PATH } from '../../client/components/parallel-route-default';\nimport { getTracer } from '../lib/trace/tracer';\nimport { NextNodeServerSpan } from '../lib/trace/constants';\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external';\nimport { OUTLET_BOUNDARY_NAME } from '../../lib/metadata/metadata-constants';\n/**\n * Use the provided loader tree to create the React Component tree.\n */ export function createComponentTree(props) {\n    return getTracer().trace(NextNodeServerSpan.createComponentTree, {\n        spanName: 'build component tree'\n    }, ()=>createComponentTreeInternal(props));\n}\nfunction errorMissingDefaultExport(pagePath, convention) {\n    const normalizedPagePath = pagePath === '/' ? '' : pagePath;\n    throw Object.defineProperty(new Error(`The default export is not a React Component in \"${normalizedPagePath}/${convention}\"`), \"__NEXT_ERROR_CODE\", {\n        value: \"E45\",\n        enumerable: false,\n        configurable: true\n    });\n}\nconst cacheNodeKey = 'c';\nasync function createComponentTreeInternal({ loaderTree: tree, parentParams, rootLayoutIncluded, injectedCSS, injectedJS, injectedFontPreloadTags, getViewportReady, getMetadataReady, ctx, missingSlots, preloadCallbacks, authInterrupts, StreamingMetadataOutlet }) {\n    const { renderOpts: { nextConfigOutput, experimental }, workStore, componentMod: { HTTPAccessFallbackBoundary, LayoutRouter, RenderFromTemplateContext, OutletBoundary, ClientPageRoot, ClientSegmentRoot, createServerSearchParamsForServerPage, createPrerenderSearchParamsForClientPage, createServerParamsForServerSegment, createPrerenderParamsForClientSegment, serverHooks: { DynamicServerError }, Postpone }, pagePath, getDynamicParamFromSegment, isPrefetch, query } = ctx;\n    const { page, layoutOrPagePath, segment, modules, parallelRoutes } = parseLoaderTree(tree);\n    const { layout, template, error, loading, 'not-found': notFound, forbidden, unauthorized } = modules;\n    const injectedCSSWithCurrentLayout = new Set(injectedCSS);\n    const injectedJSWithCurrentLayout = new Set(injectedJS);\n    const injectedFontPreloadTagsWithCurrentLayout = new Set(injectedFontPreloadTags);\n    const layerAssets = getLayerAssets({\n        preloadCallbacks,\n        ctx,\n        layoutOrPagePath,\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout,\n        injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout\n    });\n    const [Template, templateStyles, templateScripts] = template ? await createComponentStylesAndScripts({\n        ctx,\n        filePath: template[1],\n        getComponent: template[0],\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout\n    }) : [\n        React.Fragment\n    ];\n    const [ErrorComponent, errorStyles, errorScripts] = error ? await createComponentStylesAndScripts({\n        ctx,\n        filePath: error[1],\n        getComponent: error[0],\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout\n    }) : [];\n    const [Loading, loadingStyles, loadingScripts] = loading ? await createComponentStylesAndScripts({\n        ctx,\n        filePath: loading[1],\n        getComponent: loading[0],\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout\n    }) : [];\n    const isLayout = typeof layout !== 'undefined';\n    const isPage = typeof page !== 'undefined';\n    const { mod: layoutOrPageMod, modType } = await getTracer().trace(NextNodeServerSpan.getLayoutOrPageModule, {\n        hideSpan: !(isLayout || isPage),\n        spanName: 'resolve segment modules',\n        attributes: {\n            'next.segment': segment\n        }\n    }, ()=>getLayoutOrPageModule(tree));\n    /**\n   * Checks if the current segment is a root layout.\n   */ const rootLayoutAtThisLevel = isLayout && !rootLayoutIncluded;\n    /**\n   * Checks if the current segment or any level above it has a root layout.\n   */ const rootLayoutIncludedAtThisLevelOrAbove = rootLayoutIncluded || rootLayoutAtThisLevel;\n    const [NotFound, notFoundStyles] = notFound ? await createComponentStylesAndScripts({\n        ctx,\n        filePath: notFound[1],\n        getComponent: notFound[0],\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout\n    }) : [];\n    const [Forbidden, forbiddenStyles] = authInterrupts && forbidden ? await createComponentStylesAndScripts({\n        ctx,\n        filePath: forbidden[1],\n        getComponent: forbidden[0],\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout\n    }) : [];\n    const [Unauthorized, unauthorizedStyles] = authInterrupts && unauthorized ? await createComponentStylesAndScripts({\n        ctx,\n        filePath: unauthorized[1],\n        getComponent: unauthorized[0],\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout\n    }) : [];\n    let dynamic = layoutOrPageMod == null ? void 0 : layoutOrPageMod.dynamic;\n    if (nextConfigOutput === 'export') {\n        if (!dynamic || dynamic === 'auto') {\n            dynamic = 'error';\n        } else if (dynamic === 'force-dynamic') {\n            // force-dynamic is always incompatible with 'export'. We must interrupt the build\n            throw Object.defineProperty(new StaticGenBailoutError(`Page with \\`dynamic = \"force-dynamic\"\\` couldn't be exported. \\`output: \"export\"\\` requires all pages be renderable statically because there is no runtime server to dynamically render routes in this output format. Learn more: https://nextjs.org/docs/app/building-your-application/deploying/static-exports`), \"__NEXT_ERROR_CODE\", {\n                value: \"E527\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    if (typeof dynamic === 'string') {\n        // the nested most config wins so we only force-static\n        // if it's configured above any parent that configured\n        // otherwise\n        if (dynamic === 'error') {\n            workStore.dynamicShouldError = true;\n        } else if (dynamic === 'force-dynamic') {\n            workStore.forceDynamic = true;\n            // TODO: (PPR) remove this bailout once PPR is the default\n            if (workStore.isStaticGeneration && !experimental.isRoutePPREnabled) {\n                // If the postpone API isn't available, we can't postpone the render and\n                // therefore we can't use the dynamic API.\n                const err = Object.defineProperty(new DynamicServerError(`Page with \\`dynamic = \"force-dynamic\"\\` won't be rendered statically.`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E585\",\n                    enumerable: false,\n                    configurable: true\n                });\n                workStore.dynamicUsageDescription = err.message;\n                workStore.dynamicUsageStack = err.stack;\n                throw err;\n            }\n        } else {\n            workStore.dynamicShouldError = false;\n            workStore.forceStatic = dynamic === 'force-static';\n        }\n    }\n    if (typeof (layoutOrPageMod == null ? void 0 : layoutOrPageMod.fetchCache) === 'string') {\n        workStore.fetchCache = layoutOrPageMod == null ? void 0 : layoutOrPageMod.fetchCache;\n    }\n    if (typeof (layoutOrPageMod == null ? void 0 : layoutOrPageMod.revalidate) !== 'undefined') {\n        validateRevalidate(layoutOrPageMod == null ? void 0 : layoutOrPageMod.revalidate, workStore.route);\n    }\n    if (typeof (layoutOrPageMod == null ? void 0 : layoutOrPageMod.revalidate) === 'number') {\n        const defaultRevalidate = layoutOrPageMod.revalidate;\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        if (workUnitStore) {\n            if (workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-legacy' || workUnitStore.type === 'prerender-ppr' || workUnitStore.type === 'cache') {\n                if (workUnitStore.revalidate > defaultRevalidate) {\n                    workUnitStore.revalidate = defaultRevalidate;\n                }\n            }\n        }\n        if (!workStore.forceStatic && workStore.isStaticGeneration && defaultRevalidate === 0 && // If the postpone API isn't available, we can't postpone the render and\n        // therefore we can't use the dynamic API.\n        !experimental.isRoutePPREnabled) {\n            const dynamicUsageDescription = `revalidate: 0 configured ${segment}`;\n            workStore.dynamicUsageDescription = dynamicUsageDescription;\n            throw Object.defineProperty(new DynamicServerError(dynamicUsageDescription), \"__NEXT_ERROR_CODE\", {\n                value: \"E394\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    const isStaticGeneration = workStore.isStaticGeneration;\n    // Assume the segment we're rendering contains only partial data if PPR is\n    // enabled and this is a statically generated response. This is used by the\n    // client Segment Cache after a prefetch to determine if it can skip the\n    // second request to fill in the dynamic data.\n    //\n    // It's OK for this to be `true` when the data is actually fully static, but\n    // it's not OK for this to be `false` when the data possibly contains holes.\n    // Although the value here is overly pessimistic, for prefetches, it will be\n    // replaced by a more specific value when the data is later processed into\n    // per-segment responses (see collect-segment-data.tsx)\n    //\n    // For dynamic requests, this must always be `false` because dynamic responses\n    // are never partial.\n    const isPossiblyPartialResponse = isStaticGeneration && experimental.isRoutePPREnabled === true;\n    const LayoutOrPage = layoutOrPageMod ? interopDefault(layoutOrPageMod) : undefined;\n    /**\n   * The React Component to render.\n   */ let MaybeComponent = LayoutOrPage;\n    if (process.env.NODE_ENV === 'development') {\n        const { isValidElementType } = require('next/dist/compiled/react-is');\n        if (typeof MaybeComponent !== 'undefined' && !isValidElementType(MaybeComponent)) {\n            errorMissingDefaultExport(pagePath, modType ?? 'page');\n        }\n        if (typeof ErrorComponent !== 'undefined' && !isValidElementType(ErrorComponent)) {\n            errorMissingDefaultExport(pagePath, 'error');\n        }\n        if (typeof Loading !== 'undefined' && !isValidElementType(Loading)) {\n            errorMissingDefaultExport(pagePath, 'loading');\n        }\n        if (typeof NotFound !== 'undefined' && !isValidElementType(NotFound)) {\n            errorMissingDefaultExport(pagePath, 'not-found');\n        }\n        if (typeof Forbidden !== 'undefined' && !isValidElementType(Forbidden)) {\n            errorMissingDefaultExport(pagePath, 'forbidden');\n        }\n        if (typeof Unauthorized !== 'undefined' && !isValidElementType(Unauthorized)) {\n            errorMissingDefaultExport(pagePath, 'unauthorized');\n        }\n    }\n    // Handle dynamic segment params.\n    const segmentParam = getDynamicParamFromSegment(segment);\n    // Create object holding the parent params and current params\n    let currentParams = parentParams;\n    if (segmentParam && segmentParam.value !== null) {\n        currentParams = {\n            ...parentParams,\n            [segmentParam.param]: segmentParam.value\n        };\n    }\n    // Resolve the segment param\n    const actualSegment = segmentParam ? segmentParam.treeSegment : segment;\n    // Use the same condition to render metadataOutlet as metadata\n    const metadataOutlet = StreamingMetadataOutlet ? /*#__PURE__*/ _jsx(StreamingMetadataOutlet, {}) : undefined;\n    const notFoundElement = NotFound ? /*#__PURE__*/ _jsxs(_Fragment, {\n        children: [\n            /*#__PURE__*/ _jsx(NotFound, {}),\n            notFoundStyles\n        ]\n    }) : undefined;\n    const forbiddenElement = Forbidden ? /*#__PURE__*/ _jsxs(_Fragment, {\n        children: [\n            /*#__PURE__*/ _jsx(Forbidden, {}),\n            forbiddenStyles\n        ]\n    }) : undefined;\n    const unauthorizedElement = Unauthorized ? /*#__PURE__*/ _jsxs(_Fragment, {\n        children: [\n            /*#__PURE__*/ _jsx(Unauthorized, {}),\n            unauthorizedStyles\n        ]\n    }) : undefined;\n    // TODO: Combine this `map` traversal with the loop below that turns the array\n    // into an object.\n    const parallelRouteMap = await Promise.all(Object.keys(parallelRoutes).map(async (parallelRouteKey)=>{\n        const isChildrenRouteKey = parallelRouteKey === 'children';\n        const parallelRoute = parallelRoutes[parallelRouteKey];\n        const notFoundComponent = isChildrenRouteKey ? notFoundElement : undefined;\n        const forbiddenComponent = isChildrenRouteKey ? forbiddenElement : undefined;\n        const unauthorizedComponent = isChildrenRouteKey ? unauthorizedElement : undefined;\n        // if we're prefetching and that there's a Loading component, we bail out\n        // otherwise we keep rendering for the prefetch.\n        // We also want to bail out if there's no Loading component in the tree.\n        let childCacheNodeSeedData = null;\n        if (// Before PPR, the way instant navigations work in Next.js is we\n        // prefetch everything up to the first route segment that defines a\n        // loading.tsx boundary. (We do the same if there's no loading\n        // boundary in the entire tree, because we don't want to prefetch too\n        // much) The rest of the tree is deferred until the actual navigation.\n        // It does not take into account whether the data is dynamic — even if\n        // the tree is completely static, it will still defer everything\n        // inside the loading boundary.\n        //\n        // This behavior predates PPR and is only relevant if the\n        // PPR flag is not enabled.\n        isPrefetch && (Loading || !hasLoadingComponentInTree(parallelRoute)) && // The approach with PPR is different — loading.tsx behaves like a\n        // regular Suspense boundary and has no special behavior.\n        //\n        // With PPR, we prefetch as deeply as possible, and only defer when\n        // dynamic data is accessed. If so, we only defer the nearest parent\n        // Suspense boundary of the dynamic data access, regardless of whether\n        // the boundary is defined by loading.tsx or a normal <Suspense>\n        // component in userspace.\n        //\n        // NOTE: In practice this usually means we'll end up prefetching more\n        // than we were before PPR, which may or may not be considered a\n        // performance regression by some apps. The plan is to address this\n        // before General Availability of PPR by introducing granular\n        // per-segment fetching, so we can reuse as much of the tree as\n        // possible during both prefetches and dynamic navigations. But during\n        // the beta period, we should be clear about this trade off in our\n        // communications.\n        !experimental.isRoutePPREnabled) {\n        // Don't prefetch this child. This will trigger a lazy fetch by the\n        // client router.\n        } else {\n            // Create the child component\n            if (process.env.NODE_ENV === 'development' && missingSlots) {\n                var _parsedTree_layoutOrPagePath;\n                // When we detect the default fallback (which triggers a 404), we collect the missing slots\n                // to provide more helpful debug information during development mode.\n                const parsedTree = parseLoaderTree(parallelRoute);\n                if ((_parsedTree_layoutOrPagePath = parsedTree.layoutOrPagePath) == null ? void 0 : _parsedTree_layoutOrPagePath.endsWith(PARALLEL_ROUTE_DEFAULT_PATH)) {\n                    missingSlots.add(parallelRouteKey);\n                }\n            }\n            const seedData = await createComponentTreeInternal({\n                loaderTree: parallelRoute,\n                parentParams: currentParams,\n                rootLayoutIncluded: rootLayoutIncludedAtThisLevelOrAbove,\n                injectedCSS: injectedCSSWithCurrentLayout,\n                injectedJS: injectedJSWithCurrentLayout,\n                injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout,\n                // `getMetadataReady` and `getViewportReady` are used to conditionally throw. In the case of parallel routes we will have more than one page\n                // but we only want to throw on the first one.\n                getMetadataReady: isChildrenRouteKey ? getMetadataReady : ()=>Promise.resolve(),\n                getViewportReady: isChildrenRouteKey ? getViewportReady : ()=>Promise.resolve(),\n                ctx,\n                missingSlots,\n                preloadCallbacks,\n                authInterrupts,\n                // `StreamingMetadataOutlet` is used to conditionally throw. In the case of parallel routes we will have more than one page\n                // but we only want to throw on the first one.\n                StreamingMetadataOutlet: isChildrenRouteKey ? StreamingMetadataOutlet : null\n            });\n            childCacheNodeSeedData = seedData;\n        }\n        // This is turned back into an object below.\n        return [\n            parallelRouteKey,\n            /*#__PURE__*/ _jsx(LayoutRouter, {\n                parallelRouterKey: parallelRouteKey,\n                // TODO-APP: Add test for loading returning `undefined`. This currently can't be tested as the `webdriver()` tab will wait for the full page to load before returning.\n                error: ErrorComponent,\n                errorStyles: errorStyles,\n                errorScripts: errorScripts,\n                template: /*#__PURE__*/ _jsx(Template, {\n                    children: /*#__PURE__*/ _jsx(RenderFromTemplateContext, {})\n                }),\n                templateStyles: templateStyles,\n                templateScripts: templateScripts,\n                notFound: notFoundComponent,\n                forbidden: forbiddenComponent,\n                unauthorized: unauthorizedComponent\n            }),\n            childCacheNodeSeedData\n        ];\n    }));\n    // Convert the parallel route map into an object after all promises have been resolved.\n    let parallelRouteProps = {};\n    let parallelRouteCacheNodeSeedData = {};\n    for (const parallelRoute of parallelRouteMap){\n        const [parallelRouteKey, parallelRouteProp, flightData] = parallelRoute;\n        parallelRouteProps[parallelRouteKey] = parallelRouteProp;\n        parallelRouteCacheNodeSeedData[parallelRouteKey] = flightData;\n    }\n    const loadingData = Loading ? [\n        /*#__PURE__*/ _jsx(Loading, {}, \"l\"),\n        loadingStyles,\n        loadingScripts\n    ] : null;\n    // When the segment does not have a layout or page we still have to add the layout router to ensure the path holds the loading component\n    if (!MaybeComponent) {\n        return [\n            actualSegment,\n            /*#__PURE__*/ _jsxs(React.Fragment, {\n                children: [\n                    layerAssets,\n                    parallelRouteProps.children\n                ]\n            }, cacheNodeKey),\n            parallelRouteCacheNodeSeedData,\n            loadingData,\n            isPossiblyPartialResponse\n        ];\n    }\n    const Component = MaybeComponent;\n    // If force-dynamic is used and the current render supports postponing, we\n    // replace it with a node that will postpone the render. This ensures that the\n    // postpone is invoked during the react render phase and not during the next\n    // render phase.\n    // @TODO this does not actually do what it seems like it would or should do. The idea is that\n    // if we are rendering in a force-dynamic mode and we can postpone we should only make the segments\n    // that ask for force-dynamic to be dynamic, allowing other segments to still prerender. However\n    // because this comes after the children traversal and the static generation store is mutated every segment\n    // along the parent path of a force-dynamic segment will hit this condition effectively making the entire\n    // render force-dynamic. We should refactor this function so that we can correctly track which segments\n    // need to be dynamic\n    if (workStore.isStaticGeneration && workStore.forceDynamic && experimental.isRoutePPREnabled) {\n        return [\n            actualSegment,\n            /*#__PURE__*/ _jsxs(React.Fragment, {\n                children: [\n                    /*#__PURE__*/ _jsx(Postpone, {\n                        reason: 'dynamic = \"force-dynamic\" was used',\n                        route: workStore.route\n                    }),\n                    layerAssets\n                ]\n            }, cacheNodeKey),\n            parallelRouteCacheNodeSeedData,\n            loadingData,\n            true\n        ];\n    }\n    const isClientComponent = isClientReference(layoutOrPageMod);\n    if (process.env.NODE_ENV === 'development' && 'params' in parallelRouteProps) {\n        // @TODO consider making this an error and running the check in build as well\n        console.error(`\"params\" is a reserved prop in Layouts and Pages and cannot be used as the name of a parallel route in ${segment}`);\n    }\n    if (isPage) {\n        const PageComponent = Component;\n        // Assign searchParams to props if this is a page\n        let pageElement;\n        if (isClientComponent) {\n            if (isStaticGeneration) {\n                const promiseOfParams = createPrerenderParamsForClientSegment(currentParams, workStore);\n                const promiseOfSearchParams = createPrerenderSearchParamsForClientPage(workStore);\n                pageElement = /*#__PURE__*/ _jsx(ClientPageRoot, {\n                    Component: PageComponent,\n                    searchParams: query,\n                    params: currentParams,\n                    promises: [\n                        promiseOfSearchParams,\n                        promiseOfParams\n                    ]\n                });\n            } else {\n                pageElement = /*#__PURE__*/ _jsx(ClientPageRoot, {\n                    Component: PageComponent,\n                    searchParams: query,\n                    params: currentParams\n                });\n            }\n        } else {\n            // If we are passing params to a server component Page we need to track\n            // their usage in case the current render mode tracks dynamic API usage.\n            const params = createServerParamsForServerSegment(currentParams, workStore);\n            // TODO(useCache): Should we use this trick also if dynamicIO is enabled,\n            // instead of relying on the searchParams being a hanging promise?\n            if (!experimental.dynamicIO && isUseCacheFunction(PageComponent)) {\n                const UseCachePageComponent = PageComponent;\n                // The \"use cache\" wrapper takes care of converting this into an\n                // erroring search params promise when passing it to the original\n                // function.\n                const searchParams = Promise.resolve({});\n                pageElement = /*#__PURE__*/ _jsx(UseCachePageComponent, {\n                    params: params,\n                    searchParams: searchParams,\n                    $$isPageComponent: true\n                });\n            } else {\n                // If we are passing searchParams to a server component Page we need to\n                // track their usage in case the current render mode tracks dynamic API\n                // usage.\n                const searchParams = createServerSearchParamsForServerPage(query, workStore);\n                pageElement = /*#__PURE__*/ _jsx(PageComponent, {\n                    params: params,\n                    searchParams: searchParams\n                });\n            }\n        }\n        return [\n            actualSegment,\n            /*#__PURE__*/ _jsxs(React.Fragment, {\n                children: [\n                    pageElement,\n                    layerAssets,\n                    /*#__PURE__*/ _jsxs(OutletBoundary, {\n                        children: [\n                            /*#__PURE__*/ _jsx(MetadataOutlet, {\n                                ready: getViewportReady\n                            }),\n                            /*#__PURE__*/ _jsx(MetadataOutlet, {\n                                ready: getMetadataReady\n                            }),\n                            metadataOutlet\n                        ]\n                    })\n                ]\n            }, cacheNodeKey),\n            parallelRouteCacheNodeSeedData,\n            loadingData,\n            isPossiblyPartialResponse\n        ];\n    } else {\n        const SegmentComponent = Component;\n        const isRootLayoutWithChildrenSlotAndAtLeastOneMoreSlot = rootLayoutAtThisLevel && 'children' in parallelRoutes && Object.keys(parallelRoutes).length > 1;\n        let segmentNode;\n        if (isClientComponent) {\n            let clientSegment;\n            if (isStaticGeneration) {\n                const promiseOfParams = createPrerenderParamsForClientSegment(currentParams, workStore);\n                clientSegment = /*#__PURE__*/ _jsx(ClientSegmentRoot, {\n                    Component: SegmentComponent,\n                    slots: parallelRouteProps,\n                    params: currentParams,\n                    promise: promiseOfParams\n                });\n            } else {\n                clientSegment = /*#__PURE__*/ _jsx(ClientSegmentRoot, {\n                    Component: SegmentComponent,\n                    slots: parallelRouteProps,\n                    params: currentParams\n                });\n            }\n            if (isRootLayoutWithChildrenSlotAndAtLeastOneMoreSlot) {\n                let notfoundClientSegment;\n                let forbiddenClientSegment;\n                let unauthorizedClientSegment;\n                // TODO-APP: This is a hack to support unmatched parallel routes, which will throw `notFound()`.\n                // This ensures that a `HTTPAccessFallbackBoundary` is available for when that happens,\n                // but it's not ideal, as it needlessly invokes the `NotFound` component and renders the `RootLayout` twice.\n                // We should instead look into handling the fallback behavior differently in development mode so that it doesn't\n                // rely on the `NotFound` behavior.\n                notfoundClientSegment = createErrorBoundaryClientSegmentRoot({\n                    ErrorBoundaryComponent: NotFound,\n                    errorElement: notFoundElement,\n                    ClientSegmentRoot,\n                    layerAssets,\n                    SegmentComponent,\n                    currentParams\n                });\n                forbiddenClientSegment = createErrorBoundaryClientSegmentRoot({\n                    ErrorBoundaryComponent: Forbidden,\n                    errorElement: forbiddenElement,\n                    ClientSegmentRoot,\n                    layerAssets,\n                    SegmentComponent,\n                    currentParams\n                });\n                unauthorizedClientSegment = createErrorBoundaryClientSegmentRoot({\n                    ErrorBoundaryComponent: Unauthorized,\n                    errorElement: unauthorizedElement,\n                    ClientSegmentRoot,\n                    layerAssets,\n                    SegmentComponent,\n                    currentParams\n                });\n                if (notfoundClientSegment || forbiddenClientSegment || unauthorizedClientSegment) {\n                    segmentNode = /*#__PURE__*/ _jsxs(HTTPAccessFallbackBoundary, {\n                        notFound: notfoundClientSegment,\n                        forbidden: forbiddenClientSegment,\n                        unauthorized: unauthorizedClientSegment,\n                        children: [\n                            layerAssets,\n                            clientSegment\n                        ]\n                    }, cacheNodeKey);\n                } else {\n                    segmentNode = /*#__PURE__*/ _jsxs(React.Fragment, {\n                        children: [\n                            layerAssets,\n                            clientSegment\n                        ]\n                    }, cacheNodeKey);\n                }\n            } else {\n                segmentNode = /*#__PURE__*/ _jsxs(React.Fragment, {\n                    children: [\n                        layerAssets,\n                        clientSegment\n                    ]\n                }, cacheNodeKey);\n            }\n        } else {\n            const params = createServerParamsForServerSegment(currentParams, workStore);\n            let serverSegment = /*#__PURE__*/ _jsx(SegmentComponent, {\n                ...parallelRouteProps,\n                params: params\n            });\n            if (isRootLayoutWithChildrenSlotAndAtLeastOneMoreSlot) {\n                // TODO-APP: This is a hack to support unmatched parallel routes, which will throw `notFound()`.\n                // This ensures that a `HTTPAccessFallbackBoundary` is available for when that happens,\n                // but it's not ideal, as it needlessly invokes the `NotFound` component and renders the `RootLayout` twice.\n                // We should instead look into handling the fallback behavior differently in development mode so that it doesn't\n                // rely on the `NotFound` behavior.\n                segmentNode = /*#__PURE__*/ _jsxs(HTTPAccessFallbackBoundary, {\n                    notFound: NotFound ? /*#__PURE__*/ _jsxs(_Fragment, {\n                        children: [\n                            layerAssets,\n                            /*#__PURE__*/ _jsxs(SegmentComponent, {\n                                params: params,\n                                children: [\n                                    notFoundStyles,\n                                    /*#__PURE__*/ _jsx(NotFound, {})\n                                ]\n                            })\n                        ]\n                    }) : undefined,\n                    children: [\n                        layerAssets,\n                        serverSegment\n                    ]\n                }, cacheNodeKey);\n            } else {\n                segmentNode = /*#__PURE__*/ _jsxs(React.Fragment, {\n                    children: [\n                        layerAssets,\n                        serverSegment\n                    ]\n                }, cacheNodeKey);\n            }\n        }\n        // For layouts we just render the component\n        return [\n            actualSegment,\n            segmentNode,\n            parallelRouteCacheNodeSeedData,\n            loadingData,\n            isPossiblyPartialResponse\n        ];\n    }\n}\nasync function MetadataOutlet({ ready }) {\n    const r = ready();\n    // We can avoid a extra microtask by unwrapping the instrumented promise directly if available.\n    if (r.status === 'rejected') {\n        throw r.value;\n    } else if (r.status !== 'fulfilled') {\n        await r;\n    }\n    return null;\n}\nMetadataOutlet.displayName = OUTLET_BOUNDARY_NAME;\nfunction createErrorBoundaryClientSegmentRoot({ ErrorBoundaryComponent, errorElement, ClientSegmentRoot, layerAssets, SegmentComponent, currentParams }) {\n    if (ErrorBoundaryComponent) {\n        const notFoundParallelRouteProps = {\n            children: errorElement\n        };\n        return /*#__PURE__*/ _jsxs(_Fragment, {\n            children: [\n                layerAssets,\n                /*#__PURE__*/ _jsx(ClientSegmentRoot, {\n                    Component: SegmentComponent,\n                    slots: notFoundParallelRouteProps,\n                    params: currentParams\n                })\n            ]\n        });\n    }\n    return null;\n}\nexport function getRootParams(loaderTree, getDynamicParamFromSegment) {\n    return getRootParamsImpl({}, loaderTree, getDynamicParamFromSegment);\n}\nfunction getRootParamsImpl(parentParams, loaderTree, getDynamicParamFromSegment) {\n    const { segment, modules: { layout }, parallelRoutes } = parseLoaderTree(loaderTree);\n    const segmentParam = getDynamicParamFromSegment(segment);\n    let currentParams = parentParams;\n    if (segmentParam && segmentParam.value !== null) {\n        currentParams = {\n            ...parentParams,\n            [segmentParam.param]: segmentParam.value\n        };\n    }\n    const isRootLayout = typeof layout !== 'undefined';\n    if (isRootLayout) {\n        return currentParams;\n    } else if (!parallelRoutes.children) {\n        // This should really be an error but there are bugs in Turbopack that cause\n        // the _not-found LoaderTree to not have any layouts. For rootParams sake\n        // this is somewhat irrelevant when you are not customizing the 404 page.\n        // If you are customizing 404\n        // TODO update rootParams to make all params optional if `/app/not-found.tsx` is defined\n        return currentParams;\n    } else {\n        return getRootParamsImpl(currentParams, // We stop looking for root params as soon as we hit the first layout\n        // and it is not possible to use parallel route children above the root layout\n        // so every parallelRoutes object that this function can visit will necessarily\n        // have a single `children` prop and no others.\n        parallelRoutes.children, getDynamicParamFromSegment);\n    }\n}\n\n//# sourceMappingURL=create-component-tree.js.map","import { matchSegment } from '../../client/components/match-segments';\nimport { getLinkAndScriptTags } from './get-css-inlined-link-tags';\nimport { getPreloadableFonts } from './get-preloadable-fonts';\nimport { createFlightRouterStateFromLoaderTree } from './create-flight-router-state-from-loader-tree';\nimport { hasLoadingComponentInTree } from './has-loading-component-in-tree';\nimport { DEFAULT_SEGMENT_KEY, addSearchParamsIfPageSegment } from '../../shared/lib/segment';\nimport { createComponentTree } from './create-component-tree';\nimport { getSegmentParam } from './get-segment-param';\n/**\n * Use router state to decide at what common layout to render the page.\n * This can either be the common layout between two pages or a specific place to start rendering from using the \"refetch\" marker in the tree.\n */ export async function walkTreeWithFlightRouterState({ loaderTreeToFilter, parentParams, flightRouterState, parentIsInsideSharedLayout, rscHead, injectedCSS, injectedJS, injectedFontPreloadTags, rootLayoutIncluded, getViewportReady, getMetadataReady, ctx, preloadCallbacks, StreamingMetadataOutlet }) {\n    const { renderOpts: { nextFontManifest, experimental }, query, isPrefetch, getDynamicParamFromSegment, parsedRequestHeaders } = ctx;\n    const [segment, parallelRoutes, modules] = loaderTreeToFilter;\n    const parallelRoutesKeys = Object.keys(parallelRoutes);\n    const { layout } = modules;\n    const isLayout = typeof layout !== 'undefined';\n    /**\n   * Checks if the current segment is a root layout.\n   */ const rootLayoutAtThisLevel = isLayout && !rootLayoutIncluded;\n    /**\n   * Checks if the current segment or any level above it has a root layout.\n   */ const rootLayoutIncludedAtThisLevelOrAbove = rootLayoutIncluded || rootLayoutAtThisLevel;\n    // Because this function walks to a deeper point in the tree to start rendering we have to track the dynamic parameters up to the point where rendering starts\n    const segmentParam = getDynamicParamFromSegment(segment);\n    const currentParams = // Handle null case where dynamic param is optional\n    segmentParam && segmentParam.value !== null ? {\n        ...parentParams,\n        [segmentParam.param]: segmentParam.value\n    } : parentParams;\n    const actualSegment = addSearchParamsIfPageSegment(segmentParam ? segmentParam.treeSegment : segment, query);\n    /**\n   * Decide if the current segment is where rendering has to start.\n   */ const renderComponentsOnThisLevel = // No further router state available\n    !flightRouterState || // Segment in router state does not match current segment\n    !matchSegment(actualSegment, flightRouterState[0]) || // Last item in the tree\n    parallelRoutesKeys.length === 0 || // Explicit refresh\n    flightRouterState[3] === 'refetch';\n    // Pre-PPR, the `loading` component signals to the router how deep to render the component tree\n    // to ensure prefetches are quick and inexpensive. If there's no `loading` component anywhere in the tree being rendered,\n    // the prefetch will be short-circuited to avoid requesting a potentially very expensive subtree. If there's a `loading`\n    // somewhere in the tree, we'll recursively render the component tree up until we encounter that loading component, and then stop.\n    // Check if we're inside the \"new\" part of the navigation — inside the\n    // shared layout. In the case of a prefetch, this can be true even if the\n    // segment matches, because the client might send a matching segment to\n    // indicate that it already has the data in its cache. But in order to find\n    // the correct loading boundary, we still need to track where the shared\n    // layout begins.\n    //\n    // TODO: We should rethink the protocol for dynamic requests. It might not\n    // make sense for the client to send a FlightRouterState, since that type is\n    // overloaded with other concerns.\n    const isInsideSharedLayout = renderComponentsOnThisLevel || parentIsInsideSharedLayout || flightRouterState[3] === 'inside-shared-layout';\n    if (isInsideSharedLayout && !experimental.isRoutePPREnabled && // If PPR is disabled, and this is a request for the route tree, then we\n    // never render any components. Only send the router state.\n    (parsedRequestHeaders.isRouteTreePrefetchRequest || // Otherwise, check for the presence of a `loading` component.\n    isPrefetch && !Boolean(modules.loading) && !hasLoadingComponentInTree(loaderTreeToFilter))) {\n        // Send only the router state.\n        // TODO: Even for a dynamic route, we should cache these responses,\n        // because they do not contain any render data (neither segment data nor\n        // the head). They can be made even more cacheable once we move the route\n        // params into a separate data structure.\n        const overriddenSegment = flightRouterState && // TODO: Why does canSegmentBeOverridden exist? Why don't we always just\n        // use `actualSegment`? Is it to avoid overwriting some state that's\n        // tracked by the client? Dig deeper to see if we can simplify this.\n        canSegmentBeOverridden(actualSegment, flightRouterState[0]) ? flightRouterState[0] : actualSegment;\n        const routerState = createFlightRouterStateFromLoaderTree(// Create router state using the slice of the loaderTree\n        loaderTreeToFilter, getDynamicParamFromSegment, query);\n        return [\n            [\n                overriddenSegment,\n                routerState,\n                null,\n                [\n                    null,\n                    null\n                ],\n                false\n            ]\n        ];\n    }\n    if (renderComponentsOnThisLevel) {\n        const overriddenSegment = flightRouterState && // TODO: Why does canSegmentBeOverridden exist? Why don't we always just\n        // use `actualSegment`? Is it to avoid overwriting some state that's\n        // tracked by the client? Dig deeper to see if we can simplify this.\n        canSegmentBeOverridden(actualSegment, flightRouterState[0]) ? flightRouterState[0] : actualSegment;\n        const routerState = createFlightRouterStateFromLoaderTree(// Create router state using the slice of the loaderTree\n        loaderTreeToFilter, getDynamicParamFromSegment, query);\n        // Create component tree using the slice of the loaderTree\n        const seedData = await createComponentTree(// This ensures flightRouterPath is valid and filters down the tree\n        {\n            ctx,\n            loaderTree: loaderTreeToFilter,\n            parentParams: currentParams,\n            injectedCSS,\n            injectedJS,\n            injectedFontPreloadTags,\n            // This is intentionally not \"rootLayoutIncludedAtThisLevelOrAbove\" as createComponentTree starts at the current level and does a check for \"rootLayoutAtThisLevel\" too.\n            rootLayoutIncluded,\n            getViewportReady,\n            getMetadataReady,\n            preloadCallbacks,\n            authInterrupts: experimental.authInterrupts,\n            StreamingMetadataOutlet\n        });\n        return [\n            [\n                overriddenSegment,\n                routerState,\n                seedData,\n                rscHead,\n                false\n            ]\n        ];\n    }\n    // If we are not rendering on this level we need to check if the current\n    // segment has a layout. If so, we need to track all the used CSS to make\n    // the result consistent.\n    const layoutPath = layout == null ? void 0 : layout[1];\n    const injectedCSSWithCurrentLayout = new Set(injectedCSS);\n    const injectedJSWithCurrentLayout = new Set(injectedJS);\n    const injectedFontPreloadTagsWithCurrentLayout = new Set(injectedFontPreloadTags);\n    if (layoutPath) {\n        getLinkAndScriptTags(ctx.clientReferenceManifest, layoutPath, injectedCSSWithCurrentLayout, injectedJSWithCurrentLayout, true);\n        getPreloadableFonts(nextFontManifest, layoutPath, injectedFontPreloadTagsWithCurrentLayout);\n    }\n    const paths = [];\n    // Walk through all parallel routes.\n    for (const parallelRouteKey of parallelRoutesKeys){\n        const parallelRoute = parallelRoutes[parallelRouteKey];\n        const subPaths = await walkTreeWithFlightRouterState({\n            ctx,\n            loaderTreeToFilter: parallelRoute,\n            parentParams: currentParams,\n            flightRouterState: flightRouterState && flightRouterState[1][parallelRouteKey],\n            parentIsInsideSharedLayout: isInsideSharedLayout,\n            rscHead,\n            injectedCSS: injectedCSSWithCurrentLayout,\n            injectedJS: injectedJSWithCurrentLayout,\n            injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout,\n            rootLayoutIncluded: rootLayoutIncludedAtThisLevelOrAbove,\n            getViewportReady,\n            getMetadataReady,\n            preloadCallbacks,\n            StreamingMetadataOutlet\n        });\n        for (const subPath of subPaths){\n            // we don't need to send over default routes in the flight data\n            // because they are always ignored by the client, unless it's a refetch\n            if (subPath[0] === DEFAULT_SEGMENT_KEY && flightRouterState && !!flightRouterState[1][parallelRouteKey][0] && flightRouterState[1][parallelRouteKey][3] !== 'refetch') {\n                continue;\n            }\n            paths.push([\n                actualSegment,\n                parallelRouteKey,\n                ...subPath\n            ]);\n        }\n    }\n    return paths;\n}\n/*\n * This function is used to determine if an existing segment can be overridden\n * by the incoming segment.\n */ const canSegmentBeOverridden = (existingSegment, segment)=>{\n    var _getSegmentParam;\n    if (Array.isArray(existingSegment) || !Array.isArray(segment)) {\n        return false;\n    }\n    return ((_getSegmentParam = getSegmentParam(existingSegment)) == null ? void 0 : _getSegmentParam.param) === segment[0];\n};\n\n//# sourceMappingURL=walk-tree-with-flight-router-state.js.map","import { arrayBufferToString, stringToUint8Array } from '../app-render/encryption-utils';\n/**\n * Parses serialized cache entries into a UseCacheCacheStore\n * @param entries - The serialized entries to parse\n * @returns A new UseCacheCacheStore containing the parsed entries\n */ export function parseUseCacheCacheStore(entries) {\n    const store = new Map();\n    for (const [key, { value, tags, stale, timestamp, expire, revalidate }] of entries){\n        store.set(key, Promise.resolve({\n            // Create a ReadableStream from the Uint8Array\n            value: new ReadableStream({\n                start (controller) {\n                    // Enqueue the Uint8Array to the stream\n                    controller.enqueue(stringToUint8Array(atob(value)));\n                    // Close the stream\n                    controller.close();\n                }\n            }),\n            tags,\n            stale,\n            timestamp,\n            expire,\n            revalidate\n        }));\n    }\n    return store;\n}\n/**\n * Serializes UseCacheCacheStore entries into an array of key-value pairs\n * @param entries - The store entries to stringify\n * @returns A promise that resolves to an array of key-value pairs with serialized values\n */ export async function serializeUseCacheCacheStore(entries) {\n    return Promise.all(Array.from(entries).map(([key, value])=>{\n        return value.then(async (entry)=>{\n            const [left, right] = entry.value.tee();\n            entry.value = right;\n            let binaryString = '';\n            // We want to encode the value as a string, but we aren't sure if the\n            // value is a a stream of UTF-8 bytes or not, so let's just encode it\n            // as a string using base64.\n            for await (const chunk of left){\n                binaryString += arrayBufferToString(chunk);\n            }\n            return [\n                key,\n                {\n                    // Encode the value as a base64 string.\n                    value: btoa(binaryString),\n                    tags: entry.tags,\n                    stale: entry.stale,\n                    timestamp: entry.timestamp,\n                    expire: entry.expire,\n                    revalidate: entry.revalidate\n                }\n            ];\n        }).catch(()=>{\n            // Any failed cache writes should be ignored as to not discard the\n            // entire cache.\n            return null;\n        });\n    }));\n}\n\n//# sourceMappingURL=cache-store.js.map","import { InvariantError } from '../../shared/lib/invariant-error';\nimport { serializeUseCacheCacheStore, parseUseCacheCacheStore } from './cache-store';\n/**\n * Serializes a resume data cache into a JSON string for storage or\n * transmission. Handles 'use cache' values, fetch responses, and encrypted\n * bound args for inline server functions.\n *\n * @param resumeDataCache - The immutable cache to serialize\n * @returns A Promise that resolves to the serialized cache as a JSON string, or\n * 'null' if empty\n */ export async function stringifyResumeDataCache(resumeDataCache) {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        throw Object.defineProperty(new InvariantError('`stringifyResumeDataCache` should not be called in edge runtime.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E602\",\n            enumerable: false,\n            configurable: true\n        });\n    } else {\n        if (resumeDataCache.fetch.size === 0 && resumeDataCache.cache.size === 0) {\n            return 'null';\n        }\n        const json = {\n            store: {\n                fetch: Object.fromEntries(Array.from(resumeDataCache.fetch.entries())),\n                cache: Object.fromEntries((await serializeUseCacheCacheStore(resumeDataCache.cache.entries())).filter((entry)=>entry !== null)),\n                encryptedBoundArgs: Object.fromEntries(Array.from(resumeDataCache.encryptedBoundArgs.entries()))\n            }\n        };\n        // Compress the JSON string using zlib. As the data we already want to\n        // decompress is in memory, we use the synchronous deflateSync function.\n        const { deflateSync } = require('node:zlib');\n        return deflateSync(JSON.stringify(json)).toString('base64');\n    }\n}\n/**\n * Creates a new empty mutable resume data cache for pre-rendering.\n * Initializes fresh Map instances for both the 'use cache' and fetch caches.\n * Used at the start of pre-rendering to begin collecting cached values.\n *\n * @returns A new empty PrerenderResumeDataCache instance\n */ export function createPrerenderResumeDataCache() {\n    return {\n        cache: new Map(),\n        fetch: new Map(),\n        encryptedBoundArgs: new Map(),\n        decryptedBoundArgs: new Map()\n    };\n}\nexport function createRenderResumeDataCache(prerenderResumeDataCacheOrPersistedCache) {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        throw Object.defineProperty(new InvariantError('`createRenderResumeDataCache` should not be called in edge runtime.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E556\",\n            enumerable: false,\n            configurable: true\n        });\n    } else {\n        if (typeof prerenderResumeDataCacheOrPersistedCache !== 'string') {\n            // If the cache is already a prerender cache, we can return it directly,\n            // we're just performing a type change.\n            return prerenderResumeDataCacheOrPersistedCache;\n        }\n        if (prerenderResumeDataCacheOrPersistedCache === 'null') {\n            return {\n                cache: new Map(),\n                fetch: new Map(),\n                encryptedBoundArgs: new Map(),\n                decryptedBoundArgs: new Map()\n            };\n        }\n        // This should be a compressed string. Let's decompress it using zlib.\n        // As the data we already want to decompress is in memory, we use the\n        // synchronous inflateSync function.\n        const { inflateSync } = require('node:zlib');\n        const json = JSON.parse(inflateSync(Buffer.from(prerenderResumeDataCacheOrPersistedCache, 'base64')).toString('utf-8'));\n        return {\n            cache: parseUseCacheCacheStore(Object.entries(json.store.cache)),\n            fetch: new Map(Object.entries(json.store.fetch)),\n            encryptedBoundArgs: new Map(Object.entries(json.store.encryptedBoundArgs)),\n            decryptedBoundArgs: new Map()\n        };\n    }\n}\n\n//# sourceMappingURL=resume-data-cache.js.map","import { createPrerenderResumeDataCache, createRenderResumeDataCache } from '../resume-data-cache/resume-data-cache';\nimport { stringifyResumeDataCache } from '../resume-data-cache/resume-data-cache';\nexport var DynamicState = /*#__PURE__*/ function(DynamicState) {\n    /**\n   * The dynamic access occurred during the RSC render phase.\n   */ DynamicState[DynamicState[\"DATA\"] = 1] = \"DATA\";\n    /**\n   * The dynamic access occurred during the HTML shell render phase.\n   */ DynamicState[DynamicState[\"HTML\"] = 2] = \"HTML\";\n    return DynamicState;\n}({});\nexport async function getDynamicHTMLPostponedState(data, fallbackRouteParams, prerenderResumeDataCache) {\n    if (!fallbackRouteParams || fallbackRouteParams.size === 0) {\n        const postponedString = JSON.stringify(data);\n        // Serialized as `<postponedString.length>:<postponedString><renderResumeDataCache>`\n        return `${postponedString.length}:${postponedString}${await stringifyResumeDataCache(createRenderResumeDataCache(prerenderResumeDataCache))}`;\n    }\n    const replacements = Array.from(fallbackRouteParams);\n    const replacementsString = JSON.stringify(replacements);\n    const dataString = JSON.stringify(data);\n    // Serialized as `<replacements.length><replacements><data>`\n    const postponedString = `${replacementsString.length}${replacementsString}${dataString}`;\n    // Serialized as `<postponedString.length>:<postponedString><renderResumeDataCache>`\n    return `${postponedString.length}:${postponedString}${await stringifyResumeDataCache(prerenderResumeDataCache)}`;\n}\nexport async function getDynamicDataPostponedState(prerenderResumeDataCache) {\n    return `4:null${await stringifyResumeDataCache(createRenderResumeDataCache(prerenderResumeDataCache))}`;\n}\nexport function parsePostponedState(state, params) {\n    try {\n        var _state_match;\n        const postponedStringLengthMatch = (_state_match = state.match(/^([0-9]*):/)) == null ? void 0 : _state_match[1];\n        if (!postponedStringLengthMatch) {\n            throw Object.defineProperty(new Error(`Invariant: invalid postponed state ${state}`), \"__NEXT_ERROR_CODE\", {\n                value: \"E314\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        const postponedStringLength = parseInt(postponedStringLengthMatch);\n        // We add a `:` to the end of the length as the first character of the\n        // postponed string is the length of the replacement entries.\n        const postponedString = state.slice(postponedStringLengthMatch.length + 1, postponedStringLengthMatch.length + postponedStringLength + 1);\n        const renderResumeDataCache = createRenderResumeDataCache(state.slice(postponedStringLengthMatch.length + postponedStringLength + 1));\n        try {\n            if (postponedString === 'null') {\n                return {\n                    type: 1,\n                    renderResumeDataCache\n                };\n            }\n            if (/^[0-9]/.test(postponedString)) {\n                var _postponedString_match;\n                const match = (_postponedString_match = postponedString.match(/^([0-9]*)/)) == null ? void 0 : _postponedString_match[1];\n                if (!match) {\n                    throw Object.defineProperty(new Error(`Invariant: invalid postponed state ${JSON.stringify(postponedString)}`), \"__NEXT_ERROR_CODE\", {\n                        value: \"E314\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                // This is the length of the replacements entries.\n                const length = parseInt(match);\n                const replacements = JSON.parse(postponedString.slice(match.length, // We then go to the end of the string.\n                match.length + length));\n                let postponed = postponedString.slice(match.length + length);\n                for (const [key, searchValue] of replacements){\n                    const value = (params == null ? void 0 : params[key]) ?? '';\n                    const replaceValue = Array.isArray(value) ? value.join('/') : value;\n                    postponed = postponed.replaceAll(searchValue, replaceValue);\n                }\n                return {\n                    type: 2,\n                    data: JSON.parse(postponed),\n                    renderResumeDataCache\n                };\n            }\n            return {\n                type: 2,\n                data: JSON.parse(postponedString),\n                renderResumeDataCache\n            };\n        } catch (err) {\n            console.error('Failed to parse postponed state', err);\n            return {\n                type: 1,\n                renderResumeDataCache\n            };\n        }\n    } catch (err) {\n        console.error('Failed to parse postponed state', err);\n        return {\n            type: 1,\n            renderResumeDataCache: createPrerenderResumeDataCache()\n        };\n    }\n}\nexport function getPostponedFromState(state) {\n    if (state.type === 1) {\n        return null;\n    }\n    return state.data;\n}\n\n//# sourceMappingURL=postponed-state.js.map","import { htmlEscapeJsonString } from '../htmlescape';\nconst isEdgeRuntime = process.env.NEXT_RUNTIME === 'edge';\nconst INLINE_FLIGHT_PAYLOAD_BOOTSTRAP = 0;\nconst INLINE_FLIGHT_PAYLOAD_DATA = 1;\nconst INLINE_FLIGHT_PAYLOAD_FORM_STATE = 2;\nconst INLINE_FLIGHT_PAYLOAD_BINARY = 3;\nconst flightResponses = new WeakMap();\nconst encoder = new TextEncoder();\n/**\n * Render Flight stream.\n * This is only used for renderToHTML, the Flight response does not need additional wrappers.\n */ export function useFlightStream(flightStream, clientReferenceManifest, nonce) {\n    const response = flightResponses.get(flightStream);\n    if (response) {\n        return response;\n    }\n    // react-server-dom-webpack/client.edge must not be hoisted for require cache clearing to work correctly\n    const { createFromReadableStream } = // eslint-disable-next-line import/no-extraneous-dependencies\n    require('react-server-dom-webpack/client.edge');\n    const newResponse = createFromReadableStream(flightStream, {\n        serverConsumerManifest: {\n            moduleLoading: clientReferenceManifest.moduleLoading,\n            moduleMap: isEdgeRuntime ? clientReferenceManifest.edgeSSRModuleMapping : clientReferenceManifest.ssrModuleMapping,\n            serverModuleMap: null\n        },\n        nonce\n    });\n    flightResponses.set(flightStream, newResponse);\n    return newResponse;\n}\n/**\n * Creates a ReadableStream provides inline script tag chunks for writing hydration\n * data to the client outside the React render itself.\n *\n * @param flightStream The RSC render stream\n * @param nonce optionally a nonce used during this particular render\n * @param formState optionally the formState used with this particular render\n * @returns a ReadableStream without the complete property. This signifies a lazy ReadableStream\n */ export function createInlinedDataReadableStream(flightStream, nonce, formState) {\n    const startScriptTag = nonce ? `<script nonce=${JSON.stringify(nonce)}>` : '<script>';\n    const flightReader = flightStream.getReader();\n    const decoder = new TextDecoder('utf-8', {\n        fatal: true\n    });\n    const readable = new ReadableStream({\n        type: 'bytes',\n        start (controller) {\n            try {\n                writeInitialInstructions(controller, startScriptTag, formState);\n            } catch (error) {\n                // during encoding or enqueueing forward the error downstream\n                controller.error(error);\n            }\n        },\n        async pull (controller) {\n            try {\n                const { done, value } = await flightReader.read();\n                if (value) {\n                    try {\n                        const decodedString = decoder.decode(value, {\n                            stream: !done\n                        });\n                        // The chunk cannot be decoded as valid UTF-8 string as it might\n                        // have arbitrary binary data.\n                        writeFlightDataInstruction(controller, startScriptTag, decodedString);\n                    } catch  {\n                        // The chunk cannot be decoded as valid UTF-8 string.\n                        writeFlightDataInstruction(controller, startScriptTag, value);\n                    }\n                }\n                if (done) {\n                    controller.close();\n                }\n            } catch (error) {\n                // There was a problem in the upstream reader or during decoding or enqueuing\n                // forward the error downstream\n                controller.error(error);\n            }\n        }\n    });\n    return readable;\n}\nfunction writeInitialInstructions(controller, scriptStart, formState) {\n    if (formState != null) {\n        controller.enqueue(encoder.encode(`${scriptStart}(self.__next_f=self.__next_f||[]).push(${htmlEscapeJsonString(JSON.stringify([\n            INLINE_FLIGHT_PAYLOAD_BOOTSTRAP\n        ]))});self.__next_f.push(${htmlEscapeJsonString(JSON.stringify([\n            INLINE_FLIGHT_PAYLOAD_FORM_STATE,\n            formState\n        ]))})</script>`));\n    } else {\n        controller.enqueue(encoder.encode(`${scriptStart}(self.__next_f=self.__next_f||[]).push(${htmlEscapeJsonString(JSON.stringify([\n            INLINE_FLIGHT_PAYLOAD_BOOTSTRAP\n        ]))})</script>`));\n    }\n}\nfunction writeFlightDataInstruction(controller, scriptStart, chunk) {\n    let htmlInlinedData;\n    if (typeof chunk === 'string') {\n        htmlInlinedData = htmlEscapeJsonString(JSON.stringify([\n            INLINE_FLIGHT_PAYLOAD_DATA,\n            chunk\n        ]));\n    } else {\n        // The chunk cannot be embedded as a UTF-8 string in the script tag.\n        // Instead let's inline it in base64.\n        // Credits to Devon Govett (devongovett) for the technique.\n        // https://github.com/devongovett/rsc-html-stream\n        const base64 = btoa(String.fromCodePoint(...chunk));\n        htmlInlinedData = htmlEscapeJsonString(JSON.stringify([\n            INLINE_FLIGHT_PAYLOAD_BINARY,\n            base64\n        ]));\n    }\n    controller.enqueue(encoder.encode(`${scriptStart}self.__next_f.push(${htmlInlinedData})</script>`));\n}\n\n//# sourceMappingURL=use-flight-response.js.map","import type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport type { FlightDataPath } from '../../../server/app-render/types'\n\nimport { createHrefFromUrl } from './create-href-from-url'\nimport { fillLazyItemsTillLeafWithHead } from './fill-lazy-items-till-leaf-with-head'\nimport { extractPathFromFlightRouterState } from './compute-changed-path'\nimport {\n  createSeededPrefetchCacheEntry,\n  STATIC_STALETIME_MS,\n} from './prefetch-cache-utils'\nimport { PrefetchKind, type PrefetchCacheEntry } from './router-reducer-types'\nimport { addRefreshMarkerToActiveParallelSegments } from './refetch-inactive-parallel-segments'\nimport { getFlightDataPartsFromPath } from '../../flight-data-helpers'\n\nexport interface InitialRouterStateParameters {\n  navigatedAt: number\n  initialCanonicalUrlParts: string[]\n  initialParallelRoutes: CacheNode['parallelRoutes']\n  initialFlightData: FlightDataPath[]\n  location: Location | null\n  couldBeIntercepted: boolean\n  postponed: boolean\n  prerendered: boolean\n}\n\nexport function createInitialRouterState({\n  navigatedAt,\n  initialFlightData,\n  initialCanonicalUrlParts,\n  initialParallelRoutes,\n  location,\n  couldBeIntercepted,\n  postponed,\n  prerendered,\n}: InitialRouterStateParameters) {\n  // When initialized on the server, the canonical URL is provided as an array of parts.\n  // This is to ensure that when the RSC payload streamed to the client, crawlers don't interpret it\n  // as a URL that should be crawled.\n  const initialCanonicalUrl = initialCanonicalUrlParts.join('/')\n  const normalizedFlightData = getFlightDataPartsFromPath(initialFlightData[0])\n  const {\n    tree: initialTree,\n    seedData: initialSeedData,\n    head: initialHead,\n  } = normalizedFlightData\n  // For the SSR render, seed data should always be available (we only send back a `null` response\n  // in the case of a `loading` segment, pre-PPR.)\n  const rsc = initialSeedData?.[1]\n  const loading = initialSeedData?.[3] ?? null\n\n  const cache: CacheNode = {\n    lazyData: null,\n    rsc,\n    prefetchRsc: null,\n    head: null,\n    prefetchHead: null,\n    // The cache gets seeded during the first render. `initialParallelRoutes` ensures the cache from the first render is there during the second render.\n    parallelRoutes: initialParallelRoutes,\n    loading,\n    navigatedAt,\n  }\n\n  const canonicalUrl =\n    // location.href is read as the initial value for canonicalUrl in the browser\n    // This is safe to do as canonicalUrl can't be rendered, it's only used to control the history updates in the useEffect further down in this file.\n    location\n      ? // window.location does not have the same type as URL but has all the fields createHrefFromUrl needs.\n        createHrefFromUrl(location)\n      : initialCanonicalUrl\n\n  addRefreshMarkerToActiveParallelSegments(initialTree, canonicalUrl)\n\n  const prefetchCache = new Map<string, PrefetchCacheEntry>()\n\n  // When the cache hasn't been seeded yet we fill the cache with the head.\n  if (initialParallelRoutes === null || initialParallelRoutes.size === 0) {\n    fillLazyItemsTillLeafWithHead(\n      navigatedAt,\n      cache,\n      undefined,\n      initialTree,\n      initialSeedData,\n      initialHead,\n      undefined\n    )\n  }\n\n  const initialState = {\n    tree: initialTree,\n    cache,\n    prefetchCache,\n    pushRef: {\n      pendingPush: false,\n      mpaNavigation: false,\n      // First render needs to preserve the previous window.history.state\n      // to avoid it being overwritten on navigation back/forward with MPA Navigation.\n      preserveCustomHistoryState: true,\n    },\n    focusAndScrollRef: {\n      apply: false,\n      onlyHashChange: false,\n      hashFragment: null,\n      segmentPaths: [],\n    },\n    canonicalUrl,\n    nextUrl:\n      // the || operator is intentional, the pathname can be an empty string\n      (extractPathFromFlightRouterState(initialTree) || location?.pathname) ??\n      null,\n  }\n\n  if (process.env.NODE_ENV !== 'development' && location) {\n    // Seed the prefetch cache with this page's data.\n    // This is to prevent needlessly re-prefetching a page that is already reusable,\n    // and will avoid triggering a loading state/data fetch stall when navigating back to the page.\n    // We don't currently do this in development because links aren't prefetched in development\n    // so having a mismatch between prefetch/no prefetch provides inconsistent behavior based on which page\n    // was loaded first.\n    const url = new URL(\n      `${location.pathname}${location.search}`,\n      location.origin\n    )\n\n    createSeededPrefetchCacheEntry({\n      url,\n      data: {\n        flightData: [normalizedFlightData],\n        canonicalUrl: undefined,\n        couldBeIntercepted: !!couldBeIntercepted,\n        prerendered,\n        postponed,\n        // TODO: The initial RSC payload includes both static and dynamic data\n        // in the same response, even if PPR is enabled. So if there's any\n        // dynamic data at all, we can't set a stale time. In the future we may\n        // add a way to split a single Flight stream into static and dynamic\n        // parts. But in the meantime we should at least make this work for\n        // fully static pages.\n        staleTime:\n          // In the old router, there was only a single configurable staleTime (experimental.staleTimes)\n          // As an abundance of caution, this will only set the initial staleTime to the configured value\n          // if we're not leveraging the segment cache, which has its own prefetching semantics.\n          prerendered && !process.env.__NEXT_CLIENT_SEGMENT_CACHE\n            ? STATIC_STALETIME_MS\n            : -1,\n      },\n      tree: initialState.tree,\n      prefetchCache: initialState.prefetchCache,\n      nextUrl: initialState.nextUrl,\n      kind: prerendered ? PrefetchKind.FULL : PrefetchKind.AUTO,\n    })\n  }\n\n  return initialState\n}\n","import { InvariantError } from '../../shared/lib/invariant-error';\nimport { isPrerenderInterruptedError } from './dynamic-rendering';\n/**\n * This is a utility function to make scheduling sequential tasks that run back to back easier.\n * We schedule on the same queue (setImmediate) at the same time to ensure no other events can sneak in between.\n */ export function prerenderAndAbortInSequentialTasks(prerender, abort) {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        throw Object.defineProperty(new InvariantError('`prerenderAndAbortInSequentialTasks` should not be called in edge runtime.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E538\",\n            enumerable: false,\n            configurable: true\n        });\n    } else {\n        return new Promise((resolve, reject)=>{\n            let pendingResult;\n            setImmediate(()=>{\n                try {\n                    pendingResult = prerender();\n                    pendingResult.catch(()=>{});\n                } catch (err) {\n                    reject(err);\n                }\n            });\n            setImmediate(()=>{\n                abort();\n                resolve(pendingResult);\n            });\n        });\n    }\n}\nexport function prerenderServerWithPhases(signal, render, ...remainingPhases) {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        throw Object.defineProperty(new InvariantError('`prerenderAndAbortInSequentialTasks` should not be called in edge runtime.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E538\",\n            enumerable: false,\n            configurable: true\n        });\n    } else {\n        return new Promise((resolve, reject)=>{\n            let result;\n            signal.addEventListener('abort', ()=>{\n                if (isPrerenderInterruptedError(signal.reason)) {\n                    result.markInterrupted();\n                } else {\n                    result.markComplete();\n                }\n            }, {\n                once: true\n            });\n            setImmediate(()=>{\n                try {\n                    result = new ServerPrerenderStreamResult(render());\n                } catch (err) {\n                    reject(err);\n                }\n            });\n            function runFinalTask() {\n                try {\n                    if (result) {\n                        result.markComplete();\n                        this();\n                    }\n                    resolve(result);\n                } catch (err) {\n                    reject(err);\n                }\n            }\n            function runNextTask() {\n                try {\n                    if (result) {\n                        result.markPhase();\n                        this();\n                    }\n                } catch (err) {\n                    reject(err);\n                }\n            }\n            let i = 0;\n            for(; i < remainingPhases.length - 1; i++){\n                const phase = remainingPhases[i];\n                setImmediate(runNextTask.bind(phase));\n            }\n            if (remainingPhases[i]) {\n                const finalPhase = remainingPhases[i];\n                setImmediate(runFinalTask.bind(finalPhase));\n            }\n        });\n    }\n}\nconst PENDING = 0;\nconst COMPLETE = 1;\nconst INTERRUPTED = 2;\nconst ERRORED = 3;\nexport class ServerPrerenderStreamResult {\n    constructor(stream){\n        this.status = PENDING;\n        this.reason = null;\n        this.trailingChunks = [];\n        this.currentChunks = [];\n        this.chunksByPhase = [\n            this.currentChunks\n        ];\n        const reader = stream.getReader();\n        const progress = ({ done, value })=>{\n            if (done) {\n                if (this.status === PENDING) {\n                    this.status = COMPLETE;\n                }\n                return;\n            }\n            if (this.status === PENDING || this.status === INTERRUPTED) {\n                this.currentChunks.push(value);\n            } else {\n                this.trailingChunks.push(value);\n            }\n            reader.read().then(progress, error);\n        };\n        const error = (reason)=>{\n            this.status = ERRORED;\n            this.reason = reason;\n        };\n        reader.read().then(progress, error);\n    }\n    markPhase() {\n        this.currentChunks = [];\n        this.chunksByPhase.push(this.currentChunks);\n    }\n    markComplete() {\n        if (this.status === PENDING) {\n            this.status = COMPLETE;\n        }\n    }\n    markInterrupted() {\n        this.status = INTERRUPTED;\n    }\n    /**\n   * Returns a stream which only releases chunks when `releasePhase` is called. This stream will never \"complete\" because\n   * we rely upon the stream remaining open when prerendering to avoid triggering errors for incomplete chunks in the client.\n   *\n   * asPhasedStream is expected to be called once per result however it is safe to call multiple times as long as we have not\n   * transferred the underlying data. Generally this will only happen when streaming to a response\n   */ asPhasedStream() {\n        switch(this.status){\n            case COMPLETE:\n            case INTERRUPTED:\n                return new PhasedStream(this.chunksByPhase);\n            default:\n                throw Object.defineProperty(new InvariantError(`ServerPrerenderStreamResult cannot be consumed as a stream because it is not yet complete. status: ${this.status}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E612\",\n                    enumerable: false,\n                    configurable: true\n                });\n        }\n    }\n    /**\n   * Returns a stream which will release all chunks immediately. This stream will \"complete\" synchronously. It should be used outside\n   * of render use cases like loading client chunks ahead of SSR or writing the streamed content to disk.\n   */ asStream() {\n        switch(this.status){\n            case COMPLETE:\n            case INTERRUPTED:\n                const chunksByPhase = this.chunksByPhase;\n                const trailingChunks = this.trailingChunks;\n                return new ReadableStream({\n                    start (controller) {\n                        for(let i = 0; i < chunksByPhase.length; i++){\n                            const chunks = chunksByPhase[i];\n                            for(let j = 0; j < chunks.length; j++){\n                                controller.enqueue(chunks[j]);\n                            }\n                        }\n                        for(let i = 0; i < trailingChunks.length; i++){\n                            controller.enqueue(trailingChunks[i]);\n                        }\n                        controller.close();\n                    }\n                });\n            default:\n                throw Object.defineProperty(new InvariantError(`ServerPrerenderStreamResult cannot be consumed as a stream because it is not yet complete. status: ${this.status}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E612\",\n                    enumerable: false,\n                    configurable: true\n                });\n        }\n    }\n}\nclass PhasedStream extends ReadableStream {\n    constructor(chunksByPhase){\n        if (chunksByPhase.length === 0) {\n            throw Object.defineProperty(new InvariantError('PhasedStream expected at least one phase but none were found.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E574\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        let destination;\n        super({\n            start (controller) {\n                destination = controller;\n            }\n        });\n        // the start function above is called synchronously during construction so we will always have a destination\n        // We wait to assign it until after the super call because we cannot access `this` before calling super\n        this.destination = destination;\n        this.nextPhase = 0;\n        this.chunksByPhase = chunksByPhase;\n        this.releasePhase();\n    }\n    releasePhase() {\n        if (this.nextPhase < this.chunksByPhase.length) {\n            const chunks = this.chunksByPhase[this.nextPhase++];\n            for(let i = 0; i < chunks.length; i++){\n                this.destination.enqueue(chunks[i]);\n            }\n        } else {\n            throw Object.defineProperty(new InvariantError('PhasedStream expected more phases to release but none were found.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E541\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    assertExhausted() {\n        if (this.nextPhase < this.chunksByPhase.length) {\n            throw Object.defineProperty(new InvariantError('PhasedStream expected no more phases to release but some were found.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E584\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n}\nexport function prerenderClientWithPhases(render, ...remainingPhases) {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        throw Object.defineProperty(new InvariantError('`prerenderAndAbortInSequentialTasks` should not be called in edge runtime.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E538\",\n            enumerable: false,\n            configurable: true\n        });\n    } else {\n        return new Promise((resolve, reject)=>{\n            let pendingResult;\n            setImmediate(()=>{\n                try {\n                    pendingResult = render();\n                    pendingResult.catch((err)=>reject(err));\n                } catch (err) {\n                    reject(err);\n                }\n            });\n            function runFinalTask() {\n                try {\n                    this();\n                    resolve(pendingResult);\n                } catch (err) {\n                    reject(err);\n                }\n            }\n            function runNextTask() {\n                try {\n                    this();\n                } catch (err) {\n                    reject(err);\n                }\n            }\n            let i = 0;\n            for(; i < remainingPhases.length - 1; i++){\n                const phase = remainingPhases[i];\n                setImmediate(runNextTask.bind(phase));\n            }\n            if (remainingPhases[i]) {\n                const finalPhase = remainingPhases[i];\n                setImmediate(runFinalTask.bind(finalPhase));\n            }\n        });\n    }\n}\n// React's RSC prerender function will emit an incomplete flight stream when using `prerender`. If the connection\n// closes then whatever hanging chunks exist will be errored. This is because prerender (an experimental feature)\n// has not yet implemented a concept of resume. For now we will simulate a paused connection by wrapping the stream\n// in one that doesn't close even when the underlying is complete.\nexport class ReactServerResult {\n    constructor(stream){\n        this._stream = stream;\n    }\n    tee() {\n        if (this._stream === null) {\n            throw Object.defineProperty(new Error('Cannot tee a ReactServerResult that has already been consumed'), \"__NEXT_ERROR_CODE\", {\n                value: \"E106\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        const tee = this._stream.tee();\n        this._stream = tee[0];\n        return tee[1];\n    }\n    consume() {\n        if (this._stream === null) {\n            throw Object.defineProperty(new Error('Cannot consume a ReactServerResult that has already been consumed'), \"__NEXT_ERROR_CODE\", {\n                value: \"E470\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        const stream = this._stream;\n        this._stream = null;\n        return stream;\n    }\n}\nexport async function createReactServerPrerenderResult(underlying) {\n    const chunks = [];\n    const { prelude } = await underlying;\n    const reader = prelude.getReader();\n    while(true){\n        const { done, value } = await reader.read();\n        if (done) {\n            return new ReactServerPrerenderResult(chunks);\n        } else {\n            chunks.push(value);\n        }\n    }\n}\nexport async function createReactServerPrerenderResultFromRender(underlying) {\n    const chunks = [];\n    const reader = underlying.getReader();\n    while(true){\n        const { done, value } = await reader.read();\n        if (done) {\n            break;\n        } else {\n            chunks.push(value);\n        }\n    }\n    return new ReactServerPrerenderResult(chunks);\n}\nexport class ReactServerPrerenderResult {\n    assertChunks(expression) {\n        if (this._chunks === null) {\n            throw Object.defineProperty(new InvariantError(`Cannot \\`${expression}\\` on a ReactServerPrerenderResult that has already been consumed.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E593\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        return this._chunks;\n    }\n    consumeChunks(expression) {\n        const chunks = this.assertChunks(expression);\n        this.consume();\n        return chunks;\n    }\n    consume() {\n        this._chunks = null;\n    }\n    constructor(chunks){\n        this._chunks = chunks;\n    }\n    asUnclosingStream() {\n        const chunks = this.assertChunks('asUnclosingStream()');\n        return createUnclosingStream(chunks);\n    }\n    consumeAsUnclosingStream() {\n        const chunks = this.consumeChunks('consumeAsUnclosingStream()');\n        return createUnclosingStream(chunks);\n    }\n    asStream() {\n        const chunks = this.assertChunks('asStream()');\n        return createClosingStream(chunks);\n    }\n    consumeAsStream() {\n        const chunks = this.consumeChunks('consumeAsStream()');\n        return createClosingStream(chunks);\n    }\n}\nfunction createUnclosingStream(chunks) {\n    let i = 0;\n    return new ReadableStream({\n        async pull (controller) {\n            if (i < chunks.length) {\n                controller.enqueue(chunks[i++]);\n            }\n        // we intentionally keep the stream open. The consumer will clear\n        // out chunks once finished and the remaining memory will be GC'd\n        // when this object goes out of scope\n        }\n    });\n}\nfunction createClosingStream(chunks) {\n    let i = 0;\n    return new ReadableStream({\n        async pull (controller) {\n            if (i < chunks.length) {\n                controller.enqueue(chunks[i++]);\n            } else {\n                controller.close();\n            }\n        }\n    });\n}\n\n//# sourceMappingURL=app-render-prerender-utils.js.map","import { getDigestForWellKnownError } from './create-error-handler';\nexport function printDebugThrownValueForProspectiveRender(thrownValue, route) {\n    // We don't need to print well-known Next.js errors.\n    if (getDigestForWellKnownError(thrownValue)) {\n        return;\n    }\n    let message;\n    if (typeof thrownValue === 'object' && thrownValue !== null && typeof thrownValue.message === 'string') {\n        message = thrownValue.message;\n        if (typeof thrownValue.stack === 'string') {\n            const originalErrorStack = thrownValue.stack;\n            const stackStart = originalErrorStack.indexOf('\\n');\n            if (stackStart > -1) {\n                const error = Object.defineProperty(new Error(`Route ${route} errored during the prospective render. These errors are normally ignored and may not prevent the route from prerendering but are logged here because build debugging is enabled.\n          \nOriginal Error: ${message}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E362\",\n                    enumerable: false,\n                    configurable: true\n                });\n                error.stack = 'Error: ' + error.message + originalErrorStack.slice(stackStart);\n                console.error(error);\n                return;\n            }\n        }\n    } else if (typeof thrownValue === 'string') {\n        message = thrownValue;\n    }\n    if (message) {\n        console.error(`Route ${route} errored during the prospective render. These errors are normally ignored and may not prevent the route from prerendering but are logged here because build debugging is enabled. No stack was provided.\n          \nOriginal Message: ${message}`);\n        return;\n    }\n    console.error(`Route ${route} errored during the prospective render. These errors are normally ignored and may not prevent the route from prerendering but are logged here because build debugging is enabled. The thrown value is logged just following this message`);\n    console.error(thrownValue);\n    return;\n}\n\n//# sourceMappingURL=prospective-render-utils.js.map","import { InvariantError } from '../../shared/lib/invariant-error';\n/**\n * This is a utility function to make scheduling sequential tasks that run back to back easier.\n * We schedule on the same queue (setImmediate) at the same time to ensure no other events can sneak in between.\n */ export function scheduleInSequentialTasks(render, followup) {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        throw Object.defineProperty(new InvariantError('`scheduleInSequentialTasks` should not be called in edge runtime.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E591\",\n            enumerable: false,\n            configurable: true\n        });\n    } else {\n        return new Promise((resolve, reject)=>{\n            let pendingResult;\n            setImmediate(()=>{\n                try {\n                    pendingResult = render();\n                } catch (err) {\n                    reject(err);\n                }\n            });\n            setImmediate(()=>{\n                followup();\n                resolve(pendingResult);\n            });\n        });\n    }\n}\n\n//# sourceMappingURL=app-render-render-utils.js.map","/**\n * This class is used to detect when all cache reads for a given render are settled.\n * We do this to allow for cache warming the prerender without having to continue rendering\n * the remainder of the page. This feature is really only useful when the dynamicIO flag is on\n * and should only be used in codepaths gated with this feature.\n */ export class CacheSignal {\n    constructor(){\n        this.count = 0;\n        this.earlyListeners = [];\n        this.listeners = [];\n        this.tickPending = false;\n        this.taskPending = false;\n    }\n    noMorePendingCaches() {\n        if (!this.tickPending) {\n            this.tickPending = true;\n            process.nextTick(()=>{\n                this.tickPending = false;\n                if (this.count === 0) {\n                    for(let i = 0; i < this.earlyListeners.length; i++){\n                        this.earlyListeners[i]();\n                    }\n                    this.earlyListeners.length = 0;\n                }\n            });\n        }\n        if (!this.taskPending) {\n            this.taskPending = true;\n            setTimeout(()=>{\n                this.taskPending = false;\n                if (this.count === 0) {\n                    for(let i = 0; i < this.listeners.length; i++){\n                        this.listeners[i]();\n                    }\n                    this.listeners.length = 0;\n                }\n            }, 0);\n        }\n    }\n    /**\n   * This promise waits until there are no more in progress cache reads but no later.\n   * This allows for adding more cache reads after to delay cacheReady.\n   */ inputReady() {\n        return new Promise((resolve)=>{\n            this.earlyListeners.push(resolve);\n            if (this.count === 0) {\n                this.noMorePendingCaches();\n            }\n        });\n    }\n    /**\n   * If there are inflight cache reads this Promise can resolve in a microtask however\n   * if there are no inflight cache reads then we wait at least one task to allow initial\n   * cache reads to be initiated.\n   */ cacheReady() {\n        return new Promise((resolve)=>{\n            this.listeners.push(resolve);\n            if (this.count === 0) {\n                this.noMorePendingCaches();\n            }\n        });\n    }\n    beginRead() {\n        this.count++;\n    }\n    endRead() {\n        // If this is the last read we need to wait a task before we can claim the cache is settled.\n        // The cache read will likely ping a Server Component which can read from the cache again and this\n        // will play out in a microtask so we need to only resolve pending listeners if we're still at 0\n        // after at least one task.\n        // We only want one task scheduled at a time so when we hit count 1 we don't decrement the counter immediately.\n        // If intervening reads happen before the scheduled task runs they will never observe count 1 preventing reentrency\n        this.count--;\n        if (this.count === 0) {\n            this.noMorePendingCaches();\n        }\n    }\n}\n\n//# sourceMappingURL=cache-signal.js.map","/**\n * Takes OpenTelemetry client trace data and the `clientTraceMetadata` option configured in the Next.js config (currently\n * experimental) and returns a filtered/allowed list of client trace data entries.\n */ export function getTracedMetadata(traceData, clientTraceMetadata) {\n    if (!clientTraceMetadata) return undefined;\n    return traceData.filter(({ key })=>clientTraceMetadata.includes(key));\n}\n\n//# sourceMappingURL=utils.js.map","import { createSnapshot } from '../app-render/async-local-storage';\nexport const runInCleanSnapshot = createSnapshot();\n\n//# sourceMappingURL=clean-async-snapshot-instance.js.map","// Share the instance module in the next-shared layer\nimport { runInCleanSnapshot } from './clean-async-snapshot-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { runInCleanSnapshot };\n\n//# sourceMappingURL=clean-async-snapshot.external.js.map","const USE_CACHE_TIMEOUT_ERROR_CODE = 'USE_CACHE_TIMEOUT';\nexport class UseCacheTimeoutError extends Error {\n    constructor(){\n        super('Filling a cache during prerender timed out, likely because request-specific arguments such as params, searchParams, cookies() or dynamic data were used inside \"use cache\".'), this.digest = USE_CACHE_TIMEOUT_ERROR_CODE;\n    }\n}\nexport function isUseCacheTimeoutError(err) {\n    if (typeof err !== 'object' || err === null || !('digest' in err) || typeof err.digest !== 'string') {\n        return false;\n    }\n    return err.digest === USE_CACHE_TIMEOUT_ERROR_CODE;\n}\n\n//# sourceMappingURL=use-cache-errors.js.map","import { streamToString } from '../stream-utils/node-web-streams-helper';\nexport async function renderToString({ renderToReadableStream, element }) {\n    const renderStream = await renderToReadableStream(element);\n    await renderStream.allReady;\n    return streamToString(renderStream);\n}\n\n//# sourceMappingURL=render-to-string.js.map","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { renderToReadableStream } from 'react-dom/server.edge';\nimport { ServerInsertedMetadataContext } from '../../../shared/lib/server-inserted-metadata.shared-runtime';\nimport { renderToString } from '../render-to-string';\n/**\n * For chromium based browsers (Chrome, Edge, etc.) and Safari,\n * icons need to stay under <head> to be picked up by the browser.\n *\n */ const REINSERT_ICON_SCRIPT = `\\\ndocument.querySelectorAll('body link[rel=\"icon\"], body link[rel=\"apple-touch-icon\"]').forEach(el => document.head.appendChild(el))`;\nexport function createServerInsertedMetadata(nonce) {\n    let metadataResolver = null;\n    let metadataToFlush = null;\n    const setMetadataResolver = (resolver)=>{\n        metadataResolver = resolver;\n    };\n    return {\n        ServerInsertedMetadataProvider: ({ children })=>{\n            return /*#__PURE__*/ _jsx(ServerInsertedMetadataContext.Provider, {\n                value: setMetadataResolver,\n                children: children\n            });\n        },\n        async getServerInsertedMetadata () {\n            if (!metadataResolver || metadataToFlush) {\n                return '';\n            }\n            metadataToFlush = metadataResolver();\n            const html = await renderToString({\n                renderToReadableStream,\n                element: /*#__PURE__*/ _jsxs(_Fragment, {\n                    children: [\n                        metadataToFlush,\n                        /*#__PURE__*/ _jsx(\"script\", {\n                            nonce: nonce,\n                            children: REINSERT_ICON_SCRIPT\n                        })\n                    ]\n                })\n            });\n            return html;\n        }\n    };\n}\n\n//# sourceMappingURL=create-server-inserted-metadata.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport React from 'react';\nimport RenderResult from '../render-result';\nimport { chainStreams, renderToInitialFizzStream, createDocumentClosingStream, continueFizzStream, continueDynamicPrerender, continueStaticPrerender, continueDynamicHTMLResume, streamToBuffer, streamToString } from '../stream-utils/node-web-streams-helper';\nimport { stripInternalQueries } from '../internal-utils';\nimport { NEXT_HMR_REFRESH_HEADER, NEXT_ROUTER_PREFETCH_HEADER, NEXT_ROUTER_STATE_TREE_HEADER, NEXT_ROUTER_STALE_TIME_HEADER, NEXT_URL, RSC_HEADER, NEXT_ROUTER_SEGMENT_PREFETCH_HEADER, NEXT_HMR_REFRESH_HASH_COOKIE } from '../../client/components/app-router-headers';\nimport { createTrackedMetadataContext, createMetadataContext } from '../../lib/metadata/metadata-context';\nimport { createRequestStoreForRender } from '../async-storage/request-store';\nimport { createWorkStore } from '../async-storage/work-store';\nimport { getAccessFallbackErrorTypeByStatus, getAccessFallbackHTTPStatus, isHTTPAccessFallbackError } from '../../client/components/http-access-fallback/http-access-fallback';\nimport { getURLFromRedirectError, getRedirectStatusCodeFromError } from '../../client/components/redirect';\nimport { isRedirectError } from '../../client/components/redirect-error';\nimport { getImplicitTags } from '../lib/implicit-tags';\nimport { AppRenderSpan, NextNodeServerSpan } from '../lib/trace/constants';\nimport { getTracer } from '../lib/trace/tracer';\nimport { FlightRenderResult } from './flight-render-result';\nimport { createFlightReactServerErrorHandler, createHTMLReactServerErrorHandler, createHTMLErrorHandler, isUserLandError, getDigestForWellKnownError } from './create-error-handler';\nimport { getShortDynamicParamType, dynamicParamTypes } from './get-short-dynamic-param-type';\nimport { getSegmentParam } from './get-segment-param';\nimport { getScriptNonceFromHeader } from './get-script-nonce-from-header';\nimport { parseAndValidateFlightRouterState } from './parse-and-validate-flight-router-state';\nimport { createFlightRouterStateFromLoaderTree } from './create-flight-router-state-from-loader-tree';\nimport { handleAction } from './action-handler';\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr';\nimport { warn, error } from '../../build/output/log';\nimport { appendMutableCookies } from '../web/spec-extension/adapters/request-cookies';\nimport { createServerInsertedHTML } from './server-inserted-html';\nimport { getRequiredScripts } from './required-scripts';\nimport { addPathPrefix } from '../../shared/lib/router/utils/add-path-prefix';\nimport { makeGetServerInsertedHTML } from './make-get-server-inserted-html';\nimport { walkTreeWithFlightRouterState } from './walk-tree-with-flight-router-state';\nimport { createComponentTree, getRootParams } from './create-component-tree';\nimport { getAssetQueryString } from './get-asset-query-string';\nimport { setReferenceManifestsSingleton } from './encryption-utils';\nimport { DynamicState, parsePostponedState } from './postponed-state';\nimport { getDynamicDataPostponedState, getDynamicHTMLPostponedState, getPostponedFromState } from './postponed-state';\nimport { isDynamicServerError } from '../../client/components/hooks-server-context';\nimport { useFlightStream, createInlinedDataReadableStream } from './use-flight-response';\nimport { StaticGenBailoutError, isStaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { getStackWithoutErrorMessage } from '../../lib/format-server-error';\nimport { accessedDynamicData, createPostponedAbortSignal, formatDynamicAPIAccesses, isPrerenderInterruptedError, createDynamicTrackingState, createDynamicValidationState, getFirstDynamicReason, trackAllowedDynamicAccess, throwIfDisallowedDynamic, consumeDynamicAccess } from './dynamic-rendering';\nimport { getClientComponentLoaderMetrics, wrapClientComponentLoader } from '../client-component-renderer-logger';\nimport { createServerModuleMap } from './action-utils';\nimport { isNodeNextRequest } from '../base-http/helpers';\nimport { parseParameter } from '../../shared/lib/router/utils/route-regex';\nimport { parseRelativeUrl } from '../../shared/lib/router/utils/parse-relative-url';\nimport AppRouter from '../../client/components/app-router';\nimport { getIsPossibleServerAction } from '../lib/server-action-request-meta';\nimport { createInitialRouterState } from '../../client/components/router-reducer/create-initial-router-state';\nimport { createMutableActionQueue } from '../../client/components/app-router-instance';\nimport { getRevalidateReason } from '../instrumentation/utils';\nimport { PAGE_SEGMENT_KEY } from '../../shared/lib/segment';\nimport { DynamicServerError } from '../../client/components/hooks-server-context';\nimport { ServerPrerenderStreamResult } from './app-render-prerender-utils';\nimport { ReactServerResult, createReactServerPrerenderResult, createReactServerPrerenderResultFromRender, prerenderAndAbortInSequentialTasks, prerenderServerWithPhases, prerenderClientWithPhases } from './app-render-prerender-utils';\nimport { printDebugThrownValueForProspectiveRender } from './prospective-render-utils';\nimport { scheduleInSequentialTasks } from './app-render-render-utils';\nimport { waitAtLeastOneReactRenderTask } from '../../lib/scheduler';\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external';\nimport { CacheSignal } from './cache-signal';\nimport { getTracedMetadata } from '../lib/trace/utils';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport './clean-async-snapshot.external';\nimport { INFINITE_CACHE } from '../../lib/constants';\nimport { createComponentStylesAndScripts } from './create-component-styles-and-scripts';\nimport { parseLoaderTree } from './parse-loader-tree';\nimport { createPrerenderResumeDataCache, createRenderResumeDataCache } from '../resume-data-cache/resume-data-cache';\nimport isError from '../../lib/is-error';\nimport { isUseCacheTimeoutError } from '../use-cache/use-cache-errors';\nimport { createServerInsertedMetadata } from './metadata-insertion/create-server-inserted-metadata';\nimport { getPreviouslyRevalidatedTags } from '../server-utils';\nimport { executeRevalidates } from '../revalidation-utils';\nconst flightDataPathHeadKey = 'h';\nconst getFlightViewportKey = (requestId)=>requestId + 'v';\nconst getFlightMetadataKey = (requestId)=>requestId + 'm';\nfunction parseRequestHeaders(headers, options) {\n    const isDevWarmupRequest = options.isDevWarmup === true;\n    // dev warmup requests are treated as prefetch RSC requests\n    const isPrefetchRequest = isDevWarmupRequest || headers[NEXT_ROUTER_PREFETCH_HEADER.toLowerCase()] !== undefined;\n    const isHmrRefresh = headers[NEXT_HMR_REFRESH_HEADER.toLowerCase()] !== undefined;\n    // dev warmup requests are treated as prefetch RSC requests\n    const isRSCRequest = isDevWarmupRequest || headers[RSC_HEADER.toLowerCase()] !== undefined;\n    const shouldProvideFlightRouterState = isRSCRequest && (!isPrefetchRequest || !options.isRoutePPREnabled);\n    const flightRouterState = shouldProvideFlightRouterState ? parseAndValidateFlightRouterState(headers[NEXT_ROUTER_STATE_TREE_HEADER.toLowerCase()]) : undefined;\n    // Checks if this is a prefetch of the Route Tree by the Segment Cache\n    const isRouteTreePrefetchRequest = headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER.toLowerCase()] === '/_tree';\n    const csp = headers['content-security-policy'] || headers['content-security-policy-report-only'];\n    const nonce = typeof csp === 'string' ? getScriptNonceFromHeader(csp) : undefined;\n    const previouslyRevalidatedTags = getPreviouslyRevalidatedTags(headers, options.previewModeId);\n    return {\n        flightRouterState,\n        isPrefetchRequest,\n        isRouteTreePrefetchRequest,\n        isHmrRefresh,\n        isRSCRequest,\n        isDevWarmupRequest,\n        nonce,\n        previouslyRevalidatedTags\n    };\n}\nfunction createNotFoundLoaderTree(loaderTree) {\n    // Align the segment with parallel-route-default in next-app-loader\n    const components = loaderTree[2];\n    return [\n        '',\n        {\n            children: [\n                PAGE_SEGMENT_KEY,\n                {},\n                {\n                    page: components['not-found']\n                }\n            ]\n        },\n        components\n    ];\n}\n/**\n * Returns a function that parses the dynamic segment and return the associated value.\n */ function makeGetDynamicParamFromSegment(params, pagePath, fallbackRouteParams) {\n    return function getDynamicParamFromSegment(// [slug] / [[slug]] / [...slug]\n    segment) {\n        const segmentParam = getSegmentParam(segment);\n        if (!segmentParam) {\n            return null;\n        }\n        const key = segmentParam.param;\n        let value = params[key];\n        if (fallbackRouteParams && fallbackRouteParams.has(segmentParam.param)) {\n            value = fallbackRouteParams.get(segmentParam.param);\n        } else if (Array.isArray(value)) {\n            value = value.map((i)=>encodeURIComponent(i));\n        } else if (typeof value === 'string') {\n            value = encodeURIComponent(value);\n        }\n        if (!value) {\n            const isCatchall = segmentParam.type === 'catchall';\n            const isOptionalCatchall = segmentParam.type === 'optional-catchall';\n            if (isCatchall || isOptionalCatchall) {\n                const dynamicParamType = dynamicParamTypes[segmentParam.type];\n                // handle the case where an optional catchall does not have a value,\n                // e.g. `/dashboard/[[...slug]]` when requesting `/dashboard`\n                if (isOptionalCatchall) {\n                    return {\n                        param: key,\n                        value: null,\n                        type: dynamicParamType,\n                        treeSegment: [\n                            key,\n                            '',\n                            dynamicParamType\n                        ]\n                    };\n                }\n                // handle the case where a catchall or optional catchall does not have a value,\n                // e.g. `/foo/bar/hello` and `@slot/[...catchall]` or `@slot/[[...catchall]]` is matched\n                value = pagePath.split('/')// remove the first empty string\n                .slice(1)// replace any dynamic params with the actual values\n                .flatMap((pathSegment)=>{\n                    const param = parseParameter(pathSegment);\n                    // if the segment matches a param, return the param value\n                    // otherwise, it's a static segment, so just return that\n                    return params[param.key] ?? param.key;\n                });\n                return {\n                    param: key,\n                    value,\n                    type: dynamicParamType,\n                    // This value always has to be a string.\n                    treeSegment: [\n                        key,\n                        value.join('/'),\n                        dynamicParamType\n                    ]\n                };\n            }\n        }\n        const type = getShortDynamicParamType(segmentParam.type);\n        return {\n            param: key,\n            // The value that is passed to user code.\n            value: value,\n            // The value that is rendered in the router tree.\n            treeSegment: [\n                key,\n                Array.isArray(value) ? value.join('/') : value,\n                type\n            ],\n            type: type\n        };\n    };\n}\nfunction NonIndex({ pagePath, statusCode, isPossibleServerAction }) {\n    const is404Page = pagePath === '/404';\n    const isInvalidStatusCode = typeof statusCode === 'number' && statusCode > 400;\n    // Only render noindex for page request, skip for server actions\n    // TODO: is this correct if `isPossibleServerAction` is a false positive?\n    if (!isPossibleServerAction && (is404Page || isInvalidStatusCode)) {\n        return /*#__PURE__*/ _jsx(\"meta\", {\n            name: \"robots\",\n            content: \"noindex\"\n        });\n    }\n    return null;\n}\n/**\n * This is used by server actions & client-side navigations to generate RSC data from a client-side request.\n * This function is only called on \"dynamic\" requests (ie, there wasn't already a static response).\n * It uses request headers (namely `Next-Router-State-Tree`) to determine where to start rendering.\n */ async function generateDynamicRSCPayload(ctx, options) {\n    // Flight data that is going to be passed to the browser.\n    // Currently a single item array but in the future multiple patches might be combined in a single request.\n    // We initialize `flightData` to an empty string because the client router knows how to tolerate\n    // it (treating it as an MPA navigation). The only time this function wouldn't generate flight data\n    // is for server actions, if the server action handler instructs this function to skip it. When the server\n    // action reducer sees a falsy value, it'll simply resolve the action with no data.\n    let flightData = '';\n    const { componentMod: { tree: loaderTree, createMetadataComponents, MetadataBoundary, ViewportBoundary }, getDynamicParamFromSegment, appUsingSizeAdjustment, query, requestId, flightRouterState, workStore, url } = ctx;\n    const serveStreamingMetadata = !!ctx.renderOpts.serveStreamingMetadata;\n    if (!(options == null ? void 0 : options.skipFlight)) {\n        const preloadCallbacks = [];\n        const { ViewportTree, MetadataTree, getViewportReady, getMetadataReady, StreamingMetadataOutlet } = createMetadataComponents({\n            tree: loaderTree,\n            parsedQuery: query,\n            metadataContext: createTrackedMetadataContext(url.pathname, ctx.renderOpts, workStore),\n            getDynamicParamFromSegment,\n            appUsingSizeAdjustment,\n            workStore,\n            MetadataBoundary,\n            ViewportBoundary,\n            serveStreamingMetadata\n        });\n        flightData = (await walkTreeWithFlightRouterState({\n            ctx,\n            loaderTreeToFilter: loaderTree,\n            parentParams: {},\n            flightRouterState,\n            // For flight, render metadata inside leaf page\n            rscHead: /*#__PURE__*/ _jsxs(React.Fragment, {\n                children: [\n                    /*#__PURE__*/ _jsx(NonIndex, {\n                        pagePath: ctx.pagePath,\n                        statusCode: ctx.res.statusCode,\n                        isPossibleServerAction: ctx.isPossibleServerAction\n                    }),\n                    /*#__PURE__*/ _jsx(ViewportTree, {}, getFlightViewportKey(requestId)),\n                    /*#__PURE__*/ _jsx(MetadataTree, {}, getFlightMetadataKey(requestId))\n                ]\n            }, flightDataPathHeadKey),\n            injectedCSS: new Set(),\n            injectedJS: new Set(),\n            injectedFontPreloadTags: new Set(),\n            rootLayoutIncluded: false,\n            getViewportReady,\n            getMetadataReady,\n            preloadCallbacks,\n            StreamingMetadataOutlet\n        })).map((path)=>path.slice(1)) // remove the '' (root) segment\n        ;\n    }\n    // If we have an action result, then this is a server action response.\n    // We can rely on this because `ActionResult` will always be a promise, even if\n    // the result is falsey.\n    if (options == null ? void 0 : options.actionResult) {\n        return {\n            a: options.actionResult,\n            f: flightData,\n            b: ctx.sharedContext.buildId\n        };\n    }\n    // Otherwise, it's a regular RSC response.\n    return {\n        b: ctx.sharedContext.buildId,\n        f: flightData,\n        S: workStore.isStaticGeneration\n    };\n}\nfunction createErrorContext(ctx, renderSource) {\n    return {\n        routerKind: 'App Router',\n        routePath: ctx.pagePath,\n        // TODO: is this correct if `isPossibleServerAction` is a false positive?\n        routeType: ctx.isPossibleServerAction ? 'action' : 'render',\n        renderSource,\n        revalidateReason: getRevalidateReason(ctx.workStore)\n    };\n}\n/**\n * Produces a RenderResult containing the Flight data for the given request. See\n * `generateDynamicRSCPayload` for information on the contents of the render result.\n */ async function generateDynamicFlightRenderResult(req, ctx, requestStore, options) {\n    const renderOpts = ctx.renderOpts;\n    function onFlightDataRenderError(err) {\n        return renderOpts.onInstrumentationRequestError == null ? void 0 : renderOpts.onInstrumentationRequestError.call(renderOpts, err, req, createErrorContext(ctx, 'react-server-components-payload'));\n    }\n    const onError = createFlightReactServerErrorHandler(!!renderOpts.dev, onFlightDataRenderError);\n    const RSCPayload = await workUnitAsyncStorage.run(requestStore, generateDynamicRSCPayload, ctx, options);\n    if (// We only want this behavior when running `next dev`\n    renderOpts.dev && // We only want this behavior when we have React's dev builds available\n    process.env.NODE_ENV === 'development' && // We only have a Prerender environment for projects opted into dynamicIO\n    renderOpts.experimental.dynamicIO) {\n        const [resolveValidation, validationOutlet] = createValidationOutlet();\n        RSCPayload._validation = validationOutlet;\n        spawnDynamicValidationInDev(resolveValidation, ctx.componentMod.tree, ctx, false, ctx.clientReferenceManifest, ctx.workStore.route, requestStore);\n    }\n    // For app dir, use the bundled version of Flight server renderer (renderToReadableStream)\n    // which contains the subset React.\n    const flightReadableStream = workUnitAsyncStorage.run(requestStore, ctx.componentMod.renderToReadableStream, RSCPayload, ctx.clientReferenceManifest.clientModules, {\n        onError,\n        temporaryReferences: options == null ? void 0 : options.temporaryReferences\n    });\n    return new FlightRenderResult(flightReadableStream, {\n        fetchMetrics: ctx.workStore.fetchMetrics\n    });\n}\n/**\n * Performs a \"warmup\" render of the RSC payload for a given route. This function is called by the server\n * prior to an actual render request in Dev mode only. It's purpose is to fill caches so the actual render\n * can accurately log activity in the right render context (Prerender vs Render).\n *\n * At the moment this implementation is mostly a fork of generateDynamicFlightRenderResult\n */ async function warmupDevRender(req, ctx) {\n    const { clientReferenceManifest, componentMod, getDynamicParamFromSegment, implicitTags, renderOpts, workStore } = ctx;\n    if (!renderOpts.dev) {\n        throw Object.defineProperty(new InvariantError('generateDynamicFlightRenderResult should never be called in `next start` mode.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E523\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const rootParams = getRootParams(componentMod.tree, getDynamicParamFromSegment);\n    function onFlightDataRenderError(err) {\n        return renderOpts.onInstrumentationRequestError == null ? void 0 : renderOpts.onInstrumentationRequestError.call(renderOpts, err, req, createErrorContext(ctx, 'react-server-components-payload'));\n    }\n    const onError = createFlightReactServerErrorHandler(true, onFlightDataRenderError);\n    // We're doing a dev warmup, so we should create a new resume data cache so\n    // we can fill it.\n    const prerenderResumeDataCache = createPrerenderResumeDataCache();\n    const renderController = new AbortController();\n    const prerenderController = new AbortController();\n    const cacheSignal = new CacheSignal();\n    const prerenderStore = {\n        type: 'prerender',\n        phase: 'render',\n        rootParams,\n        implicitTags,\n        renderSignal: renderController.signal,\n        controller: prerenderController,\n        cacheSignal,\n        dynamicTracking: null,\n        revalidate: INFINITE_CACHE,\n        expire: INFINITE_CACHE,\n        stale: INFINITE_CACHE,\n        tags: [],\n        prerenderResumeDataCache,\n        hmrRefreshHash: req.cookies[NEXT_HMR_REFRESH_HASH_COOKIE]\n    };\n    const rscPayload = await workUnitAsyncStorage.run(prerenderStore, generateDynamicRSCPayload, ctx);\n    // For app dir, use the bundled version of Flight server renderer (renderToReadableStream)\n    // which contains the subset React.\n    workUnitAsyncStorage.run(prerenderStore, componentMod.renderToReadableStream, rscPayload, clientReferenceManifest.clientModules, {\n        onError,\n        signal: renderController.signal\n    });\n    // Wait for all caches to be finished filling\n    await cacheSignal.cacheReady();\n    // We unset the cache so any late over-run renders aren't able to write into this cache\n    prerenderStore.prerenderResumeDataCache = null;\n    // Abort the render\n    renderController.abort();\n    // We don't really want to return a result here but the stack of functions\n    // that calls into renderToHTML... expects a result. We should refactor this to\n    // lift the warmup pathway outside of renderToHTML... but for now this suffices\n    return new FlightRenderResult('', {\n        fetchMetrics: workStore.fetchMetrics,\n        devRenderResumeDataCache: createRenderResumeDataCache(prerenderResumeDataCache)\n    });\n}\n/**\n * Crawlers will inadvertently think the canonicalUrl in the RSC payload should be crawled\n * when our intention is to just seed the router state with the current URL.\n * This function splits up the pathname so that we can later join it on\n * when we're ready to consume the path.\n */ function prepareInitialCanonicalUrl(url) {\n    return (url.pathname + url.search).split('/');\n}\n// This is the data necessary to render <AppRouter /> when no SSR errors are encountered\nasync function getRSCPayload(tree, ctx, is404) {\n    const injectedCSS = new Set();\n    const injectedJS = new Set();\n    const injectedFontPreloadTags = new Set();\n    let missingSlots;\n    // We only track missing parallel slots in development\n    if (process.env.NODE_ENV === 'development') {\n        missingSlots = new Set();\n    }\n    const { getDynamicParamFromSegment, query, appUsingSizeAdjustment, componentMod: { GlobalError, createMetadataComponents, MetadataBoundary, ViewportBoundary }, url, workStore } = ctx;\n    const initialTree = createFlightRouterStateFromLoaderTree(tree, getDynamicParamFromSegment, query);\n    const serveStreamingMetadata = !!ctx.renderOpts.serveStreamingMetadata;\n    const { ViewportTree, MetadataTree, getViewportReady, getMetadataReady, StreamingMetadataOutlet } = createMetadataComponents({\n        tree,\n        errorType: is404 ? 'not-found' : undefined,\n        parsedQuery: query,\n        metadataContext: createTrackedMetadataContext(url.pathname, ctx.renderOpts, workStore),\n        getDynamicParamFromSegment,\n        appUsingSizeAdjustment,\n        workStore,\n        MetadataBoundary,\n        ViewportBoundary,\n        serveStreamingMetadata\n    });\n    const preloadCallbacks = [];\n    const seedData = await createComponentTree({\n        ctx,\n        loaderTree: tree,\n        parentParams: {},\n        injectedCSS,\n        injectedJS,\n        injectedFontPreloadTags,\n        rootLayoutIncluded: false,\n        getViewportReady,\n        getMetadataReady,\n        missingSlots,\n        preloadCallbacks,\n        authInterrupts: ctx.renderOpts.experimental.authInterrupts,\n        StreamingMetadataOutlet\n    });\n    // When the `vary` response header is present with `Next-URL`, that means there's a chance\n    // it could respond differently if there's an interception route. We provide this information\n    // to `AppRouter` so that it can properly seed the prefetch cache with a prefix, if needed.\n    const varyHeader = ctx.res.getHeader('vary');\n    const couldBeIntercepted = typeof varyHeader === 'string' && varyHeader.includes(NEXT_URL);\n    const initialHead = /*#__PURE__*/ _jsxs(React.Fragment, {\n        children: [\n            /*#__PURE__*/ _jsx(NonIndex, {\n                pagePath: ctx.pagePath,\n                statusCode: ctx.res.statusCode,\n                isPossibleServerAction: ctx.isPossibleServerAction\n            }),\n            /*#__PURE__*/ _jsx(ViewportTree, {}, getFlightViewportKey(ctx.requestId)),\n            /*#__PURE__*/ _jsx(MetadataTree, {})\n        ]\n    }, flightDataPathHeadKey);\n    const globalErrorStyles = await getGlobalErrorStyles(tree, ctx);\n    // Assume the head we're rendering contains only partial data if PPR is\n    // enabled and this is a statically generated response. This is used by the\n    // client Segment Cache after a prefetch to determine if it can skip the\n    // second request to fill in the dynamic data.\n    //\n    // See similar comment in create-component-tree.tsx for more context.\n    const isPossiblyPartialHead = workStore.isStaticGeneration && ctx.renderOpts.experimental.isRoutePPREnabled === true;\n    return {\n        // See the comment above the `Preloads` component (below) for why this is part of the payload\n        P: /*#__PURE__*/ _jsx(Preloads, {\n            preloadCallbacks: preloadCallbacks\n        }),\n        b: ctx.sharedContext.buildId,\n        p: ctx.assetPrefix,\n        c: prepareInitialCanonicalUrl(url),\n        i: !!couldBeIntercepted,\n        f: [\n            [\n                initialTree,\n                seedData,\n                initialHead,\n                isPossiblyPartialHead\n            ]\n        ],\n        m: missingSlots,\n        G: [\n            GlobalError,\n            globalErrorStyles\n        ],\n        s: typeof ctx.renderOpts.postponed === 'string',\n        S: workStore.isStaticGeneration\n    };\n}\n/**\n * Preload calls (such as `ReactDOM.preloadStyle` and `ReactDOM.preloadFont`) need to be called during rendering\n * in order to create the appropriate preload tags in the DOM, otherwise they're a no-op. Since we invoke\n * renderToReadableStream with a function that returns component props rather than a component itself, we use\n * this component to \"render  \" the preload calls.\n */ function Preloads({ preloadCallbacks }) {\n    preloadCallbacks.forEach((preloadFn)=>preloadFn());\n    return null;\n}\n// This is the data necessary to render <AppRouter /> when an error state is triggered\nasync function getErrorRSCPayload(tree, ctx, ssrError, errorType) {\n    const { getDynamicParamFromSegment, query, appUsingSizeAdjustment, componentMod: { GlobalError, createMetadataComponents, MetadataBoundary, ViewportBoundary }, url, requestId, workStore } = ctx;\n    const serveStreamingMetadata = !!ctx.renderOpts.serveStreamingMetadata;\n    const { MetadataTree, ViewportTree } = createMetadataComponents({\n        tree,\n        parsedQuery: query,\n        // We create an untracked metadata context here because we can't postpone\n        // again during the error render.\n        metadataContext: createMetadataContext(url.pathname, ctx.renderOpts),\n        errorType,\n        getDynamicParamFromSegment,\n        appUsingSizeAdjustment,\n        workStore,\n        MetadataBoundary,\n        ViewportBoundary,\n        serveStreamingMetadata: serveStreamingMetadata\n    });\n    // {/* Adding requestId as react key to make metadata remount for each render */}\n    const metadata = /*#__PURE__*/ _jsx(MetadataTree, {}, getFlightMetadataKey(requestId));\n    const initialHead = /*#__PURE__*/ _jsxs(React.Fragment, {\n        children: [\n            /*#__PURE__*/ _jsx(NonIndex, {\n                pagePath: ctx.pagePath,\n                statusCode: ctx.res.statusCode,\n                isPossibleServerAction: ctx.isPossibleServerAction\n            }),\n            /*#__PURE__*/ _jsx(ViewportTree, {}, getFlightViewportKey(requestId)),\n            process.env.NODE_ENV === 'development' && /*#__PURE__*/ _jsx(\"meta\", {\n                name: \"next-error\",\n                content: \"not-found\"\n            }),\n            metadata\n        ]\n    }, flightDataPathHeadKey);\n    const initialTree = createFlightRouterStateFromLoaderTree(tree, getDynamicParamFromSegment, query);\n    let err = undefined;\n    if (ssrError) {\n        err = isError(ssrError) ? ssrError : Object.defineProperty(new Error(ssrError + ''), \"__NEXT_ERROR_CODE\", {\n            value: \"E394\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    // For metadata notFound error there's no global not found boundary on top\n    // so we create a not found page with AppRouter\n    const seedData = [\n        initialTree[0],\n        /*#__PURE__*/ _jsxs(\"html\", {\n            id: \"__next_error__\",\n            children: [\n                /*#__PURE__*/ _jsx(\"head\", {\n                    children: metadata\n                }),\n                /*#__PURE__*/ _jsx(\"body\", {\n                    children: process.env.NODE_ENV !== 'production' && err ? /*#__PURE__*/ _jsx(\"template\", {\n                        \"data-next-error-message\": err.message,\n                        \"data-next-error-digest\": 'digest' in err ? err.digest : '',\n                        \"data-next-error-stack\": err.stack\n                    }) : null\n                })\n            ]\n        }),\n        {},\n        null,\n        false\n    ];\n    const globalErrorStyles = await getGlobalErrorStyles(tree, ctx);\n    const isPossiblyPartialHead = workStore.isStaticGeneration && ctx.renderOpts.experimental.isRoutePPREnabled === true;\n    return {\n        b: ctx.sharedContext.buildId,\n        p: ctx.assetPrefix,\n        c: prepareInitialCanonicalUrl(url),\n        m: undefined,\n        i: false,\n        f: [\n            [\n                initialTree,\n                seedData,\n                initialHead,\n                isPossiblyPartialHead\n            ]\n        ],\n        G: [\n            GlobalError,\n            globalErrorStyles\n        ],\n        s: typeof ctx.renderOpts.postponed === 'string',\n        S: workStore.isStaticGeneration\n    };\n}\n// This component must run in an SSR context. It will render the RSC root component\nfunction App({ reactServerStream, preinitScripts, clientReferenceManifest, nonce, ServerInsertedHTMLProvider, ServerInsertedMetadataProvider }) {\n    preinitScripts();\n    const response = React.use(useFlightStream(reactServerStream, clientReferenceManifest, nonce));\n    const initialState = createInitialRouterState({\n        // This is not used during hydration, so we don't have to pass a\n        // real timestamp.\n        navigatedAt: -1,\n        initialFlightData: response.f,\n        initialCanonicalUrlParts: response.c,\n        initialParallelRoutes: new Map(),\n        // location is not initialized in the SSR render\n        // it's set to window.location during hydration\n        location: null,\n        couldBeIntercepted: response.i,\n        postponed: response.s,\n        prerendered: response.S\n    });\n    const actionQueue = createMutableActionQueue(initialState, null);\n    const { HeadManagerContext } = require('../../shared/lib/head-manager-context.shared-runtime');\n    return /*#__PURE__*/ _jsx(HeadManagerContext.Provider, {\n        value: {\n            appDir: true,\n            nonce\n        },\n        children: /*#__PURE__*/ _jsx(ServerInsertedMetadataProvider, {\n            children: /*#__PURE__*/ _jsx(ServerInsertedHTMLProvider, {\n                children: /*#__PURE__*/ _jsx(AppRouter, {\n                    actionQueue: actionQueue,\n                    globalErrorComponentAndStyles: response.G,\n                    assetPrefix: response.p\n                })\n            })\n        })\n    });\n}\n// @TODO our error stream should be probably just use the same root component. But it was previously\n// different I don't want to figure out if that is meaningful at this time so just keeping the behavior\n// consistent for now.\nfunction ErrorApp({ reactServerStream, preinitScripts, clientReferenceManifest, ServerInsertedMetadataProvider, ServerInsertedHTMLProvider, nonce }) {\n    preinitScripts();\n    const response = React.use(useFlightStream(reactServerStream, clientReferenceManifest, nonce));\n    const initialState = createInitialRouterState({\n        // This is not used during hydration, so we don't have to pass a\n        // real timestamp.\n        navigatedAt: -1,\n        initialFlightData: response.f,\n        initialCanonicalUrlParts: response.c,\n        initialParallelRoutes: new Map(),\n        // location is not initialized in the SSR render\n        // it's set to window.location during hydration\n        location: null,\n        couldBeIntercepted: response.i,\n        postponed: response.s,\n        prerendered: response.S\n    });\n    const actionQueue = createMutableActionQueue(initialState, null);\n    return /*#__PURE__*/ _jsx(ServerInsertedMetadataProvider, {\n        children: /*#__PURE__*/ _jsx(ServerInsertedHTMLProvider, {\n            children: /*#__PURE__*/ _jsx(AppRouter, {\n                actionQueue: actionQueue,\n                globalErrorComponentAndStyles: response.G,\n                assetPrefix: response.p\n            })\n        })\n    });\n}\nasync function renderToHTMLOrFlightImpl(req, res, url, pagePath, query, renderOpts, workStore, parsedRequestHeaders, requestEndedState, postponedState, serverComponentsHmrCache, sharedContext) {\n    const isNotFoundPath = pagePath === '/404';\n    if (isNotFoundPath) {\n        res.statusCode = 404;\n    }\n    // A unique request timestamp used by development to ensure that it's\n    // consistent and won't change during this request. This is important to\n    // avoid that resources can be deduped by React Float if the same resource is\n    // rendered or preloaded multiple times: `<link href=\"a.css?v={Date.now()}\"/>`.\n    const requestTimestamp = Date.now();\n    const { serverActionsManifest, ComponentMod, nextFontManifest, serverActions, assetPrefix = '', enableTainting } = renderOpts;\n    // We need to expose the bundled `require` API globally for\n    // react-server-dom-webpack. This is a hack until we find a better way.\n    if (ComponentMod.__next_app__) {\n        const instrumented = wrapClientComponentLoader(ComponentMod);\n        // @ts-ignore\n        globalThis.__next_require__ = instrumented.require;\n        // When we are prerendering if there is a cacheSignal for tracking\n        // cache reads we wrap the loadChunk in this tracking. This allows us\n        // to treat chunk loading with similar semantics as cache reads to avoid\n        // async loading chunks from causing a prerender to abort too early.\n        const __next_chunk_load__ = (...args)=>{\n            const loadingChunk = instrumented.loadChunk(...args);\n            trackChunkLoading(loadingChunk);\n            return loadingChunk;\n        };\n        // @ts-expect-error\n        globalThis.__next_chunk_load__ = __next_chunk_load__;\n    }\n    if (process.env.NODE_ENV === 'development') {\n        // reset isr status at start of request\n        const { pathname } = new URL(req.url || '/', 'http://n');\n        renderOpts.setIsrStatus == null ? void 0 : renderOpts.setIsrStatus.call(renderOpts, pathname, null);\n    }\n    if (// The type check here ensures that `req` is correctly typed, and the\n    // environment variable check provides dead code elimination.\n    process.env.NEXT_RUNTIME !== 'edge' && isNodeNextRequest(req)) {\n        req.originalRequest.on('end', ()=>{\n            requestEndedState.ended = true;\n            if ('performance' in globalThis) {\n                const metrics = getClientComponentLoaderMetrics({\n                    reset: true\n                });\n                if (metrics) {\n                    getTracer().startSpan(NextNodeServerSpan.clientComponentLoading, {\n                        startTime: metrics.clientComponentLoadStart,\n                        attributes: {\n                            'next.clientComponentLoadCount': metrics.clientComponentLoadCount,\n                            'next.span_type': NextNodeServerSpan.clientComponentLoading\n                        }\n                    }).end(metrics.clientComponentLoadStart + metrics.clientComponentLoadTimes);\n                }\n            }\n        });\n    }\n    const metadata = {};\n    const appUsingSizeAdjustment = !!(nextFontManifest == null ? void 0 : nextFontManifest.appUsingSizeAdjust);\n    // TODO: fix this typescript\n    const clientReferenceManifest = renderOpts.clientReferenceManifest;\n    const serverModuleMap = createServerModuleMap({\n        serverActionsManifest\n    });\n    setReferenceManifestsSingleton({\n        page: workStore.page,\n        clientReferenceManifest,\n        serverActionsManifest,\n        serverModuleMap\n    });\n    ComponentMod.patchFetch();\n    // Pull out the hooks/references from the component.\n    const { tree: loaderTree, taintObjectReference } = ComponentMod;\n    if (enableTainting) {\n        taintObjectReference('Do not pass process.env to client components since it will leak sensitive data', process.env);\n    }\n    workStore.fetchMetrics = [];\n    metadata.fetchMetrics = workStore.fetchMetrics;\n    // don't modify original query object\n    query = {\n        ...query\n    };\n    stripInternalQueries(query);\n    const { flightRouterState, isPrefetchRequest, isRSCRequest, isDevWarmupRequest, isHmrRefresh, nonce } = parsedRequestHeaders;\n    /**\n   * The metadata items array created in next-app-loader with all relevant information\n   * that we need to resolve the final metadata.\n   */ let requestId;\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        requestId = crypto.randomUUID();\n    } else {\n        requestId = require('next/dist/compiled/nanoid').nanoid();\n    }\n    /**\n   * Dynamic parameters. E.g. when you visit `/dashboard/vercel` which is rendered by `/dashboard/[slug]` the value will be {\"slug\": \"vercel\"}.\n   */ const params = renderOpts.params ?? {};\n    const { isStaticGeneration, fallbackRouteParams } = workStore;\n    const getDynamicParamFromSegment = makeGetDynamicParamFromSegment(params, pagePath, fallbackRouteParams);\n    const isPossibleActionRequest = getIsPossibleServerAction(req);\n    const implicitTags = await getImplicitTags(workStore.page, url, fallbackRouteParams);\n    const ctx = {\n        componentMod: ComponentMod,\n        url,\n        renderOpts,\n        workStore,\n        parsedRequestHeaders,\n        getDynamicParamFromSegment,\n        query,\n        isPrefetch: isPrefetchRequest,\n        isPossibleServerAction: isPossibleActionRequest,\n        requestTimestamp,\n        appUsingSizeAdjustment,\n        flightRouterState,\n        requestId,\n        pagePath,\n        clientReferenceManifest,\n        assetPrefix,\n        isNotFoundPath,\n        nonce,\n        res,\n        sharedContext,\n        implicitTags\n    };\n    getTracer().setRootSpanAttribute('next.route', pagePath);\n    if (isStaticGeneration) {\n        var _metadata_cacheControl;\n        // We're either building or revalidating. In either case we need to\n        // prerender our page rather than render it.\n        const prerenderToStreamWithTracing = getTracer().wrap(AppRenderSpan.getBodyResult, {\n            spanName: `prerender route (app) ${pagePath}`,\n            attributes: {\n                'next.route': pagePath\n            }\n        }, prerenderToStream);\n        const response = await prerenderToStreamWithTracing(req, res, ctx, metadata, workStore, loaderTree);\n        // If we're debugging partial prerendering, print all the dynamic API accesses\n        // that occurred during the render.\n        // @TODO move into renderToStream function\n        if (response.dynamicAccess && accessedDynamicData(response.dynamicAccess) && renderOpts.isDebugDynamicAccesses) {\n            warn('The following dynamic usage was detected:');\n            for (const access of formatDynamicAPIAccesses(response.dynamicAccess)){\n                warn(access);\n            }\n        }\n        // If we encountered any unexpected errors during build we fail the\n        // prerendering phase and the build.\n        if (workStore.invalidUsageError) {\n            throw workStore.invalidUsageError;\n        }\n        if (response.digestErrorsMap.size) {\n            const buildFailingError = response.digestErrorsMap.values().next().value;\n            if (buildFailingError) throw buildFailingError;\n        }\n        // Pick first userland SSR error, which is also not a RSC error.\n        if (response.ssrErrors.length) {\n            const buildFailingError = response.ssrErrors.find((err)=>isUserLandError(err));\n            if (buildFailingError) throw buildFailingError;\n        }\n        const options = {\n            metadata\n        };\n        // If we have pending revalidates, wait until they are all resolved.\n        if (workStore.pendingRevalidates || workStore.pendingRevalidateWrites || workStore.pendingRevalidatedTags) {\n            const pendingPromise = executeRevalidates(workStore).finally(()=>{\n                if (process.env.NEXT_PRIVATE_DEBUG_CACHE) {\n                    console.log('pending revalidates promise finished for:', url);\n                }\n            });\n            if (renderOpts.waitUntil) {\n                renderOpts.waitUntil(pendingPromise);\n            } else {\n                options.waitUntil = pendingPromise;\n            }\n        }\n        if (response.collectedTags) {\n            metadata.fetchTags = response.collectedTags.join(',');\n        }\n        // Let the client router know how long to keep the cached entry around.\n        const staleHeader = String(response.collectedStale);\n        res.setHeader(NEXT_ROUTER_STALE_TIME_HEADER, staleHeader);\n        metadata.headers ??= {};\n        metadata.headers[NEXT_ROUTER_STALE_TIME_HEADER] = staleHeader;\n        // If force static is specifically set to false, we should not revalidate\n        // the page.\n        if (workStore.forceStatic === false || response.collectedRevalidate === 0) {\n            metadata.cacheControl = {\n                revalidate: 0,\n                expire: undefined\n            };\n        } else {\n            // Copy the cache control value onto the render result metadata.\n            metadata.cacheControl = {\n                revalidate: response.collectedRevalidate >= INFINITE_CACHE ? false : response.collectedRevalidate,\n                expire: response.collectedExpire >= INFINITE_CACHE ? undefined : response.collectedExpire\n            };\n        }\n        // provide bailout info for debugging\n        if (((_metadata_cacheControl = metadata.cacheControl) == null ? void 0 : _metadata_cacheControl.revalidate) === 0) {\n            metadata.staticBailoutInfo = {\n                description: workStore.dynamicUsageDescription,\n                stack: workStore.dynamicUsageStack\n            };\n        }\n        return new RenderResult(await streamToString(response.stream), options);\n    } else {\n        // We're rendering dynamically\n        const renderResumeDataCache = renderOpts.devRenderResumeDataCache ?? (postponedState == null ? void 0 : postponedState.renderResumeDataCache);\n        const rootParams = getRootParams(loaderTree, ctx.getDynamicParamFromSegment);\n        const requestStore = createRequestStoreForRender(req, res, url, rootParams, implicitTags, renderOpts.onUpdateCookies, renderOpts.previewProps, isHmrRefresh, serverComponentsHmrCache, renderResumeDataCache);\n        if (process.env.NODE_ENV === 'development' && renderOpts.setIsrStatus && // The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME !== 'edge' && isNodeNextRequest(req) && !isDevWarmupRequest) {\n            const setIsrStatus = renderOpts.setIsrStatus;\n            req.originalRequest.on('end', ()=>{\n                if (!requestStore.usedDynamic && !workStore.forceDynamic) {\n                    // only node can be ISR so we only need to update the status here\n                    const { pathname } = new URL(req.url || '/', 'http://n');\n                    setIsrStatus(pathname, true);\n                }\n            });\n        }\n        if (isDevWarmupRequest) {\n            return warmupDevRender(req, ctx);\n        } else if (isRSCRequest) {\n            return generateDynamicFlightRenderResult(req, ctx, requestStore);\n        }\n        const renderToStreamWithTracing = getTracer().wrap(AppRenderSpan.getBodyResult, {\n            spanName: `render route (app) ${pagePath}`,\n            attributes: {\n                'next.route': pagePath\n            }\n        }, renderToStream);\n        let formState = null;\n        if (isPossibleActionRequest) {\n            // For action requests, we handle them differently with a special render result.\n            const actionRequestResult = await handleAction({\n                req,\n                res,\n                ComponentMod,\n                serverModuleMap,\n                generateFlight: generateDynamicFlightRenderResult,\n                workStore,\n                requestStore,\n                serverActions,\n                ctx\n            });\n            if (actionRequestResult) {\n                if (actionRequestResult.type === 'not-found') {\n                    const notFoundLoaderTree = createNotFoundLoaderTree(loaderTree);\n                    res.statusCode = 404;\n                    const stream = await renderToStreamWithTracing(requestStore, req, res, ctx, workStore, notFoundLoaderTree, formState, postponedState);\n                    return new RenderResult(stream, {\n                        metadata\n                    });\n                } else if (actionRequestResult.type === 'done') {\n                    if (actionRequestResult.result) {\n                        actionRequestResult.result.assignMetadata(metadata);\n                        return actionRequestResult.result;\n                    } else if (actionRequestResult.formState) {\n                        formState = actionRequestResult.formState;\n                    }\n                }\n            }\n        }\n        const options = {\n            metadata\n        };\n        const stream = await renderToStreamWithTracing(requestStore, req, res, ctx, workStore, loaderTree, formState, postponedState);\n        if (workStore.invalidUsageError) {\n            throw workStore.invalidUsageError;\n        }\n        // If we have pending revalidates, wait until they are all resolved.\n        if (workStore.pendingRevalidates || workStore.pendingRevalidateWrites || workStore.pendingRevalidatedTags) {\n            const pendingPromise = executeRevalidates(workStore).finally(()=>{\n                if (process.env.NEXT_PRIVATE_DEBUG_CACHE) {\n                    console.log('pending revalidates promise finished for:', url);\n                }\n            });\n            if (renderOpts.waitUntil) {\n                renderOpts.waitUntil(pendingPromise);\n            } else {\n                options.waitUntil = pendingPromise;\n            }\n        }\n        // Create the new render result for the response.\n        return new RenderResult(stream, options);\n    }\n}\nexport const renderToHTMLOrFlight = (req, res, pagePath, query, fallbackRouteParams, renderOpts, serverComponentsHmrCache, isDevWarmup, sharedContext)=>{\n    var _renderOpts_previewProps;\n    if (!req.url) {\n        throw Object.defineProperty(new Error('Invalid URL'), \"__NEXT_ERROR_CODE\", {\n            value: \"E182\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const url = parseRelativeUrl(req.url, undefined, false);\n    // We read these values from the request object as, in certain cases,\n    // base-server will strip them to opt into different rendering behavior.\n    const parsedRequestHeaders = parseRequestHeaders(req.headers, {\n        isDevWarmup,\n        isRoutePPREnabled: renderOpts.experimental.isRoutePPREnabled === true,\n        previewModeId: (_renderOpts_previewProps = renderOpts.previewProps) == null ? void 0 : _renderOpts_previewProps.previewModeId\n    });\n    const { isPrefetchRequest, previouslyRevalidatedTags } = parsedRequestHeaders;\n    const requestEndedState = {\n        ended: false\n    };\n    let postponedState = null;\n    // If provided, the postpone state should be parsed so it can be provided to\n    // React.\n    if (typeof renderOpts.postponed === 'string') {\n        if (fallbackRouteParams) {\n            throw Object.defineProperty(new InvariantError('postponed state should not be provided when fallback params are provided'), \"__NEXT_ERROR_CODE\", {\n                value: \"E592\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        postponedState = parsePostponedState(renderOpts.postponed, renderOpts.params);\n    }\n    if ((postponedState == null ? void 0 : postponedState.renderResumeDataCache) && renderOpts.devRenderResumeDataCache) {\n        throw Object.defineProperty(new InvariantError('postponed state and dev warmup immutable resume data cache should not be provided together'), \"__NEXT_ERROR_CODE\", {\n            value: \"E589\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const workStore = createWorkStore({\n        page: renderOpts.routeModule.definition.page,\n        fallbackRouteParams,\n        renderOpts,\n        requestEndedState,\n        // @TODO move to workUnitStore of type Request\n        isPrefetchRequest,\n        buildId: sharedContext.buildId,\n        previouslyRevalidatedTags\n    });\n    return workAsyncStorage.run(workStore, // The function to run\n    renderToHTMLOrFlightImpl, // all of it's args\n    req, res, url, pagePath, query, renderOpts, workStore, parsedRequestHeaders, requestEndedState, postponedState, serverComponentsHmrCache, sharedContext);\n};\nasync function renderToStream(requestStore, req, res, ctx, workStore, tree, formState, postponedState) {\n    const renderOpts = ctx.renderOpts;\n    const ComponentMod = renderOpts.ComponentMod;\n    // TODO: fix this typescript\n    const clientReferenceManifest = renderOpts.clientReferenceManifest;\n    const { ServerInsertedHTMLProvider, renderServerInsertedHTML } = createServerInsertedHTML();\n    const { ServerInsertedMetadataProvider, getServerInsertedMetadata } = createServerInsertedMetadata(ctx.nonce);\n    const tracingMetadata = getTracedMetadata(getTracer().getTracePropagationData(), renderOpts.experimental.clientTraceMetadata);\n    const polyfills = renderOpts.buildManifest.polyfillFiles.filter((polyfill)=>polyfill.endsWith('.js') && !polyfill.endsWith('.module.js')).map((polyfill)=>{\n        var _renderOpts_subresourceIntegrityManifest;\n        return {\n            src: `${ctx.assetPrefix}/_next/${polyfill}${getAssetQueryString(ctx, false)}`,\n            integrity: (_renderOpts_subresourceIntegrityManifest = renderOpts.subresourceIntegrityManifest) == null ? void 0 : _renderOpts_subresourceIntegrityManifest[polyfill],\n            crossOrigin: renderOpts.crossOrigin,\n            noModule: true,\n            nonce: ctx.nonce\n        };\n    });\n    const [preinitScripts, bootstrapScript] = getRequiredScripts(renderOpts.buildManifest, // Why is assetPrefix optional on renderOpts?\n    // @TODO make it default empty string on renderOpts and get rid of it from ctx\n    ctx.assetPrefix, renderOpts.crossOrigin, renderOpts.subresourceIntegrityManifest, getAssetQueryString(ctx, true), ctx.nonce, renderOpts.page);\n    const reactServerErrorsByDigest = new Map();\n    const silenceLogger = false;\n    function onHTMLRenderRSCError(err) {\n        return renderOpts.onInstrumentationRequestError == null ? void 0 : renderOpts.onInstrumentationRequestError.call(renderOpts, err, req, createErrorContext(ctx, 'react-server-components'));\n    }\n    const serverComponentsErrorHandler = createHTMLReactServerErrorHandler(!!renderOpts.dev, !!renderOpts.nextExport, reactServerErrorsByDigest, silenceLogger, onHTMLRenderRSCError);\n    function onHTMLRenderSSRError(err) {\n        return renderOpts.onInstrumentationRequestError == null ? void 0 : renderOpts.onInstrumentationRequestError.call(renderOpts, err, req, createErrorContext(ctx, 'server-rendering'));\n    }\n    const allCapturedErrors = [];\n    const htmlRendererErrorHandler = createHTMLErrorHandler(!!renderOpts.dev, !!renderOpts.nextExport, reactServerErrorsByDigest, allCapturedErrors, silenceLogger, onHTMLRenderSSRError);\n    let reactServerResult = null;\n    const setHeader = res.setHeader.bind(res);\n    const appendHeader = res.appendHeader.bind(res);\n    try {\n        if (// We only want this behavior when running `next dev`\n        renderOpts.dev && // We only want this behavior when we have React's dev builds available\n        process.env.NODE_ENV === 'development' && // Edge routes never prerender so we don't have a Prerender environment for anything in edge runtime\n        process.env.NEXT_RUNTIME !== 'edge' && // We only have a Prerender environment for projects opted into dynamicIO\n        renderOpts.experimental.dynamicIO) {\n            // This is a dynamic render. We don't do dynamic tracking because we're not prerendering\n            const RSCPayload = await workUnitAsyncStorage.run(requestStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n            const [resolveValidation, validationOutlet] = createValidationOutlet();\n            RSCPayload._validation = validationOutlet;\n            const reactServerStream = await workUnitAsyncStorage.run(requestStore, scheduleInSequentialTasks, ()=>{\n                requestStore.prerenderPhase = true;\n                return ComponentMod.renderToReadableStream(RSCPayload, clientReferenceManifest.clientModules, {\n                    onError: serverComponentsErrorHandler,\n                    environmentName: ()=>requestStore.prerenderPhase === true ? 'Prerender' : 'Server',\n                    filterStackFrame (url, _functionName) {\n                        // The default implementation filters out <anonymous> stack frames\n                        // but we want to retain them because current Server Components and\n                        // built-in Components in parent stacks don't have source location.\n                        return !url.startsWith('node:') && !url.includes('node_modules');\n                    }\n                });\n            }, ()=>{\n                requestStore.prerenderPhase = false;\n            });\n            spawnDynamicValidationInDev(resolveValidation, tree, ctx, res.statusCode === 404, clientReferenceManifest, workStore.route, requestStore);\n            reactServerResult = new ReactServerResult(reactServerStream);\n        } else {\n            // This is a dynamic render. We don't do dynamic tracking because we're not prerendering\n            const RSCPayload = await workUnitAsyncStorage.run(requestStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n            reactServerResult = new ReactServerResult(workUnitAsyncStorage.run(requestStore, ComponentMod.renderToReadableStream, RSCPayload, clientReferenceManifest.clientModules, {\n                onError: serverComponentsErrorHandler\n            }));\n        }\n        // React doesn't start rendering synchronously but we want the RSC render to have a chance to start\n        // before we begin SSR rendering because we want to capture any available preload headers so we tick\n        // one task before continuing\n        await waitAtLeastOneReactRenderTask();\n        // If provided, the postpone state should be parsed as JSON so it can be\n        // provided to React.\n        if (typeof renderOpts.postponed === 'string') {\n            if ((postponedState == null ? void 0 : postponedState.type) === DynamicState.DATA) {\n                // We have a complete HTML Document in the prerender but we need to\n                // still include the new server component render because it was not included\n                // in the static prelude.\n                const inlinedReactServerDataStream = createInlinedDataReadableStream(reactServerResult.tee(), ctx.nonce, formState);\n                return chainStreams(inlinedReactServerDataStream, createDocumentClosingStream());\n            } else if (postponedState) {\n                // We assume we have dynamic HTML requiring a resume render to complete\n                const postponed = getPostponedFromState(postponedState);\n                const resume = require('react-dom/server.edge').resume;\n                const htmlStream = await workUnitAsyncStorage.run(requestStore, resume, /*#__PURE__*/ _jsx(App, {\n                    reactServerStream: reactServerResult.tee(),\n                    preinitScripts: preinitScripts,\n                    clientReferenceManifest: clientReferenceManifest,\n                    ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                    ServerInsertedMetadataProvider: ServerInsertedMetadataProvider,\n                    nonce: ctx.nonce\n                }), postponed, {\n                    onError: htmlRendererErrorHandler,\n                    nonce: ctx.nonce\n                });\n                const getServerInsertedHTML = makeGetServerInsertedHTML({\n                    polyfills,\n                    renderServerInsertedHTML,\n                    serverCapturedErrors: allCapturedErrors,\n                    basePath: renderOpts.basePath,\n                    tracingMetadata: tracingMetadata\n                });\n                return await continueDynamicHTMLResume(htmlStream, {\n                    inlinedDataStream: createInlinedDataReadableStream(reactServerResult.consume(), ctx.nonce, formState),\n                    getServerInsertedHTML,\n                    getServerInsertedMetadata\n                });\n            }\n        }\n        // This is a regular dynamic render\n        const renderToReadableStream = require('react-dom/server.edge').renderToReadableStream;\n        const htmlStream = await workUnitAsyncStorage.run(requestStore, renderToReadableStream, /*#__PURE__*/ _jsx(App, {\n            reactServerStream: reactServerResult.tee(),\n            preinitScripts: preinitScripts,\n            clientReferenceManifest: clientReferenceManifest,\n            ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n            ServerInsertedMetadataProvider: ServerInsertedMetadataProvider,\n            nonce: ctx.nonce\n        }), {\n            onError: htmlRendererErrorHandler,\n            nonce: ctx.nonce,\n            onHeaders: (headers)=>{\n                headers.forEach((value, key)=>{\n                    appendHeader(key, value);\n                });\n            },\n            maxHeadersLength: renderOpts.reactMaxHeadersLength,\n            bootstrapScripts: [\n                bootstrapScript\n            ],\n            formState\n        });\n        const getServerInsertedHTML = makeGetServerInsertedHTML({\n            polyfills,\n            renderServerInsertedHTML,\n            serverCapturedErrors: allCapturedErrors,\n            basePath: renderOpts.basePath,\n            tracingMetadata: tracingMetadata\n        });\n        /**\n     * Rules of Static & Dynamic HTML:\n     *\n     *    1.) We must generate static HTML unless the caller explicitly opts\n     *        in to dynamic HTML support.\n     *\n     *    2.) If dynamic HTML support is requested, we must honor that request\n     *        or throw an error. It is the sole responsibility of the caller to\n     *        ensure they aren't e.g. requesting dynamic HTML for an AMP page.\n     *\n     *   3.) If `shouldWaitOnAllReady` is true, which indicates we need to\n     *       resolve all suspenses and generate a full HTML. e.g. when it's a\n     *       html limited bot requests, we produce the full HTML content.\n     *\n     * These rules help ensure that other existing features like request caching,\n     * coalescing, and ISR continue working as intended.\n     */ const generateStaticHTML = renderOpts.supportsDynamicResponse !== true || !!renderOpts.shouldWaitOnAllReady;\n        const validateRootLayout = renderOpts.dev;\n        return await continueFizzStream(htmlStream, {\n            inlinedDataStream: createInlinedDataReadableStream(reactServerResult.consume(), ctx.nonce, formState),\n            isStaticGeneration: generateStaticHTML,\n            getServerInsertedHTML,\n            getServerInsertedMetadata,\n            validateRootLayout\n        });\n    } catch (err) {\n        if (isStaticGenBailoutError(err) || typeof err === 'object' && err !== null && 'message' in err && typeof err.message === 'string' && err.message.includes('https://nextjs.org/docs/advanced-features/static-html-export')) {\n            // Ensure that \"next dev\" prints the red error overlay\n            throw err;\n        }\n        // If a bailout made it to this point, it means it wasn't wrapped inside\n        // a suspense boundary.\n        const shouldBailoutToCSR = isBailoutToCSRError(err);\n        if (shouldBailoutToCSR) {\n            const stack = getStackWithoutErrorMessage(err);\n            error(`${err.reason} should be wrapped in a suspense boundary at page \"${ctx.pagePath}\". Read more: https://nextjs.org/docs/messages/missing-suspense-with-csr-bailout\\n${stack}`);\n            throw err;\n        }\n        let errorType;\n        if (isHTTPAccessFallbackError(err)) {\n            res.statusCode = getAccessFallbackHTTPStatus(err);\n            errorType = getAccessFallbackErrorTypeByStatus(res.statusCode);\n        } else if (isRedirectError(err)) {\n            errorType = 'redirect';\n            res.statusCode = getRedirectStatusCodeFromError(err);\n            const redirectUrl = addPathPrefix(getURLFromRedirectError(err), renderOpts.basePath);\n            // If there were mutable cookies set, we need to set them on the\n            // response.\n            const headers = new Headers();\n            if (appendMutableCookies(headers, requestStore.mutableCookies)) {\n                setHeader('set-cookie', Array.from(headers.values()));\n            }\n            setHeader('location', redirectUrl);\n        } else if (!shouldBailoutToCSR) {\n            res.statusCode = 500;\n        }\n        const [errorPreinitScripts, errorBootstrapScript] = getRequiredScripts(renderOpts.buildManifest, ctx.assetPrefix, renderOpts.crossOrigin, renderOpts.subresourceIntegrityManifest, getAssetQueryString(ctx, false), ctx.nonce, '/_not-found/page');\n        const errorRSCPayload = await workUnitAsyncStorage.run(requestStore, getErrorRSCPayload, tree, ctx, reactServerErrorsByDigest.has(err.digest) ? null : err, errorType);\n        const errorServerStream = workUnitAsyncStorage.run(requestStore, ComponentMod.renderToReadableStream, errorRSCPayload, clientReferenceManifest.clientModules, {\n            onError: serverComponentsErrorHandler\n        });\n        if (reactServerResult === null) {\n            // We errored when we did not have an RSC stream to read from. This is not just a render\n            // error, we need to throw early\n            throw err;\n        }\n        try {\n            const fizzStream = await workUnitAsyncStorage.run(requestStore, renderToInitialFizzStream, {\n                ReactDOMServer: require('react-dom/server.edge'),\n                element: /*#__PURE__*/ _jsx(ErrorApp, {\n                    reactServerStream: errorServerStream,\n                    ServerInsertedMetadataProvider: ServerInsertedMetadataProvider,\n                    ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                    preinitScripts: errorPreinitScripts,\n                    clientReferenceManifest: clientReferenceManifest,\n                    nonce: ctx.nonce\n                }),\n                streamOptions: {\n                    nonce: ctx.nonce,\n                    // Include hydration scripts in the HTML\n                    bootstrapScripts: [\n                        errorBootstrapScript\n                    ],\n                    formState\n                }\n            });\n            /**\n       * Rules of Static & Dynamic HTML:\n       *\n       *    1.) We must generate static HTML unless the caller explicitly opts\n       *        in to dynamic HTML support.\n       *\n       *    2.) If dynamic HTML support is requested, we must honor that request\n       *        or throw an error. It is the sole responsibility of the caller to\n       *        ensure they aren't e.g. requesting dynamic HTML for an AMP page.\n       *    3.) If `shouldWaitOnAllReady` is true, which indicates we need to\n       *        resolve all suspenses and generate a full HTML. e.g. when it's a\n       *        html limited bot requests, we produce the full HTML content.\n       *\n       * These rules help ensure that other existing features like request caching,\n       * coalescing, and ISR continue working as intended.\n       */ const generateStaticHTML = renderOpts.supportsDynamicResponse !== true || !!renderOpts.shouldWaitOnAllReady;\n            const validateRootLayout = renderOpts.dev;\n            return await continueFizzStream(fizzStream, {\n                inlinedDataStream: createInlinedDataReadableStream(// This is intentionally using the readable datastream from the\n                // main render rather than the flight data from the error page\n                // render\n                reactServerResult.consume(), ctx.nonce, formState),\n                isStaticGeneration: generateStaticHTML,\n                getServerInsertedHTML: makeGetServerInsertedHTML({\n                    polyfills,\n                    renderServerInsertedHTML,\n                    serverCapturedErrors: [],\n                    basePath: renderOpts.basePath,\n                    tracingMetadata: tracingMetadata\n                }),\n                getServerInsertedMetadata,\n                validateRootLayout\n            });\n        } catch (finalErr) {\n            if (process.env.NODE_ENV === 'development' && isHTTPAccessFallbackError(finalErr)) {\n                const { bailOnRootNotFound } = require('../../client/components/dev-root-http-access-fallback-boundary');\n                bailOnRootNotFound();\n            }\n            throw finalErr;\n        }\n    }\n}\nfunction createValidationOutlet() {\n    let resolveValidation;\n    let outlet = new Promise((resolve)=>{\n        resolveValidation = resolve;\n    });\n    return [\n        resolveValidation,\n        outlet\n    ];\n}\nasync function spawnDynamicValidationInDev(resolveValidation, tree, ctx, isNotFound, clientReferenceManifest, route, requestStore) {\n    var _requestStore_cookies_get;\n    const { componentMod: ComponentMod, implicitTags } = ctx;\n    const rootParams = getRootParams(ComponentMod.tree, ctx.getDynamicParamFromSegment);\n    const hmrRefreshHash = (_requestStore_cookies_get = requestStore.cookies.get(NEXT_HMR_REFRESH_HASH_COOKIE)) == null ? void 0 : _requestStore_cookies_get.value;\n    // Prerender controller represents the lifetime of the prerender.\n    // It will be aborted when a Task is complete or a synchronously aborting\n    // API is called. Notably during cache-filling renders this does not actually\n    // terminate the render itself which will continue until all caches are filled\n    const initialServerPrerenderController = new AbortController();\n    // This controller represents the lifetime of the React render call. Notably\n    // during the cache-filling render it is different from the prerender controller\n    // because we don't want to end the react render until all caches are filled.\n    const initialServerRenderController = new AbortController();\n    const cacheSignal = new CacheSignal();\n    const prerenderResumeDataCache = createPrerenderResumeDataCache();\n    const initialServerPrerenderStore = {\n        type: 'prerender',\n        phase: 'render',\n        rootParams,\n        implicitTags,\n        renderSignal: initialServerRenderController.signal,\n        controller: initialServerPrerenderController,\n        cacheSignal,\n        dynamicTracking: null,\n        revalidate: INFINITE_CACHE,\n        expire: INFINITE_CACHE,\n        stale: INFINITE_CACHE,\n        tags: [],\n        prerenderResumeDataCache,\n        hmrRefreshHash\n    };\n    const initialClientController = new AbortController();\n    const initialClientPrerenderStore = {\n        type: 'prerender',\n        phase: 'render',\n        rootParams,\n        implicitTags,\n        renderSignal: initialClientController.signal,\n        controller: initialClientController,\n        cacheSignal,\n        dynamicTracking: null,\n        revalidate: INFINITE_CACHE,\n        expire: INFINITE_CACHE,\n        stale: INFINITE_CACHE,\n        tags: [],\n        prerenderResumeDataCache,\n        hmrRefreshHash\n    };\n    // We're not going to use the result of this render because the only time it could be used\n    // is if it completes in a microtask and that's likely very rare for any non-trivial app\n    const firstAttemptRSCPayload = await workUnitAsyncStorage.run(initialServerPrerenderStore, getRSCPayload, tree, ctx, isNotFound);\n    let initialServerStream;\n    try {\n        initialServerStream = workUnitAsyncStorage.run(initialServerPrerenderStore, ComponentMod.renderToReadableStream, firstAttemptRSCPayload, clientReferenceManifest.clientModules, {\n            onError: (err)=>{\n                const digest = getDigestForWellKnownError(err);\n                if (digest) {\n                    return digest;\n                }\n                if (initialServerPrerenderController.signal.aborted || initialServerRenderController.signal.aborted) {\n                    // The render aborted before this error was handled which indicates\n                    // the error is caused by unfinished components within the render\n                    return;\n                } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                    printDebugThrownValueForProspectiveRender(err, route);\n                }\n            },\n            signal: initialServerRenderController.signal\n        });\n    } catch (err) {\n        if (initialServerPrerenderController.signal.aborted || initialServerRenderController.signal.aborted) {\n        // These are expected errors that might error the prerender. we ignore them.\n        } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n            // We don't normally log these errors because we are going to retry anyway but\n            // it can be useful for debugging Next.js itself to get visibility here when needed\n            printDebugThrownValueForProspectiveRender(err, route);\n        }\n    }\n    const nonce = '1';\n    const { ServerInsertedHTMLProvider } = createServerInsertedHTML();\n    const { ServerInsertedMetadataProvider } = createServerInsertedMetadata(nonce);\n    if (initialServerStream) {\n        const [warmupStream, renderStream] = initialServerStream.tee();\n        initialServerStream = null;\n        // Before we attempt the SSR initial render we need to ensure all client modules\n        // are already loaded.\n        await warmFlightResponse(warmupStream, clientReferenceManifest);\n        const prerender = require('react-dom/static.edge').prerender;\n        const pendingInitialClientResult = workUnitAsyncStorage.run(initialClientPrerenderStore, prerender, /*#__PURE__*/ _jsx(App, {\n            reactServerStream: renderStream,\n            preinitScripts: ()=>{},\n            clientReferenceManifest: clientReferenceManifest,\n            ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n            ServerInsertedMetadataProvider: ServerInsertedMetadataProvider,\n            nonce: nonce\n        }), {\n            signal: initialClientController.signal,\n            onError: (err)=>{\n                const digest = getDigestForWellKnownError(err);\n                if (digest) {\n                    return digest;\n                }\n                if (initialClientController.signal.aborted) {\n                // These are expected errors that might error the prerender. we ignore them.\n                } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                    // We don't normally log these errors because we are going to retry anyway but\n                    // it can be useful for debugging Next.js itself to get visibility here when needed\n                    printDebugThrownValueForProspectiveRender(err, route);\n                }\n            }\n        });\n        pendingInitialClientResult.catch((err)=>{\n            if (initialClientController.signal.aborted) {\n            // We aborted the render normally and can ignore this error\n            } else {\n                // We're going to retry to so we normally would suppress this error but\n                // when verbose logging is on we print it\n                if (process.env.__NEXT_VERBOSE_LOGGING) {\n                    printDebugThrownValueForProspectiveRender(err, route);\n                }\n            }\n        });\n    }\n    await cacheSignal.cacheReady();\n    // It is important that we abort the SSR render first to avoid\n    // connection closed errors from having an incomplete RSC stream\n    initialClientController.abort();\n    initialServerRenderController.abort();\n    initialServerPrerenderController.abort();\n    // We've now filled caches and triggered any inadvertent sync bailouts\n    // due to lazy module initialization. We can restart our render to capture results\n    const finalServerController = new AbortController();\n    const serverDynamicTracking = createDynamicTrackingState(false);\n    const finalServerPrerenderStore = {\n        type: 'prerender',\n        phase: 'render',\n        rootParams,\n        implicitTags,\n        renderSignal: finalServerController.signal,\n        controller: finalServerController,\n        // During the final prerender we don't need to track cache access so we omit the signal\n        cacheSignal: null,\n        dynamicTracking: serverDynamicTracking,\n        revalidate: INFINITE_CACHE,\n        expire: INFINITE_CACHE,\n        stale: INFINITE_CACHE,\n        tags: [],\n        prerenderResumeDataCache,\n        hmrRefreshHash\n    };\n    const finalClientController = new AbortController();\n    const clientDynamicTracking = createDynamicTrackingState(false);\n    const dynamicValidation = createDynamicValidationState();\n    const finalClientPrerenderStore = {\n        type: 'prerender',\n        phase: 'render',\n        rootParams,\n        implicitTags,\n        renderSignal: finalClientController.signal,\n        controller: finalClientController,\n        // During the final prerender we don't need to track cache access so we omit the signal\n        cacheSignal: null,\n        dynamicTracking: clientDynamicTracking,\n        revalidate: INFINITE_CACHE,\n        expire: INFINITE_CACHE,\n        stale: INFINITE_CACHE,\n        tags: [],\n        prerenderResumeDataCache,\n        hmrRefreshHash\n    };\n    const finalServerPayload = await workUnitAsyncStorage.run(finalServerPrerenderStore, getRSCPayload, tree, ctx, isNotFound);\n    const serverPrerenderStreamResult = await prerenderServerWithPhases(finalServerController.signal, ()=>workUnitAsyncStorage.run(finalServerPrerenderStore, ComponentMod.renderToReadableStream, finalServerPayload, clientReferenceManifest.clientModules, {\n            onError: (err)=>{\n                if (isUseCacheTimeoutError(err)) {\n                    return err.digest;\n                }\n                if (finalServerController.signal.aborted && isPrerenderInterruptedError(err)) {\n                    return err.digest;\n                }\n                return getDigestForWellKnownError(err);\n            },\n            signal: finalServerController.signal\n        }), ()=>{\n        finalServerController.abort();\n    });\n    let rootDidError = false;\n    const serverPhasedStream = serverPrerenderStreamResult.asPhasedStream();\n    try {\n        const prerender = require('react-dom/static.edge').prerender;\n        await prerenderClientWithPhases(()=>workUnitAsyncStorage.run(finalClientPrerenderStore, prerender, /*#__PURE__*/ _jsx(App, {\n                reactServerStream: serverPhasedStream,\n                preinitScripts: ()=>{},\n                clientReferenceManifest: clientReferenceManifest,\n                ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                ServerInsertedMetadataProvider: ServerInsertedMetadataProvider,\n                nonce: ctx.nonce\n            }), {\n                signal: finalClientController.signal,\n                onError: (err, errorInfo)=>{\n                    if (isUseCacheTimeoutError(err)) {\n                        dynamicValidation.dynamicErrors.push(err);\n                        return;\n                    }\n                    if (isPrerenderInterruptedError(err) || finalClientController.signal.aborted) {\n                        if (!rootDidError) {\n                            // If the root errored before we observe this error then it wasn't caused by something dynamic.\n                            // If the root did not error or is erroring because of a sync dynamic API or a prerender interrupt error\n                            // then we are a dynamic route.\n                            requestStore.usedDynamic = true;\n                        }\n                        const componentStack = errorInfo.componentStack;\n                        if (typeof componentStack === 'string') {\n                            trackAllowedDynamicAccess(route, componentStack, dynamicValidation, serverDynamicTracking, clientDynamicTracking);\n                        }\n                        return;\n                    }\n                    return getDigestForWellKnownError(err);\n                }\n            }), ()=>{\n            finalClientController.abort();\n            serverPhasedStream.assertExhausted();\n        });\n    } catch (err) {\n        rootDidError = true;\n        if (isPrerenderInterruptedError(err) || finalClientController.signal.aborted) {\n        // we don't have a root because the abort errored in the root. We can just ignore this error\n        } else {\n        // If an error is thrown in the root before prerendering is aborted, we\n        // don't want to rethrow it here, otherwise this would lead to a hanging\n        // response and unhandled rejection. We also don't want to log it, because\n        // it's most likely already logged as part of the normal render. So we\n        // just fall through here, to make sure `resolveValidation` is called.\n        }\n    }\n    function LogDynamicValidation() {\n        try {\n            throwIfDisallowedDynamic(route, dynamicValidation, serverDynamicTracking, clientDynamicTracking);\n        } catch  {}\n        return null;\n    }\n    resolveValidation(/*#__PURE__*/ _jsx(LogDynamicValidation, {}));\n}\n/**\n * Determines whether we should generate static flight data.\n */ function shouldGenerateStaticFlightData(workStore) {\n    const { isStaticGeneration } = workStore;\n    if (!isStaticGeneration) return false;\n    return true;\n}\nasync function prerenderToStream(req, res, ctx, metadata, workStore, tree) {\n    // When prerendering formState is always null. We still include it\n    // because some shared APIs expect a formState value and this is slightly\n    // more explicit than making it an optional function argument\n    const formState = null;\n    const { assetPrefix, getDynamicParamFromSegment, implicitTags, nonce, pagePath, renderOpts } = ctx;\n    const rootParams = getRootParams(tree, getDynamicParamFromSegment);\n    const ComponentMod = renderOpts.ComponentMod;\n    // TODO: fix this typescript\n    const clientReferenceManifest = renderOpts.clientReferenceManifest;\n    const fallbackRouteParams = workStore.fallbackRouteParams;\n    const { ServerInsertedHTMLProvider, renderServerInsertedHTML } = createServerInsertedHTML();\n    const { ServerInsertedMetadataProvider, getServerInsertedMetadata } = createServerInsertedMetadata(nonce);\n    const tracingMetadata = getTracedMetadata(getTracer().getTracePropagationData(), renderOpts.experimental.clientTraceMetadata);\n    const polyfills = renderOpts.buildManifest.polyfillFiles.filter((polyfill)=>polyfill.endsWith('.js') && !polyfill.endsWith('.module.js')).map((polyfill)=>{\n        var _renderOpts_subresourceIntegrityManifest;\n        return {\n            src: `${assetPrefix}/_next/${polyfill}${getAssetQueryString(ctx, false)}`,\n            integrity: (_renderOpts_subresourceIntegrityManifest = renderOpts.subresourceIntegrityManifest) == null ? void 0 : _renderOpts_subresourceIntegrityManifest[polyfill],\n            crossOrigin: renderOpts.crossOrigin,\n            noModule: true,\n            nonce: nonce\n        };\n    });\n    const [preinitScripts, bootstrapScript] = getRequiredScripts(renderOpts.buildManifest, // Why is assetPrefix optional on renderOpts?\n    // @TODO make it default empty string on renderOpts and get rid of it from ctx\n    assetPrefix, renderOpts.crossOrigin, renderOpts.subresourceIntegrityManifest, getAssetQueryString(ctx, true), nonce, renderOpts.page);\n    const reactServerErrorsByDigest = new Map();\n    // We don't report errors during prerendering through our instrumentation hooks\n    const silenceLogger = !!renderOpts.experimental.isRoutePPREnabled;\n    function onHTMLRenderRSCError(err) {\n        return renderOpts.onInstrumentationRequestError == null ? void 0 : renderOpts.onInstrumentationRequestError.call(renderOpts, err, req, createErrorContext(ctx, 'react-server-components'));\n    }\n    const serverComponentsErrorHandler = createHTMLReactServerErrorHandler(!!renderOpts.dev, !!renderOpts.nextExport, reactServerErrorsByDigest, silenceLogger, onHTMLRenderRSCError);\n    function onHTMLRenderSSRError(err) {\n        return renderOpts.onInstrumentationRequestError == null ? void 0 : renderOpts.onInstrumentationRequestError.call(renderOpts, err, req, createErrorContext(ctx, 'server-rendering'));\n    }\n    const allCapturedErrors = [];\n    const htmlRendererErrorHandler = createHTMLErrorHandler(!!renderOpts.dev, !!renderOpts.nextExport, reactServerErrorsByDigest, allCapturedErrors, silenceLogger, onHTMLRenderSSRError);\n    let reactServerPrerenderResult = null;\n    const setMetadataHeader = (name)=>{\n        metadata.headers ??= {};\n        metadata.headers[name] = res.getHeader(name);\n    };\n    const setHeader = (name, value)=>{\n        res.setHeader(name, value);\n        setMetadataHeader(name);\n        return res;\n    };\n    const appendHeader = (name, value)=>{\n        if (Array.isArray(value)) {\n            value.forEach((item)=>{\n                res.appendHeader(name, item);\n            });\n        } else {\n            res.appendHeader(name, value);\n        }\n        setMetadataHeader(name);\n    };\n    const selectStaleTime = (stale)=>{\n        var _renderOpts_experimental_staleTimes;\n        return stale === INFINITE_CACHE && typeof ((_renderOpts_experimental_staleTimes = renderOpts.experimental.staleTimes) == null ? void 0 : _renderOpts_experimental_staleTimes.static) === 'number' ? renderOpts.experimental.staleTimes.static : stale;\n    };\n    let prerenderStore = null;\n    try {\n        if (renderOpts.experimental.dynamicIO) {\n            if (renderOpts.experimental.isRoutePPREnabled) {\n                /**\n         * dynamicIO with PPR\n         *\n         * The general approach is to render the RSC stream first allowing any cache reads to resolve.\n         * Once we have settled all cache reads we restart the render and abort after a single Task.\n         *\n         * Unlike with the non PPR case we can't synchronously abort the render when a dynamic API is used\n         * during the initial render because we need to ensure all caches can be filled as part of the initial Task\n         * and a synchronous abort might prevent us from filling all caches.\n         *\n         * Once the render is complete we allow the SSR render to finish and use a combination of the postponed state\n         * and the reactServerIsDynamic value to determine how to treat the resulting render\n         */ // Prerender controller represents the lifetime of the prerender.\n                // It will be aborted when a Task is complete or a synchronously aborting\n                // API is called. Notably during cache-filling renders this does not actually\n                // terminate the render itself which will continue until all caches are filled\n                const initialServerPrerenderController = new AbortController();\n                // This controller represents the lifetime of the React render call. Notably\n                // during the cache-filling render it is different from the prerender controller\n                // because we don't want to end the react render until all caches are filled.\n                const initialServerRenderController = new AbortController();\n                // The cacheSignal helps us track whether caches are still filling or we are ready\n                // to cut the render off.\n                const cacheSignal = new CacheSignal();\n                // The resume data cache here should use a fresh instance as it's\n                // performing a fresh prerender. If we get to implementing the\n                // prerendering of an already prerendered page, we should use the passed\n                // resume data cache instead.\n                const prerenderResumeDataCache = createPrerenderResumeDataCache();\n                const initialServerPrerenderStore = prerenderStore = {\n                    type: 'prerender',\n                    phase: 'render',\n                    rootParams,\n                    implicitTags,\n                    renderSignal: initialServerRenderController.signal,\n                    controller: initialServerPrerenderController,\n                    cacheSignal,\n                    dynamicTracking: null,\n                    revalidate: INFINITE_CACHE,\n                    expire: INFINITE_CACHE,\n                    stale: INFINITE_CACHE,\n                    tags: [\n                        ...implicitTags.tags\n                    ],\n                    prerenderResumeDataCache,\n                    hmrRefreshHash: undefined\n                };\n                // We're not going to use the result of this render because the only time it could be used\n                // is if it completes in a microtask and that's likely very rare for any non-trivial app\n                const initialServerPayload = await workUnitAsyncStorage.run(initialServerPrerenderStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n                const pendingInitialServerResult = workUnitAsyncStorage.run(initialServerPrerenderStore, ComponentMod.prerender, initialServerPayload, clientReferenceManifest.clientModules, {\n                    onError: (err)=>{\n                        const digest = getDigestForWellKnownError(err);\n                        if (digest) {\n                            return digest;\n                        }\n                        if (initialServerPrerenderController.signal.aborted) {\n                            // The render aborted before this error was handled which indicates\n                            // the error is caused by unfinished components within the render\n                            return;\n                        } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                            printDebugThrownValueForProspectiveRender(err, workStore.route);\n                        }\n                    },\n                    // we don't care to track postpones during the prospective render because we need\n                    // to always do a final render anyway\n                    onPostpone: undefined,\n                    // We don't want to stop rendering until the cacheSignal is complete so we pass\n                    // a different signal to this render call than is used by dynamic APIs to signify\n                    // transitioning out of the prerender environment\n                    signal: initialServerRenderController.signal\n                });\n                await cacheSignal.cacheReady();\n                initialServerRenderController.abort();\n                initialServerPrerenderController.abort();\n                let initialServerResult;\n                try {\n                    initialServerResult = await createReactServerPrerenderResult(pendingInitialServerResult);\n                } catch (err) {\n                    if (initialServerRenderController.signal.aborted || initialServerPrerenderController.signal.aborted) {\n                    // These are expected errors that might error the prerender. we ignore them.\n                    } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                        // We don't normally log these errors because we are going to retry anyway but\n                        // it can be useful for debugging Next.js itself to get visibility here when needed\n                        printDebugThrownValueForProspectiveRender(err, workStore.route);\n                    }\n                }\n                if (initialServerResult) {\n                    // Before we attempt the SSR initial render we need to ensure all client modules\n                    // are already loaded.\n                    await warmFlightResponse(initialServerResult.asStream(), clientReferenceManifest);\n                    const initialClientController = new AbortController();\n                    const initialClientPrerenderStore = {\n                        type: 'prerender',\n                        phase: 'render',\n                        rootParams,\n                        implicitTags,\n                        renderSignal: initialClientController.signal,\n                        controller: initialClientController,\n                        cacheSignal: null,\n                        dynamicTracking: null,\n                        revalidate: INFINITE_CACHE,\n                        expire: INFINITE_CACHE,\n                        stale: INFINITE_CACHE,\n                        tags: [\n                            ...implicitTags.tags\n                        ],\n                        prerenderResumeDataCache,\n                        hmrRefreshHash: undefined\n                    };\n                    const prerender = require('react-dom/static.edge').prerender;\n                    await prerenderAndAbortInSequentialTasks(()=>workUnitAsyncStorage.run(initialClientPrerenderStore, prerender, /*#__PURE__*/ _jsx(App, {\n                            reactServerStream: initialServerResult.asUnclosingStream(),\n                            preinitScripts: preinitScripts,\n                            clientReferenceManifest: clientReferenceManifest,\n                            ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                            ServerInsertedMetadataProvider: ServerInsertedMetadataProvider,\n                            nonce: nonce\n                        }), {\n                            signal: initialClientController.signal,\n                            onError: (err)=>{\n                                const digest = getDigestForWellKnownError(err);\n                                if (digest) {\n                                    return digest;\n                                }\n                                if (initialClientController.signal.aborted) {\n                                // These are expected errors that might error the prerender. we ignore them.\n                                } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                                    // We don't normally log these errors because we are going to retry anyway but\n                                    // it can be useful for debugging Next.js itself to get visibility here when needed\n                                    printDebugThrownValueForProspectiveRender(err, workStore.route);\n                                }\n                            },\n                            bootstrapScripts: [\n                                bootstrapScript\n                            ]\n                        }), ()=>{\n                        initialClientController.abort();\n                    }).catch((err)=>{\n                        if (initialServerRenderController.signal.aborted || isPrerenderInterruptedError(err)) {\n                        // These are expected errors that might error the prerender. we ignore them.\n                        } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                            // We don't normally log these errors because we are going to retry anyway but\n                            // it can be useful for debugging Next.js itself to get visibility here when needed\n                            printDebugThrownValueForProspectiveRender(err, workStore.route);\n                        }\n                    });\n                }\n                let serverIsDynamic = false;\n                const finalServerController = new AbortController();\n                const serverDynamicTracking = createDynamicTrackingState(renderOpts.isDebugDynamicAccesses);\n                const finalRenderPrerenderStore = prerenderStore = {\n                    type: 'prerender',\n                    phase: 'render',\n                    rootParams,\n                    implicitTags,\n                    renderSignal: finalServerController.signal,\n                    controller: finalServerController,\n                    // During the final prerender we don't need to track cache access so we omit the signal\n                    cacheSignal: null,\n                    dynamicTracking: serverDynamicTracking,\n                    revalidate: INFINITE_CACHE,\n                    expire: INFINITE_CACHE,\n                    stale: INFINITE_CACHE,\n                    tags: [\n                        ...implicitTags.tags\n                    ],\n                    prerenderResumeDataCache,\n                    hmrRefreshHash: undefined\n                };\n                const finalAttemptRSCPayload = await workUnitAsyncStorage.run(finalRenderPrerenderStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n                let prerenderIsPending = true;\n                const reactServerResult = reactServerPrerenderResult = await createReactServerPrerenderResult(prerenderAndAbortInSequentialTasks(async ()=>{\n                    const prerenderResult = await workUnitAsyncStorage.run(// The store to scope\n                    finalRenderPrerenderStore, // The function to run\n                    ComponentMod.prerender, // ... the arguments for the function to run\n                    finalAttemptRSCPayload, clientReferenceManifest.clientModules, {\n                        onError: (err)=>{\n                            return serverComponentsErrorHandler(err);\n                        },\n                        signal: finalServerController.signal\n                    });\n                    prerenderIsPending = false;\n                    return prerenderResult;\n                }, ()=>{\n                    if (finalServerController.signal.aborted) {\n                        // If the server controller is already aborted we must have called something\n                        // that required aborting the prerender synchronously such as with new Date()\n                        serverIsDynamic = true;\n                        return;\n                    }\n                    if (prerenderIsPending) {\n                        // If prerenderIsPending then we have blocked for longer than a Task and we assume\n                        // there is something unfinished.\n                        serverIsDynamic = true;\n                    }\n                    finalServerController.abort();\n                }));\n                const clientDynamicTracking = createDynamicTrackingState(renderOpts.isDebugDynamicAccesses);\n                const finalClientController = new AbortController();\n                const finalClientPrerenderStore = {\n                    type: 'prerender',\n                    phase: 'render',\n                    rootParams,\n                    implicitTags,\n                    renderSignal: finalClientController.signal,\n                    controller: finalClientController,\n                    // For HTML Generation we don't need to track cache reads (RSC only)\n                    cacheSignal: null,\n                    dynamicTracking: clientDynamicTracking,\n                    revalidate: INFINITE_CACHE,\n                    expire: INFINITE_CACHE,\n                    stale: INFINITE_CACHE,\n                    tags: [\n                        ...implicitTags.tags\n                    ],\n                    prerenderResumeDataCache,\n                    hmrRefreshHash: undefined\n                };\n                let clientIsDynamic = false;\n                let dynamicValidation = createDynamicValidationState();\n                const prerender = require('react-dom/static.edge').prerender;\n                let { prelude, postponed } = await prerenderAndAbortInSequentialTasks(()=>workUnitAsyncStorage.run(finalClientPrerenderStore, prerender, /*#__PURE__*/ _jsx(App, {\n                        reactServerStream: reactServerResult.asUnclosingStream(),\n                        preinitScripts: preinitScripts,\n                        clientReferenceManifest: clientReferenceManifest,\n                        ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                        ServerInsertedMetadataProvider: ServerInsertedMetadataProvider,\n                        nonce: nonce\n                    }), {\n                        signal: finalClientController.signal,\n                        onError: (err, errorInfo)=>{\n                            if (isPrerenderInterruptedError(err) || finalClientController.signal.aborted) {\n                                clientIsDynamic = true;\n                                const componentStack = errorInfo.componentStack;\n                                if (typeof componentStack === 'string') {\n                                    trackAllowedDynamicAccess(workStore.route, componentStack, dynamicValidation, serverDynamicTracking, clientDynamicTracking);\n                                }\n                                return;\n                            }\n                            return htmlRendererErrorHandler(err, errorInfo);\n                        },\n                        onHeaders: (headers)=>{\n                            headers.forEach((value, key)=>{\n                                appendHeader(key, value);\n                            });\n                        },\n                        maxHeadersLength: renderOpts.reactMaxHeadersLength,\n                        bootstrapScripts: [\n                            bootstrapScript\n                        ]\n                    }), ()=>{\n                    finalClientController.abort();\n                });\n                throwIfDisallowedDynamic(workStore.route, dynamicValidation, serverDynamicTracking, clientDynamicTracking);\n                const getServerInsertedHTML = makeGetServerInsertedHTML({\n                    polyfills,\n                    renderServerInsertedHTML,\n                    serverCapturedErrors: allCapturedErrors,\n                    basePath: renderOpts.basePath,\n                    tracingMetadata: tracingMetadata\n                });\n                const flightData = await streamToBuffer(reactServerResult.asStream());\n                metadata.flightData = flightData;\n                metadata.segmentData = await collectSegmentData(flightData, finalRenderPrerenderStore, ComponentMod, renderOpts, fallbackRouteParams);\n                if (serverIsDynamic || clientIsDynamic) {\n                    if (postponed != null) {\n                        // Dynamic HTML case\n                        metadata.postponed = await getDynamicHTMLPostponedState(postponed, fallbackRouteParams, prerenderResumeDataCache);\n                    } else {\n                        // Dynamic Data case\n                        metadata.postponed = await getDynamicDataPostponedState(prerenderResumeDataCache);\n                    }\n                    reactServerResult.consume();\n                    return {\n                        digestErrorsMap: reactServerErrorsByDigest,\n                        ssrErrors: allCapturedErrors,\n                        stream: await continueDynamicPrerender(prelude, {\n                            getServerInsertedHTML,\n                            getServerInsertedMetadata\n                        }),\n                        dynamicAccess: consumeDynamicAccess(serverDynamicTracking, clientDynamicTracking),\n                        // TODO: Should this include the SSR pass?\n                        collectedRevalidate: finalRenderPrerenderStore.revalidate,\n                        collectedExpire: finalRenderPrerenderStore.expire,\n                        collectedStale: selectStaleTime(finalRenderPrerenderStore.stale),\n                        collectedTags: finalRenderPrerenderStore.tags\n                    };\n                } else {\n                    // Static case\n                    if (workStore.forceDynamic) {\n                        throw Object.defineProperty(new StaticGenBailoutError('Invariant: a Page with `dynamic = \"force-dynamic\"` did not trigger the dynamic pathway. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n                            value: \"E598\",\n                            enumerable: false,\n                            configurable: true\n                        });\n                    }\n                    let htmlStream = prelude;\n                    if (postponed != null) {\n                        // We postponed but nothing dynamic was used. We resume the render now and immediately abort it\n                        // so we can set all the postponed boundaries to client render mode before we store the HTML response\n                        const resume = require('react-dom/server.edge').resume;\n                        // We don't actually want to render anything so we just pass a stream\n                        // that never resolves. The resume call is going to abort immediately anyway\n                        const foreverStream = new ReadableStream();\n                        const resumeStream = await resume(/*#__PURE__*/ _jsx(App, {\n                            reactServerStream: foreverStream,\n                            preinitScripts: ()=>{},\n                            clientReferenceManifest: clientReferenceManifest,\n                            ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                            ServerInsertedMetadataProvider: ServerInsertedMetadataProvider,\n                            nonce: nonce\n                        }), JSON.parse(JSON.stringify(postponed)), {\n                            signal: createPostponedAbortSignal('static prerender resume'),\n                            onError: htmlRendererErrorHandler,\n                            nonce\n                        });\n                        // First we write everything from the prerender, then we write everything from the aborted resume render\n                        htmlStream = chainStreams(prelude, resumeStream);\n                    }\n                    return {\n                        digestErrorsMap: reactServerErrorsByDigest,\n                        ssrErrors: allCapturedErrors,\n                        stream: await continueStaticPrerender(htmlStream, {\n                            inlinedDataStream: createInlinedDataReadableStream(reactServerResult.consumeAsStream(), nonce, formState),\n                            getServerInsertedHTML,\n                            getServerInsertedMetadata\n                        }),\n                        dynamicAccess: consumeDynamicAccess(serverDynamicTracking, clientDynamicTracking),\n                        // TODO: Should this include the SSR pass?\n                        collectedRevalidate: finalRenderPrerenderStore.revalidate,\n                        collectedExpire: finalRenderPrerenderStore.expire,\n                        collectedStale: selectStaleTime(finalRenderPrerenderStore.stale),\n                        collectedTags: finalRenderPrerenderStore.tags\n                    };\n                }\n            } else {\n                /**\n         * dynamicIO without PPR\n         *\n         * The general approach is to render the RSC tree first allowing for any inflight\n         * caches to resolve. Once we have settled inflight caches we can check and see if any\n         * synchronous dynamic APIs were used. If so we don't need to bother doing anything more\n         * because the page will be dynamic on re-render anyway\n         *\n         * If no sync dynamic APIs were used we then re-render and abort after a single Task.\n         * If the render errors we know that the page has some dynamic IO. This assumes and relies\n         * upon caches reading from a in process memory cache and resolving in a microtask. While this\n         * is true from our own default cache implementation and if you don't exceed our LRU size it\n         * might not be true for custom cache implementations.\n         *\n         * Future implementations can do some different strategies during build like using IPC to\n         * synchronously fill caches during this special rendering mode. For now this heuristic should work\n         */ const cache = workStore.incrementalCache;\n                if (!cache) {\n                    throw Object.defineProperty(new Error('Expected incremental cache to exist. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E205\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                // Prerender controller represents the lifetime of the prerender.\n                // It will be aborted when a Task is complete or a synchronously aborting\n                // API is called. Notably during cache-filling renders this does not actually\n                // terminate the render itself which will continue until all caches are filled\n                const initialServerPrerenderController = new AbortController();\n                // This controller represents the lifetime of the React render call. Notably\n                // during the cache-filling render it is different from the prerender controller\n                // because we don't want to end the react render until all caches are filled.\n                const initialServerRenderController = new AbortController();\n                const cacheSignal = new CacheSignal();\n                const prerenderResumeDataCache = createPrerenderResumeDataCache();\n                const initialServerPrerenderStore = prerenderStore = {\n                    type: 'prerender',\n                    phase: 'render',\n                    rootParams,\n                    implicitTags,\n                    renderSignal: initialServerRenderController.signal,\n                    controller: initialServerPrerenderController,\n                    cacheSignal,\n                    dynamicTracking: null,\n                    revalidate: INFINITE_CACHE,\n                    expire: INFINITE_CACHE,\n                    stale: INFINITE_CACHE,\n                    tags: [\n                        ...implicitTags.tags\n                    ],\n                    prerenderResumeDataCache,\n                    hmrRefreshHash: undefined\n                };\n                const initialClientController = new AbortController();\n                const initialClientPrerenderStore = prerenderStore = {\n                    type: 'prerender',\n                    phase: 'render',\n                    rootParams,\n                    implicitTags,\n                    renderSignal: initialClientController.signal,\n                    controller: initialClientController,\n                    cacheSignal,\n                    dynamicTracking: null,\n                    revalidate: INFINITE_CACHE,\n                    expire: INFINITE_CACHE,\n                    stale: INFINITE_CACHE,\n                    tags: [\n                        ...implicitTags.tags\n                    ],\n                    prerenderResumeDataCache,\n                    hmrRefreshHash: undefined\n                };\n                // We're not going to use the result of this render because the only time it could be used\n                // is if it completes in a microtask and that's likely very rare for any non-trivial app\n                const firstAttemptRSCPayload = await workUnitAsyncStorage.run(initialServerPrerenderStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n                let initialServerStream;\n                try {\n                    initialServerStream = workUnitAsyncStorage.run(initialServerPrerenderStore, ComponentMod.renderToReadableStream, firstAttemptRSCPayload, clientReferenceManifest.clientModules, {\n                        onError: (err)=>{\n                            const digest = getDigestForWellKnownError(err);\n                            if (digest) {\n                                return digest;\n                            }\n                            if (initialServerPrerenderController.signal.aborted || initialServerRenderController.signal.aborted) {\n                                // The render aborted before this error was handled which indicates\n                                // the error is caused by unfinished components within the render\n                                return;\n                            } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                                printDebugThrownValueForProspectiveRender(err, workStore.route);\n                            }\n                        },\n                        signal: initialServerRenderController.signal\n                    });\n                } catch (err) {\n                    if (initialServerPrerenderController.signal.aborted || initialServerRenderController.signal.aborted) {\n                    // These are expected errors that might error the prerender. we ignore them.\n                    } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                        // We don't normally log these errors because we are going to retry anyway but\n                        // it can be useful for debugging Next.js itself to get visibility here when needed\n                        printDebugThrownValueForProspectiveRender(err, workStore.route);\n                    }\n                }\n                if (initialServerStream) {\n                    const [warmupStream, renderStream] = initialServerStream.tee();\n                    initialServerStream = null;\n                    // Before we attempt the SSR initial render we need to ensure all client modules\n                    // are already loaded.\n                    await warmFlightResponse(warmupStream, clientReferenceManifest);\n                    const prerender = require('react-dom/static.edge').prerender;\n                    const pendingInitialClientResult = workUnitAsyncStorage.run(initialClientPrerenderStore, prerender, /*#__PURE__*/ _jsx(App, {\n                        reactServerStream: renderStream,\n                        preinitScripts: preinitScripts,\n                        clientReferenceManifest: clientReferenceManifest,\n                        ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                        ServerInsertedMetadataProvider: ServerInsertedMetadataProvider,\n                        nonce: nonce\n                    }), {\n                        signal: initialClientController.signal,\n                        onError: (err)=>{\n                            const digest = getDigestForWellKnownError(err);\n                            if (digest) {\n                                return digest;\n                            }\n                            if (initialClientController.signal.aborted) {\n                            // These are expected errors that might error the prerender. we ignore them.\n                            } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                                // We don't normally log these errors because we are going to retry anyway but\n                                // it can be useful for debugging Next.js itself to get visibility here when needed\n                                printDebugThrownValueForProspectiveRender(err, workStore.route);\n                            }\n                        },\n                        bootstrapScripts: [\n                            bootstrapScript\n                        ]\n                    });\n                    pendingInitialClientResult.catch((err)=>{\n                        if (initialClientController.signal.aborted) {\n                        // We aborted the render normally and can ignore this error\n                        } else {\n                            // We're going to retry to so we normally would suppress this error but\n                            // when verbose logging is on we print it\n                            if (process.env.__NEXT_VERBOSE_LOGGING) {\n                                printDebugThrownValueForProspectiveRender(err, workStore.route);\n                            }\n                        }\n                    });\n                }\n                await cacheSignal.cacheReady();\n                // It is important that we abort the SSR render first to avoid\n                // connection closed errors from having an incomplete RSC stream\n                initialClientController.abort();\n                initialServerRenderController.abort();\n                initialServerPrerenderController.abort();\n                // We've now filled caches and triggered any inadvertant sync bailouts\n                // due to lazy module initialization. We can restart our render to capture results\n                let serverIsDynamic = false;\n                const finalServerController = new AbortController();\n                const serverDynamicTracking = createDynamicTrackingState(renderOpts.isDebugDynamicAccesses);\n                const finalServerPrerenderStore = prerenderStore = {\n                    type: 'prerender',\n                    phase: 'render',\n                    rootParams,\n                    implicitTags,\n                    renderSignal: finalServerController.signal,\n                    controller: finalServerController,\n                    // During the final prerender we don't need to track cache access so we omit the signal\n                    cacheSignal: null,\n                    dynamicTracking: serverDynamicTracking,\n                    revalidate: INFINITE_CACHE,\n                    expire: INFINITE_CACHE,\n                    stale: INFINITE_CACHE,\n                    tags: [\n                        ...implicitTags.tags\n                    ],\n                    prerenderResumeDataCache,\n                    hmrRefreshHash: undefined\n                };\n                let clientIsDynamic = false;\n                const finalClientController = new AbortController();\n                const clientDynamicTracking = createDynamicTrackingState(renderOpts.isDebugDynamicAccesses);\n                const dynamicValidation = createDynamicValidationState();\n                const finalClientPrerenderStore = prerenderStore = {\n                    type: 'prerender',\n                    phase: 'render',\n                    rootParams,\n                    implicitTags,\n                    renderSignal: finalClientController.signal,\n                    controller: finalClientController,\n                    // During the final prerender we don't need to track cache access so we omit the signal\n                    cacheSignal: null,\n                    dynamicTracking: clientDynamicTracking,\n                    revalidate: INFINITE_CACHE,\n                    expire: INFINITE_CACHE,\n                    stale: INFINITE_CACHE,\n                    tags: [\n                        ...implicitTags.tags\n                    ],\n                    prerenderResumeDataCache,\n                    hmrRefreshHash: undefined\n                };\n                const finalServerPayload = await workUnitAsyncStorage.run(finalServerPrerenderStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n                const serverPrerenderStreamResult = reactServerPrerenderResult = await prerenderServerWithPhases(finalServerController.signal, ()=>workUnitAsyncStorage.run(finalServerPrerenderStore, ComponentMod.renderToReadableStream, finalServerPayload, clientReferenceManifest.clientModules, {\n                        onError: (err)=>{\n                            if (finalServerController.signal.aborted) {\n                                serverIsDynamic = true;\n                                if (isPrerenderInterruptedError(err)) {\n                                    return err.digest;\n                                }\n                                return getDigestForWellKnownError(err);\n                            }\n                            return serverComponentsErrorHandler(err);\n                        },\n                        signal: finalServerController.signal\n                    }), ()=>{\n                    finalServerController.abort();\n                });\n                let htmlStream;\n                const serverPhasedStream = serverPrerenderStreamResult.asPhasedStream();\n                try {\n                    const prerender = require('react-dom/static.edge').prerender;\n                    const result = await prerenderClientWithPhases(()=>workUnitAsyncStorage.run(finalClientPrerenderStore, prerender, /*#__PURE__*/ _jsx(App, {\n                            reactServerStream: serverPhasedStream,\n                            preinitScripts: preinitScripts,\n                            clientReferenceManifest: clientReferenceManifest,\n                            ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                            ServerInsertedMetadataProvider: ServerInsertedMetadataProvider,\n                            nonce: nonce\n                        }), {\n                            signal: finalClientController.signal,\n                            onError: (err, errorInfo)=>{\n                                if (isPrerenderInterruptedError(err) || finalClientController.signal.aborted) {\n                                    clientIsDynamic = true;\n                                    const componentStack = errorInfo.componentStack;\n                                    if (typeof componentStack === 'string') {\n                                        trackAllowedDynamicAccess(workStore.route, componentStack, dynamicValidation, serverDynamicTracking, clientDynamicTracking);\n                                    }\n                                    return;\n                                }\n                                return htmlRendererErrorHandler(err, errorInfo);\n                            },\n                            bootstrapScripts: [\n                                bootstrapScript\n                            ]\n                        }), ()=>{\n                        finalClientController.abort();\n                        serverPhasedStream.assertExhausted();\n                    });\n                    htmlStream = result.prelude;\n                } catch (err) {\n                    if (isPrerenderInterruptedError(err) || finalClientController.signal.aborted) {\n                    // we don't have a root because the abort errored in the root. We can just ignore this error\n                    } else {\n                        // This error is something else and should bubble up\n                        throw err;\n                    }\n                }\n                throwIfDisallowedDynamic(workStore.route, dynamicValidation, serverDynamicTracking, clientDynamicTracking);\n                if (serverIsDynamic || clientIsDynamic) {\n                    const dynamicReason = serverIsDynamic ? getFirstDynamicReason(serverDynamicTracking) : getFirstDynamicReason(clientDynamicTracking);\n                    if (dynamicReason) {\n                        throw Object.defineProperty(new DynamicServerError(`Route \"${workStore.route}\" couldn't be rendered statically because it used \\`${dynamicReason}\\`. See more info here: https://nextjs.org/docs/messages/next-prerender-data`), \"__NEXT_ERROR_CODE\", {\n                            value: \"E586\",\n                            enumerable: false,\n                            configurable: true\n                        });\n                    } else {\n                        throw Object.defineProperty(new DynamicServerError(`Route \"${workStore.route}\" couldn't be rendered statically it accessed data without explicitly caching it. See more info here: https://nextjs.org/docs/messages/next-prerender-data`), \"__NEXT_ERROR_CODE\", {\n                            value: \"E583\",\n                            enumerable: false,\n                            configurable: true\n                        });\n                    }\n                }\n                const flightData = await streamToBuffer(serverPrerenderStreamResult.asStream());\n                metadata.flightData = flightData;\n                metadata.segmentData = await collectSegmentData(flightData, finalClientPrerenderStore, ComponentMod, renderOpts, fallbackRouteParams);\n                const getServerInsertedHTML = makeGetServerInsertedHTML({\n                    polyfills,\n                    renderServerInsertedHTML,\n                    serverCapturedErrors: allCapturedErrors,\n                    basePath: renderOpts.basePath,\n                    tracingMetadata: tracingMetadata\n                });\n                const validateRootLayout = renderOpts.dev;\n                return {\n                    digestErrorsMap: reactServerErrorsByDigest,\n                    ssrErrors: allCapturedErrors,\n                    stream: await continueFizzStream(htmlStream, {\n                        inlinedDataStream: createInlinedDataReadableStream(serverPrerenderStreamResult.asStream(), nonce, formState),\n                        isStaticGeneration: true,\n                        getServerInsertedHTML,\n                        getServerInsertedMetadata,\n                        validateRootLayout\n                    }),\n                    dynamicAccess: consumeDynamicAccess(serverDynamicTracking, clientDynamicTracking),\n                    // TODO: Should this include the SSR pass?\n                    collectedRevalidate: finalServerPrerenderStore.revalidate,\n                    collectedExpire: finalServerPrerenderStore.expire,\n                    collectedStale: selectStaleTime(finalServerPrerenderStore.stale),\n                    collectedTags: finalServerPrerenderStore.tags\n                };\n            }\n        } else if (renderOpts.experimental.isRoutePPREnabled) {\n            // We're statically generating with PPR and need to do dynamic tracking\n            let dynamicTracking = createDynamicTrackingState(renderOpts.isDebugDynamicAccesses);\n            const prerenderResumeDataCache = createPrerenderResumeDataCache();\n            const reactServerPrerenderStore = prerenderStore = {\n                type: 'prerender-ppr',\n                phase: 'render',\n                rootParams,\n                implicitTags,\n                dynamicTracking,\n                revalidate: INFINITE_CACHE,\n                expire: INFINITE_CACHE,\n                stale: INFINITE_CACHE,\n                tags: [\n                    ...implicitTags.tags\n                ],\n                prerenderResumeDataCache\n            };\n            const RSCPayload = await workUnitAsyncStorage.run(reactServerPrerenderStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n            const reactServerResult = reactServerPrerenderResult = await createReactServerPrerenderResultFromRender(workUnitAsyncStorage.run(reactServerPrerenderStore, ComponentMod.renderToReadableStream, // ... the arguments for the function to run\n            RSCPayload, clientReferenceManifest.clientModules, {\n                onError: serverComponentsErrorHandler\n            }));\n            const ssrPrerenderStore = {\n                type: 'prerender-ppr',\n                phase: 'render',\n                rootParams,\n                implicitTags,\n                dynamicTracking,\n                revalidate: INFINITE_CACHE,\n                expire: INFINITE_CACHE,\n                stale: INFINITE_CACHE,\n                tags: [\n                    ...implicitTags.tags\n                ],\n                prerenderResumeDataCache\n            };\n            const prerender = require('react-dom/static.edge').prerender;\n            const { prelude, postponed } = await workUnitAsyncStorage.run(ssrPrerenderStore, prerender, /*#__PURE__*/ _jsx(App, {\n                reactServerStream: reactServerResult.asUnclosingStream(),\n                preinitScripts: preinitScripts,\n                clientReferenceManifest: clientReferenceManifest,\n                ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                ServerInsertedMetadataProvider: ServerInsertedMetadataProvider,\n                nonce: nonce\n            }), {\n                onError: htmlRendererErrorHandler,\n                onHeaders: (headers)=>{\n                    headers.forEach((value, key)=>{\n                        appendHeader(key, value);\n                    });\n                },\n                maxHeadersLength: renderOpts.reactMaxHeadersLength,\n                bootstrapScripts: [\n                    bootstrapScript\n                ]\n            });\n            const getServerInsertedHTML = makeGetServerInsertedHTML({\n                polyfills,\n                renderServerInsertedHTML,\n                serverCapturedErrors: allCapturedErrors,\n                basePath: renderOpts.basePath,\n                tracingMetadata: tracingMetadata\n            });\n            // After awaiting here we've waited for the entire RSC render to complete. Crucially this means\n            // that when we detect whether we've used dynamic APIs below we know we'll have picked up even\n            // parts of the React Server render that might not be used in the SSR render.\n            const flightData = await streamToBuffer(reactServerResult.asStream());\n            if (shouldGenerateStaticFlightData(workStore)) {\n                metadata.flightData = flightData;\n                metadata.segmentData = await collectSegmentData(flightData, ssrPrerenderStore, ComponentMod, renderOpts, fallbackRouteParams);\n            }\n            /**\n       * When prerendering there are three outcomes to consider\n       *\n       *   Dynamic HTML:      The prerender has dynamic holes (caused by using Next.js Dynamic Rendering APIs)\n       *                      We will need to resume this result when requests are handled and we don't include\n       *                      any server inserted HTML or inlined flight data in the static HTML\n       *\n       *   Dynamic Data:      The prerender has no dynamic holes but dynamic APIs were used. We will not\n       *                      resume this render when requests are handled but we will generate new inlined\n       *                      flight data since it is dynamic and differences may end up reconciling on the client\n       *\n       *   Static:            The prerender has no dynamic holes and no dynamic APIs were used. We statically encode\n       *                      all server inserted HTML and flight data\n       */ // First we check if we have any dynamic holes in our HTML prerender\n            if (accessedDynamicData(dynamicTracking.dynamicAccesses)) {\n                if (postponed != null) {\n                    // Dynamic HTML case.\n                    metadata.postponed = await getDynamicHTMLPostponedState(postponed, fallbackRouteParams, prerenderResumeDataCache);\n                } else {\n                    // Dynamic Data case.\n                    metadata.postponed = await getDynamicDataPostponedState(prerenderResumeDataCache);\n                }\n                // Regardless of whether this is the Dynamic HTML or Dynamic Data case we need to ensure we include\n                // server inserted html in the static response because the html that is part of the prerender may depend on it\n                // It is possible in the set of stream transforms for Dynamic HTML vs Dynamic Data may differ but currently both states\n                // require the same set so we unify the code path here\n                reactServerResult.consume();\n                return {\n                    digestErrorsMap: reactServerErrorsByDigest,\n                    ssrErrors: allCapturedErrors,\n                    stream: await continueDynamicPrerender(prelude, {\n                        getServerInsertedHTML,\n                        getServerInsertedMetadata\n                    }),\n                    dynamicAccess: dynamicTracking.dynamicAccesses,\n                    // TODO: Should this include the SSR pass?\n                    collectedRevalidate: reactServerPrerenderStore.revalidate,\n                    collectedExpire: reactServerPrerenderStore.expire,\n                    collectedStale: selectStaleTime(reactServerPrerenderStore.stale),\n                    collectedTags: reactServerPrerenderStore.tags\n                };\n            } else if (fallbackRouteParams && fallbackRouteParams.size > 0) {\n                // Rendering the fallback case.\n                metadata.postponed = await getDynamicDataPostponedState(prerenderResumeDataCache);\n                return {\n                    digestErrorsMap: reactServerErrorsByDigest,\n                    ssrErrors: allCapturedErrors,\n                    stream: await continueDynamicPrerender(prelude, {\n                        getServerInsertedHTML,\n                        getServerInsertedMetadata\n                    }),\n                    dynamicAccess: dynamicTracking.dynamicAccesses,\n                    // TODO: Should this include the SSR pass?\n                    collectedRevalidate: reactServerPrerenderStore.revalidate,\n                    collectedExpire: reactServerPrerenderStore.expire,\n                    collectedStale: selectStaleTime(reactServerPrerenderStore.stale),\n                    collectedTags: reactServerPrerenderStore.tags\n                };\n            } else {\n                // Static case\n                // We still have not used any dynamic APIs. At this point we can produce an entirely static prerender response\n                if (workStore.forceDynamic) {\n                    throw Object.defineProperty(new StaticGenBailoutError('Invariant: a Page with `dynamic = \"force-dynamic\"` did not trigger the dynamic pathway. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E598\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                let htmlStream = prelude;\n                if (postponed != null) {\n                    // We postponed but nothing dynamic was used. We resume the render now and immediately abort it\n                    // so we can set all the postponed boundaries to client render mode before we store the HTML response\n                    const resume = require('react-dom/server.edge').resume;\n                    // We don't actually want to render anything so we just pass a stream\n                    // that never resolves. The resume call is going to abort immediately anyway\n                    const foreverStream = new ReadableStream();\n                    const resumeStream = await resume(/*#__PURE__*/ _jsx(App, {\n                        reactServerStream: foreverStream,\n                        preinitScripts: ()=>{},\n                        clientReferenceManifest: clientReferenceManifest,\n                        ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                        ServerInsertedMetadataProvider: ServerInsertedMetadataProvider,\n                        nonce: nonce\n                    }), JSON.parse(JSON.stringify(postponed)), {\n                        signal: createPostponedAbortSignal('static prerender resume'),\n                        onError: htmlRendererErrorHandler,\n                        nonce\n                    });\n                    // First we write everything from the prerender, then we write everything from the aborted resume render\n                    htmlStream = chainStreams(prelude, resumeStream);\n                }\n                return {\n                    digestErrorsMap: reactServerErrorsByDigest,\n                    ssrErrors: allCapturedErrors,\n                    stream: await continueStaticPrerender(htmlStream, {\n                        inlinedDataStream: createInlinedDataReadableStream(reactServerResult.consumeAsStream(), nonce, formState),\n                        getServerInsertedHTML,\n                        getServerInsertedMetadata\n                    }),\n                    dynamicAccess: dynamicTracking.dynamicAccesses,\n                    // TODO: Should this include the SSR pass?\n                    collectedRevalidate: reactServerPrerenderStore.revalidate,\n                    collectedExpire: reactServerPrerenderStore.expire,\n                    collectedStale: selectStaleTime(reactServerPrerenderStore.stale),\n                    collectedTags: reactServerPrerenderStore.tags\n                };\n            }\n        } else {\n            const prerenderLegacyStore = prerenderStore = {\n                type: 'prerender-legacy',\n                phase: 'render',\n                rootParams,\n                implicitTags,\n                revalidate: INFINITE_CACHE,\n                expire: INFINITE_CACHE,\n                stale: INFINITE_CACHE,\n                tags: [\n                    ...implicitTags.tags\n                ]\n            };\n            // This is a regular static generation. We don't do dynamic tracking because we rely on\n            // the old-school dynamic error handling to bail out of static generation\n            const RSCPayload = await workUnitAsyncStorage.run(prerenderLegacyStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n            const reactServerResult = reactServerPrerenderResult = await createReactServerPrerenderResultFromRender(workUnitAsyncStorage.run(prerenderLegacyStore, ComponentMod.renderToReadableStream, RSCPayload, clientReferenceManifest.clientModules, {\n                onError: serverComponentsErrorHandler\n            }));\n            const renderToReadableStream = require('react-dom/server.edge').renderToReadableStream;\n            const htmlStream = await workUnitAsyncStorage.run(prerenderLegacyStore, renderToReadableStream, /*#__PURE__*/ _jsx(App, {\n                reactServerStream: reactServerResult.asUnclosingStream(),\n                preinitScripts: preinitScripts,\n                clientReferenceManifest: clientReferenceManifest,\n                ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                ServerInsertedMetadataProvider: ServerInsertedMetadataProvider,\n                nonce: nonce\n            }), {\n                onError: htmlRendererErrorHandler,\n                nonce,\n                bootstrapScripts: [\n                    bootstrapScript\n                ]\n            });\n            if (shouldGenerateStaticFlightData(workStore)) {\n                const flightData = await streamToBuffer(reactServerResult.asStream());\n                metadata.flightData = flightData;\n                metadata.segmentData = await collectSegmentData(flightData, prerenderLegacyStore, ComponentMod, renderOpts, fallbackRouteParams);\n            }\n            const getServerInsertedHTML = makeGetServerInsertedHTML({\n                polyfills,\n                renderServerInsertedHTML,\n                serverCapturedErrors: allCapturedErrors,\n                basePath: renderOpts.basePath,\n                tracingMetadata: tracingMetadata\n            });\n            return {\n                digestErrorsMap: reactServerErrorsByDigest,\n                ssrErrors: allCapturedErrors,\n                stream: await continueFizzStream(htmlStream, {\n                    inlinedDataStream: createInlinedDataReadableStream(reactServerResult.consumeAsStream(), nonce, formState),\n                    isStaticGeneration: true,\n                    getServerInsertedHTML,\n                    getServerInsertedMetadata\n                }),\n                // TODO: Should this include the SSR pass?\n                collectedRevalidate: prerenderLegacyStore.revalidate,\n                collectedExpire: prerenderLegacyStore.expire,\n                collectedStale: selectStaleTime(prerenderLegacyStore.stale),\n                collectedTags: prerenderLegacyStore.tags\n            };\n        }\n    } catch (err) {\n        if (isStaticGenBailoutError(err) || typeof err === 'object' && err !== null && 'message' in err && typeof err.message === 'string' && err.message.includes('https://nextjs.org/docs/advanced-features/static-html-export')) {\n            // Ensure that \"next dev\" prints the red error overlay\n            throw err;\n        }\n        // If this is a static generation error, we need to throw it so that it\n        // can be handled by the caller if we're in static generation mode.\n        if (isDynamicServerError(err)) {\n            throw err;\n        }\n        // If a bailout made it to this point, it means it wasn't wrapped inside\n        // a suspense boundary.\n        const shouldBailoutToCSR = isBailoutToCSRError(err);\n        if (shouldBailoutToCSR) {\n            const stack = getStackWithoutErrorMessage(err);\n            error(`${err.reason} should be wrapped in a suspense boundary at page \"${pagePath}\". Read more: https://nextjs.org/docs/messages/missing-suspense-with-csr-bailout\\n${stack}`);\n            throw err;\n        }\n        // If we errored when we did not have an RSC stream to read from. This is\n        // not just a render error, we need to throw early.\n        if (reactServerPrerenderResult === null) {\n            throw err;\n        }\n        let errorType;\n        if (isHTTPAccessFallbackError(err)) {\n            res.statusCode = getAccessFallbackHTTPStatus(err);\n            errorType = getAccessFallbackErrorTypeByStatus(res.statusCode);\n        } else if (isRedirectError(err)) {\n            errorType = 'redirect';\n            res.statusCode = getRedirectStatusCodeFromError(err);\n            const redirectUrl = addPathPrefix(getURLFromRedirectError(err), renderOpts.basePath);\n            setHeader('location', redirectUrl);\n        } else if (!shouldBailoutToCSR) {\n            res.statusCode = 500;\n        }\n        const [errorPreinitScripts, errorBootstrapScript] = getRequiredScripts(renderOpts.buildManifest, assetPrefix, renderOpts.crossOrigin, renderOpts.subresourceIntegrityManifest, getAssetQueryString(ctx, false), nonce, '/_not-found/page');\n        const prerenderLegacyStore = prerenderStore = {\n            type: 'prerender-legacy',\n            phase: 'render',\n            rootParams,\n            implicitTags: implicitTags,\n            revalidate: typeof (prerenderStore == null ? void 0 : prerenderStore.revalidate) !== 'undefined' ? prerenderStore.revalidate : INFINITE_CACHE,\n            expire: typeof (prerenderStore == null ? void 0 : prerenderStore.expire) !== 'undefined' ? prerenderStore.expire : INFINITE_CACHE,\n            stale: typeof (prerenderStore == null ? void 0 : prerenderStore.stale) !== 'undefined' ? prerenderStore.stale : INFINITE_CACHE,\n            tags: [\n                ...(prerenderStore == null ? void 0 : prerenderStore.tags) || implicitTags.tags\n            ]\n        };\n        const errorRSCPayload = await workUnitAsyncStorage.run(prerenderLegacyStore, getErrorRSCPayload, tree, ctx, reactServerErrorsByDigest.has(err.digest) ? undefined : err, errorType);\n        const errorServerStream = workUnitAsyncStorage.run(prerenderLegacyStore, ComponentMod.renderToReadableStream, errorRSCPayload, clientReferenceManifest.clientModules, {\n            onError: serverComponentsErrorHandler\n        });\n        try {\n            const fizzStream = await renderToInitialFizzStream({\n                ReactDOMServer: require('react-dom/server.edge'),\n                element: /*#__PURE__*/ _jsx(ErrorApp, {\n                    reactServerStream: errorServerStream,\n                    ServerInsertedMetadataProvider: ServerInsertedMetadataProvider,\n                    ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                    preinitScripts: errorPreinitScripts,\n                    clientReferenceManifest: clientReferenceManifest,\n                    nonce: nonce\n                }),\n                streamOptions: {\n                    nonce,\n                    // Include hydration scripts in the HTML\n                    bootstrapScripts: [\n                        errorBootstrapScript\n                    ],\n                    formState\n                }\n            });\n            if (shouldGenerateStaticFlightData(workStore)) {\n                const flightData = await streamToBuffer(reactServerPrerenderResult.asStream());\n                metadata.flightData = flightData;\n                metadata.segmentData = await collectSegmentData(flightData, prerenderLegacyStore, ComponentMod, renderOpts, fallbackRouteParams);\n            }\n            const validateRootLayout = renderOpts.dev;\n            // This is intentionally using the readable datastream from the main\n            // render rather than the flight data from the error page render\n            const flightStream = reactServerPrerenderResult instanceof ServerPrerenderStreamResult ? reactServerPrerenderResult.asStream() : reactServerPrerenderResult.consumeAsStream();\n            return {\n                // Returning the error that was thrown so it can be used to handle\n                // the response in the caller.\n                digestErrorsMap: reactServerErrorsByDigest,\n                ssrErrors: allCapturedErrors,\n                stream: await continueFizzStream(fizzStream, {\n                    inlinedDataStream: createInlinedDataReadableStream(flightStream, nonce, formState),\n                    isStaticGeneration: true,\n                    getServerInsertedHTML: makeGetServerInsertedHTML({\n                        polyfills,\n                        renderServerInsertedHTML,\n                        serverCapturedErrors: [],\n                        basePath: renderOpts.basePath,\n                        tracingMetadata: tracingMetadata\n                    }),\n                    getServerInsertedMetadata,\n                    validateRootLayout\n                }),\n                dynamicAccess: null,\n                collectedRevalidate: prerenderStore !== null ? prerenderStore.revalidate : INFINITE_CACHE,\n                collectedExpire: prerenderStore !== null ? prerenderStore.expire : INFINITE_CACHE,\n                collectedStale: selectStaleTime(prerenderStore !== null ? prerenderStore.stale : INFINITE_CACHE),\n                collectedTags: prerenderStore !== null ? prerenderStore.tags : null\n            };\n        } catch (finalErr) {\n            if (process.env.NODE_ENV === 'development' && isHTTPAccessFallbackError(finalErr)) {\n                const { bailOnRootNotFound } = require('../../client/components/dev-root-http-access-fallback-boundary');\n                bailOnRootNotFound();\n            }\n            throw finalErr;\n        }\n    }\n}\nconst loadingChunks = new Set();\nconst chunkListeners = [];\nfunction trackChunkLoading(load) {\n    loadingChunks.add(load);\n    load.finally(()=>{\n        if (loadingChunks.has(load)) {\n            loadingChunks.delete(load);\n            if (loadingChunks.size === 0) {\n                // We are not currently loading any chunks. We can notify all listeners\n                for(let i = 0; i < chunkListeners.length; i++){\n                    chunkListeners[i]();\n                }\n                chunkListeners.length = 0;\n            }\n        }\n    });\n}\nexport async function warmFlightResponse(flightStream, clientReferenceManifest) {\n    const { createFromReadableStream } = // eslint-disable-next-line import/no-extraneous-dependencies\n    require('react-server-dom-webpack/client.edge');\n    try {\n        createFromReadableStream(flightStream, {\n            serverConsumerManifest: {\n                moduleLoading: clientReferenceManifest.moduleLoading,\n                moduleMap: clientReferenceManifest.ssrModuleMapping,\n                serverModuleMap: null\n            }\n        });\n    } catch  {\n    // We don't want to handle errors here but we don't want it to\n    // interrupt the outer flow. We simply ignore it here and expect\n    // it will bubble up during a render\n    }\n    // We'll wait at least one task and then if no chunks have started to load\n    // we'll we can infer that there are none to load from this flight response\n    trackChunkLoading(waitAtLeastOneReactRenderTask());\n    return new Promise((r)=>{\n        chunkListeners.push(r);\n    });\n}\nconst getGlobalErrorStyles = async (tree, ctx)=>{\n    const { modules: { 'global-error': globalErrorModule } } = parseLoaderTree(tree);\n    let globalErrorStyles;\n    if (globalErrorModule) {\n        const [, styles] = await createComponentStylesAndScripts({\n            ctx,\n            filePath: globalErrorModule[1],\n            getComponent: globalErrorModule[0],\n            injectedCSS: new Set(),\n            injectedJS: new Set()\n        });\n        globalErrorStyles = styles;\n    }\n    return globalErrorStyles;\n};\nasync function collectSegmentData(fullPageDataBuffer, prerenderStore, ComponentMod, renderOpts, fallbackRouteParams) {\n    // Per-segment prefetch data\n    //\n    // All of the segments for a page are generated simultaneously, including\n    // during revalidations. This is to ensure consistency, because it's\n    // possible for a mismatch between a layout and page segment can cause the\n    // client to error during rendering. We want to preserve the ability of the\n    // client to recover from such a mismatch by re-requesting all the segments\n    // to get a consistent view of the page.\n    //\n    // For performance, we reuse the Flight output that was created when\n    // generating the initial page HTML. The Flight stream for the whole page is\n    // decomposed into a separate stream per segment.\n    const clientReferenceManifest = renderOpts.clientReferenceManifest;\n    if (!clientReferenceManifest || // Do not generate per-segment data unless the experimental Segment Cache\n    // flag is enabled.\n    //\n    // We also skip generating segment data if flag is set to \"client-only\",\n    // rather than true. (The \"client-only\" option only affects the behavior of\n    // the client-side implementation; per-segment prefetches are intentionally\n    // disabled in that configuration).\n    renderOpts.experimental.clientSegmentCache !== true) {\n        return;\n    }\n    // Manifest passed to the Flight client for reading the full-page Flight\n    // stream. Based off similar code in use-cache-wrapper.ts.\n    const isEdgeRuntime = process.env.NEXT_RUNTIME === 'edge';\n    const serverConsumerManifest = {\n        // moduleLoading must be null because we don't want to trigger preloads of ClientReferences\n        // to be added to the consumer. Instead, we'll wait for any ClientReference to be emitted\n        // which themselves will handle the preloading.\n        moduleLoading: null,\n        moduleMap: isEdgeRuntime ? clientReferenceManifest.edgeRscModuleMapping : clientReferenceManifest.rscModuleMapping,\n        serverModuleMap: null\n    };\n    // When dynamicIO is enabled, missing data is encoded to an infinitely hanging\n    // promise, the absence of which we use to determine if a segment is fully\n    // static or partially static. However, when dynamicIO is not enabled, this\n    // trick doesn't work.\n    //\n    // So if PPR is enabled, and dynamicIO is not, we have to be conservative and\n    // assume all segments are partial.\n    //\n    // TODO: When PPR is on, we can at least optimize the case where the entire\n    // page is static. Either by passing that as an argument to this function, or\n    // by setting a header on the response like the we do for full page RSC\n    // prefetches today. The latter approach might be simpler since it requires\n    // less plumbing, and the client has to check the header regardless to see if\n    // PPR is enabled.\n    const shouldAssumePartialData = renderOpts.experimental.isRoutePPREnabled === true && // PPR is enabled\n    !renderOpts.experimental.dynamicIO // dynamicIO is disabled\n    ;\n    const staleTime = prerenderStore.stale;\n    return await ComponentMod.collectSegmentData(shouldAssumePartialData, fullPageDataBuffer, staleTime, clientReferenceManifest.clientModules, serverConsumerManifest, fallbackRouteParams);\n}\n\n//# sourceMappingURL=app-render.js.map","import { createAsyncLocalStorage } from './async-local-storage';\nexport const workUnitAsyncStorageInstance = createAsyncLocalStorage();\n\n//# sourceMappingURL=work-unit-async-storage-instance.js.map","export const RSC_HEADER = 'RSC' as const\nexport const ACTION_HEADER = 'Next-Action' as const\n// TODO: Instead of sending the full router state, we only need to send the\n// segment path. Saves bytes. Then we could also use this field for segment\n// prefetches, which also need to specify a particular segment.\nexport const NEXT_ROUTER_STATE_TREE_HEADER = 'Next-Router-State-Tree' as const\nexport const NEXT_ROUTER_PREFETCH_HEADER = 'Next-Router-Prefetch' as const\n// This contains the path to the segment being prefetched.\n// TODO: If we change Next-Router-State-Tree to be a segment path, we can use\n// that instead. Then Next-Router-Prefetch and Next-Router-Segment-Prefetch can\n// be merged into a single enum.\nexport const NEXT_ROUTER_SEGMENT_PREFETCH_HEADER =\n  'Next-Router-Segment-Prefetch' as const\nexport const NEXT_HMR_REFRESH_HEADER = 'Next-HMR-Refresh' as const\nexport const NEXT_HMR_REFRESH_HASH_COOKIE = '__next_hmr_refresh_hash__' as const\nexport const NEXT_URL = 'Next-Url' as const\nexport const RSC_CONTENT_TYPE_HEADER = 'text/x-component' as const\n\nexport const FLIGHT_HEADERS = [\n  RSC_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_HMR_REFRESH_HEADER,\n  NEXT_ROUTER_SEGMENT_PREFETCH_HEADER,\n] as const\n\nexport const NEXT_RSC_UNION_QUERY = '_rsc' as const\n\nexport const NEXT_ROUTER_STALE_TIME_HEADER = 'x-nextjs-stale-time' as const\nexport const NEXT_DID_POSTPONE_HEADER = 'x-nextjs-postponed' as const\nexport const NEXT_REWRITTEN_PATH_HEADER = 'x-nextjs-rewritten-path' as const\nexport const NEXT_REWRITTEN_QUERY_HEADER = 'x-nextjs-rewritten-query' as const\nexport const NEXT_IS_PRERENDER_HEADER = 'x-nextjs-prerender' as const\n","// Share the instance module in the next-shared layer\nimport { workUnitAsyncStorageInstance } from './work-unit-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nimport { NEXT_HMR_REFRESH_HASH_COOKIE } from '../../client/components/app-router-headers';\nexport { workUnitAsyncStorageInstance as workUnitAsyncStorage };\nexport function getExpectedRequestStore(callingExpression) {\n    const workUnitStore = workUnitAsyncStorageInstance.getStore();\n    if (!workUnitStore) {\n        throwForMissingRequestStore(callingExpression);\n    }\n    switch(workUnitStore.type){\n        case 'request':\n            return workUnitStore;\n        case 'prerender':\n        case 'prerender-ppr':\n        case 'prerender-legacy':\n            // This should not happen because we should have checked it already.\n            throw Object.defineProperty(new Error(`\\`${callingExpression}\\` cannot be called inside a prerender. This is a bug in Next.js.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E401\",\n                enumerable: false,\n                configurable: true\n            });\n        case 'cache':\n            throw Object.defineProperty(new Error(`\\`${callingExpression}\\` cannot be called inside \"use cache\". Call it outside and pass an argument instead. Read more: https://nextjs.org/docs/messages/next-request-in-use-cache`), \"__NEXT_ERROR_CODE\", {\n                value: \"E37\",\n                enumerable: false,\n                configurable: true\n            });\n        case 'unstable-cache':\n            throw Object.defineProperty(new Error(`\\`${callingExpression}\\` cannot be called inside unstable_cache. Call it outside and pass an argument instead. Read more: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`), \"__NEXT_ERROR_CODE\", {\n                value: \"E69\",\n                enumerable: false,\n                configurable: true\n            });\n        default:\n            const _exhaustiveCheck = workUnitStore;\n            return _exhaustiveCheck;\n    }\n}\nexport function throwForMissingRequestStore(callingExpression) {\n    throw Object.defineProperty(new Error(`\\`${callingExpression}\\` was called outside a request scope. Read more: https://nextjs.org/docs/messages/next-dynamic-api-wrong-context`), \"__NEXT_ERROR_CODE\", {\n        value: \"E251\",\n        enumerable: false,\n        configurable: true\n    });\n}\nexport function getPrerenderResumeDataCache(workUnitStore) {\n    if (workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-ppr') {\n        return workUnitStore.prerenderResumeDataCache;\n    }\n    return null;\n}\nexport function getRenderResumeDataCache(workUnitStore) {\n    if (workUnitStore.type !== 'prerender-legacy' && workUnitStore.type !== 'cache' && workUnitStore.type !== 'unstable-cache') {\n        if (workUnitStore.type === 'request') {\n            return workUnitStore.renderResumeDataCache;\n        }\n        // We return the mutable resume data cache here as an immutable version of\n        // the cache as it can also be used for reading.\n        return workUnitStore.prerenderResumeDataCache;\n    }\n    return null;\n}\nexport function getHmrRefreshHash(workStore, workUnitStore) {\n    var _workUnitStore_cookies_get;\n    if (!workStore.dev) {\n        return undefined;\n    }\n    return workUnitStore.type === 'cache' || workUnitStore.type === 'prerender' ? workUnitStore.hmrRefreshHash : workUnitStore.type === 'request' ? (_workUnitStore_cookies_get = workUnitStore.cookies.get(NEXT_HMR_REFRESH_HASH_COOKIE)) == null ? void 0 : _workUnitStore_cookies_get.value : undefined;\n}\n/**\n * Returns a draft mode provider only if draft mode is enabled.\n */ export function getDraftModeProviderForCacheScope(workStore, workUnitStore) {\n    if (workStore.isDraftMode) {\n        switch(workUnitStore.type){\n            case 'cache':\n            case 'unstable-cache':\n            case 'request':\n                return workUnitStore.draftMode;\n            default:\n                return undefined;\n        }\n    }\n    return undefined;\n}\n\n//# sourceMappingURL=work-unit-async-storage.external.js.map","const NEXT_STATIC_GEN_BAILOUT = 'NEXT_STATIC_GEN_BAILOUT'\n\nexport class StaticGenBailoutError extends Error {\n  public readonly code = NEXT_STATIC_GEN_BAILOUT\n}\n\nexport function isStaticGenBailoutError(\n  error: unknown\n): error is StaticGenBailoutError {\n  if (typeof error !== 'object' || error === null || !('code' in error)) {\n    return false\n  }\n\n  return error.code === NEXT_STATIC_GEN_BAILOUT\n}\n","/**\n * @license React\n * react.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ReactNoopUpdateQueue = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  assign = Object.assign,\n  emptyObject = {};\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nComponent.prototype.isReactComponent = {};\nComponent.prototype.setState = function (partialState, callback) {\n  if (\n    \"object\" !== typeof partialState &&\n    \"function\" !== typeof partialState &&\n    null != partialState\n  )\n    throw Error(\n      \"takes an object of state variables to update or a function which returns an object of state variables.\"\n    );\n  this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n};\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n};\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nvar pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = !0;\nvar isArrayImpl = Array.isArray,\n  ReactSharedInternals = { H: null, A: null, T: null, S: null },\n  hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction ReactElement(type, key, self, source, owner, props) {\n  self = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== self ? self : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(\n    oldElement.type,\n    newKey,\n    void 0,\n    void 0,\n    void 0,\n    oldElement.props\n  );\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction noop$1() {}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop$1, noop$1)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      \"Objects are not valid as a React child (found: \" +\n        (\"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array) +\n        \"). If you meant to render a collection of children, use an array instead.\"\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction noop() {}\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children))\n      throw Error(\n        \"React.Children.only expected to receive a single React element child.\"\n      );\n    return children;\n  }\n};\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.__COMPILER_RUNTIME = {\n  __proto__: null,\n  c: function (size) {\n    return ReactSharedInternals.H.useMemoCache(size);\n  }\n};\nexports.cache = function (fn) {\n  return function () {\n    return fn.apply(null, arguments);\n  };\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(\n      \"The argument must be a React element, but you passed \" + element + \".\"\n    );\n  var props = assign({}, element.props),\n    key = element.key,\n    owner = void 0;\n  if (null != config)\n    for (propName in (void 0 !== config.ref && (owner = void 0),\n    void 0 !== config.key && (key = \"\" + config.key),\n    config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, void 0, void 0, owner, props);\n};\nexports.createContext = function (defaultValue) {\n  defaultValue = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null\n  };\n  defaultValue.Provider = defaultValue;\n  defaultValue.Consumer = {\n    $$typeof: REACT_CONSUMER_TYPE,\n    _context: defaultValue\n  };\n  return defaultValue;\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, void 0, void 0, null, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.startTransition = function (scope) {\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  try {\n    var returnValue = scope(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    \"object\" === typeof returnValue &&\n      null !== returnValue &&\n      \"function\" === typeof returnValue.then &&\n      returnValue.then(noop, reportGlobalError);\n  } catch (error) {\n    reportGlobalError(error);\n  } finally {\n    null !== prevTransition &&\n      null !== currentTransition.types &&\n      (prevTransition.types = currentTransition.types),\n      (ReactSharedInternals.T = prevTransition);\n  }\n};\nexports.unstable_useCacheRefresh = function () {\n  return ReactSharedInternals.H.useCacheRefresh();\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useActionState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useActionState(action, initialState, permalink);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useContext = function (Context) {\n  return ReactSharedInternals.H.useContext(Context);\n};\nexports.useDebugValue = function () {};\nexports.useDeferredValue = function (value, initialValue) {\n  return ReactSharedInternals.H.useDeferredValue(value, initialValue);\n};\nexports.useEffect = function (create, deps) {\n  return ReactSharedInternals.H.useEffect(create, deps);\n};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useImperativeHandle = function (ref, create, deps) {\n  return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);\n};\nexports.useInsertionEffect = function (create, deps) {\n  return ReactSharedInternals.H.useInsertionEffect(create, deps);\n};\nexports.useLayoutEffect = function (create, deps) {\n  return ReactSharedInternals.H.useLayoutEffect(create, deps);\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.useOptimistic = function (passthrough, reducer) {\n  return ReactSharedInternals.H.useOptimistic(passthrough, reducer);\n};\nexports.useReducer = function (reducer, initialArg, init) {\n  return ReactSharedInternals.H.useReducer(reducer, initialArg, init);\n};\nexports.useRef = function (initialValue) {\n  return ReactSharedInternals.H.useRef(initialValue);\n};\nexports.useState = function (initialState) {\n  return ReactSharedInternals.H.useState(initialState);\n};\nexports.useSyncExternalStore = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot\n) {\n  return ReactSharedInternals.H.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot\n  );\n};\nexports.useTransition = function () {\n  return ReactSharedInternals.H.useTransition();\n};\nexports.version = \"19.2.0-canary-3fbfb9ba-20250409\";\n","import type { ParsedUrlQuery } from 'querystring'\n\nexport function searchParamsToUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  const query: ParsedUrlQuery = {}\n  for (const [key, value] of searchParams.entries()) {\n    const existing = query[key]\n    if (typeof existing === 'undefined') {\n      query[key] = value\n    } else if (Array.isArray(existing)) {\n      existing.push(value)\n    } else {\n      query[key] = [existing, value]\n    }\n  }\n  return query\n}\n\nfunction stringifyUrlQueryParam(param: unknown): string {\n  if (typeof param === 'string') {\n    return param\n  }\n\n  if (\n    (typeof param === 'number' && !isNaN(param)) ||\n    typeof param === 'boolean'\n  ) {\n    return String(param)\n  } else {\n    return ''\n  }\n}\n\nexport function urlQueryToSearchParams(query: ParsedUrlQuery): URLSearchParams {\n  const searchParams = new URLSearchParams()\n  for (const [key, value] of Object.entries(query)) {\n    if (Array.isArray(value)) {\n      for (const item of value) {\n        searchParams.append(key, stringifyUrlQueryParam(item))\n      }\n    } else {\n      searchParams.set(key, stringifyUrlQueryParam(value))\n    }\n  }\n  return searchParams\n}\n\nexport function assign(\n  target: URLSearchParams,\n  ...searchParamsList: URLSearchParams[]\n): URLSearchParams {\n  for (const searchParams of searchParamsList) {\n    for (const key of searchParams.keys()) {\n      target.delete(key)\n    }\n\n    for (const [key, value] of searchParams.entries()) {\n      target.append(key, value)\n    }\n  }\n\n  return target\n}\n","import { NEXT_INTERCEPTION_MARKER_PREFIX, NEXT_QUERY_PARAM_PREFIX } from '../../lib/constants';\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */ export function fromNodeOutgoingHttpHeaders(nodeHeaders) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(nodeHeaders)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (typeof v === 'undefined') continue;\n            if (typeof v === 'number') {\n                v = v.toString();\n            }\n            headers.append(key, v);\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ export function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== '=' && ch !== ';' && ch !== ',';\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === ',') {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === '=') {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */ export function toNodeOutgoingHttpHeaders(headers) {\n    const nodeHeaders = {};\n    const cookies = [];\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            if (key.toLowerCase() === 'set-cookie') {\n                // We may have gotten a comma joined string of cookies, or multiple\n                // set-cookie headers. We need to merge them into one header array\n                // to represent all the cookies.\n                cookies.push(...splitCookiesString(value));\n                nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies;\n            } else {\n                nodeHeaders[key] = value;\n            }\n        }\n    }\n    return nodeHeaders;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ export function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw Object.defineProperty(new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E61\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\n/**\n * Normalizes `nxtP` and `nxtI` query param values to remove the prefix.\n * This function does not mutate the input key.\n */ export function normalizeNextQueryParam(key) {\n    const prefixes = [\n        NEXT_QUERY_PARAM_PREFIX,\n        NEXT_INTERCEPTION_MARKER_PREFIX\n    ];\n    for (const prefix of prefixes){\n        if (key !== prefix && key.startsWith(prefix)) {\n            return key.substring(prefix.length);\n        }\n    }\n    return null;\n}\n\n//# sourceMappingURL=utils.js.map","'use client'\n\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\nimport type { Params } from '../../server/request/params'\n\n/**\n * When the Page is a client component we send the params to this client wrapper\n * where they are turned into dynamically tracked values before being passed to the actual Segment component.\n *\n * additionally we may send a promise representing params. We don't ever use this passed\n * value but it can be necessary for the sender to send a Promise that doesn't resolve in certain situations\n * such as when dynamicIO is enabled. It is up to the caller to decide if the promises are needed.\n */\nexport function ClientSegmentRoot({\n  Component,\n  slots,\n  params,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  promise,\n}: {\n  Component: React.ComponentType<any>\n  slots: { [key: string]: React.ReactNode }\n  params: Params\n  promise?: Promise<any>\n}) {\n  if (typeof window === 'undefined') {\n    const { workAsyncStorage } =\n      require('../../server/app-render/work-async-storage.external') as typeof import('../../server/app-render/work-async-storage.external')\n\n    let clientParams: Promise<Params>\n    // We are going to instrument the searchParams prop with tracking for the\n    // appropriate context. We wrap differently in prerendering vs rendering\n    const store = workAsyncStorage.getStore()\n    if (!store) {\n      throw new InvariantError(\n        'Expected workStore to exist when handling params in a client segment such as a Layout or Template.'\n      )\n    }\n\n    const { createParamsFromClient } =\n      require('../../server/request/params') as typeof import('../../server/request/params')\n    clientParams = createParamsFromClient(params, store)\n\n    return <Component {...slots} params={clientParams} />\n  } else {\n    const { createRenderParamsFromClient } =\n      require('../request/params.browser') as typeof import('../request/params.browser')\n    const clientParams = createRenderParamsFromClient(params)\n    return <Component {...slots} params={clientParams} />\n  }\n}\n","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */r.parse=parse;r.serialize=serialize;var i=decodeURIComponent;var t=encodeURIComponent;var a=/; */;var n=/^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;function parse(e,r){if(typeof e!==\"string\"){throw new TypeError(\"argument str must be a string\")}var t={};var n=r||{};var o=e.split(a);var s=n.decode||i;for(var p=0;p<o.length;p++){var f=o[p];var u=f.indexOf(\"=\");if(u<0){continue}var v=f.substr(0,u).trim();var c=f.substr(++u,f.length).trim();if('\"'==c[0]){c=c.slice(1,-1)}if(undefined==t[v]){t[v]=tryDecode(c,s)}}return t}function serialize(e,r,i){var a=i||{};var o=a.encode||t;if(typeof o!==\"function\"){throw new TypeError(\"option encode is invalid\")}if(!n.test(e)){throw new TypeError(\"argument name is invalid\")}var s=o(r);if(s&&!n.test(s)){throw new TypeError(\"argument val is invalid\")}var p=e+\"=\"+s;if(null!=a.maxAge){var f=a.maxAge-0;if(isNaN(f)||!isFinite(f)){throw new TypeError(\"option maxAge is invalid\")}p+=\"; Max-Age=\"+Math.floor(f)}if(a.domain){if(!n.test(a.domain)){throw new TypeError(\"option domain is invalid\")}p+=\"; Domain=\"+a.domain}if(a.path){if(!n.test(a.path)){throw new TypeError(\"option path is invalid\")}p+=\"; Path=\"+a.path}if(a.expires){if(typeof a.expires.toUTCString!==\"function\"){throw new TypeError(\"option expires is invalid\")}p+=\"; Expires=\"+a.expires.toUTCString()}if(a.httpOnly){p+=\"; HttpOnly\"}if(a.secure){p+=\"; Secure\"}if(a.sameSite){var u=typeof a.sameSite===\"string\"?a.sameSite.toLowerCase():a.sameSite;switch(u){case true:p+=\"; SameSite=Strict\";break;case\"lax\":p+=\"; SameSite=Lax\";break;case\"strict\":p+=\"; SameSite=Strict\";break;case\"none\":p+=\"; SameSite=None\";break;default:throw new TypeError(\"option sameSite is invalid\")}}return p}function tryDecode(e,r){try{return r(e)}catch(r){return e}}})();module.exports=e})();","'use client'\n\nimport type {\n  CacheNode,\n  LazyCacheNode,\n  LoadingModuleData,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport type {\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../server/app-render/types'\nimport type { ErrorComponent } from './error-boundary'\nimport {\n  ACTION_SERVER_PATCH,\n  type FocusAndScrollRef,\n} from './router-reducer/router-reducer-types'\n\nimport React, {\n  useContext,\n  use,\n  startTransition,\n  Suspense,\n  useDeferredValue,\n  type JSX,\n} from 'react'\nimport ReactDOM from 'react-dom'\nimport {\n  LayoutRouterContext,\n  GlobalLayoutRouterContext,\n  TemplateContext,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport { fetchServerResponse } from './router-reducer/fetch-server-response'\nimport { unresolvedThenable } from './unresolved-thenable'\nimport { ErrorBoundary } from './error-boundary'\nimport { matchSegment } from './match-segments'\nimport { handleSmoothScroll } from '../../shared/lib/router/utils/handle-smooth-scroll'\nimport { RedirectBoundary } from './redirect-boundary'\nimport { HTTPAccessFallbackBoundary } from './http-access-fallback/error-boundary'\nimport { createRouterCacheKey } from './router-reducer/create-router-cache-key'\nimport { hasInterceptionRouteInCurrentTree } from './router-reducer/reducers/has-interception-route-in-current-tree'\nimport { dispatchAppRouterAction } from './use-action-queue'\n\n/**\n * Add refetch marker to router state at the point of the current layout segment.\n * This ensures the response returned is not further down than the current layout segment.\n */\nfunction walkAddRefetch(\n  segmentPathToWalk: FlightSegmentPath | undefined,\n  treeToRecreate: FlightRouterState\n): FlightRouterState {\n  if (segmentPathToWalk) {\n    const [segment, parallelRouteKey] = segmentPathToWalk\n    const isLast = segmentPathToWalk.length === 2\n\n    if (matchSegment(treeToRecreate[0], segment)) {\n      if (treeToRecreate[1].hasOwnProperty(parallelRouteKey)) {\n        if (isLast) {\n          const subTree = walkAddRefetch(\n            undefined,\n            treeToRecreate[1][parallelRouteKey]\n          )\n          return [\n            treeToRecreate[0],\n            {\n              ...treeToRecreate[1],\n              [parallelRouteKey]: [\n                subTree[0],\n                subTree[1],\n                subTree[2],\n                'refetch',\n              ],\n            },\n          ]\n        }\n\n        return [\n          treeToRecreate[0],\n          {\n            ...treeToRecreate[1],\n            [parallelRouteKey]: walkAddRefetch(\n              segmentPathToWalk.slice(2),\n              treeToRecreate[1][parallelRouteKey]\n            ),\n          },\n        ]\n      }\n    }\n  }\n\n  return treeToRecreate\n}\n\nconst __DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = (\n  ReactDOM as any\n).__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE\n\n// TODO-APP: Replace with new React API for finding dom nodes without a `ref` when available\n/**\n * Wraps ReactDOM.findDOMNode with additional logic to hide React Strict Mode warning\n */\nfunction findDOMNode(\n  instance: React.ReactInstance | null | undefined\n): Element | Text | null {\n  // Tree-shake for server bundle\n  if (typeof window === 'undefined') return null\n\n  // __DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE.findDOMNode is null during module init.\n  // We need to lazily reference it.\n  const internal_reactDOMfindDOMNode =\n    __DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE.findDOMNode\n  return internal_reactDOMfindDOMNode(instance)\n}\n\nconst rectProperties = [\n  'bottom',\n  'height',\n  'left',\n  'right',\n  'top',\n  'width',\n  'x',\n  'y',\n] as const\n/**\n * Check if a HTMLElement is hidden or fixed/sticky position\n */\nfunction shouldSkipElement(element: HTMLElement) {\n  // we ignore fixed or sticky positioned elements since they'll likely pass the \"in-viewport\" check\n  // and will result in a situation we bail on scroll because of something like a fixed nav,\n  // even though the actual page content is offscreen\n  if (['sticky', 'fixed'].includes(getComputedStyle(element).position)) {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn(\n        'Skipping auto-scroll behavior due to `position: sticky` or `position: fixed` on element:',\n        element\n      )\n    }\n    return true\n  }\n\n  // Uses `getBoundingClientRect` to check if the element is hidden instead of `offsetParent`\n  // because `offsetParent` doesn't consider document/body\n  const rect = element.getBoundingClientRect()\n  return rectProperties.every((item) => rect[item] === 0)\n}\n\n/**\n * Check if the top corner of the HTMLElement is in the viewport.\n */\nfunction topOfElementInViewport(element: HTMLElement, viewportHeight: number) {\n  const rect = element.getBoundingClientRect()\n  return rect.top >= 0 && rect.top <= viewportHeight\n}\n\n/**\n * Find the DOM node for a hash fragment.\n * If `top` the page has to scroll to the top of the page. This mirrors the browser's behavior.\n * If the hash fragment is an id, the page has to scroll to the element with that id.\n * If the hash fragment is a name, the page has to scroll to the first element with that name.\n */\nfunction getHashFragmentDomNode(hashFragment: string) {\n  // If the hash fragment is `top` the page has to scroll to the top of the page.\n  if (hashFragment === 'top') {\n    return document.body\n  }\n\n  // If the hash fragment is an id, the page has to scroll to the element with that id.\n  return (\n    document.getElementById(hashFragment) ??\n    // If the hash fragment is a name, the page has to scroll to the first element with that name.\n    document.getElementsByName(hashFragment)[0]\n  )\n}\ninterface ScrollAndFocusHandlerProps {\n  focusAndScrollRef: FocusAndScrollRef\n  children: React.ReactNode\n  segmentPath: FlightSegmentPath\n}\nclass InnerScrollAndFocusHandler extends React.Component<ScrollAndFocusHandlerProps> {\n  handlePotentialScroll = () => {\n    // Handle scroll and focus, it's only applied once in the first useEffect that triggers that changed.\n    const { focusAndScrollRef, segmentPath } = this.props\n\n    if (focusAndScrollRef.apply) {\n      // segmentPaths is an array of segment paths that should be scrolled to\n      // if the current segment path is not in the array, the scroll is not applied\n      // unless the array is empty, in which case the scroll is always applied\n      if (\n        focusAndScrollRef.segmentPaths.length !== 0 &&\n        !focusAndScrollRef.segmentPaths.some((scrollRefSegmentPath) =>\n          segmentPath.every((segment, index) =>\n            matchSegment(segment, scrollRefSegmentPath[index])\n          )\n        )\n      ) {\n        return\n      }\n\n      let domNode:\n        | ReturnType<typeof getHashFragmentDomNode>\n        | ReturnType<typeof findDOMNode> = null\n      const hashFragment = focusAndScrollRef.hashFragment\n\n      if (hashFragment) {\n        domNode = getHashFragmentDomNode(hashFragment)\n      }\n\n      // `findDOMNode` is tricky because it returns just the first child if the component is a fragment.\n      // This already caused a bug where the first child was a <link/> in head.\n      if (!domNode) {\n        domNode = findDOMNode(this)\n      }\n\n      // If there is no DOM node this layout-router level is skipped. It'll be handled higher-up in the tree.\n      if (!(domNode instanceof Element)) {\n        return\n      }\n\n      // Verify if the element is a HTMLElement and if we want to consider it for scroll behavior.\n      // If the element is skipped, try to select the next sibling and try again.\n      while (!(domNode instanceof HTMLElement) || shouldSkipElement(domNode)) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (domNode.parentElement?.localName === 'head') {\n            // TODO: We enter this state when metadata was rendered as part of the page or via Next.js.\n            // This is always a bug in Next.js and caused by React hoisting metadata.\n            // We need to replace `findDOMNode` in favor of Fragment Refs (when available) so that we can skip over metadata.\n          }\n        }\n\n        // No siblings found that match the criteria are found, so handle scroll higher up in the tree instead.\n        if (domNode.nextElementSibling === null) {\n          return\n        }\n        domNode = domNode.nextElementSibling\n      }\n\n      // State is mutated to ensure that the focus and scroll is applied only once.\n      focusAndScrollRef.apply = false\n      focusAndScrollRef.hashFragment = null\n      focusAndScrollRef.segmentPaths = []\n\n      handleSmoothScroll(\n        () => {\n          // In case of hash scroll, we only need to scroll the element into view\n          if (hashFragment) {\n            ;(domNode as HTMLElement).scrollIntoView()\n\n            return\n          }\n          // Store the current viewport height because reading `clientHeight` causes a reflow,\n          // and it won't change during this function.\n          const htmlElement = document.documentElement\n          const viewportHeight = htmlElement.clientHeight\n\n          // If the element's top edge is already in the viewport, exit early.\n          if (topOfElementInViewport(domNode as HTMLElement, viewportHeight)) {\n            return\n          }\n\n          // Otherwise, try scrolling go the top of the document to be backward compatible with pages\n          // scrollIntoView() called on `<html/>` element scrolls horizontally on chrome and firefox (that shouldn't happen)\n          // We could use it to scroll horizontally following RTL but that also seems to be broken - it will always scroll left\n          // scrollLeft = 0 also seems to ignore RTL and manually checking for RTL is too much hassle so we will scroll just vertically\n          htmlElement.scrollTop = 0\n\n          // Scroll to domNode if domNode is not in viewport when scrolled to top of document\n          if (!topOfElementInViewport(domNode as HTMLElement, viewportHeight)) {\n            // Scroll into view doesn't scroll horizontally by default when not needed\n            ;(domNode as HTMLElement).scrollIntoView()\n          }\n        },\n        {\n          // We will force layout by querying domNode position\n          dontForceLayout: true,\n          onlyHashChange: focusAndScrollRef.onlyHashChange,\n        }\n      )\n\n      // Mutate after scrolling so that it can be read by `handleSmoothScroll`\n      focusAndScrollRef.onlyHashChange = false\n\n      // Set focus on the element\n      domNode.focus()\n    }\n  }\n\n  componentDidMount() {\n    this.handlePotentialScroll()\n  }\n\n  componentDidUpdate() {\n    // Because this property is overwritten in handlePotentialScroll it's fine to always run it when true as it'll be set to false for subsequent renders.\n    if (this.props.focusAndScrollRef.apply) {\n      this.handlePotentialScroll()\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nfunction ScrollAndFocusHandler({\n  segmentPath,\n  children,\n}: {\n  segmentPath: FlightSegmentPath\n  children: React.ReactNode\n}) {\n  const context = useContext(GlobalLayoutRouterContext)\n  if (!context) {\n    throw new Error('invariant global layout router not mounted')\n  }\n\n  return (\n    <InnerScrollAndFocusHandler\n      segmentPath={segmentPath}\n      focusAndScrollRef={context.focusAndScrollRef}\n    >\n      {children}\n    </InnerScrollAndFocusHandler>\n  )\n}\n\n/**\n * InnerLayoutRouter handles rendering the provided segment based on the cache.\n */\nfunction InnerLayoutRouter({\n  tree,\n  segmentPath,\n  cacheNode,\n  url,\n}: {\n  tree: FlightRouterState\n  segmentPath: FlightSegmentPath\n  cacheNode: CacheNode\n  url: string\n}) {\n  const context = useContext(GlobalLayoutRouterContext)\n  if (!context) {\n    throw new Error('invariant global layout router not mounted')\n  }\n\n  const { tree: fullTree } = context\n\n  // `rsc` represents the renderable node for this segment.\n\n  // If this segment has a `prefetchRsc`, it's the statically prefetched data.\n  // We should use that on initial render instead of `rsc`. Then we'll switch\n  // to `rsc` when the dynamic response streams in.\n  //\n  // If no prefetch data is available, then we go straight to rendering `rsc`.\n  const resolvedPrefetchRsc =\n    cacheNode.prefetchRsc !== null ? cacheNode.prefetchRsc : cacheNode.rsc\n\n  // We use `useDeferredValue` to handle switching between the prefetched and\n  // final values. The second argument is returned on initial render, then it\n  // re-renders with the first argument.\n  const rsc: any = useDeferredValue(cacheNode.rsc, resolvedPrefetchRsc)\n\n  // `rsc` is either a React node or a promise for a React node, except we\n  // special case `null` to represent that this segment's data is missing. If\n  // it's a promise, we need to unwrap it so we can determine whether or not the\n  // data is missing.\n  const resolvedRsc: React.ReactNode =\n    typeof rsc === 'object' && rsc !== null && typeof rsc.then === 'function'\n      ? use(rsc)\n      : rsc\n\n  if (!resolvedRsc) {\n    // The data for this segment is not available, and there's no pending\n    // navigation that will be able to fulfill it. We need to fetch more from\n    // the server and patch the cache.\n\n    // Check if there's already a pending request.\n    let lazyData = cacheNode.lazyData\n    if (lazyData === null) {\n      /**\n       * Router state with refetch marker added\n       */\n      // TODO-APP: remove ''\n      const refetchTree = walkAddRefetch(['', ...segmentPath], fullTree)\n      const includeNextUrl = hasInterceptionRouteInCurrentTree(fullTree)\n      const navigatedAt = Date.now()\n      cacheNode.lazyData = lazyData = fetchServerResponse(\n        new URL(url, location.origin),\n        {\n          flightRouterState: refetchTree,\n          nextUrl: includeNextUrl ? context.nextUrl : null,\n        }\n      ).then((serverResponse) => {\n        startTransition(() => {\n          dispatchAppRouterAction({\n            type: ACTION_SERVER_PATCH,\n            previousTree: fullTree,\n            serverResponse,\n            navigatedAt,\n          })\n        })\n\n        return serverResponse\n      })\n\n      // Suspend while waiting for lazyData to resolve\n      use(lazyData)\n    }\n    // Suspend infinitely as `changeByServerResponse` will cause a different part of the tree to be rendered.\n    // A falsey `resolvedRsc` indicates missing data -- we should not commit that branch, and we need to wait for the data to arrive.\n    use(unresolvedThenable) as never\n  }\n\n  // If we get to this point, then we know we have something we can render.\n  const subtree = (\n    // The layout router context narrows down tree and childNodes at each level.\n    <LayoutRouterContext.Provider\n      value={{\n        parentTree: tree,\n        parentCacheNode: cacheNode,\n        parentSegmentPath: segmentPath,\n\n        // TODO-APP: overriding of url for parallel routes\n        url: url,\n      }}\n    >\n      {resolvedRsc}\n    </LayoutRouterContext.Provider>\n  )\n  // Ensure root layout is not wrapped in a div as the root layout renders `<html>`\n  return subtree\n}\n\n/**\n * Renders suspense boundary with the provided \"loading\" property as the fallback.\n * If no loading property is provided it renders the children without a suspense boundary.\n */\nfunction LoadingBoundary({\n  loading,\n  children,\n}: {\n  loading: LoadingModuleData | Promise<LoadingModuleData>\n  children: React.ReactNode\n}): JSX.Element {\n  // If loading is a promise, unwrap it. This happens in cases where we haven't\n  // yet received the loading data from the server — which includes whether or\n  // not this layout has a loading component at all.\n  //\n  // It's OK to suspend here instead of inside the fallback because this\n  // promise will resolve simultaneously with the data for the segment itself.\n  // So it will never suspend for longer than it would have if we didn't use\n  // a Suspense fallback at all.\n  let loadingModuleData\n  if (\n    typeof loading === 'object' &&\n    loading !== null &&\n    typeof (loading as any).then === 'function'\n  ) {\n    const promiseForLoading = loading as Promise<LoadingModuleData>\n    loadingModuleData = use(promiseForLoading)\n  } else {\n    loadingModuleData = loading as LoadingModuleData\n  }\n\n  if (loadingModuleData) {\n    const loadingRsc = loadingModuleData[0]\n    const loadingStyles = loadingModuleData[1]\n    const loadingScripts = loadingModuleData[2]\n    return (\n      <Suspense\n        fallback={\n          <>\n            {loadingStyles}\n            {loadingScripts}\n            {loadingRsc}\n          </>\n        }\n      >\n        {children}\n      </Suspense>\n    )\n  }\n\n  return <>{children}</>\n}\n\n/**\n * OuterLayoutRouter handles the current segment as well as <Offscreen> rendering of other segments.\n * It can be rendered next to each other with a different `parallelRouterKey`, allowing for Parallel routes.\n */\nexport default function OuterLayoutRouter({\n  parallelRouterKey,\n  error,\n  errorStyles,\n  errorScripts,\n  templateStyles,\n  templateScripts,\n  template,\n  notFound,\n  forbidden,\n  unauthorized,\n}: {\n  parallelRouterKey: string\n  error: ErrorComponent | undefined\n  errorStyles: React.ReactNode | undefined\n  errorScripts: React.ReactNode | undefined\n  templateStyles: React.ReactNode | undefined\n  templateScripts: React.ReactNode | undefined\n  template: React.ReactNode\n  notFound: React.ReactNode | undefined\n  forbidden: React.ReactNode | undefined\n  unauthorized: React.ReactNode | undefined\n}) {\n  const context = useContext(LayoutRouterContext)\n  if (!context) {\n    throw new Error('invariant expected layout router to be mounted')\n  }\n\n  const { parentTree, parentCacheNode, parentSegmentPath, url } = context\n\n  // Get the CacheNode for this segment by reading it from the parent segment's\n  // child map.\n  const parentParallelRoutes = parentCacheNode.parallelRoutes\n  let segmentMap = parentParallelRoutes.get(parallelRouterKey)\n  // If the parallel router cache node does not exist yet, create it.\n  // This writes to the cache when there is no item in the cache yet. It never *overwrites* existing cache items which is why it's safe in concurrent mode.\n  if (!segmentMap) {\n    segmentMap = new Map()\n    parentParallelRoutes.set(parallelRouterKey, segmentMap)\n  }\n\n  // Get the active segment in the tree\n  // The reason arrays are used in the data format is that these are transferred from the server to the browser so it's optimized to save bytes.\n  const parentTreeSegment = parentTree[0]\n  const tree = parentTree[1][parallelRouterKey]\n  const treeSegment = tree[0]\n\n  const segmentPath =\n    parentSegmentPath === null\n      ? // TODO: The root segment value is currently omitted from the segment\n        // path. This has led to a bunch of special cases scattered throughout\n        // the code. We should clean this up.\n        [parallelRouterKey]\n      : parentSegmentPath.concat([parentTreeSegment, parallelRouterKey])\n\n  // The \"state\" key of a segment is the one passed to React — it represents the\n  // identity of the UI tree. Whenever the state key changes, the tree is\n  // recreated and the state is reset. In the App Router model, search params do\n  // not cause state to be lost, so two segments with the same segment path but\n  // different search params should have the same state key.\n  //\n  // The \"cache\" key of a segment, however, *does* include the search params, if\n  // it's possible that the segment accessed the search params on the server.\n  // (This only applies to page segments; layout segments cannot access search\n  // params on the server.)\n  const cacheKey = createRouterCacheKey(treeSegment)\n  const stateKey = createRouterCacheKey(treeSegment, true) // no search params\n\n  // Read segment path from the parallel router cache node.\n  let cacheNode = segmentMap.get(cacheKey)\n  if (cacheNode === undefined) {\n    // When data is not available during rendering client-side we need to fetch\n    // it from the server.\n    const newLazyCacheNode: LazyCacheNode = {\n      lazyData: null,\n      rsc: null,\n      prefetchRsc: null,\n      head: null,\n      prefetchHead: null,\n      parallelRoutes: new Map(),\n      loading: null,\n      navigatedAt: -1,\n    }\n\n    // Flight data fetch kicked off during render and put into the cache.\n    cacheNode = newLazyCacheNode\n    segmentMap.set(cacheKey, newLazyCacheNode)\n  }\n\n  /*\n    - Error boundary\n      - Only renders error boundary if error component is provided.\n      - Rendered for each segment to ensure they have their own error state.\n    - Loading boundary\n      - Only renders suspense boundary if loading components is provided.\n      - Rendered for each segment to ensure they have their own loading state.\n      - Passed to the router during rendering to ensure it can be immediately rendered when suspending on a Flight fetch.\n  */\n\n  // TODO: The loading module data for a segment is stored on the parent, then\n  // applied to each of that parent segment's parallel route slots. In the\n  // simple case where there's only one parallel route (the `children` slot),\n  // this is no different from if the loading module data where stored on the\n  // child directly. But I'm not sure this actually makes sense when there are\n  // multiple parallel routes. It's not a huge issue because you always have\n  // the option to define a narrower loading boundary for a particular slot. But\n  // this sort of smells like an implementation accident to me.\n  const loadingModuleData = parentCacheNode.loading\n\n  return (\n    <TemplateContext.Provider\n      key={stateKey}\n      value={\n        <ScrollAndFocusHandler segmentPath={segmentPath}>\n          <ErrorBoundary\n            errorComponent={error}\n            errorStyles={errorStyles}\n            errorScripts={errorScripts}\n          >\n            <LoadingBoundary loading={loadingModuleData}>\n              <HTTPAccessFallbackBoundary\n                notFound={notFound}\n                forbidden={forbidden}\n                unauthorized={unauthorized}\n              >\n                <RedirectBoundary>\n                  <InnerLayoutRouter\n                    url={url}\n                    tree={tree}\n                    cacheNode={cacheNode}\n                    segmentPath={segmentPath}\n                  />\n                </RedirectBoundary>\n              </HTTPAccessFallbackBoundary>\n            </LoadingBoundary>\n          </ErrorBoundary>\n        </ScrollAndFocusHandler>\n      }\n    >\n      {templateStyles}\n      {templateScripts}\n      {template}\n    </TemplateContext.Provider>\n  )\n}\n","(function(){\"use strict\";var e={815:function(e){function hasOwnProperty(e,r){return Object.prototype.hasOwnProperty.call(e,r)}e.exports=function(e,n,t,o){n=n||\"&\";t=t||\"=\";var a={};if(typeof e!==\"string\"||e.length===0){return a}var i=/\\+/g;e=e.split(n);var u=1e3;if(o&&typeof o.maxKeys===\"number\"){u=o.maxKeys}var c=e.length;if(u>0&&c>u){c=u}for(var p=0;p<c;++p){var f=e[p].replace(i,\"%20\"),s=f.indexOf(t),_,l,y,d;if(s>=0){_=f.substr(0,s);l=f.substr(s+1)}else{_=f;l=\"\"}y=decodeURIComponent(_);d=decodeURIComponent(l);if(!hasOwnProperty(a,y)){a[y]=d}else if(r(a[y])){a[y].push(d)}else{a[y]=[a[y],d]}}return a};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"}},577:function(e){var stringifyPrimitive=function(e){switch(typeof e){case\"string\":return e;case\"boolean\":return e?\"true\":\"false\";case\"number\":return isFinite(e)?e:\"\";default:return\"\"}};e.exports=function(e,t,o,a){t=t||\"&\";o=o||\"=\";if(e===null){e=undefined}if(typeof e===\"object\"){return map(n(e),(function(n){var a=encodeURIComponent(stringifyPrimitive(n))+o;if(r(e[n])){return map(e[n],(function(e){return a+encodeURIComponent(stringifyPrimitive(e))})).join(t)}else{return a+encodeURIComponent(stringifyPrimitive(e[n]))}})).join(t)}if(!a)return\"\";return encodeURIComponent(stringifyPrimitive(a))+o+encodeURIComponent(stringifyPrimitive(e))};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"};function map(e,r){if(e.map)return e.map(r);var n=[];for(var t=0;t<e.length;t++){n.push(r(e[t],t))}return n}var n=Object.keys||function(e){var r=[];for(var n in e){if(Object.prototype.hasOwnProperty.call(e,n))r.push(n)}return r}}};var r={};function __nccwpck_require__(n){var t=r[n];if(t!==undefined){return t.exports}var o=r[n]={exports:{}};var a=true;try{e[n](o,o.exports,__nccwpck_require__);a=false}finally{if(a)delete r[n]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};!function(){var e=n;e.decode=e.parse=__nccwpck_require__(815);e.encode=e.stringify=__nccwpck_require__(577)}();module.exports=n})();","export function getObjectClassLabel(value: any): string {\n  return Object.prototype.toString.call(value)\n}\n\nexport function isPlainObject(value: any): boolean {\n  if (getObjectClassLabel(value) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(value)\n\n  /**\n   * this used to be previously:\n   *\n   * `return prototype === null || prototype === Object.prototype`\n   *\n   * but Edge Runtime expose Object from vm, being that kind of type-checking wrongly fail.\n   *\n   * It was changed to the current implementation since it's resilient to serialization.\n   */\n  return prototype === null || prototype.hasOwnProperty('isPrototypeOf')\n}\n","import { isPlainObject } from '../shared/lib/is-plain-object';\n/**\n * Checks whether the given value is a NextError.\n * This can be used to print a more detailed error message with properties like `code` & `digest`.\n */ export default function isError(err) {\n    return typeof err === 'object' && err !== null && 'name' in err && 'message' in err;\n}\nfunction safeStringify(obj) {\n    const seen = new WeakSet();\n    return JSON.stringify(obj, (_key, value)=>{\n        // If value is an object and already seen, replace with \"[Circular]\"\n        if (typeof value === 'object' && value !== null) {\n            if (seen.has(value)) {\n                return '[Circular]';\n            }\n            seen.add(value);\n        }\n        return value;\n    });\n}\nexport function getProperError(err) {\n    if (isError(err)) {\n        return err;\n    }\n    if (process.env.NODE_ENV === 'development') {\n        // provide better error for case where `throw undefined`\n        // is called in development\n        if (typeof err === 'undefined') {\n            return Object.defineProperty(new Error('An undefined error was thrown, ' + 'see here for more info: https://nextjs.org/docs/messages/threw-undefined'), \"__NEXT_ERROR_CODE\", {\n                value: \"E98\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (err === null) {\n            return Object.defineProperty(new Error('A null error was thrown, ' + 'see here for more info: https://nextjs.org/docs/messages/threw-undefined'), \"__NEXT_ERROR_CODE\", {\n                value: \"E336\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    return Object.defineProperty(new Error(isPlainObject(err) ? safeStringify(err) : err + ''), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n}\n\n//# sourceMappingURL=is-error.js.map","export var RouteKind = /*#__PURE__*/ function(RouteKind) {\n    /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */ RouteKind[\"PAGES\"] = \"PAGES\";\n    /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */ RouteKind[\"PAGES_API\"] = \"PAGES_API\";\n    /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */ RouteKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */ RouteKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */ RouteKind[\"IMAGE\"] = \"IMAGE\";\n    return RouteKind;\n}({});\n\n//# sourceMappingURL=route-kind.js.map","'use client'\n\n/**\n * HTTPAccessFallbackBoundary is a boundary that catches errors and renders a\n * fallback component for HTTP errors.\n *\n * It receives the status code, and determine if it should render fallbacks for few HTTP 4xx errors.\n *\n * e.g. 404\n * 404 represents not found, and the fallback component pair contains the component and its styles.\n *\n */\n\nimport React, { useContext } from 'react'\nimport { useUntrackedPathname } from '../navigation-untracked'\nimport {\n  HTTPAccessErrorStatus,\n  getAccessFallbackHTTPStatus,\n  getAccessFallbackErrorTypeByStatus,\n  isHTTPAccessFallbackError,\n} from './http-access-fallback'\nimport { warnOnce } from '../../../shared/lib/utils/warn-once'\nimport { MissingSlotContext } from '../../../shared/lib/app-router-context.shared-runtime'\n\ninterface HTTPAccessFallbackBoundaryProps {\n  notFound?: React.ReactNode\n  forbidden?: React.ReactNode\n  unauthorized?: React.ReactNode\n  children: React.ReactNode\n  missingSlots?: Set<string>\n}\n\ninterface HTTPAccessFallbackErrorBoundaryProps\n  extends HTTPAccessFallbackBoundaryProps {\n  pathname: string | null\n  missingSlots?: Set<string>\n}\n\ninterface HTTPAccessBoundaryState {\n  triggeredStatus: number | undefined\n  previousPathname: string | null\n}\n\nclass HTTPAccessFallbackErrorBoundary extends React.Component<\n  HTTPAccessFallbackErrorBoundaryProps,\n  HTTPAccessBoundaryState\n> {\n  constructor(props: HTTPAccessFallbackErrorBoundaryProps) {\n    super(props)\n    this.state = {\n      triggeredStatus: undefined,\n      previousPathname: props.pathname,\n    }\n  }\n\n  componentDidCatch(): void {\n    if (\n      process.env.NODE_ENV === 'development' &&\n      this.props.missingSlots &&\n      this.props.missingSlots.size > 0 &&\n      // A missing children slot is the typical not-found case, so no need to warn\n      !this.props.missingSlots.has('children')\n    ) {\n      let warningMessage =\n        'No default component was found for a parallel route rendered on this page. Falling back to nearest NotFound boundary.\\n' +\n        'Learn more: https://nextjs.org/docs/app/building-your-application/routing/parallel-routes#defaultjs\\n\\n'\n\n      const formattedSlots = Array.from(this.props.missingSlots)\n        .sort((a, b) => a.localeCompare(b))\n        .map((slot) => `@${slot}`)\n        .join(', ')\n\n      warningMessage += 'Missing slots: ' + formattedSlots\n\n      warnOnce(warningMessage)\n    }\n  }\n\n  static getDerivedStateFromError(error: any) {\n    if (isHTTPAccessFallbackError(error)) {\n      const httpStatus = getAccessFallbackHTTPStatus(error)\n      return {\n        triggeredStatus: httpStatus,\n      }\n    }\n    // Re-throw if error is not for 404\n    throw error\n  }\n\n  static getDerivedStateFromProps(\n    props: HTTPAccessFallbackErrorBoundaryProps,\n    state: HTTPAccessBoundaryState\n  ): HTTPAccessBoundaryState | null {\n    /**\n     * Handles reset of the error boundary when a navigation happens.\n     * Ensures the error boundary does not stay enabled when navigating to a new page.\n     * Approach of setState in render is safe as it checks the previous pathname and then overrides\n     * it as outlined in https://react.dev/reference/react/useState#storing-information-from-previous-renders\n     */\n    if (props.pathname !== state.previousPathname && state.triggeredStatus) {\n      return {\n        triggeredStatus: undefined,\n        previousPathname: props.pathname,\n      }\n    }\n    return {\n      triggeredStatus: state.triggeredStatus,\n      previousPathname: props.pathname,\n    }\n  }\n\n  render() {\n    const { notFound, forbidden, unauthorized, children } = this.props\n    const { triggeredStatus } = this.state\n    const errorComponents = {\n      [HTTPAccessErrorStatus.NOT_FOUND]: notFound,\n      [HTTPAccessErrorStatus.FORBIDDEN]: forbidden,\n      [HTTPAccessErrorStatus.UNAUTHORIZED]: unauthorized,\n    }\n\n    if (triggeredStatus) {\n      const isNotFound =\n        triggeredStatus === HTTPAccessErrorStatus.NOT_FOUND && notFound\n      const isForbidden =\n        triggeredStatus === HTTPAccessErrorStatus.FORBIDDEN && forbidden\n      const isUnauthorized =\n        triggeredStatus === HTTPAccessErrorStatus.UNAUTHORIZED && unauthorized\n\n      // If there's no matched boundary in this layer, keep throwing the error by rendering the children\n      if (!(isNotFound || isForbidden || isUnauthorized)) {\n        return children\n      }\n\n      return (\n        <>\n          <meta name=\"robots\" content=\"noindex\" />\n          {process.env.NODE_ENV === 'development' && (\n            <meta\n              name=\"boundary-next-error\"\n              content={getAccessFallbackErrorTypeByStatus(triggeredStatus)}\n            />\n          )}\n          {errorComponents[triggeredStatus]}\n        </>\n      )\n    }\n\n    return children\n  }\n}\n\nexport function HTTPAccessFallbackBoundary({\n  notFound,\n  forbidden,\n  unauthorized,\n  children,\n}: HTTPAccessFallbackBoundaryProps) {\n  // When we're rendering the missing params shell, this will return null. This\n  // is because we won't be rendering any not found boundaries or error\n  // boundaries for the missing params shell. When this runs on the client\n  // (where these error can occur), we will get the correct pathname.\n  const pathname = useUntrackedPathname()\n  const missingSlots = useContext(MissingSlotContext)\n  const hasErrorFallback = !!(notFound || forbidden || unauthorized)\n\n  if (hasErrorFallback) {\n    return (\n      <HTTPAccessFallbackErrorBoundary\n        pathname={pathname}\n        notFound={notFound}\n        forbidden={forbidden}\n        unauthorized={unauthorized}\n        missingSlots={missingSlots}\n      >\n        {children}\n      </HTTPAccessFallbackErrorBoundary>\n    )\n  }\n\n  return <>{children}</>\n}\n","/**\n * @license React\n * react.react-server.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar ReactSharedInternals = { H: null, A: null };\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nvar isArrayImpl = Array.isArray,\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty,\n  assign = Object.assign;\nfunction ReactElement(type, key, self, source, owner, props) {\n  self = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== self ? self : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(\n    oldElement.type,\n    newKey,\n    void 0,\n    void 0,\n    void 0,\n    oldElement.props\n  );\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction noop() {}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop, noop)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      formatProdErrorMessage(\n        31,\n        \"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array\n      )\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nfunction createCacheRoot() {\n  return new WeakMap();\n}\nfunction createCacheNode() {\n  return { s: 0, v: void 0, o: null, p: null };\n}\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children)) throw Error(formatProdErrorMessage(143));\n    return children;\n  }\n};\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.cache = function (fn) {\n  return function () {\n    var dispatcher = ReactSharedInternals.A;\n    if (!dispatcher) return fn.apply(null, arguments);\n    var fnMap = dispatcher.getCacheForType(createCacheRoot);\n    dispatcher = fnMap.get(fn);\n    void 0 === dispatcher &&\n      ((dispatcher = createCacheNode()), fnMap.set(fn, dispatcher));\n    fnMap = 0;\n    for (var l = arguments.length; fnMap < l; fnMap++) {\n      var arg = arguments[fnMap];\n      if (\n        \"function\" === typeof arg ||\n        (\"object\" === typeof arg && null !== arg)\n      ) {\n        var objectCache = dispatcher.o;\n        null === objectCache && (dispatcher.o = objectCache = new WeakMap());\n        dispatcher = objectCache.get(arg);\n        void 0 === dispatcher &&\n          ((dispatcher = createCacheNode()), objectCache.set(arg, dispatcher));\n      } else\n        (objectCache = dispatcher.p),\n          null === objectCache && (dispatcher.p = objectCache = new Map()),\n          (dispatcher = objectCache.get(arg)),\n          void 0 === dispatcher &&\n            ((dispatcher = createCacheNode()),\n            objectCache.set(arg, dispatcher));\n    }\n    if (1 === dispatcher.s) return dispatcher.v;\n    if (2 === dispatcher.s) throw dispatcher.v;\n    try {\n      var result = fn.apply(null, arguments);\n      fnMap = dispatcher;\n      fnMap.s = 1;\n      return (fnMap.v = result);\n    } catch (error) {\n      throw ((result = dispatcher), (result.s = 2), (result.v = error), error);\n    }\n  };\n};\nexports.captureOwnerStack = function () {\n  return null;\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(formatProdErrorMessage(267, element));\n  var props = assign({}, element.props),\n    key = element.key,\n    owner = void 0;\n  if (null != config)\n    for (propName in (void 0 !== config.ref && (owner = void 0),\n    void 0 !== config.key && (key = \"\" + config.key),\n    config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, void 0, void 0, owner, props);\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, void 0, void 0, null, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useDebugValue = function () {};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.version = \"19.2.0-canary-3fbfb9ba-20250409\";\n","(function(){\"use strict\";var e={815:function(e){function hasOwnProperty(e,r){return Object.prototype.hasOwnProperty.call(e,r)}e.exports=function(e,n,t,o){n=n||\"&\";t=t||\"=\";var a={};if(typeof e!==\"string\"||e.length===0){return a}var i=/\\+/g;e=e.split(n);var u=1e3;if(o&&typeof o.maxKeys===\"number\"){u=o.maxKeys}var c=e.length;if(u>0&&c>u){c=u}for(var p=0;p<c;++p){var f=e[p].replace(i,\"%20\"),s=f.indexOf(t),_,l,y,d;if(s>=0){_=f.substr(0,s);l=f.substr(s+1)}else{_=f;l=\"\"}y=decodeURIComponent(_);d=decodeURIComponent(l);if(!hasOwnProperty(a,y)){a[y]=d}else if(r(a[y])){a[y].push(d)}else{a[y]=[a[y],d]}}return a};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"}},577:function(e){var stringifyPrimitive=function(e){switch(typeof e){case\"string\":return e;case\"boolean\":return e?\"true\":\"false\";case\"number\":return isFinite(e)?e:\"\";default:return\"\"}};e.exports=function(e,t,o,a){t=t||\"&\";o=o||\"=\";if(e===null){e=undefined}if(typeof e===\"object\"){return map(n(e),(function(n){var a=encodeURIComponent(stringifyPrimitive(n))+o;if(r(e[n])){return map(e[n],(function(e){return a+encodeURIComponent(stringifyPrimitive(e))})).join(t)}else{return a+encodeURIComponent(stringifyPrimitive(e[n]))}})).join(t)}if(!a)return\"\";return encodeURIComponent(stringifyPrimitive(a))+o+encodeURIComponent(stringifyPrimitive(e))};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"};function map(e,r){if(e.map)return e.map(r);var n=[];for(var t=0;t<e.length;t++){n.push(r(e[t],t))}return n}var n=Object.keys||function(e){var r=[];for(var n in e){if(Object.prototype.hasOwnProperty.call(e,n))r.push(n)}return r}}};var r={};function __nccwpck_require__(n){var t=r[n];if(t!==undefined){return t.exports}var o=r[n]={exports:{}};var a=true;try{e[n](o,o.exports,__nccwpck_require__);a=false}finally{if(a)delete r[n]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};!function(){var e=n;e.decode=e.parse=__nccwpck_require__(815);e.encode=e.stringify=__nccwpck_require__(577)}();module.exports=n})();","export class ReflectAdapter {\n    static get(target, prop, receiver) {\n        const value = Reflect.get(target, prop, receiver);\n        if (typeof value === 'function') {\n            return value.bind(target);\n        }\n        return value;\n    }\n    static set(target, prop, value, receiver) {\n        return Reflect.set(target, prop, value, receiver);\n    }\n    static has(target, prop) {\n        return Reflect.has(target, prop);\n    }\n    static deleteProperty(target, prop) {\n        return Reflect.deleteProperty(target, prop);\n    }\n}\n\n//# sourceMappingURL=reflect.js.map","export function isHangingPromiseRejectionError(err) {\n    if (typeof err !== 'object' || err === null || !('digest' in err)) {\n        return false;\n    }\n    return err.digest === HANGING_PROMISE_REJECTION;\n}\nconst HANGING_PROMISE_REJECTION = 'HANGING_PROMISE_REJECTION';\nclass HangingPromiseRejectionError extends Error {\n    constructor(expression){\n        super(`During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context.`), this.expression = expression, this.digest = HANGING_PROMISE_REJECTION;\n    }\n}\nconst abortListenersBySignal = new WeakMap();\n/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for dynamicIO where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */ export function makeHangingPromise(signal, expression) {\n    if (signal.aborted) {\n        return Promise.reject(new HangingPromiseRejectionError(expression));\n    } else {\n        const hangingPromise = new Promise((_, reject)=>{\n            const boundRejection = reject.bind(null, new HangingPromiseRejectionError(expression));\n            let currentListeners = abortListenersBySignal.get(signal);\n            if (currentListeners) {\n                currentListeners.push(boundRejection);\n            } else {\n                const listeners = [\n                    boundRejection\n                ];\n                abortListenersBySignal.set(signal, listeners);\n                signal.addEventListener('abort', ()=>{\n                    for(let i = 0; i < listeners.length; i++){\n                        listeners[i]();\n                    }\n                }, {\n                    once: true\n                });\n            }\n        });\n        // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n        // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n        // your own promise out of it you'll need to ensure you handle the error when it rejects.\n        hangingPromise.catch(ignoreReject);\n        return hangingPromise;\n    }\n}\nfunction ignoreReject() {}\n\n//# sourceMappingURL=dynamic-rendering-utils.js.map","export const METADATA_BOUNDARY_NAME = '__next_metadata_boundary__';\nexport const VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__';\nexport const OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__';\n\n//# sourceMappingURL=metadata-constants.js.map","/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */ // Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react';\nimport { DynamicServerError } from '../../client/components/hooks-server-context';\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { METADATA_BOUNDARY_NAME, VIEWPORT_BOUNDARY_NAME, OUTLET_BOUNDARY_NAME } from '../../lib/metadata/metadata-constants';\nimport { scheduleOnNextTick } from '../../lib/scheduler';\nconst hasPostpone = typeof React.unstable_postpone === 'function';\nexport function createDynamicTrackingState(isDebugDynamicAccesses) {\n    return {\n        isDebugDynamicAccesses,\n        dynamicAccesses: [],\n        syncDynamicExpression: undefined,\n        syncDynamicErrorWithStack: null\n    };\n}\nexport function createDynamicValidationState() {\n    return {\n        hasSuspendedDynamic: false,\n        hasDynamicMetadata: false,\n        hasDynamicViewport: false,\n        hasSyncDynamicErrors: false,\n        dynamicErrors: []\n    };\n}\nexport function getFirstDynamicReason(trackingState) {\n    var _trackingState_dynamicAccesses_;\n    return (_trackingState_dynamicAccesses_ = trackingState.dynamicAccesses[0]) == null ? void 0 : _trackingState_dynamicAccesses_.expression;\n}\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */ export function markCurrentScopeAsDynamic(store, workUnitStore, expression) {\n    if (workUnitStore) {\n        if (workUnitStore.type === 'cache' || workUnitStore.type === 'unstable-cache') {\n            // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n            // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n            // forbidden inside a cache scope.\n            return;\n        }\n    }\n    // If we're forcing dynamic rendering or we're forcing static rendering, we\n    // don't need to do anything here because the entire page is already dynamic\n    // or it's static and it should not throw or postpone here.\n    if (store.forceDynamic || store.forceStatic) return;\n    if (store.dynamicShouldError) {\n        throw Object.defineProperty(new StaticGenBailoutError(`Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n            value: \"E553\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    if (workUnitStore) {\n        if (workUnitStore.type === 'prerender-ppr') {\n            postponeWithTracking(store.route, expression, workUnitStore.dynamicTracking);\n        } else if (workUnitStore.type === 'prerender-legacy') {\n            workUnitStore.revalidate = 0;\n            // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n            const err = Object.defineProperty(new DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`), \"__NEXT_ERROR_CODE\", {\n                value: \"E550\",\n                enumerable: false,\n                configurable: true\n            });\n            store.dynamicUsageDescription = expression;\n            store.dynamicUsageStack = err.stack;\n            throw err;\n        } else if (process.env.NODE_ENV === 'development' && workUnitStore && workUnitStore.type === 'request') {\n            workUnitStore.usedDynamic = true;\n        }\n    }\n}\n/**\n * This function communicates that some dynamic path parameter was read. This\n * differs from the more general `trackDynamicDataAccessed` in that it is will\n * not error when `dynamic = \"error\"` is set.\n *\n * @param store The static generation store\n * @param expression The expression that was accessed dynamically\n */ export function trackFallbackParamAccessed(store, expression) {\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    if (!prerenderStore || prerenderStore.type !== 'prerender-ppr') return;\n    postponeWithTracking(store.route, expression, prerenderStore.dynamicTracking);\n}\n/**\n * This function is meant to be used when prerendering without dynamicIO or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */ export function throwToInterruptStaticGeneration(expression, store, prerenderStore) {\n    // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n    const err = Object.defineProperty(new DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`), \"__NEXT_ERROR_CODE\", {\n        value: \"E558\",\n        enumerable: false,\n        configurable: true\n    });\n    prerenderStore.revalidate = 0;\n    store.dynamicUsageDescription = expression;\n    store.dynamicUsageStack = err.stack;\n    throw err;\n}\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */ export function trackDynamicDataInDynamicRender(_store, workUnitStore) {\n    if (workUnitStore) {\n        if (workUnitStore.type === 'cache' || workUnitStore.type === 'unstable-cache') {\n            // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n            // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n            // forbidden inside a cache scope.\n            return;\n        }\n        if (workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-legacy') {\n            workUnitStore.revalidate = 0;\n        }\n        if (process.env.NODE_ENV === 'development' && workUnitStore.type === 'request') {\n            workUnitStore.usedDynamic = true;\n        }\n    }\n}\n// Despite it's name we don't actually abort unless we have a controller to call abort on\n// There are times when we let a prerender run long to discover caches where we want the semantics\n// of tracking dynamic access without terminating the prerender early\nfunction abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore) {\n    const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`;\n    const error = createPrerenderInterruptedError(reason);\n    prerenderStore.controller.abort(error);\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nexport function abortOnSynchronousPlatformIOAccess(route, expression, errorWithStack, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        if (dynamicTracking.syncDynamicErrorWithStack === null) {\n            dynamicTracking.syncDynamicExpression = expression;\n            dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n        }\n    }\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n}\nexport function trackSynchronousPlatformIOAccessInDev(requestStore) {\n    // We don't actually have a controller to abort but we do the semantic equivalent by\n    // advancing the request store out of prerender mode\n    requestStore.prerenderPhase = false;\n}\n/**\n * use this function when prerendering with dynamicIO. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in dynamicIO mode.\n *\n * @internal\n */ export function abortAndThrowOnSynchronousRequestDataAccess(route, expression, errorWithStack, prerenderStore) {\n    const prerenderSignal = prerenderStore.controller.signal;\n    if (prerenderSignal.aborted === false) {\n        // TODO it would be better to move this aborted check into the callsite so we can avoid making\n        // the error object when it isn't relevant to the aborting of the prerender however\n        // since we need the throw semantics regardless of whether we abort it is easier to land\n        // this way. See how this was handled with `abortOnSynchronousPlatformIOAccess` for a closer\n        // to ideal implementation\n        const dynamicTracking = prerenderStore.dynamicTracking;\n        if (dynamicTracking) {\n            if (dynamicTracking.syncDynamicErrorWithStack === null) {\n                dynamicTracking.syncDynamicExpression = expression;\n                dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n                if (prerenderStore.validating === true) {\n                    // We always log Request Access in dev at the point of calling the function\n                    // So we mark the dynamic validation as not requiring it to be printed\n                    dynamicTracking.syncDynamicLogged = true;\n                }\n            }\n        }\n        abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n    }\n    throw createPrerenderInterruptedError(`Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`);\n}\n// For now these implementations are the same so we just reexport\nexport const trackSynchronousRequestDataAccessInDev = trackSynchronousPlatformIOAccessInDev;\nexport function Postpone({ reason, route }) {\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    const dynamicTracking = prerenderStore && prerenderStore.type === 'prerender-ppr' ? prerenderStore.dynamicTracking : null;\n    postponeWithTracking(route, reason, dynamicTracking);\n}\nexport function postponeWithTracking(route, expression, dynamicTracking) {\n    assertPostpone();\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n    React.unstable_postpone(createPostponeReason(route, expression));\n}\nfunction createPostponeReason(route, expression) {\n    return `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` + `React throws this special object to indicate where. It should not be caught by ` + `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`;\n}\nexport function isDynamicPostpone(err) {\n    if (typeof err === 'object' && err !== null && typeof err.message === 'string') {\n        return isDynamicPostponeReason(err.message);\n    }\n    return false;\n}\nfunction isDynamicPostponeReason(reason) {\n    return reason.includes('needs to bail out of prerendering at this point because it used') && reason.includes('Learn more: https://nextjs.org/docs/messages/ppr-caught-error');\n}\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n    throw Object.defineProperty(new Error('Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n        value: \"E296\",\n        enumerable: false,\n        configurable: true\n    });\n}\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED';\nfunction createPrerenderInterruptedError(message) {\n    const error = Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n    error.digest = NEXT_PRERENDER_INTERRUPTED;\n    return error;\n}\nexport function isPrerenderInterruptedError(error) {\n    return typeof error === 'object' && error !== null && error.digest === NEXT_PRERENDER_INTERRUPTED && 'name' in error && 'message' in error && error instanceof Error;\n}\nexport function accessedDynamicData(dynamicAccesses) {\n    return dynamicAccesses.length > 0;\n}\nexport function consumeDynamicAccess(serverDynamic, clientDynamic) {\n    // We mutate because we only call this once we are no longer writing\n    // to the dynamicTrackingState and it's more efficient than creating a new\n    // array.\n    serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses);\n    return serverDynamic.dynamicAccesses;\n}\nexport function formatDynamicAPIAccesses(dynamicAccesses) {\n    return dynamicAccesses.filter((access)=>typeof access.stack === 'string' && access.stack.length > 0).map(({ expression, stack })=>{\n        stack = stack.split('\\n')// Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4).filter((line)=>{\n            // Exclude Next.js internals from the stack trace.\n            if (line.includes('node_modules/next/')) {\n                return false;\n            }\n            // Exclude anonymous functions from the stack trace.\n            if (line.includes(' (<anonymous>)')) {\n                return false;\n            }\n            // Exclude Node.js internals from the stack trace.\n            if (line.includes(' (node:')) {\n                return false;\n            }\n            return true;\n        }).join('\\n');\n        return `Dynamic API Usage Debug - ${expression}:\\n${stack}`;\n    });\n}\nfunction assertPostpone() {\n    if (!hasPostpone) {\n        throw Object.defineProperty(new Error(`Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`), \"__NEXT_ERROR_CODE\", {\n            value: \"E224\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */ export function createPostponedAbortSignal(reason) {\n    assertPostpone();\n    const controller = new AbortController();\n    // We get our hands on a postpone instance by calling postpone and catching the throw\n    try {\n        React.unstable_postpone(reason);\n    } catch (x) {\n        controller.abort(x);\n    }\n    return controller.signal;\n}\n/**\n * In a prerender, we may end up with hanging Promises as inputs due them\n * stalling on connection() or because they're loading dynamic data. In that\n * case we need to abort the encoding of arguments since they'll never complete.\n */ export function createHangingInputAbortSignal(workUnitStore) {\n    const controller = new AbortController();\n    if (workUnitStore.cacheSignal) {\n        // If we have a cacheSignal it means we're in a prospective render. If the input\n        // we're waiting on is coming from another cache, we do want to wait for it so that\n        // we can resolve this cache entry too.\n        workUnitStore.cacheSignal.inputReady().then(()=>{\n            controller.abort();\n        });\n    } else {\n        // Otherwise we're in the final render and we should already have all our caches\n        // filled. We might still be waiting on some microtasks so we wait one tick before\n        // giving up. When we give up, we still want to render the content of this cache\n        // as deeply as we can so that we can suspend as deeply as possible in the tree\n        // or not at all if we don't end up waiting for the input.\n        scheduleOnNextTick(()=>controller.abort());\n    }\n    return controller.signal;\n}\nexport function annotateDynamicAccess(expression, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nexport function useDynamicRouteParams(expression) {\n    const workStore = workAsyncStorage.getStore();\n    if (workStore && workStore.isStaticGeneration && workStore.fallbackRouteParams && workStore.fallbackRouteParams.size > 0) {\n        // There are fallback route params, we should track these as dynamic\n        // accesses.\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        if (workUnitStore) {\n            // We're prerendering with dynamicIO or PPR or both\n            if (workUnitStore.type === 'prerender') {\n                // We are in a prerender with dynamicIO semantics\n                // We are going to hang here and never resolve. This will cause the currently\n                // rendering component to effectively be a dynamic hole\n                React.use(makeHangingPromise(workUnitStore.renderSignal, expression));\n            } else if (workUnitStore.type === 'prerender-ppr') {\n                // We're prerendering with PPR\n                postponeWithTracking(workStore.route, expression, workUnitStore.dynamicTracking);\n            } else if (workUnitStore.type === 'prerender-legacy') {\n                throwToInterruptStaticGeneration(expression, workStore, workUnitStore);\n            }\n        }\n    }\n}\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/;\nconst hasMetadataRegex = new RegExp(`\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`);\nconst hasViewportRegex = new RegExp(`\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`);\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`);\nexport function trackAllowedDynamicAccess(route, componentStack, dynamicValidation, serverDynamic, clientDynamic) {\n    if (hasOutletRegex.test(componentStack)) {\n        // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n        return;\n    } else if (hasMetadataRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicMetadata = true;\n        return;\n    } else if (hasViewportRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicViewport = true;\n        return;\n    } else if (hasSuspenseRegex.test(componentStack)) {\n        dynamicValidation.hasSuspendedDynamic = true;\n        return;\n    } else if (serverDynamic.syncDynamicErrorWithStack || clientDynamic.syncDynamicErrorWithStack) {\n        dynamicValidation.hasSyncDynamicErrors = true;\n        return;\n    } else {\n        const message = `Route \"${route}\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. We don't have the exact line number added to error messages yet but you can see which component in the stack below. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense`;\n        const error = createErrorWithComponentStack(message, componentStack);\n        dynamicValidation.dynamicErrors.push(error);\n        return;\n    }\n}\nfunction createErrorWithComponentStack(message, componentStack) {\n    const error = Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n    error.stack = 'Error: ' + message + componentStack;\n    return error;\n}\nexport function throwIfDisallowedDynamic(route, dynamicValidation, serverDynamic, clientDynamic) {\n    let syncError;\n    let syncExpression;\n    let syncLogged;\n    if (serverDynamic.syncDynamicErrorWithStack) {\n        syncError = serverDynamic.syncDynamicErrorWithStack;\n        syncExpression = serverDynamic.syncDynamicExpression;\n        syncLogged = serverDynamic.syncDynamicLogged === true;\n    } else if (clientDynamic.syncDynamicErrorWithStack) {\n        syncError = clientDynamic.syncDynamicErrorWithStack;\n        syncExpression = clientDynamic.syncDynamicExpression;\n        syncLogged = clientDynamic.syncDynamicLogged === true;\n    } else {\n        syncError = null;\n        syncExpression = undefined;\n        syncLogged = false;\n    }\n    if (dynamicValidation.hasSyncDynamicErrors && syncError) {\n        if (!syncLogged) {\n            // In dev we already log errors about sync dynamic access. But during builds we need to ensure\n            // the offending sync error is logged before we exit the build\n            console.error(syncError);\n        }\n        // The actual error should have been logged when the sync access ocurred\n        throw new StaticGenBailoutError();\n    }\n    const dynamicErrors = dynamicValidation.dynamicErrors;\n    if (dynamicErrors.length) {\n        for(let i = 0; i < dynamicErrors.length; i++){\n            console.error(dynamicErrors[i]);\n        }\n        throw new StaticGenBailoutError();\n    }\n    if (!dynamicValidation.hasSuspendedDynamic) {\n        if (dynamicValidation.hasDynamicMetadata) {\n            if (syncError) {\n                console.error(syncError);\n                throw Object.defineProperty(new StaticGenBailoutError(`Route \"${route}\" has a \\`generateMetadata\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E608\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            throw Object.defineProperty(new StaticGenBailoutError(`Route \"${route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateMetadata\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E534\",\n                enumerable: false,\n                configurable: true\n            });\n        } else if (dynamicValidation.hasDynamicViewport) {\n            if (syncError) {\n                console.error(syncError);\n                throw Object.defineProperty(new StaticGenBailoutError(`Route \"${route}\" has a \\`generateViewport\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E573\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            throw Object.defineProperty(new StaticGenBailoutError(`Route \"${route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateViewport\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E590\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n}\n\n//# sourceMappingURL=dynamic-rendering.js.map","export class InvariantError extends Error {\n  constructor(message: string, options?: ErrorOptions) {\n    super(\n      `Invariant: ${message.endsWith('.') ? message : message + '.'} This is a bug in Next.js.`,\n      options\n    )\n    this.name = 'InvariantError'\n  }\n}\n","import * as React from 'react';\nconst errorRef = {\n    current: null\n};\n// React.cache is currently only available in canary/experimental React channels.\nconst cache = typeof React.cache === 'function' ? React.cache : (fn)=>fn;\n// When Dynamic IO is enabled, we record these as errors so that they\n// are captured by the dev overlay as it's more critical to fix these\n// when enabled.\nconst logErrorOrWarn = process.env.__NEXT_DYNAMIC_IO ? console.error : console.warn;\n// We don't want to dedupe across requests.\n// The developer might've just attempted to fix the warning so we should warn again if it still happens.\nconst flushCurrentErrorIfNew = cache(// eslint-disable-next-line @typescript-eslint/no-unused-vars -- cache key\n(key)=>{\n    try {\n        logErrorOrWarn(errorRef.current);\n    } finally{\n        errorRef.current = null;\n    }\n});\n/**\n * Creates a function that logs an error message that is deduped by the userland\n * callsite.\n * This requires no indirection between the call of this function and the userland\n * callsite i.e. there's only a single library frame above this.\n * Do not use on the Client where sourcemaps and ignore listing might be enabled.\n * Only use that for warnings need a fix independent of the callstack.\n *\n * @param getMessage\n * @returns\n */ export function createDedupedByCallsiteServerErrorLoggerDev(getMessage) {\n    return function logDedupedError(...args) {\n        const message = getMessage(...args);\n        if (process.env.NODE_ENV !== 'production') {\n            var _stack;\n            const callStackFrames = (_stack = new Error().stack) == null ? void 0 : _stack.split('\\n');\n            if (callStackFrames === undefined || callStackFrames.length < 4) {\n                logErrorOrWarn(message);\n            } else {\n                // Error:\n                //   logDedupedError\n                //   asyncApiBeingAccessedSynchronously\n                //   <userland callsite>\n                // TODO: This breaks if sourcemaps with ignore lists are enabled.\n                const key = callStackFrames[4];\n                errorRef.current = message;\n                flushCurrentErrorIfNew(key);\n            }\n        } else {\n            logErrorOrWarn(message);\n        }\n    };\n}\n\n//# sourceMappingURL=create-deduped-by-callsite-server-error-logger.js.map","// This regex will have fast negatives meaning valid identifiers may not pass\n// this test. However this is only used during static generation to provide hints\n// about why a page bailed out of some or all prerendering and we can use bracket notation\n// for example while `ಠ_ಠ` is a valid identifier it's ok to print `searchParams['ಠ_ಠ']`\n// even if this would have been fine too `searchParams.ಠ_ಠ`\nconst isDefinitelyAValidIdentifier = /^[A-Za-z_$][A-Za-z0-9_$]*$/\n\nexport function describeStringPropertyAccess(target: string, prop: string) {\n  if (isDefinitelyAValidIdentifier.test(prop)) {\n    return `\\`${target}.${prop}\\``\n  }\n  return `\\`${target}[${JSON.stringify(prop)}]\\``\n}\n\nexport function describeHasCheckingStringProperty(\n  target: string,\n  prop: string\n) {\n  const stringifiedProp = JSON.stringify(prop)\n  return `\\`Reflect.has(${target}, ${stringifiedProp})\\`, \\`${stringifiedProp} in ${target}\\`, or similar`\n}\n\nexport const wellKnownProperties = new Set([\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toString',\n  'valueOf',\n  'toLocaleString',\n\n  // Promise prototype\n  // fallthrough\n  'then',\n  'catch',\n  'finally',\n\n  // React Promise extension\n  // fallthrough\n  'status',\n\n  // React introspection\n  'displayName',\n\n  // Common tested properties\n  // fallthrough\n  'toJSON',\n  '$$typeof',\n  '__esModule',\n])\n","const sharedAsyncLocalStorageNotAvailableError = Object.defineProperty(new Error('Invariant: AsyncLocalStorage accessed in runtime where it is not available'), \"__NEXT_ERROR_CODE\", {\n    value: \"E504\",\n    enumerable: false,\n    configurable: true\n});\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    static bind(fn) {\n        return fn;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = typeof globalThis !== 'undefined' && globalThis.AsyncLocalStorage;\nexport function createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nexport function bindSnapshot(fn) {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.bind(fn);\n    }\n    return FakeAsyncLocalStorage.bind(fn);\n}\nexport function createSnapshot() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.snapshot();\n    }\n    return function(fn, ...args) {\n        return fn(...args);\n    };\n}\n\n//# sourceMappingURL=async-local-storage.js.map","import { createAsyncLocalStorage } from './async-local-storage';\nexport const afterTaskAsyncStorageInstance = createAsyncLocalStorage();\n\n//# sourceMappingURL=after-task-async-storage-instance.js.map","// Share the instance module in the next-shared layer\nimport { afterTaskAsyncStorageInstance as afterTaskAsyncStorage } from './after-task-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { afterTaskAsyncStorage };\n\n//# sourceMappingURL=after-task-async-storage.external.js.map","import { StaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { afterTaskAsyncStorage } from '../app-render/after-task-async-storage.external';\nexport function throwWithStaticGenerationBailoutError(route, expression) {\n    throw Object.defineProperty(new StaticGenBailoutError(`Route ${route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n        value: \"E576\",\n        enumerable: false,\n        configurable: true\n    });\n}\nexport function throwWithStaticGenerationBailoutErrorWithDynamicError(route, expression) {\n    throw Object.defineProperty(new StaticGenBailoutError(`Route ${route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n        value: \"E543\",\n        enumerable: false,\n        configurable: true\n    });\n}\nexport function throwForSearchParamsAccessInUseCache(workStore) {\n    const error = Object.defineProperty(new Error(`Route ${workStore.route} used \"searchParams\" inside \"use cache\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"searchParams\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`), \"__NEXT_ERROR_CODE\", {\n        value: \"E634\",\n        enumerable: false,\n        configurable: true\n    });\n    workStore.invalidUsageError ??= error;\n    throw error;\n}\nexport function isRequestAPICallableInsideAfter() {\n    const afterTaskStore = afterTaskAsyncStorage.getStore();\n    return (afterTaskStore == null ? void 0 : afterTaskStore.rootTaskSpawnPhase) === 'action';\n}\n\n//# sourceMappingURL=utils.js.map","import { ReflectAdapter } from '../web/spec-extension/adapters/reflect';\nimport { abortAndThrowOnSynchronousRequestDataAccess, throwToInterruptStaticGeneration, postponeWithTracking, trackDynamicDataInDynamicRender, annotateDynamicAccess, trackSynchronousRequestDataAccessInDev } from '../app-render/dynamic-rendering';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger';\nimport { describeStringPropertyAccess, describeHasCheckingStringProperty, wellKnownProperties } from '../../shared/lib/utils/reflect-utils';\nimport { throwWithStaticGenerationBailoutErrorWithDynamicError, throwForSearchParamsAccessInUseCache } from './utils';\nimport { scheduleImmediate } from '../../lib/scheduler';\nexport function createSearchParamsFromClient(underlyingSearchParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderSearchParams(workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderSearchParams(underlyingSearchParams, workStore);\n}\n// generateMetadata always runs in RSC context so it is equivalent to a Server Page Component\nexport const createServerSearchParamsForMetadata = createServerSearchParamsForServerPage;\nexport function createServerSearchParamsForServerPage(underlyingSearchParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderSearchParams(workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderSearchParams(underlyingSearchParams, workStore);\n}\nexport function createPrerenderSearchParamsForClientPage(workStore) {\n    if (workStore.forceStatic) {\n        // When using forceStatic we override all other logic and always just return an empty\n        // dictionary object.\n        return Promise.resolve({});\n    }\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    if (prerenderStore && prerenderStore.type === 'prerender') {\n        // dynamicIO Prerender\n        // We're prerendering in a mode that aborts (dynamicIO) and should stall\n        // the promise to ensure the RSC side is considered dynamic\n        return makeHangingPromise(prerenderStore.renderSignal, '`searchParams`');\n    }\n    // We're prerendering in a mode that does not aborts. We resolve the promise without\n    // any tracking because we're just transporting a value from server to client where the tracking\n    // will be applied.\n    return Promise.resolve({});\n}\nfunction createPrerenderSearchParams(workStore, prerenderStore) {\n    if (workStore.forceStatic) {\n        // When using forceStatic we override all other logic and always just return an empty\n        // dictionary object.\n        return Promise.resolve({});\n    }\n    if (prerenderStore.type === 'prerender') {\n        // We are in a dynamicIO (PPR or otherwise) prerender\n        return makeAbortingExoticSearchParams(workStore.route, prerenderStore);\n    }\n    // The remaining cases are prerender-ppr and prerender-legacy\n    // We are in a legacy static generation and need to interrupt the prerender\n    // when search params are accessed.\n    return makeErroringExoticSearchParams(workStore, prerenderStore);\n}\nfunction createRenderSearchParams(underlyingSearchParams, workStore) {\n    if (workStore.forceStatic) {\n        // When using forceStatic we override all other logic and always just return an empty\n        // dictionary object.\n        return Promise.resolve({});\n    } else {\n        if (process.env.NODE_ENV === 'development' && !workStore.isPrefetchRequest) {\n            return makeDynamicallyTrackedExoticSearchParamsWithDevWarnings(underlyingSearchParams, workStore);\n        } else {\n            return makeUntrackedExoticSearchParams(underlyingSearchParams, workStore);\n        }\n    }\n}\nconst CachedSearchParams = new WeakMap();\nconst CachedSearchParamsForUseCache = new WeakMap();\nfunction makeAbortingExoticSearchParams(route, prerenderStore) {\n    const cachedSearchParams = CachedSearchParams.get(prerenderStore);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const promise = makeHangingPromise(prerenderStore.renderSignal, '`searchParams`');\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (Object.hasOwn(promise, prop)) {\n                // The promise has this property directly. we must return it.\n                // We know it isn't a dynamic access because it can only be something\n                // that was previously written to the promise and thus not an underlying searchParam value\n                return ReflectAdapter.get(target, prop, receiver);\n            }\n            switch(prop){\n                case 'then':\n                    {\n                        const expression = '`await searchParams`, `searchParams.then`, or similar';\n                        annotateDynamicAccess(expression, prerenderStore);\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n                case 'status':\n                    {\n                        const expression = '`use(searchParams)`, `searchParams.status`, or similar';\n                        annotateDynamicAccess(expression, prerenderStore);\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n                default:\n                    {\n                        if (typeof prop === 'string' && !wellKnownProperties.has(prop)) {\n                            const expression = describeStringPropertyAccess('searchParams', prop);\n                            const error = createSearchAccessError(route, expression);\n                            abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n                        }\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n            }\n        },\n        has (target, prop) {\n            // We don't expect key checking to be used except for testing the existence of\n            // searchParams so we make all has tests trigger dynamic. this means that `promise.then`\n            // can resolve to the then function on the Promise prototype but 'then' in promise will assume\n            // you are testing whether the searchParams has a 'then' property.\n            if (typeof prop === 'string') {\n                const expression = describeHasCheckingStringProperty('searchParams', prop);\n                const error = createSearchAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n            return ReflectAdapter.has(target, prop);\n        },\n        ownKeys () {\n            const expression = '`{...searchParams}`, `Object.keys(searchParams)`, or similar';\n            const error = createSearchAccessError(route, expression);\n            abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n        }\n    });\n    CachedSearchParams.set(prerenderStore, proxiedPromise);\n    return proxiedPromise;\n}\nfunction makeErroringExoticSearchParams(workStore, prerenderStore) {\n    const cachedSearchParams = CachedSearchParams.get(workStore);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const underlyingSearchParams = {};\n    // For search params we don't construct a ReactPromise because we want to interrupt\n    // rendering on any property access that was not set from outside and so we only want\n    // to have properties like value and status if React sets them.\n    const promise = Promise.resolve(underlyingSearchParams);\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (Object.hasOwn(promise, prop)) {\n                // The promise has this property directly. we must return it.\n                // We know it isn't a dynamic access because it can only be something\n                // that was previously written to the promise and thus not an underlying searchParam value\n                return ReflectAdapter.get(target, prop, receiver);\n            }\n            switch(prop){\n                case 'then':\n                    {\n                        const expression = '`await searchParams`, `searchParams.then`, or similar';\n                        if (workStore.dynamicShouldError) {\n                            throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                        } else if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no dynamicIO)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                        return;\n                    }\n                case 'status':\n                    {\n                        const expression = '`use(searchParams)`, `searchParams.status`, or similar';\n                        if (workStore.dynamicShouldError) {\n                            throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                        } else if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no dynamicIO)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                        return;\n                    }\n                default:\n                    {\n                        if (typeof prop === 'string' && !wellKnownProperties.has(prop)) {\n                            const expression = describeStringPropertyAccess('searchParams', prop);\n                            if (workStore.dynamicShouldError) {\n                                throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                            } else if (prerenderStore.type === 'prerender-ppr') {\n                                // PPR Prerender (no dynamicIO)\n                                postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                            } else {\n                                // Legacy Prerender\n                                throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                            }\n                        }\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n            }\n        },\n        has (target, prop) {\n            // We don't expect key checking to be used except for testing the existence of\n            // searchParams so we make all has tests trigger dynamic. this means that `promise.then`\n            // can resolve to the then function on the Promise prototype but 'then' in promise will assume\n            // you are testing whether the searchParams has a 'then' property.\n            if (typeof prop === 'string') {\n                const expression = describeHasCheckingStringProperty('searchParams', prop);\n                if (workStore.dynamicShouldError) {\n                    throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                } else if (prerenderStore.type === 'prerender-ppr') {\n                    // PPR Prerender (no dynamicIO)\n                    postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                } else {\n                    // Legacy Prerender\n                    throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                }\n                return false;\n            }\n            return ReflectAdapter.has(target, prop);\n        },\n        ownKeys () {\n            const expression = '`{...searchParams}`, `Object.keys(searchParams)`, or similar';\n            if (workStore.dynamicShouldError) {\n                throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n            } else if (prerenderStore.type === 'prerender-ppr') {\n                // PPR Prerender (no dynamicIO)\n                postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n            } else {\n                // Legacy Prerender\n                throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n            }\n        }\n    });\n    CachedSearchParams.set(workStore, proxiedPromise);\n    return proxiedPromise;\n}\n/**\n * This is a variation of `makeErroringExoticSearchParams` that always throws an\n * error on access, because accessing searchParams inside of `\"use cache\"` is\n * not allowed.\n */ export function makeErroringExoticSearchParamsForUseCache(workStore) {\n    const cachedSearchParams = CachedSearchParamsForUseCache.get(workStore);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const promise = Promise.resolve({});\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (Object.hasOwn(promise, prop)) {\n                // The promise has this property directly. we must return it. We know it\n                // isn't a dynamic access because it can only be something that was\n                // previously written to the promise and thus not an underlying\n                // searchParam value\n                return ReflectAdapter.get(target, prop, receiver);\n            }\n            if (typeof prop === 'string' && (prop === 'then' || !wellKnownProperties.has(prop))) {\n                throwForSearchParamsAccessInUseCache(workStore);\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        has (target, prop) {\n            // We don't expect key checking to be used except for testing the existence of\n            // searchParams so we make all has tests throw an error. this means that `promise.then`\n            // can resolve to the then function on the Promise prototype but 'then' in promise will assume\n            // you are testing whether the searchParams has a 'then' property.\n            if (typeof prop === 'string' && (prop === 'then' || !wellKnownProperties.has(prop))) {\n                throwForSearchParamsAccessInUseCache(workStore);\n            }\n            return ReflectAdapter.has(target, prop);\n        },\n        ownKeys () {\n            throwForSearchParamsAccessInUseCache(workStore);\n        }\n    });\n    CachedSearchParamsForUseCache.set(workStore, proxiedPromise);\n    return proxiedPromise;\n}\nfunction makeUntrackedExoticSearchParams(underlyingSearchParams, store) {\n    const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    // We don't use makeResolvedReactPromise here because searchParams\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(underlyingSearchParams);\n    CachedSearchParams.set(underlyingSearchParams, promise);\n    Object.keys(underlyingSearchParams).forEach((prop)=>{\n        if (!wellKnownProperties.has(prop)) {\n            Object.defineProperty(promise, prop, {\n                get () {\n                    const workUnitStore = workUnitAsyncStorage.getStore();\n                    trackDynamicDataInDynamicRender(store, workUnitStore);\n                    return underlyingSearchParams[prop];\n                },\n                set (value) {\n                    Object.defineProperty(promise, prop, {\n                        value,\n                        writable: true,\n                        enumerable: true\n                    });\n                },\n                enumerable: true,\n                configurable: true\n            });\n        }\n    });\n    return promise;\n}\nfunction makeDynamicallyTrackedExoticSearchParamsWithDevWarnings(underlyingSearchParams, store) {\n    const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const proxiedProperties = new Set();\n    const unproxiedProperties = [];\n    // We have an unfortunate sequence of events that requires this initialization logic. We want to instrument the underlying\n    // searchParams object to detect if you are accessing values in dev. This is used for warnings and for things like the static prerender\n    // indicator. However when we pass this proxy to our Promise.resolve() below the VM checks if the resolved value is a promise by looking\n    // at the `.then` property. To our dynamic tracking logic this is indistinguishable from a `then` searchParam and so we would normally trigger\n    // dynamic tracking. However we know that this .then is not real dynamic access, it's just how thenables resolve in sequence. So we introduce\n    // this initialization concept so we omit the dynamic check until after we've constructed our resolved promise.\n    let promiseInitialized = false;\n    const proxiedUnderlying = new Proxy(underlyingSearchParams, {\n        get (target, prop, receiver) {\n            if (typeof prop === 'string' && promiseInitialized) {\n                if (store.dynamicShouldError) {\n                    const expression = describeStringPropertyAccess('searchParams', prop);\n                    throwWithStaticGenerationBailoutErrorWithDynamicError(store.route, expression);\n                }\n                const workUnitStore = workUnitAsyncStorage.getStore();\n                trackDynamicDataInDynamicRender(store, workUnitStore);\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        has (target, prop) {\n            if (typeof prop === 'string') {\n                if (store.dynamicShouldError) {\n                    const expression = describeHasCheckingStringProperty('searchParams', prop);\n                    throwWithStaticGenerationBailoutErrorWithDynamicError(store.route, expression);\n                }\n            }\n            return Reflect.has(target, prop);\n        },\n        ownKeys (target) {\n            if (store.dynamicShouldError) {\n                const expression = '`{...searchParams}`, `Object.keys(searchParams)`, or similar';\n                throwWithStaticGenerationBailoutErrorWithDynamicError(store.route, expression);\n            }\n            return Reflect.ownKeys(target);\n        }\n    });\n    // We don't use makeResolvedReactPromise here because searchParams\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = new Promise((resolve)=>scheduleImmediate(()=>resolve(underlyingSearchParams)));\n    promise.then(()=>{\n        promiseInitialized = true;\n    });\n    Object.keys(underlyingSearchParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n            // These properties cannot be shadowed because they need to be the\n            // true underlying value for Promises to work correctly at runtime\n            unproxiedProperties.push(prop);\n        } else {\n            proxiedProperties.add(prop);\n            Object.defineProperty(promise, prop, {\n                get () {\n                    return proxiedUnderlying[prop];\n                },\n                set (newValue) {\n                    Object.defineProperty(promise, prop, {\n                        value: newValue,\n                        writable: true,\n                        enumerable: true\n                    });\n                },\n                enumerable: true,\n                configurable: true\n            });\n        }\n    });\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (prop === 'then' && store.dynamicShouldError) {\n                const expression = '`searchParams.then`';\n                throwWithStaticGenerationBailoutErrorWithDynamicError(store.route, expression);\n            }\n            if (typeof prop === 'string') {\n                if (!wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor\n                // the underlying searchParams.\n                Reflect.has(target, prop) === false)) {\n                    const expression = describeStringPropertyAccess('searchParams', prop);\n                    syncIODev(store.route, expression);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        set (target, prop, value, receiver) {\n            if (typeof prop === 'string') {\n                proxiedProperties.delete(prop);\n            }\n            return Reflect.set(target, prop, value, receiver);\n        },\n        has (target, prop) {\n            if (typeof prop === 'string') {\n                if (!wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor\n                // the underlying searchParams.\n                Reflect.has(target, prop) === false)) {\n                    const expression = describeHasCheckingStringProperty('searchParams', prop);\n                    syncIODev(store.route, expression);\n                }\n            }\n            return Reflect.has(target, prop);\n        },\n        ownKeys (target) {\n            const expression = '`Object.keys(searchParams)` or similar';\n            syncIODev(store.route, expression, unproxiedProperties);\n            return Reflect.ownKeys(target);\n        }\n    });\n    CachedSearchParams.set(underlyingSearchParams, proxiedPromise);\n    return proxiedPromise;\n}\nfunction syncIODev(route, expression, missingProperties) {\n    // In all cases we warn normally\n    if (missingProperties && missingProperties.length > 0) {\n        warnForIncompleteEnumeration(route, expression, missingProperties);\n    } else {\n        warnForSyncAccess(route, expression);\n    }\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore && workUnitStore.type === 'request' && workUnitStore.prerenderPhase === true) {\n        // When we're rendering dynamically in dev we need to advance out of the\n        // Prerender environment when we read Request data synchronously\n        const requestStore = workUnitStore;\n        trackSynchronousRequestDataAccessInDev(requestStore);\n    }\n}\nconst warnForSyncAccess = createDedupedByCallsiteServerErrorLoggerDev(createSearchAccessError);\nconst warnForIncompleteEnumeration = createDedupedByCallsiteServerErrorLoggerDev(createIncompleteEnumerationError);\nfunction createSearchAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`searchParams\\` should be awaited before using its properties. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E249\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction createIncompleteEnumerationError(route, expression, missingProperties) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`searchParams\\` should be awaited before using its properties. ` + `The following properties were not available through enumeration ` + `because they conflict with builtin or well-known property names: ` + `${describeListOfPropertyNames(missingProperties)}. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E2\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction describeListOfPropertyNames(properties) {\n    switch(properties.length){\n        case 0:\n            throw Object.defineProperty(new InvariantError('Expected describeListOfPropertyNames to be called with a non-empty list of strings.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E531\",\n                enumerable: false,\n                configurable: true\n            });\n        case 1:\n            return `\\`${properties[0]}\\``;\n        case 2:\n            return `\\`${properties[0]}\\` and \\`${properties[1]}\\``;\n        default:\n            {\n                let description = '';\n                for(let i = 0; i < properties.length - 1; i++){\n                    description += `\\`${properties[i]}\\`, `;\n                }\n                description += `, and \\`${properties[properties.length - 1]}\\``;\n                return description;\n            }\n    }\n}\n\n//# sourceMappingURL=search-params.js.map","import { ReflectAdapter } from '../web/spec-extension/adapters/reflect';\nimport { abortAndThrowOnSynchronousRequestDataAccess, throwToInterruptStaticGeneration, postponeWithTracking, trackSynchronousRequestDataAccessInDev } from '../app-render/dynamic-rendering';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { describeStringPropertyAccess, wellKnownProperties } from '../../shared/lib/utils/reflect-utils';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger';\nimport { scheduleImmediate } from '../../lib/scheduler';\nexport function createParamsFromClient(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderParams(underlyingParams, workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderParams(underlyingParams, workStore);\n}\nexport const createServerParamsForMetadata = createServerParamsForServerSegment;\n// routes always runs in RSC context so it is equivalent to a Server Page Component\nexport function createServerParamsForRoute(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderParams(underlyingParams, workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderParams(underlyingParams, workStore);\n}\nexport function createServerParamsForServerSegment(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderParams(underlyingParams, workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderParams(underlyingParams, workStore);\n}\nexport function createPrerenderParamsForClientSegment(underlyingParams, workStore) {\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    if (prerenderStore && prerenderStore.type === 'prerender') {\n        const fallbackParams = workStore.fallbackRouteParams;\n        if (fallbackParams) {\n            for(let key in underlyingParams){\n                if (fallbackParams.has(key)) {\n                    // This params object has one of more fallback params so we need to consider\n                    // the awaiting of this params object \"dynamic\". Since we are in dynamicIO mode\n                    // we encode this as a promise that never resolves\n                    return makeHangingPromise(prerenderStore.renderSignal, '`params`');\n                }\n            }\n        }\n    }\n    // We're prerendering in a mode that does not abort. We resolve the promise without\n    // any tracking because we're just transporting a value from server to client where the tracking\n    // will be applied.\n    return Promise.resolve(underlyingParams);\n}\nfunction createPrerenderParams(underlyingParams, workStore, prerenderStore) {\n    const fallbackParams = workStore.fallbackRouteParams;\n    if (fallbackParams) {\n        let hasSomeFallbackParams = false;\n        for(const key in underlyingParams){\n            if (fallbackParams.has(key)) {\n                hasSomeFallbackParams = true;\n                break;\n            }\n        }\n        if (hasSomeFallbackParams) {\n            // params need to be treated as dynamic because we have at least one fallback param\n            if (prerenderStore.type === 'prerender') {\n                // We are in a dynamicIO (PPR or otherwise) prerender\n                return makeAbortingExoticParams(underlyingParams, workStore.route, prerenderStore);\n            }\n            // remaining cases are prerender-ppr and prerender-legacy\n            // We aren't in a dynamicIO prerender but we do have fallback params at this\n            // level so we need to make an erroring exotic params object which will postpone\n            // if you access the fallback params\n            return makeErroringExoticParams(underlyingParams, fallbackParams, workStore, prerenderStore);\n        }\n    }\n    // We don't have any fallback params so we have an entirely static safe params object\n    return makeUntrackedExoticParams(underlyingParams);\n}\nfunction createRenderParams(underlyingParams, workStore) {\n    if (process.env.NODE_ENV === 'development' && !workStore.isPrefetchRequest) {\n        return makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams, workStore);\n    } else {\n        return makeUntrackedExoticParams(underlyingParams);\n    }\n}\nconst CachedParams = new WeakMap();\nfunction makeAbortingExoticParams(underlyingParams, route, prerenderStore) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const promise = makeHangingPromise(prerenderStore.renderSignal, '`params`');\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            Object.defineProperty(promise, prop, {\n                get () {\n                    const expression = describeStringPropertyAccess('params', prop);\n                    const error = createParamsAccessError(route, expression);\n                    abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n                },\n                set (newValue) {\n                    Object.defineProperty(promise, prop, {\n                        value: newValue,\n                        writable: true,\n                        enumerable: true\n                    });\n                },\n                enumerable: true,\n                configurable: true\n            });\n        }\n    });\n    return promise;\n}\nfunction makeErroringExoticParams(underlyingParams, fallbackParams, workStore, prerenderStore) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const augmentedUnderlying = {\n        ...underlyingParams\n    };\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(augmentedUnderlying);\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            if (fallbackParams.has(prop)) {\n                Object.defineProperty(augmentedUnderlying, prop, {\n                    get () {\n                        const expression = describeStringPropertyAccess('params', prop);\n                        // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n                        // for params is only dynamic when we're generating a fallback shell\n                        // and even when `dynamic = \"error\"` we still support generating dynamic\n                        // fallback shells\n                        // TODO remove this comment when dynamicIO is the default since there\n                        // will be no `dynamic = \"error\"`\n                        if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no dynamicIO)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                    },\n                    enumerable: true\n                });\n                Object.defineProperty(promise, prop, {\n                    get () {\n                        const expression = describeStringPropertyAccess('params', prop);\n                        // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n                        // for params is only dynamic when we're generating a fallback shell\n                        // and even when `dynamic = \"error\"` we still support generating dynamic\n                        // fallback shells\n                        // TODO remove this comment when dynamicIO is the default since there\n                        // will be no `dynamic = \"error\"`\n                        if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no dynamicIO)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                    },\n                    set (newValue) {\n                        Object.defineProperty(promise, prop, {\n                            value: newValue,\n                            writable: true,\n                            enumerable: true\n                        });\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n            } else {\n                ;\n                promise[prop] = underlyingParams[prop];\n            }\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedExoticParams(underlyingParams) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(underlyingParams);\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            ;\n            promise[prop] = underlyingParams[prop];\n        }\n    });\n    return promise;\n}\nfunction makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams, store) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = new Promise((resolve)=>scheduleImmediate(()=>resolve(underlyingParams)));\n    const proxiedProperties = new Set();\n    const unproxiedProperties = [];\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n            // These properties cannot be shadowed because they need to be the\n            // true underlying value for Promises to work correctly at runtime\n            unproxiedProperties.push(prop);\n        } else {\n            proxiedProperties.add(prop);\n            promise[prop] = underlyingParams[prop];\n        }\n    });\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (typeof prop === 'string') {\n                if (// We are accessing a property that was proxied to the promise instance\n                proxiedProperties.has(prop)) {\n                    const expression = describeStringPropertyAccess('params', prop);\n                    syncIODev(store.route, expression);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        set (target, prop, value, receiver) {\n            if (typeof prop === 'string') {\n                proxiedProperties.delete(prop);\n            }\n            return ReflectAdapter.set(target, prop, value, receiver);\n        },\n        ownKeys (target) {\n            const expression = '`...params` or similar expression';\n            syncIODev(store.route, expression, unproxiedProperties);\n            return Reflect.ownKeys(target);\n        }\n    });\n    CachedParams.set(underlyingParams, proxiedPromise);\n    return proxiedPromise;\n}\nfunction syncIODev(route, expression, missingProperties) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore && workUnitStore.type === 'request' && workUnitStore.prerenderPhase === true) {\n        // When we're rendering dynamically in dev we need to advance out of the\n        // Prerender environment when we read Request data synchronously\n        const requestStore = workUnitStore;\n        trackSynchronousRequestDataAccessInDev(requestStore);\n    }\n    // In all cases we warn normally\n    if (missingProperties && missingProperties.length > 0) {\n        warnForIncompleteEnumeration(route, expression, missingProperties);\n    } else {\n        warnForSyncAccess(route, expression);\n    }\n}\nconst warnForSyncAccess = createDedupedByCallsiteServerErrorLoggerDev(createParamsAccessError);\nconst warnForIncompleteEnumeration = createDedupedByCallsiteServerErrorLoggerDev(createIncompleteEnumerationError);\nfunction createParamsAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`params\\` should be awaited before using its properties. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E307\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction createIncompleteEnumerationError(route, expression, missingProperties) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`params\\` should be awaited before using its properties. ` + `The following properties were not available through enumeration ` + `because they conflict with builtin property names: ` + `${describeListOfPropertyNames(missingProperties)}. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E482\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction describeListOfPropertyNames(properties) {\n    switch(properties.length){\n        case 0:\n            throw Object.defineProperty(new InvariantError('Expected describeListOfPropertyNames to be called with a non-empty list of strings.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E531\",\n                enumerable: false,\n                configurable: true\n            });\n        case 1:\n            return `\\`${properties[0]}\\``;\n        case 2:\n            return `\\`${properties[0]}\\` and \\`${properties[1]}\\``;\n        default:\n            {\n                let description = '';\n                for(let i = 0; i < properties.length - 1; i++){\n                    description += `\\`${properties[i]}\\`, `;\n                }\n                description += `, and \\`${properties[properties.length - 1]}\\``;\n                return description;\n            }\n    }\n}\n\n//# sourceMappingURL=params.js.map","export function nonNullable(value) {\n    return value !== null && value !== undefined;\n}\n\n//# sourceMappingURL=non-nullable.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { nonNullable } from '../../non-nullable';\nexport function Meta({ name, property, content, media }) {\n    if (typeof content !== 'undefined' && content !== null && content !== '') {\n        return /*#__PURE__*/ _jsx(\"meta\", {\n            ...name ? {\n                name\n            } : {\n                property\n            },\n            ...media ? {\n                media\n            } : undefined,\n            content: typeof content === 'string' ? content : content.toString()\n        });\n    }\n    return null;\n}\nexport function MetaFilter(items) {\n    const acc = [];\n    for (const item of items){\n        if (Array.isArray(item)) {\n            acc.push(...item.filter(nonNullable));\n        } else if (nonNullable(item)) {\n            acc.push(item);\n        }\n    }\n    return acc;\n}\nfunction camelToSnake(camelCaseStr) {\n    return camelCaseStr.replace(/([A-Z])/g, function(match) {\n        return '_' + match.toLowerCase();\n    });\n}\nconst aliasPropPrefixes = new Set([\n    'og:image',\n    'twitter:image',\n    'og:video',\n    'og:audio'\n]);\nfunction getMetaKey(prefix, key) {\n    // Use `twitter:image` and `og:image` instead of `twitter:image:url` and `og:image:url`\n    // to be more compatible as it's a more common format.\n    // `og:video` & `og:audio` do not have a `:url` suffix alias\n    if (aliasPropPrefixes.has(prefix) && key === 'url') {\n        return prefix;\n    }\n    if (prefix.startsWith('og:') || prefix.startsWith('twitter:')) {\n        key = camelToSnake(key);\n    }\n    return prefix + ':' + key;\n}\nfunction ExtendMeta({ content, namePrefix, propertyPrefix }) {\n    if (!content) return null;\n    return MetaFilter(Object.entries(content).map(([k, v])=>{\n        return typeof v === 'undefined' ? null : Meta({\n            ...propertyPrefix && {\n                property: getMetaKey(propertyPrefix, k)\n            },\n            ...namePrefix && {\n                name: getMetaKey(namePrefix, k)\n            },\n            content: typeof v === 'string' ? v : v == null ? void 0 : v.toString()\n        });\n    }));\n}\nexport function MultiMeta({ propertyPrefix, namePrefix, contents }) {\n    if (typeof contents === 'undefined' || contents === null) {\n        return null;\n    }\n    return MetaFilter(contents.map((content)=>{\n        if (typeof content === 'string' || typeof content === 'number' || content instanceof URL) {\n            return Meta({\n                ...propertyPrefix ? {\n                    property: propertyPrefix\n                } : {\n                    name: namePrefix\n                },\n                content\n            });\n        } else {\n            return ExtendMeta({\n                namePrefix,\n                propertyPrefix,\n                content\n            });\n        }\n    }));\n}\n\n//# sourceMappingURL=meta.js.map","export const ViewportMetaKeys = {\n    width: 'width',\n    height: 'height',\n    initialScale: 'initial-scale',\n    minimumScale: 'minimum-scale',\n    maximumScale: 'maximum-scale',\n    viewportFit: 'viewport-fit',\n    userScalable: 'user-scalable',\n    interactiveWidget: 'interactive-widget'\n};\nexport const IconKeys = [\n    'icon',\n    'shortcut',\n    'apple',\n    'other'\n];\n\n//# sourceMappingURL=constants.js.map","function resolveArray(value) {\n    if (Array.isArray(value)) {\n        return value;\n    }\n    return [\n        value\n    ];\n}\nfunction resolveAsArrayOrUndefined(value) {\n    if (typeof value === 'undefined' || value === null) {\n        return undefined;\n    }\n    return resolveArray(value);\n}\nfunction getOrigin(url) {\n    let origin = undefined;\n    if (typeof url === 'string') {\n        try {\n            url = new URL(url);\n            origin = url.origin;\n        } catch  {}\n    }\n    return origin;\n}\nexport { resolveAsArrayOrUndefined, resolveArray, getOrigin };\n\n//# sourceMappingURL=utils.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Meta, MetaFilter, MultiMeta } from './meta';\nimport { ViewportMetaKeys } from '../constants';\nimport { getOrigin } from './utils';\n// convert viewport object to string for viewport meta tag\nfunction resolveViewportLayout(viewport) {\n    let resolved = null;\n    if (viewport && typeof viewport === 'object') {\n        resolved = '';\n        for(const viewportKey_ in ViewportMetaKeys){\n            const viewportKey = viewportKey_;\n            if (viewportKey in viewport) {\n                let value = viewport[viewportKey];\n                if (typeof value === 'boolean') {\n                    value = value ? 'yes' : 'no';\n                } else if (!value && viewportKey === 'initialScale') {\n                    value = undefined;\n                }\n                if (value) {\n                    if (resolved) resolved += ', ';\n                    resolved += `${ViewportMetaKeys[viewportKey]}=${value}`;\n                }\n            }\n        }\n    }\n    return resolved;\n}\nexport function ViewportMeta({ viewport }) {\n    return MetaFilter([\n        /*#__PURE__*/ _jsx(\"meta\", {\n            charSet: \"utf-8\"\n        }),\n        Meta({\n            name: 'viewport',\n            content: resolveViewportLayout(viewport)\n        }),\n        ...viewport.themeColor ? viewport.themeColor.map((themeColor)=>Meta({\n                name: 'theme-color',\n                content: themeColor.color,\n                media: themeColor.media\n            })) : [],\n        Meta({\n            name: 'color-scheme',\n            content: viewport.colorScheme\n        })\n    ]);\n}\nexport function BasicMeta({ metadata }) {\n    var _metadata_keywords, _metadata_robots, _metadata_robots1;\n    const manifestOrigin = metadata.manifest ? getOrigin(metadata.manifest) : undefined;\n    return MetaFilter([\n        metadata.title !== null && metadata.title.absolute ? /*#__PURE__*/ _jsx(\"title\", {\n            children: metadata.title.absolute\n        }) : null,\n        Meta({\n            name: 'description',\n            content: metadata.description\n        }),\n        Meta({\n            name: 'application-name',\n            content: metadata.applicationName\n        }),\n        ...metadata.authors ? metadata.authors.map((author)=>[\n                author.url ? /*#__PURE__*/ _jsx(\"link\", {\n                    rel: \"author\",\n                    href: author.url.toString()\n                }) : null,\n                Meta({\n                    name: 'author',\n                    content: author.name\n                })\n            ]) : [],\n        metadata.manifest ? /*#__PURE__*/ _jsx(\"link\", {\n            rel: \"manifest\",\n            href: metadata.manifest.toString(),\n            // If it's same origin, and it's a preview deployment,\n            // including credentials for manifest request.\n            crossOrigin: !manifestOrigin && process.env.VERCEL_ENV === 'preview' ? 'use-credentials' : undefined\n        }) : null,\n        Meta({\n            name: 'generator',\n            content: metadata.generator\n        }),\n        Meta({\n            name: 'keywords',\n            content: (_metadata_keywords = metadata.keywords) == null ? void 0 : _metadata_keywords.join(',')\n        }),\n        Meta({\n            name: 'referrer',\n            content: metadata.referrer\n        }),\n        Meta({\n            name: 'creator',\n            content: metadata.creator\n        }),\n        Meta({\n            name: 'publisher',\n            content: metadata.publisher\n        }),\n        Meta({\n            name: 'robots',\n            content: (_metadata_robots = metadata.robots) == null ? void 0 : _metadata_robots.basic\n        }),\n        Meta({\n            name: 'googlebot',\n            content: (_metadata_robots1 = metadata.robots) == null ? void 0 : _metadata_robots1.googleBot\n        }),\n        Meta({\n            name: 'abstract',\n            content: metadata.abstract\n        }),\n        ...metadata.archives ? metadata.archives.map((archive)=>/*#__PURE__*/ _jsx(\"link\", {\n                rel: \"archives\",\n                href: archive\n            })) : [],\n        ...metadata.assets ? metadata.assets.map((asset)=>/*#__PURE__*/ _jsx(\"link\", {\n                rel: \"assets\",\n                href: asset\n            })) : [],\n        ...metadata.bookmarks ? metadata.bookmarks.map((bookmark)=>/*#__PURE__*/ _jsx(\"link\", {\n                rel: \"bookmarks\",\n                href: bookmark\n            })) : [],\n        ...metadata.pagination ? [\n            metadata.pagination.previous ? /*#__PURE__*/ _jsx(\"link\", {\n                rel: \"prev\",\n                href: metadata.pagination.previous\n            }) : null,\n            metadata.pagination.next ? /*#__PURE__*/ _jsx(\"link\", {\n                rel: \"next\",\n                href: metadata.pagination.next\n            }) : null\n        ] : [],\n        Meta({\n            name: 'category',\n            content: metadata.category\n        }),\n        Meta({\n            name: 'classification',\n            content: metadata.classification\n        }),\n        ...metadata.other ? Object.entries(metadata.other).map(([name, content])=>{\n            if (Array.isArray(content)) {\n                return content.map((contentItem)=>Meta({\n                        name,\n                        content: contentItem\n                    }));\n            } else {\n                return Meta({\n                    name,\n                    content\n                });\n            }\n        }) : []\n    ]);\n}\nexport function ItunesMeta({ itunes }) {\n    if (!itunes) return null;\n    const { appId, appArgument } = itunes;\n    let content = `app-id=${appId}`;\n    if (appArgument) {\n        content += `, app-argument=${appArgument}`;\n    }\n    return /*#__PURE__*/ _jsx(\"meta\", {\n        name: \"apple-itunes-app\",\n        content: content\n    });\n}\nexport function FacebookMeta({ facebook }) {\n    if (!facebook) return null;\n    const { appId, admins } = facebook;\n    return MetaFilter([\n        appId ? /*#__PURE__*/ _jsx(\"meta\", {\n            property: \"fb:app_id\",\n            content: appId\n        }) : null,\n        ...admins ? admins.map((admin)=>/*#__PURE__*/ _jsx(\"meta\", {\n                property: \"fb:admins\",\n                content: admin\n            })) : []\n    ]);\n}\nexport function PinterestMeta({ pinterest }) {\n    if (!pinterest || !pinterest.richPin) return null;\n    const { richPin } = pinterest;\n    return /*#__PURE__*/ _jsx(\"meta\", {\n        property: \"pinterest-rich-pin\",\n        content: richPin.toString()\n    });\n}\nconst formatDetectionKeys = [\n    'telephone',\n    'date',\n    'address',\n    'email',\n    'url'\n];\nexport function FormatDetectionMeta({ formatDetection }) {\n    if (!formatDetection) return null;\n    let content = '';\n    for (const key of formatDetectionKeys){\n        if (key in formatDetection) {\n            if (content) content += ', ';\n            content += `${key}=no`;\n        }\n    }\n    return /*#__PURE__*/ _jsx(\"meta\", {\n        name: \"format-detection\",\n        content: content\n    });\n}\nexport function AppleWebAppMeta({ appleWebApp }) {\n    if (!appleWebApp) return null;\n    const { capable, title, startupImage, statusBarStyle } = appleWebApp;\n    return MetaFilter([\n        capable ? Meta({\n            name: 'mobile-web-app-capable',\n            content: 'yes'\n        }) : null,\n        Meta({\n            name: 'apple-mobile-web-app-title',\n            content: title\n        }),\n        startupImage ? startupImage.map((image)=>/*#__PURE__*/ _jsx(\"link\", {\n                href: image.url,\n                media: image.media,\n                rel: \"apple-touch-startup-image\"\n            })) : null,\n        statusBarStyle ? Meta({\n            name: 'apple-mobile-web-app-status-bar-style',\n            content: statusBarStyle\n        }) : null\n    ]);\n}\nexport function VerificationMeta({ verification }) {\n    if (!verification) return null;\n    return MetaFilter([\n        MultiMeta({\n            namePrefix: 'google-site-verification',\n            contents: verification.google\n        }),\n        MultiMeta({\n            namePrefix: 'y_key',\n            contents: verification.yahoo\n        }),\n        MultiMeta({\n            namePrefix: 'yandex-verification',\n            contents: verification.yandex\n        }),\n        MultiMeta({\n            namePrefix: 'me',\n            contents: verification.me\n        }),\n        ...verification.other ? Object.entries(verification.other).map(([key, value])=>MultiMeta({\n                namePrefix: key,\n                contents: value\n            })) : []\n    ]);\n}\n\n//# sourceMappingURL=basic.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { MetaFilter } from './meta';\nfunction AlternateLink({ descriptor, ...props }) {\n    if (!descriptor.url) return null;\n    return /*#__PURE__*/ _jsx(\"link\", {\n        ...props,\n        ...descriptor.title && {\n            title: descriptor.title\n        },\n        href: descriptor.url.toString()\n    });\n}\nexport function AlternatesMetadata({ alternates }) {\n    if (!alternates) return null;\n    const { canonical, languages, media, types } = alternates;\n    return MetaFilter([\n        canonical ? AlternateLink({\n            rel: 'canonical',\n            descriptor: canonical\n        }) : null,\n        languages ? Object.entries(languages).flatMap(([locale, descriptors])=>descriptors == null ? void 0 : descriptors.map((descriptor)=>AlternateLink({\n                    rel: 'alternate',\n                    hrefLang: locale,\n                    descriptor\n                }))) : null,\n        media ? Object.entries(media).flatMap(([mediaName, descriptors])=>descriptors == null ? void 0 : descriptors.map((descriptor)=>AlternateLink({\n                    rel: 'alternate',\n                    media: mediaName,\n                    descriptor\n                }))) : null,\n        types ? Object.entries(types).flatMap(([type, descriptors])=>descriptors == null ? void 0 : descriptors.map((descriptor)=>AlternateLink({\n                    rel: 'alternate',\n                    type,\n                    descriptor\n                }))) : null\n    ]);\n}\n\n//# sourceMappingURL=alternate.js.map","import { Meta, MetaFilter, MultiMeta } from './meta';\nexport function OpenGraphMetadata({ openGraph }) {\n    var _openGraph_title, _openGraph_url, _openGraph_ttl;\n    if (!openGraph) {\n        return null;\n    }\n    let typedOpenGraph;\n    if ('type' in openGraph) {\n        const openGraphType = openGraph.type;\n        switch(openGraphType){\n            case 'website':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'website'\n                    })\n                ];\n                break;\n            case 'article':\n                var _openGraph_publishedTime, _openGraph_modifiedTime, _openGraph_expirationTime;\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'article'\n                    }),\n                    Meta({\n                        property: 'article:published_time',\n                        content: (_openGraph_publishedTime = openGraph.publishedTime) == null ? void 0 : _openGraph_publishedTime.toString()\n                    }),\n                    Meta({\n                        property: 'article:modified_time',\n                        content: (_openGraph_modifiedTime = openGraph.modifiedTime) == null ? void 0 : _openGraph_modifiedTime.toString()\n                    }),\n                    Meta({\n                        property: 'article:expiration_time',\n                        content: (_openGraph_expirationTime = openGraph.expirationTime) == null ? void 0 : _openGraph_expirationTime.toString()\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'article:author',\n                        contents: openGraph.authors\n                    }),\n                    Meta({\n                        property: 'article:section',\n                        content: openGraph.section\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'article:tag',\n                        contents: openGraph.tags\n                    })\n                ];\n                break;\n            case 'book':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'book'\n                    }),\n                    Meta({\n                        property: 'book:isbn',\n                        content: openGraph.isbn\n                    }),\n                    Meta({\n                        property: 'book:release_date',\n                        content: openGraph.releaseDate\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'book:author',\n                        contents: openGraph.authors\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'book:tag',\n                        contents: openGraph.tags\n                    })\n                ];\n                break;\n            case 'profile':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'profile'\n                    }),\n                    Meta({\n                        property: 'profile:first_name',\n                        content: openGraph.firstName\n                    }),\n                    Meta({\n                        property: 'profile:last_name',\n                        content: openGraph.lastName\n                    }),\n                    Meta({\n                        property: 'profile:username',\n                        content: openGraph.username\n                    }),\n                    Meta({\n                        property: 'profile:gender',\n                        content: openGraph.gender\n                    })\n                ];\n                break;\n            case 'music.song':\n                var _openGraph_duration;\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'music.song'\n                    }),\n                    Meta({\n                        property: 'music:duration',\n                        content: (_openGraph_duration = openGraph.duration) == null ? void 0 : _openGraph_duration.toString()\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:album',\n                        contents: openGraph.albums\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:musician',\n                        contents: openGraph.musicians\n                    })\n                ];\n                break;\n            case 'music.album':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'music.album'\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:song',\n                        contents: openGraph.songs\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:musician',\n                        contents: openGraph.musicians\n                    }),\n                    Meta({\n                        property: 'music:release_date',\n                        content: openGraph.releaseDate\n                    })\n                ];\n                break;\n            case 'music.playlist':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'music.playlist'\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:song',\n                        contents: openGraph.songs\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:creator',\n                        contents: openGraph.creators\n                    })\n                ];\n                break;\n            case 'music.radio_station':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'music.radio_station'\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:creator',\n                        contents: openGraph.creators\n                    })\n                ];\n                break;\n            case 'video.movie':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'video.movie'\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:actor',\n                        contents: openGraph.actors\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:director',\n                        contents: openGraph.directors\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:writer',\n                        contents: openGraph.writers\n                    }),\n                    Meta({\n                        property: 'video:duration',\n                        content: openGraph.duration\n                    }),\n                    Meta({\n                        property: 'video:release_date',\n                        content: openGraph.releaseDate\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:tag',\n                        contents: openGraph.tags\n                    })\n                ];\n                break;\n            case 'video.episode':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'video.episode'\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:actor',\n                        contents: openGraph.actors\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:director',\n                        contents: openGraph.directors\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:writer',\n                        contents: openGraph.writers\n                    }),\n                    Meta({\n                        property: 'video:duration',\n                        content: openGraph.duration\n                    }),\n                    Meta({\n                        property: 'video:release_date',\n                        content: openGraph.releaseDate\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:tag',\n                        contents: openGraph.tags\n                    }),\n                    Meta({\n                        property: 'video:series',\n                        content: openGraph.series\n                    })\n                ];\n                break;\n            case 'video.tv_show':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'video.tv_show'\n                    })\n                ];\n                break;\n            case 'video.other':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'video.other'\n                    })\n                ];\n                break;\n            default:\n                const _exhaustiveCheck = openGraphType;\n                throw Object.defineProperty(new Error(`Invalid OpenGraph type: ${_exhaustiveCheck}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E237\",\n                    enumerable: false,\n                    configurable: true\n                });\n        }\n    }\n    return MetaFilter([\n        Meta({\n            property: 'og:determiner',\n            content: openGraph.determiner\n        }),\n        Meta({\n            property: 'og:title',\n            content: (_openGraph_title = openGraph.title) == null ? void 0 : _openGraph_title.absolute\n        }),\n        Meta({\n            property: 'og:description',\n            content: openGraph.description\n        }),\n        Meta({\n            property: 'og:url',\n            content: (_openGraph_url = openGraph.url) == null ? void 0 : _openGraph_url.toString()\n        }),\n        Meta({\n            property: 'og:site_name',\n            content: openGraph.siteName\n        }),\n        Meta({\n            property: 'og:locale',\n            content: openGraph.locale\n        }),\n        Meta({\n            property: 'og:country_name',\n            content: openGraph.countryName\n        }),\n        Meta({\n            property: 'og:ttl',\n            content: (_openGraph_ttl = openGraph.ttl) == null ? void 0 : _openGraph_ttl.toString()\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:image',\n            contents: openGraph.images\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:video',\n            contents: openGraph.videos\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:audio',\n            contents: openGraph.audio\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:email',\n            contents: openGraph.emails\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:phone_number',\n            contents: openGraph.phoneNumbers\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:fax_number',\n            contents: openGraph.faxNumbers\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:locale:alternate',\n            contents: openGraph.alternateLocale\n        }),\n        ...typedOpenGraph ? typedOpenGraph : []\n    ]);\n}\nfunction TwitterAppItem({ app, type }) {\n    var _app_url_type, _app_url;\n    return [\n        Meta({\n            name: `twitter:app:name:${type}`,\n            content: app.name\n        }),\n        Meta({\n            name: `twitter:app:id:${type}`,\n            content: app.id[type]\n        }),\n        Meta({\n            name: `twitter:app:url:${type}`,\n            content: (_app_url = app.url) == null ? void 0 : (_app_url_type = _app_url[type]) == null ? void 0 : _app_url_type.toString()\n        })\n    ];\n}\nexport function TwitterMetadata({ twitter }) {\n    var _twitter_title;\n    if (!twitter) return null;\n    const { card } = twitter;\n    return MetaFilter([\n        Meta({\n            name: 'twitter:card',\n            content: card\n        }),\n        Meta({\n            name: 'twitter:site',\n            content: twitter.site\n        }),\n        Meta({\n            name: 'twitter:site:id',\n            content: twitter.siteId\n        }),\n        Meta({\n            name: 'twitter:creator',\n            content: twitter.creator\n        }),\n        Meta({\n            name: 'twitter:creator:id',\n            content: twitter.creatorId\n        }),\n        Meta({\n            name: 'twitter:title',\n            content: (_twitter_title = twitter.title) == null ? void 0 : _twitter_title.absolute\n        }),\n        Meta({\n            name: 'twitter:description',\n            content: twitter.description\n        }),\n        MultiMeta({\n            namePrefix: 'twitter:image',\n            contents: twitter.images\n        }),\n        ...card === 'player' ? twitter.players.flatMap((player)=>[\n                Meta({\n                    name: 'twitter:player',\n                    content: player.playerUrl.toString()\n                }),\n                Meta({\n                    name: 'twitter:player:stream',\n                    content: player.streamUrl.toString()\n                }),\n                Meta({\n                    name: 'twitter:player:width',\n                    content: player.width\n                }),\n                Meta({\n                    name: 'twitter:player:height',\n                    content: player.height\n                })\n            ]) : [],\n        ...card === 'app' ? [\n            TwitterAppItem({\n                app: twitter.app,\n                type: 'iphone'\n            }),\n            TwitterAppItem({\n                app: twitter.app,\n                type: 'ipad'\n            }),\n            TwitterAppItem({\n                app: twitter.app,\n                type: 'googleplay'\n            })\n        ] : []\n    ]);\n}\nexport function AppLinksMeta({ appLinks }) {\n    if (!appLinks) return null;\n    return MetaFilter([\n        MultiMeta({\n            propertyPrefix: 'al:ios',\n            contents: appLinks.ios\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:iphone',\n            contents: appLinks.iphone\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:ipad',\n            contents: appLinks.ipad\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:android',\n            contents: appLinks.android\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:windows_phone',\n            contents: appLinks.windows_phone\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:windows',\n            contents: appLinks.windows\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:windows_universal',\n            contents: appLinks.windows_universal\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:web',\n            contents: appLinks.web\n        })\n    ]);\n}\n\n//# sourceMappingURL=opengraph.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { MetaFilter } from './meta';\nfunction IconDescriptorLink({ icon }) {\n    const { url, rel = 'icon', ...props } = icon;\n    return /*#__PURE__*/ _jsx(\"link\", {\n        rel: rel,\n        href: url.toString(),\n        ...props\n    });\n}\nfunction IconLink({ rel, icon }) {\n    if (typeof icon === 'object' && !(icon instanceof URL)) {\n        if (!icon.rel && rel) icon.rel = rel;\n        return IconDescriptorLink({\n            icon\n        });\n    } else {\n        const href = icon.toString();\n        return /*#__PURE__*/ _jsx(\"link\", {\n            rel: rel,\n            href: href\n        });\n    }\n}\nexport function IconsMetadata({ icons }) {\n    if (!icons) return null;\n    const shortcutList = icons.shortcut;\n    const iconList = icons.icon;\n    const appleList = icons.apple;\n    const otherList = icons.other;\n    return MetaFilter([\n        shortcutList ? shortcutList.map((icon)=>IconLink({\n                rel: 'shortcut icon',\n                icon\n            })) : null,\n        iconList ? iconList.map((icon)=>IconLink({\n                rel: 'icon',\n                icon\n            })) : null,\n        appleList ? appleList.map((icon)=>IconLink({\n                rel: 'apple-touch-icon',\n                icon\n            })) : null,\n        otherList ? otherList.map((icon)=>IconDescriptorLink({\n                icon\n            })) : null\n    ]);\n}\n\n//# sourceMappingURL=icons.js.map","export function createDefaultViewport() {\n    return {\n        // name=viewport\n        width: 'device-width',\n        initialScale: 1,\n        // visual metadata\n        themeColor: null,\n        colorScheme: null\n    };\n}\nexport function createDefaultMetadata() {\n    return {\n        // Deprecated ones\n        viewport: null,\n        themeColor: null,\n        colorScheme: null,\n        metadataBase: null,\n        // Other values are all null\n        title: null,\n        description: null,\n        applicationName: null,\n        authors: null,\n        generator: null,\n        keywords: null,\n        referrer: null,\n        creator: null,\n        publisher: null,\n        robots: null,\n        manifest: null,\n        alternates: {\n            canonical: null,\n            languages: null,\n            media: null,\n            types: null\n        },\n        icons: null,\n        openGraph: null,\n        twitter: null,\n        verification: {},\n        appleWebApp: null,\n        formatDetection: null,\n        itunes: null,\n        facebook: null,\n        pinterest: null,\n        abstract: null,\n        appLinks: null,\n        archives: null,\n        assets: null,\n        bookmarks: null,\n        category: null,\n        classification: null,\n        pagination: {\n            previous: null,\n            next: null\n        },\n        other: {}\n    };\n}\n\n//# sourceMappingURL=default-metadata.js.map","import path from '../../../shared/lib/isomorphic/path';\nfunction isStringOrURL(icon) {\n    return typeof icon === 'string' || icon instanceof URL;\n}\nfunction createLocalMetadataBase() {\n    return new URL(`http://localhost:${process.env.PORT || 3000}`);\n}\nfunction getPreviewDeploymentUrl() {\n    const origin = process.env.VERCEL_BRANCH_URL || process.env.VERCEL_URL;\n    return origin ? new URL(`https://${origin}`) : undefined;\n}\nfunction getProductionDeploymentUrl() {\n    const origin = process.env.VERCEL_PROJECT_PRODUCTION_URL;\n    return origin ? new URL(`https://${origin}`) : undefined;\n}\n/**\n * Given an optional user-provided metadataBase, this determines what the metadataBase should\n * fallback to. Specifically:\n * - In dev, it should always be localhost\n * - In Vercel preview builds, it should be the preview build ID\n * - In start, it should be the user-provided metadataBase value. Otherwise,\n * it'll fall back to the Vercel production deployment, and localhost as a last resort.\n */ export function getSocialImageMetadataBaseFallback(metadataBase) {\n    const defaultMetadataBase = createLocalMetadataBase();\n    const previewDeploymentUrl = getPreviewDeploymentUrl();\n    const productionDeploymentUrl = getProductionDeploymentUrl();\n    let fallbackMetadataBase;\n    if (process.env.NODE_ENV === 'development') {\n        fallbackMetadataBase = defaultMetadataBase;\n    } else {\n        fallbackMetadataBase = process.env.NODE_ENV === 'production' && previewDeploymentUrl && process.env.VERCEL_ENV === 'preview' ? previewDeploymentUrl : metadataBase || productionDeploymentUrl || defaultMetadataBase;\n    }\n    return fallbackMetadataBase;\n}\nfunction resolveUrl(url, metadataBase) {\n    if (url instanceof URL) return url;\n    if (!url) return null;\n    try {\n        // If we can construct a URL instance from url, ignore metadataBase\n        const parsedUrl = new URL(url);\n        return parsedUrl;\n    } catch  {}\n    if (!metadataBase) {\n        metadataBase = createLocalMetadataBase();\n    }\n    // Handle relative or absolute paths\n    const pathname = metadataBase.pathname || '';\n    const joinedPath = path.posix.join(pathname, url);\n    return new URL(joinedPath, metadataBase);\n}\n// Resolve with `pathname` if `url` is a relative path.\nfunction resolveRelativeUrl(url, pathname) {\n    if (typeof url === 'string' && url.startsWith('./')) {\n        return path.posix.resolve(pathname, url);\n    }\n    return url;\n}\n// The regex is matching logic from packages/next/src/lib/load-custom-routes.ts\nconst FILE_REGEX = /^(?:\\/((?!\\.well-known(?:\\/.*)?)(?:[^/]+\\/)*[^/]+\\.\\w+))(\\/?|$)/i;\nfunction isFilePattern(pathname) {\n    return FILE_REGEX.test(pathname);\n}\n// Resolve `pathname` if `url` is a relative path the compose with `metadataBase`.\nfunction resolveAbsoluteUrlWithPathname(url, metadataBase, { trailingSlash, pathname }) {\n    // Resolve url with pathname that always starts with `/`\n    url = resolveRelativeUrl(url, pathname);\n    // Convert string url or URL instance to absolute url string,\n    // if there's case needs to be resolved with metadataBase\n    let resolvedUrl = '';\n    const result = metadataBase ? resolveUrl(url, metadataBase) : url;\n    if (typeof result === 'string') {\n        resolvedUrl = result;\n    } else {\n        resolvedUrl = result.pathname === '/' ? result.origin : result.href;\n    }\n    // Add trailing slash if it's enabled for urls matches the condition\n    // - Not external, same origin with metadataBase\n    // - Doesn't have query\n    if (trailingSlash && !resolvedUrl.endsWith('/')) {\n        let isRelative = resolvedUrl.startsWith('/');\n        let hasQuery = resolvedUrl.includes('?');\n        let isExternal = false;\n        let isFileUrl = false;\n        if (!isRelative) {\n            try {\n                const parsedUrl = new URL(resolvedUrl);\n                isExternal = metadataBase != null && parsedUrl.origin !== metadataBase.origin;\n                isFileUrl = isFilePattern(parsedUrl.pathname);\n            } catch  {\n                // If it's not a valid URL, treat it as external\n                isExternal = true;\n            }\n            if (// Do not apply trailing slash for file like urls, aligning with the behavior with `trailingSlash`\n            !isFileUrl && !isExternal && !hasQuery) return `${resolvedUrl}/`;\n        }\n    }\n    return resolvedUrl;\n}\nexport { isStringOrURL, resolveUrl, resolveRelativeUrl, resolveAbsoluteUrlWithPathname,  };\n\n//# sourceMappingURL=resolve-url.js.map","function resolveTitleTemplate(template, title) {\n    return template ? template.replace(/%s/g, title) : title;\n}\nexport function resolveTitle(title, stashedTemplate) {\n    let resolved;\n    const template = typeof title !== 'string' && title && 'template' in title ? title.template : null;\n    if (typeof title === 'string') {\n        resolved = resolveTitleTemplate(stashedTemplate, title);\n    } else if (title) {\n        if ('default' in title) {\n            resolved = resolveTitleTemplate(stashedTemplate, title.default);\n        }\n        if ('absolute' in title && title.absolute) {\n            resolved = title.absolute;\n        }\n    }\n    if (title && typeof title !== 'string') {\n        return {\n            template,\n            absolute: resolved || ''\n        };\n    } else {\n        return {\n            absolute: resolved || title || '',\n            template\n        };\n    }\n}\n\n//# sourceMappingURL=resolve-title.js.map","import { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers';\nconst DUMMY_ORIGIN = 'http://n';\nexport function isFullStringUrl(url) {\n    return /https?:\\/\\//.test(url);\n}\nexport function parseUrl(url) {\n    let parsed = undefined;\n    try {\n        parsed = new URL(url, DUMMY_ORIGIN);\n    } catch  {}\n    return parsed;\n}\nexport function stripNextRscUnionQuery(relativeUrl) {\n    const urlInstance = new URL(relativeUrl, DUMMY_ORIGIN);\n    urlInstance.searchParams.delete(NEXT_RSC_UNION_QUERY);\n    return urlInstance.pathname + urlInstance.search;\n}\n\n//# sourceMappingURL=url.js.map","// ISC License\n// Copyright (c) 2021 Alexey Raspopov, Kostiantyn Denysov, Anton Verinov\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n//\n// https://github.com/alexeyraspopov/picocolors/blob/b6261487e7b81aaab2440e397a356732cad9e342/picocolors.js#L1\nvar _globalThis;\nconst { env, stdout } = ((_globalThis = globalThis) == null ? void 0 : _globalThis.process) ?? {};\nconst enabled = env && !env.NO_COLOR && (env.FORCE_COLOR || (stdout == null ? void 0 : stdout.isTTY) && !env.CI && env.TERM !== 'dumb');\nconst replaceClose = (str, close, replace, index)=>{\n    const start = str.substring(0, index) + replace;\n    const end = str.substring(index + close.length);\n    const nextIndex = end.indexOf(close);\n    return ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end;\n};\nconst formatter = (open, close, replace = open)=>{\n    if (!enabled) return String;\n    return (input)=>{\n        const string = '' + input;\n        const index = string.indexOf(close, open.length);\n        return ~index ? open + replaceClose(string, close, replace, index) + close : open + string + close;\n    };\n};\nexport const reset = enabled ? (s)=>`\\x1b[0m${s}\\x1b[0m` : String;\nexport const bold = formatter('\\x1b[1m', '\\x1b[22m', '\\x1b[22m\\x1b[1m');\nexport const dim = formatter('\\x1b[2m', '\\x1b[22m', '\\x1b[22m\\x1b[2m');\nexport const italic = formatter('\\x1b[3m', '\\x1b[23m');\nexport const underline = formatter('\\x1b[4m', '\\x1b[24m');\nexport const inverse = formatter('\\x1b[7m', '\\x1b[27m');\nexport const hidden = formatter('\\x1b[8m', '\\x1b[28m');\nexport const strikethrough = formatter('\\x1b[9m', '\\x1b[29m');\nexport const black = formatter('\\x1b[30m', '\\x1b[39m');\nexport const red = formatter('\\x1b[31m', '\\x1b[39m');\nexport const green = formatter('\\x1b[32m', '\\x1b[39m');\nexport const yellow = formatter('\\x1b[33m', '\\x1b[39m');\nexport const blue = formatter('\\x1b[34m', '\\x1b[39m');\nexport const magenta = formatter('\\x1b[35m', '\\x1b[39m');\nexport const purple = formatter('\\x1b[38;2;173;127;168m', '\\x1b[39m');\nexport const cyan = formatter('\\x1b[36m', '\\x1b[39m');\nexport const white = formatter('\\x1b[37m', '\\x1b[39m');\nexport const gray = formatter('\\x1b[90m', '\\x1b[39m');\nexport const bgBlack = formatter('\\x1b[40m', '\\x1b[49m');\nexport const bgRed = formatter('\\x1b[41m', '\\x1b[49m');\nexport const bgGreen = formatter('\\x1b[42m', '\\x1b[49m');\nexport const bgYellow = formatter('\\x1b[43m', '\\x1b[49m');\nexport const bgBlue = formatter('\\x1b[44m', '\\x1b[49m');\nexport const bgMagenta = formatter('\\x1b[45m', '\\x1b[49m');\nexport const bgCyan = formatter('\\x1b[46m', '\\x1b[49m');\nexport const bgWhite = formatter('\\x1b[47m', '\\x1b[49m');\n\n//# sourceMappingURL=picocolors.js.map","export class LRUCache {\n    constructor(maxSize, calculateSize){\n        this.cache = new Map();\n        this.sizes = new Map();\n        this.totalSize = 0;\n        this.maxSize = maxSize;\n        this.calculateSize = calculateSize || (()=>1);\n    }\n    set(key, value) {\n        if (!key || !value) return;\n        const size = this.calculateSize(value);\n        if (size > this.maxSize) {\n            console.warn('Single item size exceeds maxSize');\n            return;\n        }\n        if (this.cache.has(key)) {\n            this.totalSize -= this.sizes.get(key) || 0;\n        }\n        this.cache.set(key, value);\n        this.sizes.set(key, size);\n        this.totalSize += size;\n        this.touch(key);\n    }\n    has(key) {\n        if (!key) return false;\n        this.touch(key);\n        return Boolean(this.cache.get(key));\n    }\n    get(key) {\n        if (!key) return;\n        const value = this.cache.get(key);\n        if (value === undefined) {\n            return undefined;\n        }\n        this.touch(key);\n        return value;\n    }\n    touch(key) {\n        const value = this.cache.get(key);\n        if (value !== undefined) {\n            this.cache.delete(key);\n            this.cache.set(key, value);\n            this.evictIfNecessary();\n        }\n    }\n    evictIfNecessary() {\n        while(this.totalSize > this.maxSize && this.cache.size > 0){\n            this.evictLeastRecentlyUsed();\n        }\n    }\n    evictLeastRecentlyUsed() {\n        const lruKey = this.cache.keys().next().value;\n        if (lruKey !== undefined) {\n            const lruSize = this.sizes.get(lruKey) || 0;\n            this.totalSize -= lruSize;\n            this.cache.delete(lruKey);\n            this.sizes.delete(lruKey);\n        }\n    }\n    reset() {\n        this.cache.clear();\n        this.sizes.clear();\n        this.totalSize = 0;\n    }\n    keys() {\n        return [\n            ...this.cache.keys()\n        ];\n    }\n    remove(key) {\n        if (this.cache.has(key)) {\n            this.totalSize -= this.sizes.get(key) || 0;\n            this.cache.delete(key);\n            this.sizes.delete(key);\n        }\n    }\n    clear() {\n        this.cache.clear();\n        this.sizes.clear();\n        this.totalSize = 0;\n    }\n    get size() {\n        return this.cache.size;\n    }\n    get currentSize() {\n        return this.totalSize;\n    }\n}\n\n//# sourceMappingURL=lru-cache.js.map","import { bold, green, magenta, red, yellow, white } from '../../lib/picocolors';\nimport { LRUCache } from '../../server/lib/lru-cache';\nexport const prefixes = {\n    wait: white(bold('○')),\n    error: red(bold('⨯')),\n    warn: yellow(bold('⚠')),\n    ready: '▲',\n    info: white(bold(' ')),\n    event: green(bold('✓')),\n    trace: magenta(bold('»'))\n};\nconst LOGGING_METHOD = {\n    log: 'log',\n    warn: 'warn',\n    error: 'error'\n};\nfunction prefixedLog(prefixType, ...message) {\n    if ((message[0] === '' || message[0] === undefined) && message.length === 1) {\n        message.shift();\n    }\n    const consoleMethod = prefixType in LOGGING_METHOD ? LOGGING_METHOD[prefixType] : 'log';\n    const prefix = prefixes[prefixType];\n    // If there's no message, don't print the prefix but a new line\n    if (message.length === 0) {\n        console[consoleMethod]('');\n    } else {\n        // Ensure if there's ANSI escape codes it's concatenated into one string.\n        // Chrome DevTool can only handle color if it's in one string.\n        if (message.length === 1 && typeof message[0] === 'string') {\n            console[consoleMethod](' ' + prefix + ' ' + message[0]);\n        } else {\n            console[consoleMethod](' ' + prefix, ...message);\n        }\n    }\n}\nexport function bootstrap(...message) {\n    // logging format: ' <prefix> <message>'\n    // e.g. ' ✓ Compiled successfully'\n    // Add spaces to align with the indent of other logs\n    console.log('   ' + message.join(' '));\n}\nexport function wait(...message) {\n    prefixedLog('wait', ...message);\n}\nexport function error(...message) {\n    prefixedLog('error', ...message);\n}\nexport function warn(...message) {\n    prefixedLog('warn', ...message);\n}\nexport function ready(...message) {\n    prefixedLog('ready', ...message);\n}\nexport function info(...message) {\n    prefixedLog('info', ...message);\n}\nexport function event(...message) {\n    prefixedLog('event', ...message);\n}\nexport function trace(...message) {\n    prefixedLog('trace', ...message);\n}\nconst warnOnceCache = new LRUCache(10000, (value)=>value.length);\nexport function warnOnce(...message) {\n    const key = message.join(' ');\n    if (!warnOnceCache.has(key)) {\n        warnOnceCache.set(key, key);\n        warn(...message);\n    }\n}\n\n//# sourceMappingURL=log.js.map","import { resolveArray, resolveAsArrayOrUndefined } from '../generate/utils';\nimport { getSocialImageMetadataBaseFallback, isStringOrURL, resolveUrl, resolveAbsoluteUrlWithPathname } from './resolve-url';\nimport { resolveTitle } from './resolve-title';\nimport { isFullStringUrl } from '../../url';\nimport { warnOnce } from '../../../build/output/log';\nconst OgTypeFields = {\n    article: [\n        'authors',\n        'tags'\n    ],\n    song: [\n        'albums',\n        'musicians'\n    ],\n    playlist: [\n        'albums',\n        'musicians'\n    ],\n    radio: [\n        'creators'\n    ],\n    video: [\n        'actors',\n        'directors',\n        'writers',\n        'tags'\n    ],\n    basic: [\n        'emails',\n        'phoneNumbers',\n        'faxNumbers',\n        'alternateLocale',\n        'audio',\n        'videos'\n    ]\n};\nfunction resolveAndValidateImage(item, metadataBase, isStaticMetadataRouteFile) {\n    if (!item) return undefined;\n    const isItemUrl = isStringOrURL(item);\n    const inputUrl = isItemUrl ? item : item.url;\n    if (!inputUrl) return undefined;\n    // process.env.VERCEL is set to \"1\" when System Environment Variables are\n    // exposed. When exposed, validation is not necessary since we are falling back to\n    // process.env.VERCEL_PROJECT_PRODUCTION_URL, process.env.VERCEL_BRANCH_URL, or\n    // process.env.VERCEL_URL for the `metadataBase`. process.env.VERCEL is undefined\n    // when System Environment Variables are not exposed. When not exposed, we cannot\n    // detect in the build environment if the deployment is a Vercel deployment or not.\n    //\n    // x-ref: https://vercel.com/docs/projects/environment-variables/system-environment-variables#system-environment-variables\n    const isUsingVercelSystemEnvironmentVariables = Boolean(process.env.VERCEL);\n    const isRelativeUrl = typeof inputUrl === 'string' && !isFullStringUrl(inputUrl);\n    // When no explicit metadataBase is specified by the user, we'll override it with the fallback metadata\n    // under the following conditions:\n    // - The provided URL is relative (ie ./og-image).\n    // - The image is statically generated by Next.js (such as the special `opengraph-image` route)\n    // In both cases, we want to ensure that across all environments, the ogImage is a fully qualified URL.\n    // In the `opengraph-image` case, since the user isn't explicitly passing a relative path, this ensures\n    // the ogImage will be properly discovered across different environments without the user needing to\n    // have a bunch of `process.env` checks when defining their `metadataBase`.\n    if (isRelativeUrl && (!metadataBase || isStaticMetadataRouteFile)) {\n        const fallbackMetadataBase = getSocialImageMetadataBaseFallback(metadataBase);\n        // When not using Vercel environment variables for URL injection, we aren't able to determine\n        // a fallback value for `metadataBase`. For self-hosted setups, we want to warn\n        // about this since the only fallback we'll be able to generate is `localhost`.\n        // In development, we'll only warn for relative metadata that isn't part of the static\n        // metadata conventions (eg `opengraph-image`), as otherwise it's currently very noisy\n        // for common cases. Eventually we should remove this warning all together in favor of\n        // devtools.\n        const shouldWarn = !isUsingVercelSystemEnvironmentVariables && !metadataBase && (process.env.NODE_ENV === 'production' || !isStaticMetadataRouteFile);\n        if (shouldWarn) {\n            warnOnce(`metadataBase property in metadata export is not set for resolving social open graph or twitter images, using \"${fallbackMetadataBase.origin}\". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase`);\n        }\n        metadataBase = fallbackMetadataBase;\n    }\n    return isItemUrl ? {\n        url: resolveUrl(inputUrl, metadataBase)\n    } : {\n        ...item,\n        // Update image descriptor url\n        url: resolveUrl(inputUrl, metadataBase)\n    };\n}\nexport function resolveImages(images, metadataBase, isStaticMetadataRouteFile) {\n    const resolvedImages = resolveAsArrayOrUndefined(images);\n    if (!resolvedImages) return resolvedImages;\n    const nonNullableImages = [];\n    for (const item of resolvedImages){\n        const resolvedItem = resolveAndValidateImage(item, metadataBase, isStaticMetadataRouteFile);\n        if (!resolvedItem) continue;\n        nonNullableImages.push(resolvedItem);\n    }\n    return nonNullableImages;\n}\nconst ogTypeToFields = {\n    article: OgTypeFields.article,\n    book: OgTypeFields.article,\n    'music.song': OgTypeFields.song,\n    'music.album': OgTypeFields.song,\n    'music.playlist': OgTypeFields.playlist,\n    'music.radio_station': OgTypeFields.radio,\n    'video.movie': OgTypeFields.video,\n    'video.episode': OgTypeFields.video\n};\nfunction getFieldsByOgType(ogType) {\n    if (!ogType || !(ogType in ogTypeToFields)) return OgTypeFields.basic;\n    return ogTypeToFields[ogType].concat(OgTypeFields.basic);\n}\nexport const resolveOpenGraph = (openGraph, metadataBase, metadataContext, titleTemplate)=>{\n    if (!openGraph) return null;\n    function resolveProps(target, og) {\n        const ogType = og && 'type' in og ? og.type : undefined;\n        const keys = getFieldsByOgType(ogType);\n        for (const k of keys){\n            const key = k;\n            if (key in og && key !== 'url') {\n                const value = og[key];\n                target[key] = value ? resolveArray(value) : null;\n            }\n        }\n        target.images = resolveImages(og.images, metadataBase, metadataContext.isStaticMetadataRouteFile);\n    }\n    const resolved = {\n        ...openGraph,\n        title: resolveTitle(openGraph.title, titleTemplate)\n    };\n    resolveProps(resolved, openGraph);\n    resolved.url = openGraph.url ? resolveAbsoluteUrlWithPathname(openGraph.url, metadataBase, metadataContext) : null;\n    return resolved;\n};\nconst TwitterBasicInfoKeys = [\n    'site',\n    'siteId',\n    'creator',\n    'creatorId',\n    'description'\n];\nexport const resolveTwitter = (twitter, metadataBase, metadataContext, titleTemplate)=>{\n    var _resolved_images;\n    if (!twitter) return null;\n    let card = 'card' in twitter ? twitter.card : undefined;\n    const resolved = {\n        ...twitter,\n        title: resolveTitle(twitter.title, titleTemplate)\n    };\n    for (const infoKey of TwitterBasicInfoKeys){\n        resolved[infoKey] = twitter[infoKey] || null;\n    }\n    resolved.images = resolveImages(twitter.images, metadataBase, metadataContext.isStaticMetadataRouteFile);\n    card = card || (((_resolved_images = resolved.images) == null ? void 0 : _resolved_images.length) ? 'summary_large_image' : 'summary');\n    resolved.card = card;\n    if ('card' in resolved) {\n        switch(resolved.card){\n            case 'player':\n                {\n                    resolved.players = resolveAsArrayOrUndefined(resolved.players) || [];\n                    break;\n                }\n            case 'app':\n                {\n                    resolved.app = resolved.app || {};\n                    break;\n                }\n            default:\n                break;\n        }\n    }\n    return resolved;\n};\n\n//# sourceMappingURL=resolve-opengraph.js.map","import { DEFAULT_SEGMENT_KEY } from '../../shared/lib/segment';\nexport async function getLayoutOrPageModule(loaderTree) {\n    const { layout, page, defaultPage } = loaderTree[2];\n    const isLayout = typeof layout !== 'undefined';\n    const isPage = typeof page !== 'undefined';\n    const isDefaultPage = typeof defaultPage !== 'undefined' && loaderTree[0] === DEFAULT_SEGMENT_KEY;\n    let mod = undefined;\n    let modType = undefined;\n    let filePath = undefined;\n    if (isLayout) {\n        mod = await layout[0]();\n        modType = 'layout';\n        filePath = layout[1];\n    } else if (isPage) {\n        mod = await page[0]();\n        modType = 'page';\n        filePath = page[1];\n    } else if (isDefaultPage) {\n        mod = await defaultPage[0]();\n        modType = 'page';\n        filePath = defaultPage[1];\n    }\n    return {\n        mod,\n        modType,\n        filePath\n    };\n}\nexport async function getComponentTypeModule(loaderTree, moduleType) {\n    const { [moduleType]: module } = loaderTree[2];\n    if (typeof module !== 'undefined') {\n        return await module[0]();\n    }\n    return undefined;\n}\n\n//# sourceMappingURL=app-dir-module.js.map","export function interopDefault(mod) {\n    return mod.default || mod;\n}\n\n//# sourceMappingURL=interop-default.js.map","import { resolveAsArrayOrUndefined } from '../generate/utils';\nimport { resolveAbsoluteUrlWithPathname } from './resolve-url';\nfunction resolveAlternateUrl(url, metadataBase, metadataContext) {\n    // If alter native url is an URL instance,\n    // we treat it as a URL base and resolve with current pathname\n    if (url instanceof URL) {\n        const newUrl = new URL(metadataContext.pathname, url);\n        url.searchParams.forEach((value, key)=>newUrl.searchParams.set(key, value));\n        url = newUrl;\n    }\n    return resolveAbsoluteUrlWithPathname(url, metadataBase, metadataContext);\n}\nexport const resolveThemeColor = (themeColor)=>{\n    var _resolveAsArrayOrUndefined;\n    if (!themeColor) return null;\n    const themeColorDescriptors = [];\n    (_resolveAsArrayOrUndefined = resolveAsArrayOrUndefined(themeColor)) == null ? void 0 : _resolveAsArrayOrUndefined.forEach((descriptor)=>{\n        if (typeof descriptor === 'string') themeColorDescriptors.push({\n            color: descriptor\n        });\n        else if (typeof descriptor === 'object') themeColorDescriptors.push({\n            color: descriptor.color,\n            media: descriptor.media\n        });\n    });\n    return themeColorDescriptors;\n};\nfunction resolveUrlValuesOfObject(obj, metadataBase, metadataContext) {\n    if (!obj) return null;\n    const result = {};\n    for (const [key, value] of Object.entries(obj)){\n        if (typeof value === 'string' || value instanceof URL) {\n            result[key] = [\n                {\n                    url: resolveAlternateUrl(value, metadataBase, metadataContext)\n                }\n            ];\n        } else {\n            result[key] = [];\n            value == null ? void 0 : value.forEach((item, index)=>{\n                const url = resolveAlternateUrl(item.url, metadataBase, metadataContext);\n                result[key][index] = {\n                    url,\n                    title: item.title\n                };\n            });\n        }\n    }\n    return result;\n}\nfunction resolveCanonicalUrl(urlOrDescriptor, metadataBase, metadataContext) {\n    if (!urlOrDescriptor) return null;\n    const url = typeof urlOrDescriptor === 'string' || urlOrDescriptor instanceof URL ? urlOrDescriptor : urlOrDescriptor.url;\n    // Return string url because structureClone can't handle URL instance\n    return {\n        url: resolveAlternateUrl(url, metadataBase, metadataContext)\n    };\n}\nexport const resolveAlternates = (alternates, metadataBase, context)=>{\n    if (!alternates) return null;\n    const canonical = resolveCanonicalUrl(alternates.canonical, metadataBase, context);\n    const languages = resolveUrlValuesOfObject(alternates.languages, metadataBase, context);\n    const media = resolveUrlValuesOfObject(alternates.media, metadataBase, context);\n    const types = resolveUrlValuesOfObject(alternates.types, metadataBase, context);\n    const result = {\n        canonical,\n        languages,\n        media,\n        types\n    };\n    return result;\n};\nconst robotsKeys = [\n    'noarchive',\n    'nosnippet',\n    'noimageindex',\n    'nocache',\n    'notranslate',\n    'indexifembedded',\n    'nositelinkssearchbox',\n    'unavailable_after',\n    'max-video-preview',\n    'max-image-preview',\n    'max-snippet'\n];\nconst resolveRobotsValue = (robots)=>{\n    if (!robots) return null;\n    if (typeof robots === 'string') return robots;\n    const values = [];\n    if (robots.index) values.push('index');\n    else if (typeof robots.index === 'boolean') values.push('noindex');\n    if (robots.follow) values.push('follow');\n    else if (typeof robots.follow === 'boolean') values.push('nofollow');\n    for (const key of robotsKeys){\n        const value = robots[key];\n        if (typeof value !== 'undefined' && value !== false) {\n            values.push(typeof value === 'boolean' ? key : `${key}:${value}`);\n        }\n    }\n    return values.join(', ');\n};\nexport const resolveRobots = (robots)=>{\n    if (!robots) return null;\n    return {\n        basic: resolveRobotsValue(robots),\n        googleBot: typeof robots !== 'string' ? resolveRobotsValue(robots.googleBot) : null\n    };\n};\nconst VerificationKeys = [\n    'google',\n    'yahoo',\n    'yandex',\n    'me',\n    'other'\n];\nexport const resolveVerification = (verification)=>{\n    if (!verification) return null;\n    const res = {};\n    for (const key of VerificationKeys){\n        const value = verification[key];\n        if (value) {\n            if (key === 'other') {\n                res.other = {};\n                for(const otherKey in verification.other){\n                    const otherValue = resolveAsArrayOrUndefined(verification.other[otherKey]);\n                    if (otherValue) res.other[otherKey] = otherValue;\n                }\n            } else res[key] = resolveAsArrayOrUndefined(value);\n        }\n    }\n    return res;\n};\nexport const resolveAppleWebApp = (appWebApp)=>{\n    var _resolveAsArrayOrUndefined;\n    if (!appWebApp) return null;\n    if (appWebApp === true) {\n        return {\n            capable: true\n        };\n    }\n    const startupImages = appWebApp.startupImage ? (_resolveAsArrayOrUndefined = resolveAsArrayOrUndefined(appWebApp.startupImage)) == null ? void 0 : _resolveAsArrayOrUndefined.map((item)=>typeof item === 'string' ? {\n            url: item\n        } : item) : null;\n    return {\n        capable: 'capable' in appWebApp ? !!appWebApp.capable : true,\n        title: appWebApp.title || null,\n        startupImage: startupImages,\n        statusBarStyle: appWebApp.statusBarStyle || 'default'\n    };\n};\nexport const resolveAppLinks = (appLinks)=>{\n    if (!appLinks) return null;\n    for(const key in appLinks){\n        // @ts-ignore // TODO: type infer\n        appLinks[key] = resolveAsArrayOrUndefined(appLinks[key]);\n    }\n    return appLinks;\n};\nexport const resolveItunes = (itunes, metadataBase, context)=>{\n    if (!itunes) return null;\n    return {\n        appId: itunes.appId,\n        appArgument: itunes.appArgument ? resolveAlternateUrl(itunes.appArgument, metadataBase, context) : undefined\n    };\n};\nexport const resolveFacebook = (facebook)=>{\n    if (!facebook) return null;\n    return {\n        appId: facebook.appId,\n        admins: resolveAsArrayOrUndefined(facebook.admins)\n    };\n};\nexport const resolvePagination = (pagination, metadataBase, context)=>{\n    return {\n        previous: (pagination == null ? void 0 : pagination.previous) ? resolveAlternateUrl(pagination.previous, metadataBase, context) : null,\n        next: (pagination == null ? void 0 : pagination.next) ? resolveAlternateUrl(pagination.next, metadataBase, context) : null\n    };\n};\n\n//# sourceMappingURL=resolve-basics.js.map","import { resolveAsArrayOrUndefined } from '../generate/utils';\nimport { isStringOrURL } from './resolve-url';\nimport { IconKeys } from '../constants';\nexport function resolveIcon(icon) {\n    if (isStringOrURL(icon)) return {\n        url: icon\n    };\n    else if (Array.isArray(icon)) return icon;\n    return icon;\n}\nexport const resolveIcons = (icons)=>{\n    if (!icons) {\n        return null;\n    }\n    const resolved = {\n        icon: [],\n        apple: []\n    };\n    if (Array.isArray(icons)) {\n        resolved.icon = icons.map(resolveIcon).filter(Boolean);\n    } else if (isStringOrURL(icons)) {\n        resolved.icon = [\n            resolveIcon(icons)\n        ];\n    } else {\n        for (const key of IconKeys){\n            const values = resolveAsArrayOrUndefined(icons[key]);\n            if (values) resolved[key] = values.map(resolveIcon);\n        }\n    }\n    return resolved;\n};\n\n//# sourceMappingURL=resolve-icons.js.map","/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/ // eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */ var BaseServerSpan = /*#__PURE__*/ function(BaseServerSpan) {\n    BaseServerSpan[\"handleRequest\"] = \"BaseServer.handleRequest\";\n    BaseServerSpan[\"run\"] = \"BaseServer.run\";\n    BaseServerSpan[\"pipe\"] = \"BaseServer.pipe\";\n    BaseServerSpan[\"getStaticHTML\"] = \"BaseServer.getStaticHTML\";\n    BaseServerSpan[\"render\"] = \"BaseServer.render\";\n    BaseServerSpan[\"renderToResponseWithComponents\"] = \"BaseServer.renderToResponseWithComponents\";\n    BaseServerSpan[\"renderToResponse\"] = \"BaseServer.renderToResponse\";\n    BaseServerSpan[\"renderToHTML\"] = \"BaseServer.renderToHTML\";\n    BaseServerSpan[\"renderError\"] = \"BaseServer.renderError\";\n    BaseServerSpan[\"renderErrorToResponse\"] = \"BaseServer.renderErrorToResponse\";\n    BaseServerSpan[\"renderErrorToHTML\"] = \"BaseServer.renderErrorToHTML\";\n    BaseServerSpan[\"render404\"] = \"BaseServer.render404\";\n    return BaseServerSpan;\n}(BaseServerSpan || {});\nvar LoadComponentsSpan = /*#__PURE__*/ function(LoadComponentsSpan) {\n    LoadComponentsSpan[\"loadDefaultErrorComponents\"] = \"LoadComponents.loadDefaultErrorComponents\";\n    LoadComponentsSpan[\"loadComponents\"] = \"LoadComponents.loadComponents\";\n    return LoadComponentsSpan;\n}(LoadComponentsSpan || {});\nvar NextServerSpan = /*#__PURE__*/ function(NextServerSpan) {\n    NextServerSpan[\"getRequestHandler\"] = \"NextServer.getRequestHandler\";\n    NextServerSpan[\"getServer\"] = \"NextServer.getServer\";\n    NextServerSpan[\"getServerRequestHandler\"] = \"NextServer.getServerRequestHandler\";\n    NextServerSpan[\"createServer\"] = \"createServer.createServer\";\n    return NextServerSpan;\n}(NextServerSpan || {});\nvar NextNodeServerSpan = /*#__PURE__*/ function(NextNodeServerSpan) {\n    NextNodeServerSpan[\"compression\"] = \"NextNodeServer.compression\";\n    NextNodeServerSpan[\"getBuildId\"] = \"NextNodeServer.getBuildId\";\n    NextNodeServerSpan[\"createComponentTree\"] = \"NextNodeServer.createComponentTree\";\n    NextNodeServerSpan[\"clientComponentLoading\"] = \"NextNodeServer.clientComponentLoading\";\n    NextNodeServerSpan[\"getLayoutOrPageModule\"] = \"NextNodeServer.getLayoutOrPageModule\";\n    NextNodeServerSpan[\"generateStaticRoutes\"] = \"NextNodeServer.generateStaticRoutes\";\n    NextNodeServerSpan[\"generateFsStaticRoutes\"] = \"NextNodeServer.generateFsStaticRoutes\";\n    NextNodeServerSpan[\"generatePublicRoutes\"] = \"NextNodeServer.generatePublicRoutes\";\n    NextNodeServerSpan[\"generateImageRoutes\"] = \"NextNodeServer.generateImageRoutes.route\";\n    NextNodeServerSpan[\"sendRenderResult\"] = \"NextNodeServer.sendRenderResult\";\n    NextNodeServerSpan[\"proxyRequest\"] = \"NextNodeServer.proxyRequest\";\n    NextNodeServerSpan[\"runApi\"] = \"NextNodeServer.runApi\";\n    NextNodeServerSpan[\"render\"] = \"NextNodeServer.render\";\n    NextNodeServerSpan[\"renderHTML\"] = \"NextNodeServer.renderHTML\";\n    NextNodeServerSpan[\"imageOptimizer\"] = \"NextNodeServer.imageOptimizer\";\n    NextNodeServerSpan[\"getPagePath\"] = \"NextNodeServer.getPagePath\";\n    NextNodeServerSpan[\"getRoutesManifest\"] = \"NextNodeServer.getRoutesManifest\";\n    NextNodeServerSpan[\"findPageComponents\"] = \"NextNodeServer.findPageComponents\";\n    NextNodeServerSpan[\"getFontManifest\"] = \"NextNodeServer.getFontManifest\";\n    NextNodeServerSpan[\"getServerComponentManifest\"] = \"NextNodeServer.getServerComponentManifest\";\n    NextNodeServerSpan[\"getRequestHandler\"] = \"NextNodeServer.getRequestHandler\";\n    NextNodeServerSpan[\"renderToHTML\"] = \"NextNodeServer.renderToHTML\";\n    NextNodeServerSpan[\"renderError\"] = \"NextNodeServer.renderError\";\n    NextNodeServerSpan[\"renderErrorToHTML\"] = \"NextNodeServer.renderErrorToHTML\";\n    NextNodeServerSpan[\"render404\"] = \"NextNodeServer.render404\";\n    NextNodeServerSpan[\"startResponse\"] = \"NextNodeServer.startResponse\";\n    // nested inner span, does not require parent scope name\n    NextNodeServerSpan[\"route\"] = \"route\";\n    NextNodeServerSpan[\"onProxyReq\"] = \"onProxyReq\";\n    NextNodeServerSpan[\"apiResolver\"] = \"apiResolver\";\n    NextNodeServerSpan[\"internalFetch\"] = \"internalFetch\";\n    return NextNodeServerSpan;\n}(NextNodeServerSpan || {});\nvar StartServerSpan = /*#__PURE__*/ function(StartServerSpan) {\n    StartServerSpan[\"startServer\"] = \"startServer.startServer\";\n    return StartServerSpan;\n}(StartServerSpan || {});\nvar RenderSpan = /*#__PURE__*/ function(RenderSpan) {\n    RenderSpan[\"getServerSideProps\"] = \"Render.getServerSideProps\";\n    RenderSpan[\"getStaticProps\"] = \"Render.getStaticProps\";\n    RenderSpan[\"renderToString\"] = \"Render.renderToString\";\n    RenderSpan[\"renderDocument\"] = \"Render.renderDocument\";\n    RenderSpan[\"createBodyResult\"] = \"Render.createBodyResult\";\n    return RenderSpan;\n}(RenderSpan || {});\nvar AppRenderSpan = /*#__PURE__*/ function(AppRenderSpan) {\n    AppRenderSpan[\"renderToString\"] = \"AppRender.renderToString\";\n    AppRenderSpan[\"renderToReadableStream\"] = \"AppRender.renderToReadableStream\";\n    AppRenderSpan[\"getBodyResult\"] = \"AppRender.getBodyResult\";\n    AppRenderSpan[\"fetch\"] = \"AppRender.fetch\";\n    return AppRenderSpan;\n}(AppRenderSpan || {});\nvar RouterSpan = /*#__PURE__*/ function(RouterSpan) {\n    RouterSpan[\"executeRoute\"] = \"Router.executeRoute\";\n    return RouterSpan;\n}(RouterSpan || {});\nvar NodeSpan = /*#__PURE__*/ function(NodeSpan) {\n    NodeSpan[\"runHandler\"] = \"Node.runHandler\";\n    return NodeSpan;\n}(NodeSpan || {});\nvar AppRouteRouteHandlersSpan = /*#__PURE__*/ function(AppRouteRouteHandlersSpan) {\n    AppRouteRouteHandlersSpan[\"runHandler\"] = \"AppRouteRouteHandlers.runHandler\";\n    return AppRouteRouteHandlersSpan;\n}(AppRouteRouteHandlersSpan || {});\nvar ResolveMetadataSpan = /*#__PURE__*/ function(ResolveMetadataSpan) {\n    ResolveMetadataSpan[\"generateMetadata\"] = \"ResolveMetadata.generateMetadata\";\n    ResolveMetadataSpan[\"generateViewport\"] = \"ResolveMetadata.generateViewport\";\n    return ResolveMetadataSpan;\n}(ResolveMetadataSpan || {});\nvar MiddlewareSpan = /*#__PURE__*/ function(MiddlewareSpan) {\n    MiddlewareSpan[\"execute\"] = \"Middleware.execute\";\n    return MiddlewareSpan;\n}(MiddlewareSpan || {});\n// This list is used to filter out spans that are not relevant to the user\nexport const NextVanillaSpanAllowlist = [\n    \"Middleware.execute\",\n    \"BaseServer.handleRequest\",\n    \"Render.getServerSideProps\",\n    \"Render.getStaticProps\",\n    \"AppRender.fetch\",\n    \"AppRender.getBodyResult\",\n    \"Render.renderDocument\",\n    \"Node.runHandler\",\n    \"AppRouteRouteHandlers.runHandler\",\n    \"ResolveMetadata.generateMetadata\",\n    \"ResolveMetadata.generateViewport\",\n    \"NextNodeServer.createComponentTree\",\n    \"NextNodeServer.findPageComponents\",\n    \"NextNodeServer.getLayoutOrPageModule\",\n    \"NextNodeServer.startResponse\",\n    \"NextNodeServer.clientComponentLoading\"\n];\n// These Spans are allowed to be always logged\n// when the otel log prefix env is set\nexport const LogSpanAllowList = [\n    \"NextNodeServer.findPageComponents\",\n    \"NextNodeServer.createComponentTree\",\n    \"NextNodeServer.clientComponentLoading\"\n];\nexport { BaseServerSpan, LoadComponentsSpan, NextServerSpan, NextNodeServerSpan, StartServerSpan, RenderSpan, RouterSpan, AppRenderSpan, NodeSpan, AppRouteRouteHandlersSpan, ResolveMetadataSpan, MiddlewareSpan,  };\n\n//# sourceMappingURL=constants.js.map","/**\n * Check to see if a value is Thenable.\n *\n * @param promise the maybe-thenable value\n * @returns true if the value is thenable\n */\nexport function isThenable<T = unknown>(\n  promise: Promise<T> | T\n): promise is Promise<T> {\n  return (\n    promise !== null &&\n    typeof promise === 'object' &&\n    'then' in promise &&\n    typeof promise.then === 'function'\n  )\n}\n","import { LogSpanAllowList, NextVanillaSpanAllowlist } from './constants';\nimport { isThenable } from '../../../shared/lib/is-thenable';\nlet api;\n// we want to allow users to use their own version of @opentelemetry/api if they\n// want to, so we try to require it first, and if it fails we fall back to the\n// version that is bundled with Next.js\n// this is because @opentelemetry/api has to be synced with the version of\n// @opentelemetry/tracing that is used, and we don't want to force users to use\n// the version that is bundled with Next.js.\n// the API is ~stable, so this should be fine\nif (process.env.NEXT_RUNTIME === 'edge') {\n    api = require('@opentelemetry/api');\n} else {\n    try {\n        api = require('@opentelemetry/api');\n    } catch (err) {\n        api = require('next/dist/compiled/@opentelemetry/api');\n    }\n}\nconst { context, propagation, trace, SpanStatusCode, SpanKind, ROOT_CONTEXT } = api;\nexport class BubbledError extends Error {\n    constructor(bubble, result){\n        super(), this.bubble = bubble, this.result = result;\n    }\n}\nexport function isBubbledError(error) {\n    if (typeof error !== 'object' || error === null) return false;\n    return error instanceof BubbledError;\n}\nconst closeSpanWithError = (span, error)=>{\n    if (isBubbledError(error) && error.bubble) {\n        span.setAttribute('next.bubble', true);\n    } else {\n        if (error) {\n            span.recordException(error);\n        }\n        span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: error == null ? void 0 : error.message\n        });\n    }\n    span.end();\n};\n/** we use this map to propagate attributes from nested spans to the top span */ const rootSpanAttributesStore = new Map();\nconst rootSpanIdKey = api.createContextKey('next.rootSpanId');\nlet lastSpanId = 0;\nconst getSpanId = ()=>lastSpanId++;\nconst clientTraceDataSetter = {\n    set (carrier, key, value) {\n        carrier.push({\n            key,\n            value\n        });\n    }\n};\nclass NextTracerImpl {\n    /**\n   * Returns an instance to the trace with configured name.\n   * Since wrap / trace can be defined in any place prior to actual trace subscriber initialization,\n   * This should be lazily evaluated.\n   */ getTracerInstance() {\n        return trace.getTracer('next.js', '0.0.1');\n    }\n    getContext() {\n        return context;\n    }\n    getTracePropagationData() {\n        const activeContext = context.active();\n        const entries = [];\n        propagation.inject(activeContext, entries, clientTraceDataSetter);\n        return entries;\n    }\n    getActiveScopeSpan() {\n        return trace.getSpan(context == null ? void 0 : context.active());\n    }\n    withPropagatedContext(carrier, fn, getter) {\n        const activeContext = context.active();\n        if (trace.getSpanContext(activeContext)) {\n            // Active span is already set, too late to propagate.\n            return fn();\n        }\n        const remoteContext = propagation.extract(activeContext, carrier, getter);\n        return context.with(remoteContext, fn);\n    }\n    trace(...args) {\n        var _trace_getSpanContext;\n        const [type, fnOrOptions, fnOrEmpty] = args;\n        // coerce options form overload\n        const { fn, options } = typeof fnOrOptions === 'function' ? {\n            fn: fnOrOptions,\n            options: {}\n        } : {\n            fn: fnOrEmpty,\n            options: {\n                ...fnOrOptions\n            }\n        };\n        const spanName = options.spanName ?? type;\n        if (!NextVanillaSpanAllowlist.includes(type) && process.env.NEXT_OTEL_VERBOSE !== '1' || options.hideSpan) {\n            return fn();\n        }\n        // Trying to get active scoped span to assign parent. If option specifies parent span manually, will try to use it.\n        let spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        let isRootSpan = false;\n        if (!spanContext) {\n            spanContext = (context == null ? void 0 : context.active()) ?? ROOT_CONTEXT;\n            isRootSpan = true;\n        } else if ((_trace_getSpanContext = trace.getSpanContext(spanContext)) == null ? void 0 : _trace_getSpanContext.isRemote) {\n            isRootSpan = true;\n        }\n        const spanId = getSpanId();\n        options.attributes = {\n            'next.span_name': spanName,\n            'next.span_type': type,\n            ...options.attributes\n        };\n        return context.with(spanContext.setValue(rootSpanIdKey, spanId), ()=>this.getTracerInstance().startActiveSpan(spanName, options, (span)=>{\n                const startTime = 'performance' in globalThis && 'measure' in performance ? globalThis.performance.now() : undefined;\n                const onCleanup = ()=>{\n                    rootSpanAttributesStore.delete(spanId);\n                    if (startTime && process.env.NEXT_OTEL_PERFORMANCE_PREFIX && LogSpanAllowList.includes(type || '')) {\n                        performance.measure(`${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-${(type.split('.').pop() || '').replace(/[A-Z]/g, (match)=>'-' + match.toLowerCase())}`, {\n                            start: startTime,\n                            end: performance.now()\n                        });\n                    }\n                };\n                if (isRootSpan) {\n                    rootSpanAttributesStore.set(spanId, new Map(Object.entries(options.attributes ?? {})));\n                }\n                try {\n                    if (fn.length > 1) {\n                        return fn(span, (err)=>closeSpanWithError(span, err));\n                    }\n                    const result = fn(span);\n                    if (isThenable(result)) {\n                        // If there's error make sure it throws\n                        return result.then((res)=>{\n                            span.end();\n                            // Need to pass down the promise result,\n                            // it could be react stream response with error { error, stream }\n                            return res;\n                        }).catch((err)=>{\n                            closeSpanWithError(span, err);\n                            throw err;\n                        }).finally(onCleanup);\n                    } else {\n                        span.end();\n                        onCleanup();\n                    }\n                    return result;\n                } catch (err) {\n                    closeSpanWithError(span, err);\n                    onCleanup();\n                    throw err;\n                }\n            }));\n    }\n    wrap(...args) {\n        const tracer = this;\n        const [name, options, fn] = args.length === 3 ? args : [\n            args[0],\n            {},\n            args[1]\n        ];\n        if (!NextVanillaSpanAllowlist.includes(name) && process.env.NEXT_OTEL_VERBOSE !== '1') {\n            return fn;\n        }\n        return function() {\n            let optionsObj = options;\n            if (typeof optionsObj === 'function' && typeof fn === 'function') {\n                optionsObj = optionsObj.apply(this, arguments);\n            }\n            const lastArgId = arguments.length - 1;\n            const cb = arguments[lastArgId];\n            if (typeof cb === 'function') {\n                const scopeBoundCb = tracer.getContext().bind(context.active(), cb);\n                return tracer.trace(name, optionsObj, (_span, done)=>{\n                    arguments[lastArgId] = function(err) {\n                        done == null ? void 0 : done(err);\n                        return scopeBoundCb.apply(this, arguments);\n                    };\n                    return fn.apply(this, arguments);\n                });\n            } else {\n                return tracer.trace(name, optionsObj, ()=>fn.apply(this, arguments));\n            }\n        };\n    }\n    startSpan(...args) {\n        const [type, options] = args;\n        const spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        return this.getTracerInstance().startSpan(type, options, spanContext);\n    }\n    getSpanContext(parentSpan) {\n        const spanContext = parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined;\n        return spanContext;\n    }\n    getRootSpanAttributes() {\n        const spanId = context.active().getValue(rootSpanIdKey);\n        return rootSpanAttributesStore.get(spanId);\n    }\n    setRootSpanAttribute(key, value) {\n        const spanId = context.active().getValue(rootSpanIdKey);\n        const attributes = rootSpanAttributesStore.get(spanId);\n        if (attributes) {\n            attributes.set(key, value);\n        }\n    }\n}\nconst getTracer = (()=>{\n    const tracer = new NextTracerImpl();\n    return ()=>tracer;\n})();\nexport { getTracer, SpanStatusCode, SpanKind };\n\n//# sourceMappingURL=tracer.js.map","// eslint-disable-next-line import/no-extraneous-dependencies\nimport 'server-only';\nimport { cache } from 'react';\nimport { createDefaultMetadata, createDefaultViewport } from './default-metadata';\nimport { resolveOpenGraph, resolveTwitter } from './resolvers/resolve-opengraph';\nimport { resolveTitle } from './resolvers/resolve-title';\nimport { resolveAsArrayOrUndefined } from './generate/utils';\nimport { getComponentTypeModule, getLayoutOrPageModule } from '../../server/lib/app-dir-module';\nimport { interopDefault } from '../interop-default';\nimport { resolveAlternates, resolveAppleWebApp, resolveAppLinks, resolveRobots, resolveThemeColor, resolveVerification, resolveItunes, resolveFacebook, resolvePagination } from './resolvers/resolve-basics';\nimport { resolveIcons } from './resolvers/resolve-icons';\nimport { getTracer } from '../../server/lib/trace/tracer';\nimport { ResolveMetadataSpan } from '../../server/lib/trace/constants';\nimport { PAGE_SEGMENT_KEY } from '../../shared/lib/segment';\nimport * as Log from '../../build/output/log';\nimport { createServerParamsForMetadata } from '../../server/request/params';\nfunction isFavicon(icon) {\n    if (!icon) {\n        return false;\n    }\n    // turbopack appends a hash to all images\n    return (icon.url === '/favicon.ico' || icon.url.toString().startsWith('/favicon.ico?')) && icon.type === 'image/x-icon';\n}\nfunction mergeStaticMetadata(source, target, staticFilesMetadata, metadataContext, titleTemplates, leafSegmentStaticIcons) {\n    var _source_twitter, _source_openGraph;\n    if (!staticFilesMetadata) return;\n    const { icon, apple, openGraph, twitter, manifest } = staticFilesMetadata;\n    // Keep updating the static icons in the most leaf node\n    if (icon) {\n        leafSegmentStaticIcons.icon = icon;\n    }\n    if (apple) {\n        leafSegmentStaticIcons.apple = apple;\n    }\n    // file based metadata is specified and current level metadata twitter.images is not specified\n    if (twitter && !(source == null ? void 0 : (_source_twitter = source.twitter) == null ? void 0 : _source_twitter.hasOwnProperty('images'))) {\n        const resolvedTwitter = resolveTwitter({\n            ...target.twitter,\n            images: twitter\n        }, target.metadataBase, {\n            ...metadataContext,\n            isStaticMetadataRouteFile: true\n        }, titleTemplates.twitter);\n        target.twitter = resolvedTwitter;\n    }\n    // file based metadata is specified and current level metadata openGraph.images is not specified\n    if (openGraph && !(source == null ? void 0 : (_source_openGraph = source.openGraph) == null ? void 0 : _source_openGraph.hasOwnProperty('images'))) {\n        const resolvedOpenGraph = resolveOpenGraph({\n            ...target.openGraph,\n            images: openGraph\n        }, target.metadataBase, {\n            ...metadataContext,\n            isStaticMetadataRouteFile: true\n        }, titleTemplates.openGraph);\n        target.openGraph = resolvedOpenGraph;\n    }\n    if (manifest) {\n        target.manifest = manifest;\n    }\n    return target;\n}\n// Merge the source metadata into the resolved target metadata.\nfunction mergeMetadata({ source, target, staticFilesMetadata, titleTemplates, metadataContext, buildState, leafSegmentStaticIcons }) {\n    // If there's override metadata, prefer it otherwise fallback to the default metadata.\n    const metadataBase = typeof (source == null ? void 0 : source.metadataBase) !== 'undefined' ? source.metadataBase : target.metadataBase;\n    for(const key_ in source){\n        const key = key_;\n        switch(key){\n            case 'title':\n                {\n                    target.title = resolveTitle(source.title, titleTemplates.title);\n                    break;\n                }\n            case 'alternates':\n                {\n                    target.alternates = resolveAlternates(source.alternates, metadataBase, metadataContext);\n                    break;\n                }\n            case 'openGraph':\n                {\n                    target.openGraph = resolveOpenGraph(source.openGraph, metadataBase, metadataContext, titleTemplates.openGraph);\n                    break;\n                }\n            case 'twitter':\n                {\n                    target.twitter = resolveTwitter(source.twitter, metadataBase, metadataContext, titleTemplates.twitter);\n                    break;\n                }\n            case 'facebook':\n                target.facebook = resolveFacebook(source.facebook);\n                break;\n            case 'verification':\n                target.verification = resolveVerification(source.verification);\n                break;\n            case 'icons':\n                {\n                    target.icons = resolveIcons(source.icons);\n                    break;\n                }\n            case 'appleWebApp':\n                target.appleWebApp = resolveAppleWebApp(source.appleWebApp);\n                break;\n            case 'appLinks':\n                target.appLinks = resolveAppLinks(source.appLinks);\n                break;\n            case 'robots':\n                {\n                    target.robots = resolveRobots(source.robots);\n                    break;\n                }\n            case 'archives':\n            case 'assets':\n            case 'bookmarks':\n            case 'keywords':\n                {\n                    target[key] = resolveAsArrayOrUndefined(source[key]);\n                    break;\n                }\n            case 'authors':\n                {\n                    target[key] = resolveAsArrayOrUndefined(source.authors);\n                    break;\n                }\n            case 'itunes':\n                {\n                    target[key] = resolveItunes(source.itunes, metadataBase, metadataContext);\n                    break;\n                }\n            case 'pagination':\n                {\n                    target.pagination = resolvePagination(source.pagination, metadataBase, metadataContext);\n                    break;\n                }\n            // directly assign fields that fallback to null\n            case 'applicationName':\n            case 'description':\n            case 'generator':\n            case 'creator':\n            case 'publisher':\n            case 'category':\n            case 'classification':\n            case 'referrer':\n            case 'formatDetection':\n            case 'manifest':\n            case 'pinterest':\n                // @ts-ignore TODO: support inferring\n                target[key] = source[key] || null;\n                break;\n            case 'other':\n                target.other = Object.assign({}, target.other, source.other);\n                break;\n            case 'metadataBase':\n                target.metadataBase = metadataBase;\n                break;\n            default:\n                {\n                    if ((key === 'viewport' || key === 'themeColor' || key === 'colorScheme') && source[key] != null) {\n                        buildState.warnings.add(`Unsupported metadata ${key} is configured in metadata export in ${metadataContext.pathname}. Please move it to viewport export instead.\\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport`);\n                    }\n                    break;\n                }\n        }\n    }\n    mergeStaticMetadata(source, target, staticFilesMetadata, metadataContext, titleTemplates, leafSegmentStaticIcons);\n}\nfunction mergeViewport({ target, source }) {\n    if (!source) return;\n    for(const key_ in source){\n        const key = key_;\n        switch(key){\n            case 'themeColor':\n                {\n                    target.themeColor = resolveThemeColor(source.themeColor);\n                    break;\n                }\n            case 'colorScheme':\n                target.colorScheme = source.colorScheme || null;\n                break;\n            default:\n                // always override the target with the source\n                // @ts-ignore viewport properties\n                target[key] = source[key];\n                break;\n        }\n    }\n}\nfunction getDefinedViewport(mod, props, tracingProps) {\n    if (typeof mod.generateViewport === 'function') {\n        const { route } = tracingProps;\n        return (parent)=>getTracer().trace(ResolveMetadataSpan.generateViewport, {\n                spanName: `generateViewport ${route}`,\n                attributes: {\n                    'next.page': route\n                }\n            }, ()=>mod.generateViewport(props, parent));\n    }\n    return mod.viewport || null;\n}\nfunction getDefinedMetadata(mod, props, tracingProps) {\n    if (typeof mod.generateMetadata === 'function') {\n        const { route } = tracingProps;\n        return (parent)=>getTracer().trace(ResolveMetadataSpan.generateMetadata, {\n                spanName: `generateMetadata ${route}`,\n                attributes: {\n                    'next.page': route\n                }\n            }, ()=>mod.generateMetadata(props, parent));\n    }\n    return mod.metadata || null;\n}\nasync function collectStaticImagesFiles(metadata, props, type) {\n    var _this;\n    if (!(metadata == null ? void 0 : metadata[type])) return undefined;\n    const iconPromises = metadata[type].map(async (imageModule)=>interopDefault(await imageModule(props)));\n    return (iconPromises == null ? void 0 : iconPromises.length) > 0 ? (_this = await Promise.all(iconPromises)) == null ? void 0 : _this.flat() : undefined;\n}\nasync function resolveStaticMetadata(modules, props) {\n    const { metadata } = modules;\n    if (!metadata) return null;\n    const [icon, apple, openGraph, twitter] = await Promise.all([\n        collectStaticImagesFiles(metadata, props, 'icon'),\n        collectStaticImagesFiles(metadata, props, 'apple'),\n        collectStaticImagesFiles(metadata, props, 'openGraph'),\n        collectStaticImagesFiles(metadata, props, 'twitter')\n    ]);\n    const staticMetadata = {\n        icon,\n        apple,\n        openGraph,\n        twitter,\n        manifest: metadata.manifest\n    };\n    return staticMetadata;\n}\n// [layout.metadata, static files metadata] -> ... -> [page.metadata, static files metadata]\nasync function collectMetadata({ tree, metadataItems, errorMetadataItem, props, route, errorConvention }) {\n    let mod;\n    let modType;\n    const hasErrorConventionComponent = Boolean(errorConvention && tree[2][errorConvention]);\n    if (errorConvention) {\n        mod = await getComponentTypeModule(tree, 'layout');\n        modType = errorConvention;\n    } else {\n        const { mod: layoutOrPageMod, modType: layoutOrPageModType } = await getLayoutOrPageModule(tree);\n        mod = layoutOrPageMod;\n        modType = layoutOrPageModType;\n    }\n    if (modType) {\n        route += `/${modType}`;\n    }\n    const staticFilesMetadata = await resolveStaticMetadata(tree[2], props);\n    const metadataExport = mod ? getDefinedMetadata(mod, props, {\n        route\n    }) : null;\n    metadataItems.push([\n        metadataExport,\n        staticFilesMetadata\n    ]);\n    if (hasErrorConventionComponent && errorConvention) {\n        const errorMod = await getComponentTypeModule(tree, errorConvention);\n        const errorMetadataExport = errorMod ? getDefinedMetadata(errorMod, props, {\n            route\n        }) : null;\n        errorMetadataItem[0] = errorMetadataExport;\n        errorMetadataItem[1] = staticFilesMetadata;\n    }\n}\n// [layout.metadata, static files metadata] -> ... -> [page.metadata, static files metadata]\nasync function collectViewport({ tree, viewportItems, errorViewportItemRef, props, route, errorConvention }) {\n    let mod;\n    let modType;\n    const hasErrorConventionComponent = Boolean(errorConvention && tree[2][errorConvention]);\n    if (errorConvention) {\n        mod = await getComponentTypeModule(tree, 'layout');\n        modType = errorConvention;\n    } else {\n        const { mod: layoutOrPageMod, modType: layoutOrPageModType } = await getLayoutOrPageModule(tree);\n        mod = layoutOrPageMod;\n        modType = layoutOrPageModType;\n    }\n    if (modType) {\n        route += `/${modType}`;\n    }\n    const viewportExport = mod ? getDefinedViewport(mod, props, {\n        route\n    }) : null;\n    viewportItems.push(viewportExport);\n    if (hasErrorConventionComponent && errorConvention) {\n        const errorMod = await getComponentTypeModule(tree, errorConvention);\n        const errorViewportExport = errorMod ? getDefinedViewport(errorMod, props, {\n            route\n        }) : null;\n        errorViewportItemRef.current = errorViewportExport;\n    }\n}\nconst resolveMetadataItems = cache(async function(tree, searchParams, errorConvention, getDynamicParamFromSegment, workStore) {\n    const parentParams = {};\n    const metadataItems = [];\n    const errorMetadataItem = [\n        null,\n        null\n    ];\n    const treePrefix = undefined;\n    return resolveMetadataItemsImpl(metadataItems, tree, treePrefix, parentParams, searchParams, errorConvention, errorMetadataItem, getDynamicParamFromSegment, workStore);\n});\nasync function resolveMetadataItemsImpl(metadataItems, tree, /** Provided tree can be nested subtree, this argument says what is the path of such subtree */ treePrefix, parentParams, searchParams, errorConvention, errorMetadataItem, getDynamicParamFromSegment, workStore) {\n    const [segment, parallelRoutes, { page }] = tree;\n    const currentTreePrefix = treePrefix && treePrefix.length ? [\n        ...treePrefix,\n        segment\n    ] : [\n        segment\n    ];\n    const isPage = typeof page !== 'undefined';\n    // Handle dynamic segment params.\n    const segmentParam = getDynamicParamFromSegment(segment);\n    /**\n   * Create object holding the parent params and current params\n   */ let currentParams = parentParams;\n    if (segmentParam && segmentParam.value !== null) {\n        currentParams = {\n            ...parentParams,\n            [segmentParam.param]: segmentParam.value\n        };\n    }\n    const params = createServerParamsForMetadata(currentParams, workStore);\n    let layerProps;\n    if (isPage) {\n        layerProps = {\n            params,\n            searchParams\n        };\n    } else {\n        layerProps = {\n            params\n        };\n    }\n    await collectMetadata({\n        tree,\n        metadataItems,\n        errorMetadataItem,\n        errorConvention,\n        props: layerProps,\n        route: currentTreePrefix// __PAGE__ shouldn't be shown in a route\n        .filter((s)=>s !== PAGE_SEGMENT_KEY).join('/')\n    });\n    for(const key in parallelRoutes){\n        const childTree = parallelRoutes[key];\n        await resolveMetadataItemsImpl(metadataItems, childTree, currentTreePrefix, currentParams, searchParams, errorConvention, errorMetadataItem, getDynamicParamFromSegment, workStore);\n    }\n    if (Object.keys(parallelRoutes).length === 0 && errorConvention) {\n        // If there are no parallel routes, place error metadata as the last item.\n        // e.g. layout -> layout -> not-found\n        metadataItems.push(errorMetadataItem);\n    }\n    return metadataItems;\n}\nconst resolveViewportItems = cache(async function(tree, searchParams, errorConvention, getDynamicParamFromSegment, workStore) {\n    const parentParams = {};\n    const viewportItems = [];\n    const errorViewportItemRef = {\n        current: null\n    };\n    const treePrefix = undefined;\n    return resolveViewportItemsImpl(viewportItems, tree, treePrefix, parentParams, searchParams, errorConvention, errorViewportItemRef, getDynamicParamFromSegment, workStore);\n});\nasync function resolveViewportItemsImpl(viewportItems, tree, /** Provided tree can be nested subtree, this argument says what is the path of such subtree */ treePrefix, parentParams, searchParams, errorConvention, errorViewportItemRef, getDynamicParamFromSegment, workStore) {\n    const [segment, parallelRoutes, { page }] = tree;\n    const currentTreePrefix = treePrefix && treePrefix.length ? [\n        ...treePrefix,\n        segment\n    ] : [\n        segment\n    ];\n    const isPage = typeof page !== 'undefined';\n    // Handle dynamic segment params.\n    const segmentParam = getDynamicParamFromSegment(segment);\n    /**\n   * Create object holding the parent params and current params\n   */ let currentParams = parentParams;\n    if (segmentParam && segmentParam.value !== null) {\n        currentParams = {\n            ...parentParams,\n            [segmentParam.param]: segmentParam.value\n        };\n    }\n    const params = createServerParamsForMetadata(currentParams, workStore);\n    let layerProps;\n    if (isPage) {\n        layerProps = {\n            params,\n            searchParams\n        };\n    } else {\n        layerProps = {\n            params\n        };\n    }\n    await collectViewport({\n        tree,\n        viewportItems,\n        errorViewportItemRef,\n        errorConvention,\n        props: layerProps,\n        route: currentTreePrefix// __PAGE__ shouldn't be shown in a route\n        .filter((s)=>s !== PAGE_SEGMENT_KEY).join('/')\n    });\n    for(const key in parallelRoutes){\n        const childTree = parallelRoutes[key];\n        await resolveViewportItemsImpl(viewportItems, childTree, currentTreePrefix, currentParams, searchParams, errorConvention, errorViewportItemRef, getDynamicParamFromSegment, workStore);\n    }\n    if (Object.keys(parallelRoutes).length === 0 && errorConvention) {\n        // If there are no parallel routes, place error metadata as the last item.\n        // e.g. layout -> layout -> not-found\n        viewportItems.push(errorViewportItemRef.current);\n    }\n    return viewportItems;\n}\nconst isTitleTruthy = (title)=>!!(title == null ? void 0 : title.absolute);\nconst hasTitle = (metadata)=>isTitleTruthy(metadata == null ? void 0 : metadata.title);\nfunction inheritFromMetadata(target, metadata) {\n    if (target) {\n        if (!hasTitle(target) && hasTitle(metadata)) {\n            target.title = metadata.title;\n        }\n        if (!target.description && metadata.description) {\n            target.description = metadata.description;\n        }\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst commonOgKeys = [\n    'title',\n    'description',\n    'images'\n];\nfunction postProcessMetadata(metadata, favicon, titleTemplates, metadataContext) {\n    const { openGraph, twitter } = metadata;\n    if (openGraph) {\n        // If there's openGraph information but not configured in twitter,\n        // inherit them from openGraph metadata.\n        let autoFillProps = {};\n        const hasTwTitle = hasTitle(twitter);\n        const hasTwDescription = twitter == null ? void 0 : twitter.description;\n        const hasTwImages = Boolean((twitter == null ? void 0 : twitter.hasOwnProperty('images')) && twitter.images);\n        if (!hasTwTitle) {\n            if (isTitleTruthy(openGraph.title)) {\n                autoFillProps.title = openGraph.title;\n            } else if (metadata.title && isTitleTruthy(metadata.title)) {\n                autoFillProps.title = metadata.title;\n            }\n        }\n        if (!hasTwDescription) autoFillProps.description = openGraph.description || metadata.description || undefined;\n        if (!hasTwImages) autoFillProps.images = openGraph.images;\n        if (Object.keys(autoFillProps).length > 0) {\n            const partialTwitter = resolveTwitter(autoFillProps, metadata.metadataBase, metadataContext, titleTemplates.twitter);\n            if (metadata.twitter) {\n                metadata.twitter = Object.assign({}, metadata.twitter, {\n                    ...!hasTwTitle && {\n                        title: partialTwitter == null ? void 0 : partialTwitter.title\n                    },\n                    ...!hasTwDescription && {\n                        description: partialTwitter == null ? void 0 : partialTwitter.description\n                    },\n                    ...!hasTwImages && {\n                        images: partialTwitter == null ? void 0 : partialTwitter.images\n                    }\n                });\n            } else {\n                metadata.twitter = partialTwitter;\n            }\n        }\n    }\n    // If there's no title and description configured in openGraph or twitter,\n    // use the title and description from metadata.\n    inheritFromMetadata(openGraph, metadata);\n    inheritFromMetadata(twitter, metadata);\n    if (favicon) {\n        if (!metadata.icons) {\n            metadata.icons = {\n                icon: [],\n                apple: []\n            };\n        }\n        metadata.icons.icon.unshift(favicon);\n    }\n    return metadata;\n}\nfunction prerenderMetadata(metadataItems) {\n    // If the index is a function then it is a resolver and the next slot\n    // is the corresponding result. If the index is not a function it is the result\n    // itself.\n    const resolversAndResults = [];\n    for(let i = 0; i < metadataItems.length; i++){\n        const metadataExport = metadataItems[i][0];\n        getResult(resolversAndResults, metadataExport);\n    }\n    return resolversAndResults;\n}\nfunction prerenderViewport(viewportItems) {\n    // If the index is a function then it is a resolver and the next slot\n    // is the corresponding result. If the index is not a function it is the result\n    // itself.\n    const resolversAndResults = [];\n    for(let i = 0; i < viewportItems.length; i++){\n        const viewportExport = viewportItems[i];\n        getResult(resolversAndResults, viewportExport);\n    }\n    return resolversAndResults;\n}\nfunction getResult(resolversAndResults, exportForResult) {\n    if (typeof exportForResult === 'function') {\n        const result = exportForResult(new Promise((resolve)=>resolversAndResults.push(resolve)));\n        resolversAndResults.push(result);\n        if (result instanceof Promise) {\n            // since we eager execute generateMetadata and\n            // they can reject at anytime we need to ensure\n            // we attach the catch handler right away to\n            // prevent unhandled rejections crashing the process\n            result.catch((err)=>{\n                return {\n                    __nextError: err\n                };\n            });\n        }\n    } else if (typeof exportForResult === 'object') {\n        resolversAndResults.push(exportForResult);\n    } else {\n        resolversAndResults.push(null);\n    }\n}\nfunction resolvePendingResult(parentResult, resolveParentResult) {\n    // In dev we clone and freeze to prevent relying on mutating resolvedMetadata directly.\n    // In prod we just pass resolvedMetadata through without any copying.\n    if (process.env.NODE_ENV === 'development') {\n        parentResult = require('../../shared/lib/deep-freeze').deepFreeze(require('./clone-metadata').cloneMetadata(parentResult));\n    }\n    resolveParentResult(parentResult);\n}\nexport async function accumulateMetadata(metadataItems, metadataContext) {\n    const resolvedMetadata = createDefaultMetadata();\n    let titleTemplates = {\n        title: null,\n        twitter: null,\n        openGraph: null\n    };\n    const buildState = {\n        warnings: new Set()\n    };\n    let favicon;\n    // Collect the static icons in the most leaf node,\n    // since we don't collect all the static metadata icons in the parent segments.\n    const leafSegmentStaticIcons = {\n        icon: [],\n        apple: []\n    };\n    const resolversAndResults = prerenderMetadata(metadataItems);\n    let resultIndex = 0;\n    for(let i = 0; i < metadataItems.length; i++){\n        var _staticFilesMetadata_icon;\n        const staticFilesMetadata = metadataItems[i][1];\n        // Treat favicon as special case, it should be the first icon in the list\n        // i <= 1 represents root layout, and if current page is also at root\n        if (i <= 1 && isFavicon(staticFilesMetadata == null ? void 0 : (_staticFilesMetadata_icon = staticFilesMetadata.icon) == null ? void 0 : _staticFilesMetadata_icon[0])) {\n            var _staticFilesMetadata_icon1;\n            const iconMod = staticFilesMetadata == null ? void 0 : (_staticFilesMetadata_icon1 = staticFilesMetadata.icon) == null ? void 0 : _staticFilesMetadata_icon1.shift();\n            if (i === 0) favicon = iconMod;\n        }\n        let pendingMetadata = resolversAndResults[resultIndex++];\n        if (typeof pendingMetadata === 'function') {\n            // This metadata item had a `generateMetadata` and\n            // we need to provide the currently resolved metadata\n            // to it before we continue;\n            const resolveParentMetadata = pendingMetadata;\n            // we know that the next item is a result if this item\n            // was a resolver\n            pendingMetadata = resolversAndResults[resultIndex++];\n            resolvePendingResult(resolvedMetadata, resolveParentMetadata);\n        }\n        // Otherwise the item was either null or a static export\n        let metadata;\n        if (isPromiseLike(pendingMetadata)) {\n            metadata = await pendingMetadata;\n        } else {\n            metadata = pendingMetadata;\n        }\n        mergeMetadata({\n            target: resolvedMetadata,\n            source: metadata,\n            metadataContext,\n            staticFilesMetadata,\n            titleTemplates,\n            buildState,\n            leafSegmentStaticIcons\n        });\n        // If the layout is the same layer with page, skip the leaf layout and leaf page\n        // The leaf layout and page are the last two items\n        if (i < metadataItems.length - 2) {\n            var _resolvedMetadata_title, _resolvedMetadata_openGraph, _resolvedMetadata_twitter;\n            titleTemplates = {\n                title: ((_resolvedMetadata_title = resolvedMetadata.title) == null ? void 0 : _resolvedMetadata_title.template) || null,\n                openGraph: ((_resolvedMetadata_openGraph = resolvedMetadata.openGraph) == null ? void 0 : _resolvedMetadata_openGraph.title.template) || null,\n                twitter: ((_resolvedMetadata_twitter = resolvedMetadata.twitter) == null ? void 0 : _resolvedMetadata_twitter.title.template) || null\n            };\n        }\n    }\n    if (leafSegmentStaticIcons.icon.length > 0 || leafSegmentStaticIcons.apple.length > 0) {\n        if (!resolvedMetadata.icons) {\n            resolvedMetadata.icons = {\n                icon: [],\n                apple: []\n            };\n            if (leafSegmentStaticIcons.icon.length > 0) {\n                resolvedMetadata.icons.icon.unshift(...leafSegmentStaticIcons.icon);\n            }\n            if (leafSegmentStaticIcons.apple.length > 0) {\n                resolvedMetadata.icons.apple.unshift(...leafSegmentStaticIcons.apple);\n            }\n        }\n    }\n    // Only log warnings if there are any, and only once after the metadata resolving process is finished\n    if (buildState.warnings.size > 0) {\n        for (const warning of buildState.warnings){\n            Log.warn(warning);\n        }\n    }\n    return postProcessMetadata(resolvedMetadata, favicon, titleTemplates, metadataContext);\n}\nexport async function accumulateViewport(viewportItems) {\n    const resolvedViewport = createDefaultViewport();\n    const resolversAndResults = prerenderViewport(viewportItems);\n    let i = 0;\n    while(i < resolversAndResults.length){\n        let pendingViewport = resolversAndResults[i++];\n        if (typeof pendingViewport === 'function') {\n            // this viewport item had a `generateViewport` and\n            // we need to provide the currently resolved viewport\n            // to it before we continue;\n            const resolveParentViewport = pendingViewport;\n            // we know that the next item is a result if this item\n            // was a resolver\n            pendingViewport = resolversAndResults[i++];\n            resolvePendingResult(resolvedViewport, resolveParentViewport);\n        }\n        // Otherwise the item was either null or a static export\n        let viewport;\n        if (isPromiseLike(pendingViewport)) {\n            viewport = await pendingViewport;\n        } else {\n            viewport = pendingViewport;\n        }\n        mergeViewport({\n            target: resolvedViewport,\n            source: viewport\n        });\n    }\n    return resolvedViewport;\n}\n// Exposed API for metadata component, that directly resolve the loader tree and related context as resolved metadata.\nexport async function resolveMetadata(tree, searchParams, errorConvention, getDynamicParamFromSegment, workStore, metadataContext) {\n    const metadataItems = await resolveMetadataItems(tree, searchParams, errorConvention, getDynamicParamFromSegment, workStore);\n    return accumulateMetadata(metadataItems, metadataContext);\n}\n// Exposed API for viewport component, that directly resolve the loader tree and related context as resolved viewport.\nexport async function resolveViewport(tree, searchParams, errorConvention, getDynamicParamFromSegment, workStore) {\n    const viewportItems = await resolveViewportItems(tree, searchParams, errorConvention, getDynamicParamFromSegment, workStore);\n    return accumulateViewport(viewportItems);\n}\nfunction isPromiseLike(value) {\n    return typeof value === 'object' && value !== null && typeof value.then === 'function';\n}\n\n//# sourceMappingURL=resolve-metadata.js.map","export const HTTPAccessErrorStatus = {\n  NOT_FOUND: 404,\n  FORBIDDEN: 403,\n  UNAUTHORIZED: 401,\n}\n\nconst ALLOWED_CODES = new Set(Object.values(HTTPAccessErrorStatus))\n\nexport const HTTP_ERROR_FALLBACK_ERROR_CODE = 'NEXT_HTTP_ERROR_FALLBACK'\n\nexport type HTTPAccessFallbackError = Error & {\n  digest: `${typeof HTTP_ERROR_FALLBACK_ERROR_CODE};${string}`\n}\n\n/**\n * Checks an error to determine if it's an error generated by\n * the HTTP navigation APIs `notFound()`, `forbidden()` or `unauthorized()`.\n *\n * @param error the error that may reference a HTTP access error\n * @returns true if the error is a HTTP access error\n */\nexport function isHTTPAccessFallbackError(\n  error: unknown\n): error is HTTPAccessFallbackError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n  const [prefix, httpStatus] = error.digest.split(';')\n\n  return (\n    prefix === HTTP_ERROR_FALLBACK_ERROR_CODE &&\n    ALLOWED_CODES.has(Number(httpStatus))\n  )\n}\n\nexport function getAccessFallbackHTTPStatus(\n  error: HTTPAccessFallbackError\n): number {\n  const httpStatus = error.digest.split(';')[1]\n  return Number(httpStatus)\n}\n\nexport function getAccessFallbackErrorTypeByStatus(\n  status: number\n): 'not-found' | 'forbidden' | 'unauthorized' | undefined {\n  switch (status) {\n    case 401:\n      return 'unauthorized'\n    case 403:\n      return 'forbidden'\n    case 404:\n      return 'not-found'\n    default:\n      return\n  }\n}\n","const REACT_POSTPONE_TYPE = Symbol.for('react.postpone');\nexport function isPostpone(error) {\n    return typeof error === 'object' && error !== null && error.$$typeof === REACT_POSTPONE_TYPE;\n}\n\n//# sourceMappingURL=is-postpone.js.map","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React, { Suspense, cache, cloneElement } from 'react';\nimport { AppleWebAppMeta, FormatDetectionMeta, ItunesMeta, BasicMeta, ViewportMeta, VerificationMeta, FacebookMeta, PinterestMeta } from './generate/basic';\nimport { AlternatesMetadata } from './generate/alternate';\nimport { OpenGraphMetadata, TwitterMetadata, AppLinksMeta } from './generate/opengraph';\nimport { IconsMetadata } from './generate/icons';\nimport { resolveMetadata, resolveViewport } from './resolve-metadata';\nimport { MetaFilter } from './generate/meta';\nimport { isHTTPAccessFallbackError } from '../../client/components/http-access-fallback/http-access-fallback';\nimport { METADATA_BOUNDARY_NAME, VIEWPORT_BOUNDARY_NAME } from './metadata-constants';\nimport { AsyncMetadata, AsyncMetadataOutlet } from '../../client/components/metadata/async-metadata';\nimport { isPostpone } from '../../server/lib/router-utils/is-postpone';\nimport { createServerSearchParamsForMetadata } from '../../server/request/search-params';\n// Use a promise to share the status of the metadata resolving,\n// returning two components `MetadataTree` and `MetadataOutlet`\n// `MetadataTree` is the one that will be rendered at first in the content sequence for metadata tags.\n// `MetadataOutlet` is the one that will be rendered under error boundaries for metadata resolving errors.\n// In this way we can let the metadata tags always render successfully,\n// and the error will be caught by the error boundary and trigger fallbacks.\nexport function createMetadataComponents({ tree, parsedQuery, metadataContext, getDynamicParamFromSegment, appUsingSizeAdjustment, errorType, workStore, MetadataBoundary, ViewportBoundary, serveStreamingMetadata }) {\n    const searchParams = createServerSearchParamsForMetadata(parsedQuery, workStore);\n    function ViewportTree() {\n        return /*#__PURE__*/ _jsxs(_Fragment, {\n            children: [\n                /*#__PURE__*/ _jsx(ViewportBoundary, {\n                    children: /*#__PURE__*/ _jsx(Viewport, {})\n                }),\n                appUsingSizeAdjustment ? /*#__PURE__*/ _jsx(\"meta\", {\n                    name: \"next-size-adjust\",\n                    content: \"\"\n                }) : null\n            ]\n        });\n    }\n    function MetadataTree() {\n        return /*#__PURE__*/ _jsx(MetadataBoundary, {\n            children: /*#__PURE__*/ _jsx(Metadata, {})\n        });\n    }\n    function viewport() {\n        return getResolvedViewport(tree, searchParams, getDynamicParamFromSegment, workStore, errorType);\n    }\n    async function Viewport() {\n        try {\n            return await viewport();\n        } catch (error) {\n            if (!errorType && isHTTPAccessFallbackError(error)) {\n                try {\n                    return await getNotFoundViewport(tree, searchParams, getDynamicParamFromSegment, workStore);\n                } catch  {}\n            }\n            // We don't actually want to error in this component. We will\n            // also error in the MetadataOutlet which causes the error to\n            // bubble from the right position in the page to be caught by the\n            // appropriate boundaries\n            return null;\n        }\n    }\n    Viewport.displayName = VIEWPORT_BOUNDARY_NAME;\n    function metadata() {\n        return getResolvedMetadata(tree, searchParams, getDynamicParamFromSegment, metadataContext, workStore, errorType);\n    }\n    async function resolveFinalMetadata() {\n        let result;\n        let error = null;\n        try {\n            result = await metadata();\n            return {\n                metadata: result,\n                error: null,\n                digest: undefined\n            };\n        } catch (metadataErr) {\n            error = metadataErr;\n            if (!errorType && isHTTPAccessFallbackError(metadataErr)) {\n                try {\n                    result = await getNotFoundMetadata(tree, searchParams, getDynamicParamFromSegment, metadataContext, workStore);\n                    return {\n                        metadata: result,\n                        error,\n                        digest: error == null ? void 0 : error.digest\n                    };\n                } catch (notFoundMetadataErr) {\n                    error = notFoundMetadataErr;\n                    // In PPR rendering we still need to throw the postpone error.\n                    // If metadata is postponed, React needs to be aware of the location of error.\n                    if (serveStreamingMetadata && isPostpone(notFoundMetadataErr)) {\n                        throw notFoundMetadataErr;\n                    }\n                }\n            }\n            // In PPR rendering we still need to throw the postpone error.\n            // If metadata is postponed, React needs to be aware of the location of error.\n            if (serveStreamingMetadata && isPostpone(metadataErr)) {\n                throw metadataErr;\n            }\n            // We don't actually want to error in this component. We will\n            // also error in the MetadataOutlet which causes the error to\n            // bubble from the right position in the page to be caught by the\n            // appropriate boundaries\n            return {\n                metadata: result,\n                error,\n                digest: error == null ? void 0 : error.digest\n            };\n        }\n    }\n    async function Metadata() {\n        const promise = resolveFinalMetadata();\n        if (serveStreamingMetadata) {\n            return /*#__PURE__*/ _jsx(\"div\", {\n                hidden: true,\n                children: /*#__PURE__*/ _jsx(Suspense, {\n                    fallback: null,\n                    children: /*#__PURE__*/ _jsx(AsyncMetadata, {\n                        promise: promise\n                    })\n                })\n            });\n        }\n        const metadataState = await promise;\n        return metadataState.metadata;\n    }\n    Metadata.displayName = METADATA_BOUNDARY_NAME;\n    async function getMetadataReady() {\n        // Only warm up metadata() call when it's blocking metadata,\n        // otherwise it will be fully managed by AsyncMetadata component.\n        if (!serveStreamingMetadata) {\n            await metadata();\n        }\n        return undefined;\n    }\n    async function getViewportReady() {\n        await viewport();\n        return undefined;\n    }\n    function StreamingMetadataOutlet() {\n        if (serveStreamingMetadata) {\n            return /*#__PURE__*/ _jsx(AsyncMetadataOutlet, {\n                promise: resolveFinalMetadata()\n            });\n        }\n        return null;\n    }\n    return {\n        ViewportTree,\n        MetadataTree,\n        getViewportReady,\n        getMetadataReady,\n        StreamingMetadataOutlet\n    };\n}\nconst getResolvedMetadata = cache(getResolvedMetadataImpl);\nasync function getResolvedMetadataImpl(tree, searchParams, getDynamicParamFromSegment, metadataContext, workStore, errorType) {\n    const errorConvention = errorType === 'redirect' ? undefined : errorType;\n    return renderMetadata(tree, searchParams, getDynamicParamFromSegment, metadataContext, workStore, errorConvention);\n}\nconst getNotFoundMetadata = cache(getNotFoundMetadataImpl);\nasync function getNotFoundMetadataImpl(tree, searchParams, getDynamicParamFromSegment, metadataContext, workStore) {\n    const notFoundErrorConvention = 'not-found';\n    return renderMetadata(tree, searchParams, getDynamicParamFromSegment, metadataContext, workStore, notFoundErrorConvention);\n}\nconst getResolvedViewport = cache(getResolvedViewportImpl);\nasync function getResolvedViewportImpl(tree, searchParams, getDynamicParamFromSegment, workStore, errorType) {\n    const errorConvention = errorType === 'redirect' ? undefined : errorType;\n    return renderViewport(tree, searchParams, getDynamicParamFromSegment, workStore, errorConvention);\n}\nconst getNotFoundViewport = cache(getNotFoundViewportImpl);\nasync function getNotFoundViewportImpl(tree, searchParams, getDynamicParamFromSegment, workStore) {\n    const notFoundErrorConvention = 'not-found';\n    return renderViewport(tree, searchParams, getDynamicParamFromSegment, workStore, notFoundErrorConvention);\n}\nasync function renderMetadata(tree, searchParams, getDynamicParamFromSegment, metadataContext, workStore, errorConvention) {\n    const resolvedMetadata = await resolveMetadata(tree, searchParams, errorConvention, getDynamicParamFromSegment, workStore, metadataContext);\n    const elements = createMetadataElements(resolvedMetadata);\n    return /*#__PURE__*/ _jsx(_Fragment, {\n        children: elements.map((el, index)=>{\n            return /*#__PURE__*/ cloneElement(el, {\n                key: index\n            });\n        })\n    });\n}\nasync function renderViewport(tree, searchParams, getDynamicParamFromSegment, workStore, errorConvention) {\n    const resolvedViewport = await resolveViewport(tree, searchParams, errorConvention, getDynamicParamFromSegment, workStore);\n    const elements = createViewportElements(resolvedViewport);\n    return /*#__PURE__*/ _jsx(_Fragment, {\n        children: elements.map((el, index)=>{\n            return /*#__PURE__*/ cloneElement(el, {\n                key: index\n            });\n        })\n    });\n}\nfunction createMetadataElements(metadata) {\n    return MetaFilter([\n        BasicMeta({\n            metadata\n        }),\n        AlternatesMetadata({\n            alternates: metadata.alternates\n        }),\n        ItunesMeta({\n            itunes: metadata.itunes\n        }),\n        FacebookMeta({\n            facebook: metadata.facebook\n        }),\n        PinterestMeta({\n            pinterest: metadata.pinterest\n        }),\n        FormatDetectionMeta({\n            formatDetection: metadata.formatDetection\n        }),\n        VerificationMeta({\n            verification: metadata.verification\n        }),\n        AppleWebAppMeta({\n            appleWebApp: metadata.appleWebApp\n        }),\n        OpenGraphMetadata({\n            openGraph: metadata.openGraph\n        }),\n        TwitterMetadata({\n            twitter: metadata.twitter\n        }),\n        AppLinksMeta({\n            appLinks: metadata.appLinks\n        }),\n        IconsMetadata({\n            icons: metadata.icons\n        })\n    ]);\n}\nfunction createViewportElements(viewport) {\n    return MetaFilter([\n        ViewportMeta({\n            viewport: viewport\n        })\n    ]);\n}\n\n//# sourceMappingURL=metadata.js.map","/**\n * Clones a response by teeing the body so we can return two independent\n * ReadableStreams from it. This avoids the bug in the undici library around\n * response cloning.\n *\n * After cloning, the original response's body will be consumed and closed.\n *\n * @see https://github.com/vercel/next.js/pull/73274\n *\n * @param original - The original response to clone.\n * @returns A tuple containing two independent clones of the original response.\n */ export function cloneResponse(original) {\n    // If the response has no body, then we can just return the original response\n    // twice because it's immutable.\n    if (!original.body) {\n        return [\n            original,\n            original\n        ];\n    }\n    const [body1, body2] = original.body.tee();\n    const cloned1 = new Response(body1, {\n        status: original.status,\n        statusText: original.statusText,\n        headers: original.headers\n    });\n    Object.defineProperty(cloned1, 'url', {\n        value: original.url\n    });\n    const cloned2 = new Response(body2, {\n        status: original.status,\n        statusText: original.statusText,\n        headers: original.headers\n    });\n    Object.defineProperty(cloned2, 'url', {\n        value: original.url\n    });\n    return [\n        cloned1,\n        cloned2\n    ];\n}\n\n//# sourceMappingURL=clone-response.js.map","/**\n * Based on https://github.com/facebook/react/blob/d4e78c42a94be027b4dc7ed2659a5fddfbf9bd4e/packages/react/src/ReactFetch.js\n */ import * as React from 'react';\nimport { cloneResponse } from './clone-response';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nconst simpleCacheKey = '[\"GET\",[],null,\"follow\",null,null,null,null]' // generateCacheKey(new Request('https://blank'));\n;\nfunction generateCacheKey(request) {\n    // We pick the fields that goes into the key used to dedupe requests.\n    // We don't include the `cache` field, because we end up using whatever\n    // caching resulted from the first request.\n    // Notably we currently don't consider non-standard (or future) options.\n    // This might not be safe. TODO: warn for non-standard extensions differing.\n    // IF YOU CHANGE THIS UPDATE THE simpleCacheKey ABOVE.\n    return JSON.stringify([\n        request.method,\n        Array.from(request.headers.entries()),\n        request.mode,\n        request.redirect,\n        request.credentials,\n        request.referrer,\n        request.referrerPolicy,\n        request.integrity\n    ]);\n}\nexport function createDedupeFetch(originalFetch) {\n    const getCacheEntries = React.cache(// eslint-disable-next-line @typescript-eslint/no-unused-vars -- url is the cache key\n    (url)=>[]);\n    return function dedupeFetch(resource, options) {\n        if (options && options.signal) {\n            // If we're passed a signal, then we assume that\n            // someone else controls the lifetime of this object and opts out of\n            // caching. It's effectively the opt-out mechanism.\n            // Ideally we should be able to check this on the Request but\n            // it always gets initialized with its own signal so we don't\n            // know if it's supposed to override - unless we also override the\n            // Request constructor.\n            return originalFetch(resource, options);\n        }\n        // Normalize the Request\n        let url;\n        let cacheKey;\n        if (typeof resource === 'string' && !options) {\n            // Fast path.\n            cacheKey = simpleCacheKey;\n            url = resource;\n        } else {\n            // Normalize the request.\n            // if resource is not a string or a URL (its an instance of Request)\n            // then do not instantiate a new Request but instead\n            // reuse the request as to not disturb the body in the event it's a ReadableStream.\n            const request = typeof resource === 'string' || resource instanceof URL ? new Request(resource, options) : resource;\n            if (request.method !== 'GET' && request.method !== 'HEAD' || request.keepalive) {\n                // We currently don't dedupe requests that might have side-effects. Those\n                // have to be explicitly cached. We assume that the request doesn't have a\n                // body if it's GET or HEAD.\n                // keepalive gets treated the same as if you passed a custom cache signal.\n                return originalFetch(resource, options);\n            }\n            cacheKey = generateCacheKey(request);\n            url = request.url;\n        }\n        const cacheEntries = getCacheEntries(url);\n        for(let i = 0, j = cacheEntries.length; i < j; i += 1){\n            const [key, promise] = cacheEntries[i];\n            if (key === cacheKey) {\n                return promise.then(()=>{\n                    const response = cacheEntries[i][2];\n                    if (!response) throw Object.defineProperty(new InvariantError('No cached response'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E579\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                    // We're cloning the response using this utility because there exists\n                    // a bug in the undici library around response cloning. See the\n                    // following pull request for more details:\n                    // https://github.com/vercel/next.js/pull/73274\n                    const [cloned1, cloned2] = cloneResponse(response);\n                    cacheEntries[i][2] = cloned2;\n                    return cloned1;\n                });\n            }\n        }\n        // We pass the original arguments here in case normalizing the Request\n        // doesn't include all the options in this environment.\n        const promise = originalFetch(resource, options);\n        const entry = [\n            cacheKey,\n            promise,\n            null\n        ];\n        cacheEntries.push(entry);\n        return promise.then((response)=>{\n            // We're cloning the response using this utility because there exists\n            // a bug in the undici library around response cloning. See the\n            // following pull request for more details:\n            // https://github.com/vercel/next.js/pull/73274\n            const [cloned1, cloned2] = cloneResponse(response);\n            entry[2] = cloned2;\n            return cloned1;\n        });\n    };\n}\n\n//# sourceMappingURL=dedupe-fetch.js.map","export var CachedRouteKind = /*#__PURE__*/ function(CachedRouteKind) {\n    CachedRouteKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    CachedRouteKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    CachedRouteKind[\"PAGES\"] = \"PAGES\";\n    CachedRouteKind[\"FETCH\"] = \"FETCH\";\n    CachedRouteKind[\"REDIRECT\"] = \"REDIRECT\";\n    CachedRouteKind[\"IMAGE\"] = \"IMAGE\";\n    return CachedRouteKind;\n}({});\nexport var IncrementalCacheKind = /*#__PURE__*/ function(IncrementalCacheKind) {\n    IncrementalCacheKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    IncrementalCacheKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    IncrementalCacheKind[\"PAGES\"] = \"PAGES\";\n    IncrementalCacheKind[\"FETCH\"] = \"FETCH\";\n    IncrementalCacheKind[\"IMAGE\"] = \"IMAGE\";\n    return IncrementalCacheKind;\n}({});\n\n//# sourceMappingURL=types.js.map","export const ENCODED_TAGS = {\n    // opening tags do not have the closing `>` since they can contain other attributes such as `<body className=''>`\n    OPENING: {\n        // <html\n        HTML: new Uint8Array([\n            60,\n            104,\n            116,\n            109,\n            108\n        ]),\n        // <body\n        BODY: new Uint8Array([\n            60,\n            98,\n            111,\n            100,\n            121\n        ])\n    },\n    CLOSED: {\n        // </head>\n        HEAD: new Uint8Array([\n            60,\n            47,\n            104,\n            101,\n            97,\n            100,\n            62\n        ]),\n        // </body>\n        BODY: new Uint8Array([\n            60,\n            47,\n            98,\n            111,\n            100,\n            121,\n            62\n        ]),\n        // </html>\n        HTML: new Uint8Array([\n            60,\n            47,\n            104,\n            116,\n            109,\n            108,\n            62\n        ]),\n        // </body></html>\n        BODY_AND_HTML: new Uint8Array([\n            60,\n            47,\n            98,\n            111,\n            100,\n            121,\n            62,\n            60,\n            47,\n            104,\n            116,\n            109,\n            108,\n            62\n        ])\n    }\n};\n\n//# sourceMappingURL=encodedTags.js.map","import { getTracer } from '../lib/trace/tracer';\nimport { AppRenderSpan } from '../lib/trace/constants';\nimport { DetachedPromise } from '../../lib/detached-promise';\nimport { scheduleImmediate, atLeastOneTask } from '../../lib/scheduler';\nimport { ENCODED_TAGS } from './encodedTags';\nimport { indexOfUint8Array, isEquivalentUint8Arrays, removeFromUint8Array } from './uint8array-helpers';\nimport { MISSING_ROOT_TAGS_ERROR } from '../../shared/lib/errors/constants';\nfunction voidCatch() {\n// this catcher is designed to be used with pipeTo where we expect the underlying\n// pipe implementation to forward errors but we don't want the pipeTo promise to reject\n// and be unhandled\n}\n// We can share the same encoder instance everywhere\n// Notably we cannot do the same for TextDecoder because it is stateful\n// when handling streaming data\nconst encoder = new TextEncoder();\nexport function chainStreams(...streams) {\n    // We could encode this invariant in the arguments but current uses of this function pass\n    // use spread so it would be missed by\n    if (streams.length === 0) {\n        throw Object.defineProperty(new Error('Invariant: chainStreams requires at least one stream'), \"__NEXT_ERROR_CODE\", {\n            value: \"E437\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    // If we only have 1 stream we fast path it by returning just this stream\n    if (streams.length === 1) {\n        return streams[0];\n    }\n    const { readable, writable } = new TransformStream();\n    // We always initiate pipeTo immediately. We know we have at least 2 streams\n    // so we need to avoid closing the writable when this one finishes.\n    let promise = streams[0].pipeTo(writable, {\n        preventClose: true\n    });\n    let i = 1;\n    for(; i < streams.length - 1; i++){\n        const nextStream = streams[i];\n        promise = promise.then(()=>nextStream.pipeTo(writable, {\n                preventClose: true\n            }));\n    }\n    // We can omit the length check because we halted before the last stream and there\n    // is at least two streams so the lastStream here will always be defined\n    const lastStream = streams[i];\n    promise = promise.then(()=>lastStream.pipeTo(writable));\n    // Catch any errors from the streams and ignore them, they will be handled\n    // by whatever is consuming the readable stream.\n    promise.catch(voidCatch);\n    return readable;\n}\nexport function streamFromString(str) {\n    return new ReadableStream({\n        start (controller) {\n            controller.enqueue(encoder.encode(str));\n            controller.close();\n        }\n    });\n}\nexport function streamFromBuffer(chunk) {\n    return new ReadableStream({\n        start (controller) {\n            controller.enqueue(chunk);\n            controller.close();\n        }\n    });\n}\nexport async function streamToBuffer(stream) {\n    const reader = stream.getReader();\n    const chunks = [];\n    while(true){\n        const { done, value } = await reader.read();\n        if (done) {\n            break;\n        }\n        chunks.push(value);\n    }\n    return Buffer.concat(chunks);\n}\nexport async function streamToString(stream, signal) {\n    const decoder = new TextDecoder('utf-8', {\n        fatal: true\n    });\n    let string = '';\n    for await (const chunk of stream){\n        if (signal == null ? void 0 : signal.aborted) {\n            return string;\n        }\n        string += decoder.decode(chunk, {\n            stream: true\n        });\n    }\n    string += decoder.decode();\n    return string;\n}\nexport function createBufferedTransformStream() {\n    let bufferedChunks = [];\n    let bufferByteLength = 0;\n    let pending;\n    const flush = (controller)=>{\n        // If we already have a pending flush, then return early.\n        if (pending) return;\n        const detached = new DetachedPromise();\n        pending = detached;\n        scheduleImmediate(()=>{\n            try {\n                const chunk = new Uint8Array(bufferByteLength);\n                let copiedBytes = 0;\n                for(let i = 0; i < bufferedChunks.length; i++){\n                    const bufferedChunk = bufferedChunks[i];\n                    chunk.set(bufferedChunk, copiedBytes);\n                    copiedBytes += bufferedChunk.byteLength;\n                }\n                // We just wrote all the buffered chunks so we need to reset the bufferedChunks array\n                // and our bufferByteLength to prepare for the next round of buffered chunks\n                bufferedChunks.length = 0;\n                bufferByteLength = 0;\n                controller.enqueue(chunk);\n            } catch  {\n            // If an error occurs while enqueuing it can't be due to this\n            // transformers fault. It's likely due to the controller being\n            // errored due to the stream being cancelled.\n            } finally{\n                pending = undefined;\n                detached.resolve();\n            }\n        });\n    };\n    return new TransformStream({\n        transform (chunk, controller) {\n            // Combine the previous buffer with the new chunk.\n            bufferedChunks.push(chunk);\n            bufferByteLength += chunk.byteLength;\n            // Flush the buffer to the controller.\n            flush(controller);\n        },\n        flush () {\n            if (!pending) return;\n            return pending.promise;\n        }\n    });\n}\nexport function renderToInitialFizzStream({ ReactDOMServer, element, streamOptions }) {\n    return getTracer().trace(AppRenderSpan.renderToReadableStream, async ()=>ReactDOMServer.renderToReadableStream(element, streamOptions));\n}\nfunction createHeadInsertionTransformStream(insert) {\n    let inserted = false;\n    // We need to track if this transform saw any bytes because if it didn't\n    // we won't want to insert any server HTML at all\n    let hasBytes = false;\n    return new TransformStream({\n        async transform (chunk, controller) {\n            hasBytes = true;\n            const insertion = await insert();\n            if (inserted) {\n                if (insertion) {\n                    const encodedInsertion = encoder.encode(insertion);\n                    controller.enqueue(encodedInsertion);\n                }\n                controller.enqueue(chunk);\n            } else {\n                // TODO (@Ethan-Arrowood): Replace the generic `indexOfUint8Array` method with something finely tuned for the subset of things actually being checked for.\n                const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD);\n                // In fully static rendering or non PPR rendering cases:\n                // `/head>` will always be found in the chunk in first chunk rendering.\n                if (index !== -1) {\n                    if (insertion) {\n                        const encodedInsertion = encoder.encode(insertion);\n                        // Get the total count of the bytes in the chunk and the insertion\n                        // e.g.\n                        // chunk = <head><meta charset=\"utf-8\"></head>\n                        // insertion = <script>...</script>\n                        // output = <head><meta charset=\"utf-8\"> [ <script>...</script> ] </head>\n                        const insertedHeadContent = new Uint8Array(chunk.length + encodedInsertion.length);\n                        // Append the first part of the chunk, before the head tag\n                        insertedHeadContent.set(chunk.slice(0, index));\n                        // Append the server inserted content\n                        insertedHeadContent.set(encodedInsertion, index);\n                        // Append the rest of the chunk\n                        insertedHeadContent.set(chunk.slice(index), index + encodedInsertion.length);\n                        controller.enqueue(insertedHeadContent);\n                    } else {\n                        controller.enqueue(chunk);\n                    }\n                    inserted = true;\n                } else {\n                    // This will happens in PPR rendering during next start, when the page is partially rendered.\n                    // When the page resumes, the head tag will be found in the middle of the chunk.\n                    // Where we just need to append the insertion and chunk to the current stream.\n                    // e.g.\n                    // PPR-static: <head>...</head><body> [ resume content ] </body>\n                    // PPR-resume: [ insertion ] [ rest content ]\n                    if (insertion) {\n                        controller.enqueue(encoder.encode(insertion));\n                    }\n                    controller.enqueue(chunk);\n                    inserted = true;\n                }\n            }\n        },\n        async flush (controller) {\n            // Check before closing if there's anything remaining to insert.\n            if (hasBytes) {\n                const insertion = await insert();\n                if (insertion) {\n                    controller.enqueue(encoder.encode(insertion));\n                }\n            }\n        }\n    });\n}\n// Suffix after main body content - scripts before </body>,\n// but wait for the major chunks to be enqueued.\nfunction createDeferredSuffixStream(suffix) {\n    let flushed = false;\n    let pending;\n    const flush = (controller)=>{\n        const detached = new DetachedPromise();\n        pending = detached;\n        scheduleImmediate(()=>{\n            try {\n                controller.enqueue(encoder.encode(suffix));\n            } catch  {\n            // If an error occurs while enqueuing it can't be due to this\n            // transformers fault. It's likely due to the controller being\n            // errored due to the stream being cancelled.\n            } finally{\n                pending = undefined;\n                detached.resolve();\n            }\n        });\n    };\n    return new TransformStream({\n        transform (chunk, controller) {\n            controller.enqueue(chunk);\n            // If we've already flushed, we're done.\n            if (flushed) return;\n            // Schedule the flush to happen.\n            flushed = true;\n            flush(controller);\n        },\n        flush (controller) {\n            if (pending) return pending.promise;\n            if (flushed) return;\n            // Flush now.\n            controller.enqueue(encoder.encode(suffix));\n        }\n    });\n}\n// Merge two streams into one. Ensure the final transform stream is closed\n// when both are finished.\nfunction createMergedTransformStream(stream) {\n    let pull = null;\n    let donePulling = false;\n    async function startPulling(controller) {\n        if (pull) {\n            return;\n        }\n        const reader = stream.getReader();\n        // NOTE: streaming flush\n        // We are buffering here for the inlined data stream because the\n        // \"shell\" stream might be chunkenized again by the underlying stream\n        // implementation, e.g. with a specific high-water mark. To ensure it's\n        // the safe timing to pipe the data stream, this extra tick is\n        // necessary.\n        // We don't start reading until we've left the current Task to ensure\n        // that it's inserted after flushing the shell. Note that this implementation\n        // might get stale if impl details of Fizz change in the future.\n        await atLeastOneTask();\n        try {\n            while(true){\n                const { done, value } = await reader.read();\n                if (done) {\n                    donePulling = true;\n                    return;\n                }\n                controller.enqueue(value);\n            }\n        } catch (err) {\n            controller.error(err);\n        }\n    }\n    return new TransformStream({\n        transform (chunk, controller) {\n            controller.enqueue(chunk);\n            // Start the streaming if it hasn't already been started yet.\n            if (!pull) {\n                pull = startPulling(controller);\n            }\n        },\n        flush (controller) {\n            if (donePulling) {\n                return;\n            }\n            return pull || startPulling(controller);\n        }\n    });\n}\nconst CLOSE_TAG = '</body></html>';\n/**\n * This transform stream moves the suffix to the end of the stream, so results\n * like `</body></html><script>...</script>` will be transformed to\n * `<script>...</script></body></html>`.\n */ function createMoveSuffixStream() {\n    let foundSuffix = false;\n    return new TransformStream({\n        transform (chunk, controller) {\n            if (foundSuffix) {\n                return controller.enqueue(chunk);\n            }\n            const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n            if (index > -1) {\n                foundSuffix = true;\n                // If the whole chunk is the suffix, then don't write anything, it will\n                // be written in the flush.\n                if (chunk.length === ENCODED_TAGS.CLOSED.BODY_AND_HTML.length) {\n                    return;\n                }\n                // Write out the part before the suffix.\n                const before = chunk.slice(0, index);\n                controller.enqueue(before);\n                // In the case where the suffix is in the middle of the chunk, we need\n                // to split the chunk into two parts.\n                if (chunk.length > ENCODED_TAGS.CLOSED.BODY_AND_HTML.length + index) {\n                    // Write out the part after the suffix.\n                    const after = chunk.slice(index + ENCODED_TAGS.CLOSED.BODY_AND_HTML.length);\n                    controller.enqueue(after);\n                }\n            } else {\n                controller.enqueue(chunk);\n            }\n        },\n        flush (controller) {\n            // Even if we didn't find the suffix, the HTML is not valid if we don't\n            // add it, so insert it at the end.\n            controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n        }\n    });\n}\nfunction createStripDocumentClosingTagsTransform() {\n    return new TransformStream({\n        transform (chunk, controller) {\n            // We rely on the assumption that chunks will never break across a code unit.\n            // This is reasonable because we currently concat all of React's output from a single\n            // flush into one chunk before streaming it forward which means the chunk will represent\n            // a single coherent utf-8 string. This is not safe to use if we change our streaming to no\n            // longer do this large buffered chunk\n            if (isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML) || isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY) || isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.HTML)) {\n                // the entire chunk is the closing tags; return without enqueueing anything.\n                return;\n            }\n            // We assume these tags will go at together at the end of the document and that\n            // they won't appear anywhere else in the document. This is not really a safe assumption\n            // but until we revamp our streaming infra this is a performant way to string the tags\n            chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY);\n            chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.HTML);\n            controller.enqueue(chunk);\n        }\n    });\n}\n/*\n * Checks if the root layout is missing the html or body tags\n * and if so, it will inject a script tag to throw an error in the browser, showing the user\n * the error message in the error overlay.\n */ export function createRootLayoutValidatorStream() {\n    let foundHtml = false;\n    let foundBody = false;\n    return new TransformStream({\n        async transform (chunk, controller) {\n            // Peek into the streamed chunk to see if the tags are present.\n            if (!foundHtml && indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.HTML) > -1) {\n                foundHtml = true;\n            }\n            if (!foundBody && indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.BODY) > -1) {\n                foundBody = true;\n            }\n            controller.enqueue(chunk);\n        },\n        flush (controller) {\n            const missingTags = [];\n            if (!foundHtml) missingTags.push('html');\n            if (!foundBody) missingTags.push('body');\n            if (!missingTags.length) return;\n            controller.enqueue(encoder.encode(`<html id=\"__next_error__\">\n            <template\n              data-next-error-message=\"Missing ${missingTags.map((c)=>`<${c}>`).join(missingTags.length > 1 ? ' and ' : '')} tags in the root layout.\\nRead more at https://nextjs.org/docs/messages/missing-root-layout-tags\"\"\n              data-next-error-digest=\"${MISSING_ROOT_TAGS_ERROR}\"\n              data-next-error-stack=\"\"\n            ></template>\n          `));\n        }\n    });\n}\nfunction chainTransformers(readable, transformers) {\n    let stream = readable;\n    for (const transformer of transformers){\n        if (!transformer) continue;\n        stream = stream.pipeThrough(transformer);\n    }\n    return stream;\n}\nexport async function continueFizzStream(renderStream, { suffix, inlinedDataStream, isStaticGeneration, getServerInsertedHTML, getServerInsertedMetadata, validateRootLayout }) {\n    // Suffix itself might contain close tags at the end, so we need to split it.\n    const suffixUnclosed = suffix ? suffix.split(CLOSE_TAG, 1)[0] : null;\n    // If we're generating static HTML and there's an `allReady` promise on the\n    // stream, we need to wait for it to resolve before continuing.\n    if (isStaticGeneration && 'allReady' in renderStream) {\n        await renderStream.allReady;\n    }\n    return chainTransformers(renderStream, [\n        // Buffer everything to avoid flushing too frequently\n        createBufferedTransformStream(),\n        // Insert generated metadata\n        createHeadInsertionTransformStream(getServerInsertedMetadata),\n        // Insert suffix content\n        suffixUnclosed != null && suffixUnclosed.length > 0 ? createDeferredSuffixStream(suffixUnclosed) : null,\n        // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n        inlinedDataStream ? createMergedTransformStream(inlinedDataStream) : null,\n        // Validate the root layout for missing html or body tags\n        validateRootLayout ? createRootLayoutValidatorStream() : null,\n        // Close tags should always be deferred to the end\n        createMoveSuffixStream(),\n        // Special head insertions\n        // TODO-APP: Insert server side html to end of head in app layout rendering, to avoid\n        // hydration errors. Remove this once it's ready to be handled by react itself.\n        createHeadInsertionTransformStream(getServerInsertedHTML)\n    ]);\n}\nexport async function continueDynamicPrerender(prerenderStream, { getServerInsertedHTML, getServerInsertedMetadata }) {\n    return prerenderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream()).pipeThrough(createStripDocumentClosingTagsTransform())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))// Insert generated metadata\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedMetadata));\n}\nexport async function continueStaticPrerender(prerenderStream, { inlinedDataStream, getServerInsertedHTML, getServerInsertedMetadata }) {\n    return prerenderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))// Insert generated metadata to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedMetadata))// Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    .pipeThrough(createMergedTransformStream(inlinedDataStream))// Close tags should always be deferred to the end\n    .pipeThrough(createMoveSuffixStream());\n}\nexport async function continueDynamicHTMLResume(renderStream, { inlinedDataStream, getServerInsertedHTML, getServerInsertedMetadata }) {\n    return renderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))// Insert generated metadata to body\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedMetadata))// Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    .pipeThrough(createMergedTransformStream(inlinedDataStream))// Close tags should always be deferred to the end\n    .pipeThrough(createMoveSuffixStream());\n}\nexport function createDocumentClosingStream() {\n    return streamFromString(CLOSE_TAG);\n}\n\n//# sourceMappingURL=node-web-streams-helper.js.map","/* eslint-disable no-redeclare */ // FIXME: (wyattjoh) this is a temporary solution to allow us to pass data between bundled modules\nexport const NEXT_REQUEST_META = Symbol.for('NextInternalRequestMeta');\nexport function getRequestMeta(req, key) {\n    const meta = req[NEXT_REQUEST_META] || {};\n    return typeof key === 'string' ? meta[key] : meta;\n}\n/**\n * Sets the request metadata.\n *\n * @param req the request to set the metadata on\n * @param meta the metadata to set\n * @returns the mutated request metadata\n */ export function setRequestMeta(req, meta) {\n    req[NEXT_REQUEST_META] = meta;\n    return meta;\n}\n/**\n * Adds a value to the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to set\n * @param value the value to set\n * @returns the mutated request metadata\n */ export function addRequestMeta(request, key, value) {\n    const meta = getRequestMeta(request);\n    meta[key] = value;\n    return setRequestMeta(request, meta);\n}\n/**\n * Removes a key from the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to remove\n * @returns the mutated request metadata\n */ export function removeRequestMeta(request, key) {\n    const meta = getRequestMeta(request);\n    delete meta[key];\n    return setRequestMeta(request, meta);\n}\n\n//# sourceMappingURL=request-meta.js.map","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */\nexport function parsePath(path: string) {\n  const hashIndex = path.indexOf('#')\n  const queryIndex = path.indexOf('?')\n  const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex)\n\n  if (hasQuery || hashIndex > -1) {\n    return {\n      pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n      query: hasQuery\n        ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined)\n        : '',\n      hash: hashIndex > -1 ? path.slice(hashIndex) : '',\n    }\n  }\n\n  return { pathname: path, query: '', hash: '' }\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */\nexport function addPathPrefix(path: string, prefix?: string) {\n  if (!path.startsWith('/') || !prefix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${prefix}${pathname}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */\nexport function pathHasPrefix(path: string, prefix: string) {\n  if (typeof path !== 'string') {\n    return false\n  }\n\n  const { pathname } = parsePath(path)\n  return pathname === prefix || pathname.startsWith(prefix + '/')\n}\n","import { pathHasPrefix } from './path-has-prefix'\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */\nexport function removePathPrefix(path: string, prefix: string): string {\n  // If the path doesn't start with the prefix we can return it as is. This\n  // protects us from situations where the prefix is a substring of the path\n  // prefix such as:\n  //\n  // For prefix: /blog\n  //\n  //   /blog -> true\n  //   /blog/ -> true\n  //   /blog/1 -> true\n  //   /blogging -> false\n  //   /blogging/ -> false\n  //   /blogging/1 -> false\n  if (!pathHasPrefix(path, prefix)) {\n    return path\n  }\n\n  // Remove the prefix from the path via slicing.\n  const withoutPrefix = path.slice(prefix.length)\n\n  // If the path without the prefix starts with a `/` we can return it as is.\n  if (withoutPrefix.startsWith('/')) {\n    return withoutPrefix\n  }\n\n  // If the path without the prefix doesn't start with a `/` we need to add it\n  // back to the path to make sure it's a valid path.\n  return `/${withoutPrefix}`\n}\n","import { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale';\nimport { formatNextPathnameInfo } from '../../shared/lib/router/utils/format-next-pathname-info';\nimport { getHostname } from '../../shared/lib/get-hostname';\nimport { getNextPathnameInfo } from '../../shared/lib/router/utils/get-next-pathname-info';\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'));\n}\nconst Internal = Symbol('NextURLInternal');\nexport class NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === 'object' && 'pathname' in baseOrOpts || typeof baseOrOpts === 'string') {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: ''\n        };\n        this.analyze();\n    }\n    analyze() {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig, _this_Internal_domainLocale, _this_Internal_options_nextConfig_i18n1, _this_Internal_options_nextConfig1;\n        const info = getNextPathnameInfo(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE,\n            i18nProvider: this[Internal].options.i18nProvider\n        });\n        const hostname = getHostname(this[Internal].url, this[Internal].options.headers);\n        this[Internal].domainLocale = this[Internal].options.i18nProvider ? this[Internal].options.i18nProvider.detectDomainLocale(hostname) : detectDomainLocale((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.domains, hostname);\n        const defaultLocale = ((_this_Internal_domainLocale = this[Internal].domainLocale) == null ? void 0 : _this_Internal_domainLocale.defaultLocale) || ((_this_Internal_options_nextConfig1 = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n1 = _this_Internal_options_nextConfig1.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n1.defaultLocale);\n        this[Internal].url.pathname = info.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = info.basePath ?? '';\n        this[Internal].buildId = info.buildId;\n        this[Internal].locale = info.locale ?? defaultLocale;\n        this[Internal].trailingSlash = info.trailingSlash;\n    }\n    formatPathname() {\n        return formatNextPathnameInfo({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? '';\n    }\n    set locale(locale) {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig;\n        if (!this[Internal].locale || !((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.locales.includes(locale))) {\n            throw Object.defineProperty(new TypeError(`The NextURL configuration includes no locale \"${locale}\"`), \"__NEXT_ERROR_CODE\", {\n                value: \"E597\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyze();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith('/') ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for('edge-runtime.inspect.custom')]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n}\n\n//# sourceMappingURL=next-url.js.map","export class PageSignatureError extends Error {\n    constructor({ page }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nexport class RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nexport class RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n}\n\n//# sourceMappingURL=error.js.map","export { RequestCookies, ResponseCookies, stringifyCookie } from 'next/dist/compiled/@edge-runtime/cookies';\n\n//# sourceMappingURL=cookies.js.map","import { NextURL } from '../next-url';\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils';\nimport { RemovedUAError, RemovedPageError } from '../error';\nimport { RequestCookies } from './cookies';\nexport const INTERNALS = Symbol('internal request');\n/**\n * This class extends the [Web `Request` API](https://developer.mozilla.org/docs/Web/API/Request) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextRequest`](https://nextjs.org/docs/app/api-reference/functions/next-request)\n */ export class NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== 'string' && 'url' in input ? input.url : String(input);\n        validateURL(url);\n        // node Request instance requires duplex option when a body\n        // is present or it errors, we don't handle this for\n        // Request being passed in since it would have already\n        // errored if this wasn't configured\n        if (process.env.NEXT_RUNTIME !== 'edge') {\n            if (init.body && init.duplex !== 'half') {\n                init.duplex = 'half';\n            }\n        }\n        if (input instanceof Request) super(input, init);\n        else super(url, init);\n        const nextUrl = new NextURL(url, {\n            headers: toNodeOutgoingHttpHeaders(this.headers),\n            nextConfig: init.nextConfig\n        });\n        this[INTERNALS] = {\n            cookies: new RequestCookies(this.headers),\n            nextUrl,\n            url: process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE ? url : nextUrl.toString()\n        };\n    }\n    [Symbol.for('edge-runtime.inspect.custom')]() {\n        return {\n            cookies: this.cookies,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get nextUrl() {\n        return this[INTERNALS].nextUrl;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url;\n    }\n}\n\n//# sourceMappingURL=request.js.map","import { getRequestMeta } from '../../../request-meta';\nimport { fromNodeOutgoingHttpHeaders } from '../../utils';\nimport { NextRequest } from '../request';\nimport { isNodeNextRequest, isWebNextRequest } from '../../../base-http/helpers';\nexport const ResponseAbortedName = 'ResponseAborted';\nexport class ResponseAborted extends Error {\n    constructor(...args){\n        super(...args), this.name = ResponseAbortedName;\n    }\n}\n/**\n * Creates an AbortController tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * If the `close` event is fired before the `finish` event, then we'll send the\n * `abort` signal.\n */ export function createAbortController(response) {\n    const controller = new AbortController();\n    // If `finish` fires first, then `res.end()` has been called and the close is\n    // just us finishing the stream on our side. If `close` fires first, then we\n    // know the client disconnected before we finished.\n    response.once('close', ()=>{\n        if (response.writableFinished) return;\n        controller.abort(new ResponseAborted());\n    });\n    return controller;\n}\n/**\n * Creates an AbortSignal tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * This cannot be done with the request (IncomingMessage or Readable) because\n * the `abort` event will not fire if to data has been fully read (because that\n * will \"close\" the readable stream and nothing fires after that).\n */ export function signalFromNodeResponse(response) {\n    const { errored, destroyed } = response;\n    if (errored || destroyed) {\n        return AbortSignal.abort(errored ?? new ResponseAborted());\n    }\n    const { signal } = createAbortController(response);\n    return signal;\n}\nexport class NextRequestAdapter {\n    static fromBaseNextRequest(request, signal) {\n        if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME === 'edge' && isWebNextRequest(request)) {\n            return NextRequestAdapter.fromWebNextRequest(request);\n        } else if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME !== 'edge' && isNodeNextRequest(request)) {\n            return NextRequestAdapter.fromNodeNextRequest(request, signal);\n        } else {\n            throw Object.defineProperty(new Error('Invariant: Unsupported NextRequest type'), \"__NEXT_ERROR_CODE\", {\n                value: \"E345\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    static fromNodeNextRequest(request, signal) {\n        // HEAD and GET requests can not have a body.\n        let body = null;\n        if (request.method !== 'GET' && request.method !== 'HEAD' && request.body) {\n            // @ts-expect-error - this is handled by undici, when streams/web land use it instead\n            body = request.body;\n        }\n        let url;\n        if (request.url.startsWith('http')) {\n            url = new URL(request.url);\n        } else {\n            // Grab the full URL from the request metadata.\n            const base = getRequestMeta(request, 'initURL');\n            if (!base || !base.startsWith('http')) {\n                // Because the URL construction relies on the fact that the URL provided\n                // is absolute, we need to provide a base URL. We can't use the request\n                // URL because it's relative, so we use a dummy URL instead.\n                url = new URL(request.url, 'http://n');\n            } else {\n                url = new URL(request.url, base);\n            }\n        }\n        return new NextRequest(url, {\n            method: request.method,\n            headers: fromNodeOutgoingHttpHeaders(request.headers),\n            duplex: 'half',\n            signal,\n            // geo\n            // ip\n            // nextConfig\n            // body can not be passed if request was aborted\n            // or we get a Request body was disturbed error\n            ...signal.aborted ? {} : {\n                body\n            }\n        });\n    }\n    static fromWebNextRequest(request) {\n        // HEAD and GET requests can not have a body.\n        let body = null;\n        if (request.method !== 'GET' && request.method !== 'HEAD') {\n            body = request.body;\n        }\n        return new NextRequest(request.url, {\n            method: request.method,\n            headers: fromNodeOutgoingHttpHeaders(request.headers),\n            duplex: 'half',\n            signal: request.request.signal,\n            // geo\n            // ip\n            // nextConfig\n            // body can not be passed if request was aborted\n            // or we get a Request body was disturbed error\n            ...request.request.signal.aborted ? {} : {\n                body\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=next-request.js.map","import { ResponseAbortedName, createAbortController } from './web/spec-extension/adapters/next-request';\nimport { DetachedPromise } from '../lib/detached-promise';\nimport { getTracer } from './lib/trace/tracer';\nimport { NextNodeServerSpan } from './lib/trace/constants';\nimport { getClientComponentLoaderMetrics } from './client-component-renderer-logger';\nexport function isAbortError(e) {\n    return (e == null ? void 0 : e.name) === 'AbortError' || (e == null ? void 0 : e.name) === ResponseAbortedName;\n}\nfunction createWriterFromResponse(res, waitUntilForEnd) {\n    let started = false;\n    // Create a promise that will resolve once the response has drained. See\n    // https://nodejs.org/api/stream.html#stream_event_drain\n    let drained = new DetachedPromise();\n    function onDrain() {\n        drained.resolve();\n    }\n    res.on('drain', onDrain);\n    // If the finish event fires, it means we shouldn't block and wait for the\n    // drain event.\n    res.once('close', ()=>{\n        res.off('drain', onDrain);\n        drained.resolve();\n    });\n    // Create a promise that will resolve once the response has finished. See\n    // https://nodejs.org/api/http.html#event-finish_1\n    const finished = new DetachedPromise();\n    res.once('finish', ()=>{\n        finished.resolve();\n    });\n    // Create a writable stream that will write to the response.\n    return new WritableStream({\n        write: async (chunk)=>{\n            // You'd think we'd want to use `start` instead of placing this in `write`\n            // but this ensures that we don't actually flush the headers until we've\n            // started writing chunks.\n            if (!started) {\n                started = true;\n                if ('performance' in globalThis && process.env.NEXT_OTEL_PERFORMANCE_PREFIX) {\n                    const metrics = getClientComponentLoaderMetrics();\n                    if (metrics) {\n                        performance.measure(`${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-client-component-loading`, {\n                            start: metrics.clientComponentLoadStart,\n                            end: metrics.clientComponentLoadStart + metrics.clientComponentLoadTimes\n                        });\n                    }\n                }\n                res.flushHeaders();\n                getTracer().trace(NextNodeServerSpan.startResponse, {\n                    spanName: 'start response'\n                }, ()=>undefined);\n            }\n            try {\n                const ok = res.write(chunk);\n                // Added by the `compression` middleware, this is a function that will\n                // flush the partially-compressed response to the client.\n                if ('flush' in res && typeof res.flush === 'function') {\n                    res.flush();\n                }\n                // If the write returns false, it means there's some backpressure, so\n                // wait until it's streamed before continuing.\n                if (!ok) {\n                    await drained.promise;\n                    // Reset the drained promise so that we can wait for the next drain event.\n                    drained = new DetachedPromise();\n                }\n            } catch (err) {\n                res.end();\n                throw Object.defineProperty(new Error('failed to write chunk to response', {\n                    cause: err\n                }), \"__NEXT_ERROR_CODE\", {\n                    value: \"E321\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        },\n        abort: (err)=>{\n            if (res.writableFinished) return;\n            res.destroy(err);\n        },\n        close: async ()=>{\n            // if a waitUntil promise was passed, wait for it to resolve before\n            // ending the response.\n            if (waitUntilForEnd) {\n                await waitUntilForEnd;\n            }\n            if (res.writableFinished) return;\n            res.end();\n            return finished.promise;\n        }\n    });\n}\nexport async function pipeToNodeResponse(readable, res, waitUntilForEnd) {\n    try {\n        // If the response has already errored, then just return now.\n        const { errored, destroyed } = res;\n        if (errored || destroyed) return;\n        // Create a new AbortController so that we can abort the readable if the\n        // client disconnects.\n        const controller = createAbortController(res);\n        const writer = createWriterFromResponse(res, waitUntilForEnd);\n        await readable.pipeTo(writer, {\n            signal: controller.signal\n        });\n    } catch (err) {\n        // If this isn't related to an abort error, re-throw it.\n        if (isAbortError(err)) return;\n        throw Object.defineProperty(new Error('failed to pipe response', {\n            cause: err\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E180\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\n\n//# sourceMappingURL=pipe-readable.js.map","import { chainStreams, streamFromBuffer, streamFromString, streamToBuffer, streamToString } from './stream-utils/node-web-streams-helper';\nimport { isAbortError, pipeToNodeResponse } from './pipe-readable';\nexport default class RenderResult {\n    /**\n   * Creates a new RenderResult instance from a static response.\n   *\n   * @param value the static response value\n   * @returns a new RenderResult instance\n   */ static fromStatic(value) {\n        return new RenderResult(value, {\n            metadata: {}\n        });\n    }\n    constructor(response, { contentType, waitUntil, metadata }){\n        this.response = response;\n        this.contentType = contentType;\n        this.metadata = metadata;\n        this.waitUntil = waitUntil;\n    }\n    assignMetadata(metadata) {\n        Object.assign(this.metadata, metadata);\n    }\n    /**\n   * Returns true if the response is null. It can be null if the response was\n   * not found or was already sent.\n   */ get isNull() {\n        return this.response === null;\n    }\n    /**\n   * Returns false if the response is a string. It can be a string if the page\n   * was prerendered. If it's not, then it was generated dynamically.\n   */ get isDynamic() {\n        return typeof this.response !== 'string';\n    }\n    toUnchunkedBuffer(stream = false) {\n        if (this.response === null) {\n            throw Object.defineProperty(new Error('Invariant: null responses cannot be unchunked'), \"__NEXT_ERROR_CODE\", {\n                value: \"E274\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (typeof this.response !== 'string') {\n            if (!stream) {\n                throw Object.defineProperty(new Error('Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E81\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            return streamToBuffer(this.readable);\n        }\n        return Buffer.from(this.response);\n    }\n    toUnchunkedString(stream = false) {\n        if (this.response === null) {\n            throw Object.defineProperty(new Error('Invariant: null responses cannot be unchunked'), \"__NEXT_ERROR_CODE\", {\n                value: \"E274\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (typeof this.response !== 'string') {\n            if (!stream) {\n                throw Object.defineProperty(new Error('Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E81\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            return streamToString(this.readable);\n        }\n        return this.response;\n    }\n    /**\n   * Returns the response if it is a stream, or throws an error if it is a\n   * string.\n   */ get readable() {\n        if (this.response === null) {\n            throw Object.defineProperty(new Error('Invariant: null responses cannot be streamed'), \"__NEXT_ERROR_CODE\", {\n                value: \"E14\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (typeof this.response === 'string') {\n            throw Object.defineProperty(new Error('Invariant: static responses cannot be streamed'), \"__NEXT_ERROR_CODE\", {\n                value: \"E151\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (Buffer.isBuffer(this.response)) {\n            return streamFromBuffer(this.response);\n        }\n        // If the response is an array of streams, then chain them together.\n        if (Array.isArray(this.response)) {\n            return chainStreams(...this.response);\n        }\n        return this.response;\n    }\n    /**\n   * Chains a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the end. When this response is piped, all of the streams will be piped\n   * one after the other.\n   *\n   * @param readable The new stream to chain\n   */ chain(readable) {\n        if (this.response === null) {\n            throw Object.defineProperty(new Error('Invariant: response is null. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n                value: \"E258\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        // If the response is not an array of streams already, make it one.\n        let responses;\n        if (typeof this.response === 'string') {\n            responses = [\n                streamFromString(this.response)\n            ];\n        } else if (Array.isArray(this.response)) {\n            responses = this.response;\n        } else if (Buffer.isBuffer(this.response)) {\n            responses = [\n                streamFromBuffer(this.response)\n            ];\n        } else {\n            responses = [\n                this.response\n            ];\n        }\n        // Add the new stream to the array.\n        responses.push(readable);\n        // Update the response.\n        this.response = responses;\n    }\n    /**\n   * Pipes the response to a writable stream. This will close/cancel the\n   * writable stream if an error is encountered. If this doesn't throw, then\n   * the writable stream will be closed or aborted.\n   *\n   * @param writable Writable stream to pipe the response to\n   */ async pipeTo(writable) {\n        try {\n            await this.readable.pipeTo(writable, {\n                // We want to close the writable stream ourselves so that we can wait\n                // for the waitUntil promise to resolve before closing it. If an error\n                // is encountered, we'll abort the writable stream if we swallowed the\n                // error.\n                preventClose: true\n            });\n            // If there is a waitUntil promise, wait for it to resolve before\n            // closing the writable stream.\n            if (this.waitUntil) await this.waitUntil;\n            // Close the writable stream.\n            await writable.close();\n        } catch (err) {\n            // If this is an abort error, we should abort the writable stream (as we\n            // took ownership of it when we started piping). We don't need to re-throw\n            // because we handled the error.\n            if (isAbortError(err)) {\n                // Abort the writable stream if an error is encountered.\n                await writable.abort(err);\n                return;\n            }\n            // We're not aborting the writer here as when this method throws it's not\n            // clear as to how so the caller should assume it's their responsibility\n            // to clean up the writer.\n            throw err;\n        }\n    }\n    /**\n   * Pipes the response to a node response. This will close/cancel the node\n   * response if an error is encountered.\n   *\n   * @param res\n   */ async pipeToNodeResponse(res) {\n        await pipeToNodeResponse(this.readable, res, this.waitUntil);\n    }\n}\n\n//# sourceMappingURL=render-result.js.map","import { CachedRouteKind, IncrementalCacheKind } from './types';\nimport RenderResult from '../render-result';\nimport { RouteKind } from '../route-kind';\nexport async function fromResponseCacheEntry(cacheEntry) {\n    var _cacheEntry_value, _cacheEntry_value1;\n    return {\n        ...cacheEntry,\n        value: ((_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) === CachedRouteKind.PAGES ? {\n            kind: CachedRouteKind.PAGES,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            pageData: cacheEntry.value.pageData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status\n        } : ((_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind) === CachedRouteKind.APP_PAGE ? {\n            kind: CachedRouteKind.APP_PAGE,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            postponed: cacheEntry.value.postponed,\n            rscData: cacheEntry.value.rscData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status,\n            segmentData: cacheEntry.value.segmentData\n        } : cacheEntry.value\n    };\n}\nexport async function toResponseCacheEntry(response) {\n    var _response_value, _response_value1;\n    if (!response) return null;\n    return {\n        isMiss: response.isMiss,\n        isStale: response.isStale,\n        cacheControl: response.cacheControl,\n        isFallback: response.isFallback,\n        value: ((_response_value = response.value) == null ? void 0 : _response_value.kind) === CachedRouteKind.PAGES ? {\n            kind: CachedRouteKind.PAGES,\n            html: RenderResult.fromStatic(response.value.html),\n            pageData: response.value.pageData,\n            headers: response.value.headers,\n            status: response.value.status\n        } : ((_response_value1 = response.value) == null ? void 0 : _response_value1.kind) === CachedRouteKind.APP_PAGE ? {\n            kind: CachedRouteKind.APP_PAGE,\n            html: RenderResult.fromStatic(response.value.html),\n            rscData: response.value.rscData,\n            headers: response.value.headers,\n            status: response.value.status,\n            postponed: response.value.postponed,\n            segmentData: response.value.segmentData\n        } : response.value\n    };\n}\nexport function routeKindToIncrementalCacheKind(routeKind) {\n    switch(routeKind){\n        case RouteKind.PAGES:\n            return IncrementalCacheKind.PAGES;\n        case RouteKind.APP_PAGE:\n            return IncrementalCacheKind.APP_PAGE;\n        case RouteKind.IMAGE:\n            return IncrementalCacheKind.IMAGE;\n        case RouteKind.APP_ROUTE:\n            return IncrementalCacheKind.APP_ROUTE;\n        default:\n            throw Object.defineProperty(new Error(`Unexpected route kind ${routeKind}`), \"__NEXT_ERROR_CODE\", {\n                value: \"E64\",\n                enumerable: false,\n                configurable: true\n            });\n    }\n}\n\n//# sourceMappingURL=utils.js.map","import { Batcher } from '../../lib/batcher';\nimport { scheduleOnNextTick } from '../../lib/scheduler';\nimport { fromResponseCacheEntry, routeKindToIncrementalCacheKind, toResponseCacheEntry } from './utils';\nexport * from './types';\nexport default class ResponseCache {\n    constructor(minimalMode){\n        this.batcher = Batcher.create({\n            // Ensure on-demand revalidate doesn't block normal requests, it should be\n            // safe to run an on-demand revalidate for the same key as a normal request.\n            cacheKeyFn: ({ key, isOnDemandRevalidate })=>`${key}-${isOnDemandRevalidate ? '1' : '0'}`,\n            // We wait to do any async work until after we've added our promise to\n            // `pendingResponses` to ensure that any any other calls will reuse the\n            // same promise until we've fully finished our work.\n            schedulerFn: scheduleOnNextTick\n        });\n        // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n        // because we replace this.minimalMode to true in production bundles.\n        const minimalModeKey = 'minimalMode';\n        this[minimalModeKey] = minimalMode;\n    }\n    async get(key, responseGenerator, context) {\n        // If there is no key for the cache, we can't possibly look this up in the\n        // cache so just return the result of the response generator.\n        if (!key) {\n            return responseGenerator({\n                hasResolved: false,\n                previousCacheEntry: null\n            });\n        }\n        const { incrementalCache, isOnDemandRevalidate = false, isFallback = false, isRoutePPREnabled = false } = context;\n        const response = await this.batcher.batch({\n            key,\n            isOnDemandRevalidate\n        }, async (cacheKey, resolve)=>{\n            var _this_previousCacheItem;\n            // We keep the previous cache entry around to leverage when the\n            // incremental cache is disabled in minimal mode.\n            if (this.minimalMode && ((_this_previousCacheItem = this.previousCacheItem) == null ? void 0 : _this_previousCacheItem.key) === cacheKey && this.previousCacheItem.expiresAt > Date.now()) {\n                return this.previousCacheItem.entry;\n            }\n            // Coerce the kindHint into a given kind for the incremental cache.\n            const kind = routeKindToIncrementalCacheKind(context.routeKind);\n            let resolved = false;\n            let cachedResponse = null;\n            try {\n                cachedResponse = !this.minimalMode ? await incrementalCache.get(key, {\n                    kind,\n                    isRoutePPREnabled: context.isRoutePPREnabled,\n                    isFallback\n                }) : null;\n                if (cachedResponse && !isOnDemandRevalidate) {\n                    resolve(cachedResponse);\n                    resolved = true;\n                    if (!cachedResponse.isStale || context.isPrefetch) {\n                        // The cached value is still valid, so we don't need\n                        // to update it yet.\n                        return null;\n                    }\n                }\n                const cacheEntry = await responseGenerator({\n                    hasResolved: resolved,\n                    previousCacheEntry: cachedResponse,\n                    isRevalidating: true\n                });\n                // If the cache entry couldn't be generated, we don't want to cache\n                // the result.\n                if (!cacheEntry) {\n                    // Unset the previous cache item if it was set.\n                    if (this.minimalMode) this.previousCacheItem = undefined;\n                    return null;\n                }\n                const resolveValue = await fromResponseCacheEntry({\n                    ...cacheEntry,\n                    isMiss: !cachedResponse\n                });\n                if (!resolveValue) {\n                    // Unset the previous cache item if it was set.\n                    if (this.minimalMode) this.previousCacheItem = undefined;\n                    return null;\n                }\n                // For on-demand revalidate wait to resolve until cache is set.\n                // Otherwise resolve now.\n                if (!isOnDemandRevalidate && !resolved) {\n                    resolve(resolveValue);\n                    resolved = true;\n                }\n                // We want to persist the result only if it has a cache control value\n                // defined.\n                if (resolveValue.cacheControl) {\n                    if (this.minimalMode) {\n                        this.previousCacheItem = {\n                            key: cacheKey,\n                            entry: resolveValue,\n                            expiresAt: Date.now() + 1000\n                        };\n                    } else {\n                        await incrementalCache.set(key, resolveValue.value, {\n                            cacheControl: resolveValue.cacheControl,\n                            isRoutePPREnabled,\n                            isFallback\n                        });\n                    }\n                }\n                return resolveValue;\n            } catch (err) {\n                // When a path is erroring we automatically re-set the existing cache\n                // with new revalidate and expire times to prevent non-stop retrying.\n                if (cachedResponse == null ? void 0 : cachedResponse.cacheControl) {\n                    const newRevalidate = Math.min(Math.max(cachedResponse.cacheControl.revalidate || 3, 3), 30);\n                    const newExpire = cachedResponse.cacheControl.expire === undefined ? undefined : Math.max(newRevalidate + 3, cachedResponse.cacheControl.expire);\n                    await incrementalCache.set(key, cachedResponse.value, {\n                        cacheControl: {\n                            revalidate: newRevalidate,\n                            expire: newExpire\n                        },\n                        isRoutePPREnabled,\n                        isFallback\n                    });\n                }\n                // While revalidating in the background we can't reject as we already\n                // resolved the cache entry so log the error here.\n                if (resolved) {\n                    console.error(err);\n                    return null;\n                }\n                // We haven't resolved yet, so let's throw to indicate an error.\n                throw err;\n            }\n        });\n        return toResponseCacheEntry(response);\n    }\n}\n\n//# sourceMappingURL=index.js.map","/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */ export const scheduleOnNextTick = (cb)=>{\n    // We use Promise.resolve().then() here so that the operation is scheduled at\n    // the end of the promise job queue, we then add it to the next process tick\n    // to ensure it's evaluated afterwards.\n    //\n    // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n    //\n    Promise.resolve().then(()=>{\n        if (process.env.NEXT_RUNTIME === 'edge') {\n            setTimeout(cb, 0);\n        } else {\n            process.nextTick(cb);\n        }\n    });\n};\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */ export const scheduleImmediate = (cb)=>{\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        setTimeout(cb, 0);\n    } else {\n        setImmediate(cb);\n    }\n};\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */ export function atLeastOneTask() {\n    return new Promise((resolve)=>scheduleImmediate(resolve));\n}\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */ export function waitAtLeastOneReactRenderTask() {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        return new Promise((r)=>setTimeout(r, 0));\n    } else {\n        return new Promise((r)=>setImmediate(r));\n    }\n}\n\n//# sourceMappingURL=scheduler.js.map","import { AppRenderSpan, NextNodeServerSpan } from './trace/constants';\nimport { getTracer, SpanKind } from './trace/tracer';\nimport { CACHE_ONE_YEAR, INFINITE_CACHE, NEXT_CACHE_TAG_MAX_ITEMS, NEXT_CACHE_TAG_MAX_LENGTH } from '../../lib/constants';\nimport { markCurrentScopeAsDynamic } from '../app-render/dynamic-rendering';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupeFetch } from './dedupe-fetch';\nimport { CachedRouteKind, IncrementalCacheKind } from '../response-cache';\nimport { waitAtLeastOneReactRenderTask } from '../../lib/scheduler';\nimport { cloneResponse } from './clone-response';\nconst isEdgeRuntime = process.env.NEXT_RUNTIME === 'edge';\nexport const NEXT_PATCH_SYMBOL = Symbol.for('next-patch');\nfunction isFetchPatched() {\n    return globalThis[NEXT_PATCH_SYMBOL] === true;\n}\nexport function validateRevalidate(revalidateVal, route) {\n    try {\n        let normalizedRevalidate = undefined;\n        if (revalidateVal === false) {\n            normalizedRevalidate = INFINITE_CACHE;\n        } else if (typeof revalidateVal === 'number' && !isNaN(revalidateVal) && revalidateVal > -1) {\n            normalizedRevalidate = revalidateVal;\n        } else if (typeof revalidateVal !== 'undefined') {\n            throw Object.defineProperty(new Error(`Invalid revalidate value \"${revalidateVal}\" on \"${route}\", must be a non-negative number or false`), \"__NEXT_ERROR_CODE\", {\n                value: \"E179\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        return normalizedRevalidate;\n    } catch (err) {\n        // handle client component error from attempting to check revalidate value\n        if (err instanceof Error && err.message.includes('Invalid revalidate')) {\n            throw err;\n        }\n        return undefined;\n    }\n}\nexport function validateTags(tags, description) {\n    const validTags = [];\n    const invalidTags = [];\n    for(let i = 0; i < tags.length; i++){\n        const tag = tags[i];\n        if (typeof tag !== 'string') {\n            invalidTags.push({\n                tag,\n                reason: 'invalid type, must be a string'\n            });\n        } else if (tag.length > NEXT_CACHE_TAG_MAX_LENGTH) {\n            invalidTags.push({\n                tag,\n                reason: `exceeded max length of ${NEXT_CACHE_TAG_MAX_LENGTH}`\n            });\n        } else {\n            validTags.push(tag);\n        }\n        if (validTags.length > NEXT_CACHE_TAG_MAX_ITEMS) {\n            console.warn(`Warning: exceeded max tag count for ${description}, dropped tags:`, tags.slice(i).join(', '));\n            break;\n        }\n    }\n    if (invalidTags.length > 0) {\n        console.warn(`Warning: invalid tags passed to ${description}: `);\n        for (const { tag, reason } of invalidTags){\n            console.log(`tag: \"${tag}\" ${reason}`);\n        }\n    }\n    return validTags;\n}\nfunction trackFetchMetric(workStore, ctx) {\n    var _workStore_requestEndedState;\n    // If the static generation store is not available, we can't track the fetch\n    if (!workStore) return;\n    if ((_workStore_requestEndedState = workStore.requestEndedState) == null ? void 0 : _workStore_requestEndedState.ended) return;\n    const isDebugBuild = (!!process.env.NEXT_DEBUG_BUILD || process.env.NEXT_SSG_FETCH_METRICS === '1') && workStore.isStaticGeneration;\n    const isDevelopment = process.env.NODE_ENV === 'development';\n    if (// The only time we want to track fetch metrics outside of development is when\n    // we are performing a static generation & we are in debug mode.\n    !isDebugBuild && !isDevelopment) {\n        return;\n    }\n    workStore.fetchMetrics ??= [];\n    workStore.fetchMetrics.push({\n        ...ctx,\n        end: performance.timeOrigin + performance.now(),\n        idx: workStore.nextFetchId || 0\n    });\n}\nexport function createPatchedFetcher(originFetch, { workAsyncStorage, workUnitAsyncStorage }) {\n    // Create the patched fetch function. We don't set the type here, as it's\n    // verified as the return value of this function.\n    const patched = async (input, init)=>{\n        var _init_method, _init_next;\n        let url;\n        try {\n            url = new URL(input instanceof Request ? input.url : input);\n            url.username = '';\n            url.password = '';\n        } catch  {\n            // Error caused by malformed URL should be handled by native fetch\n            url = undefined;\n        }\n        const fetchUrl = (url == null ? void 0 : url.href) ?? '';\n        const method = (init == null ? void 0 : (_init_method = init.method) == null ? void 0 : _init_method.toUpperCase()) || 'GET';\n        // Do create a new span trace for internal fetches in the\n        // non-verbose mode.\n        const isInternal = (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next.internal) === true;\n        const hideSpan = process.env.NEXT_OTEL_FETCH_DISABLED === '1';\n        // We don't track fetch metrics for internal fetches\n        // so it's not critical that we have a start time, as it won't be recorded.\n        // This is to workaround a flaky issue where performance APIs might\n        // not be available and will require follow-up investigation.\n        const fetchStart = isInternal ? undefined : performance.timeOrigin + performance.now();\n        const workStore = workAsyncStorage.getStore();\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        // During static generation we track cache reads so we can reason about when they fill\n        let cacheSignal = workUnitStore && workUnitStore.type === 'prerender' ? workUnitStore.cacheSignal : null;\n        if (cacheSignal) {\n            cacheSignal.beginRead();\n        }\n        const result = getTracer().trace(isInternal ? NextNodeServerSpan.internalFetch : AppRenderSpan.fetch, {\n            hideSpan,\n            kind: SpanKind.CLIENT,\n            spanName: [\n                'fetch',\n                method,\n                fetchUrl\n            ].filter(Boolean).join(' '),\n            attributes: {\n                'http.url': fetchUrl,\n                'http.method': method,\n                'net.peer.name': url == null ? void 0 : url.hostname,\n                'net.peer.port': (url == null ? void 0 : url.port) || undefined\n            }\n        }, async ()=>{\n            var _getRequestMeta;\n            // If this is an internal fetch, we should not do any special treatment.\n            if (isInternal) {\n                return originFetch(input, init);\n            }\n            // If the workStore is not available, we can't do any\n            // special treatment of fetch, therefore fallback to the original\n            // fetch implementation.\n            if (!workStore) {\n                return originFetch(input, init);\n            }\n            // We should also fallback to the original fetch implementation if we\n            // are in draft mode, it does not constitute a static generation.\n            if (workStore.isDraftMode) {\n                return originFetch(input, init);\n            }\n            const isRequestInput = input && typeof input === 'object' && typeof input.method === 'string';\n            const getRequestMeta = (field)=>{\n                // If request input is present but init is not, retrieve from input first.\n                const value = init == null ? void 0 : init[field];\n                return value || (isRequestInput ? input[field] : null);\n            };\n            let finalRevalidate = undefined;\n            const getNextField = (field)=>{\n                var _init_next, _init_next1, _input_next;\n                return typeof (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next[field]) !== 'undefined' ? init == null ? void 0 : (_init_next1 = init.next) == null ? void 0 : _init_next1[field] : isRequestInput ? (_input_next = input.next) == null ? void 0 : _input_next[field] : undefined;\n            };\n            // RequestInit doesn't keep extra fields e.g. next so it's\n            // only available if init is used separate\n            let currentFetchRevalidate = getNextField('revalidate');\n            const tags = validateTags(getNextField('tags') || [], `fetch ${input.toString()}`);\n            const revalidateStore = workUnitStore && (workUnitStore.type === 'cache' || workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-ppr' || workUnitStore.type === 'prerender-legacy') ? workUnitStore : undefined;\n            if (revalidateStore) {\n                if (Array.isArray(tags)) {\n                    // Collect tags onto parent caches or parent prerenders.\n                    const collectedTags = revalidateStore.tags ?? (revalidateStore.tags = []);\n                    for (const tag of tags){\n                        if (!collectedTags.includes(tag)) {\n                            collectedTags.push(tag);\n                        }\n                    }\n                }\n            }\n            const implicitTags = workUnitStore == null ? void 0 : workUnitStore.implicitTags;\n            // Inside unstable-cache we treat it the same as force-no-store on the\n            // page.\n            const pageFetchCacheMode = workUnitStore && workUnitStore.type === 'unstable-cache' ? 'force-no-store' : workStore.fetchCache;\n            const isUsingNoStore = !!workStore.isUnstableNoStore;\n            let currentFetchCacheConfig = getRequestMeta('cache');\n            let cacheReason = '';\n            let cacheWarning;\n            if (typeof currentFetchCacheConfig === 'string' && typeof currentFetchRevalidate !== 'undefined') {\n                // If the revalidate value conflicts with the cache value, we should warn the user and unset the conflicting values.\n                const isConflictingRevalidate = // revalidate: 0 and cache: force-cache\n                currentFetchCacheConfig === 'force-cache' && currentFetchRevalidate === 0 || // revalidate: >0 or revalidate: false and cache: no-store\n                currentFetchCacheConfig === 'no-store' && (currentFetchRevalidate > 0 || currentFetchRevalidate === false);\n                if (isConflictingRevalidate) {\n                    cacheWarning = `Specified \"cache: ${currentFetchCacheConfig}\" and \"revalidate: ${currentFetchRevalidate}\", only one should be specified.`;\n                    currentFetchCacheConfig = undefined;\n                    currentFetchRevalidate = undefined;\n                }\n            }\n            const hasExplicitFetchCacheOptOut = // fetch config itself signals not to cache\n            currentFetchCacheConfig === 'no-cache' || currentFetchCacheConfig === 'no-store' || // the fetch isn't explicitly caching and the segment level cache config signals not to cache\n            // note: `pageFetchCacheMode` is also set by being in an unstable_cache context.\n            pageFetchCacheMode === 'force-no-store' || pageFetchCacheMode === 'only-no-store';\n            // If no explicit fetch cache mode is set, but dynamic = `force-dynamic` is set,\n            // we shouldn't consider caching the fetch. This is because the `dynamic` cache\n            // is considered a \"top-level\" cache mode, whereas something like `fetchCache` is more\n            // fine-grained. Top-level modes are responsible for setting reasonable defaults for the\n            // other configurations.\n            const noFetchConfigAndForceDynamic = !pageFetchCacheMode && !currentFetchCacheConfig && !currentFetchRevalidate && workStore.forceDynamic;\n            if (// force-cache was specified without a revalidate value. We set the revalidate value to false\n            // which will signal the cache to not revalidate\n            currentFetchCacheConfig === 'force-cache' && typeof currentFetchRevalidate === 'undefined') {\n                currentFetchRevalidate = false;\n            } else if (// if we are inside of \"use cache\"/\"unstable_cache\"\n            // we shouldn't set the revalidate to 0 as it's overridden\n            // by the cache context\n            (workUnitStore == null ? void 0 : workUnitStore.type) !== 'cache' && (hasExplicitFetchCacheOptOut || noFetchConfigAndForceDynamic)) {\n                currentFetchRevalidate = 0;\n            }\n            if (currentFetchCacheConfig === 'no-cache' || currentFetchCacheConfig === 'no-store') {\n                cacheReason = `cache: ${currentFetchCacheConfig}`;\n            }\n            finalRevalidate = validateRevalidate(currentFetchRevalidate, workStore.route);\n            const _headers = getRequestMeta('headers');\n            const initHeaders = typeof (_headers == null ? void 0 : _headers.get) === 'function' ? _headers : new Headers(_headers || {});\n            const hasUnCacheableHeader = initHeaders.get('authorization') || initHeaders.get('cookie');\n            const isUnCacheableMethod = ![\n                'get',\n                'head'\n            ].includes(((_getRequestMeta = getRequestMeta('method')) == null ? void 0 : _getRequestMeta.toLowerCase()) || 'get');\n            /**\n         * We automatically disable fetch caching under the following conditions:\n         * - Fetch cache configs are not set. Specifically:\n         *    - A page fetch cache mode is not set (export const fetchCache=...)\n         *    - A fetch cache mode is not set in the fetch call (fetch(url, { cache: ... }))\n         *      or the fetch cache mode is set to 'default'\n         *    - A fetch revalidate value is not set in the fetch call (fetch(url, { revalidate: ... }))\n         * - OR the fetch comes after a configuration that triggered dynamic rendering (e.g., reading cookies())\n         *   and the fetch was considered uncacheable (e.g., POST method or has authorization headers)\n         */ const hasNoExplicitCacheConfig = // eslint-disable-next-line eqeqeq\n            pageFetchCacheMode == undefined && // eslint-disable-next-line eqeqeq\n            (currentFetchCacheConfig == undefined || // when considering whether to opt into the default \"no-cache\" fetch semantics,\n            // a \"default\" cache config should be treated the same as no cache config\n            currentFetchCacheConfig === 'default') && // eslint-disable-next-line eqeqeq\n            currentFetchRevalidate == undefined;\n            const autoNoCache = // this condition is hit for null/undefined\n            // eslint-disable-next-line eqeqeq\n            hasNoExplicitCacheConfig && // we disable automatic no caching behavior during build time SSG so that we can still\n            // leverage the fetch cache between SSG workers\n            !workStore.isPrerendering || (hasUnCacheableHeader || isUnCacheableMethod) && revalidateStore && revalidateStore.revalidate === 0;\n            if (hasNoExplicitCacheConfig && workUnitStore !== undefined && workUnitStore.type === 'prerender') {\n                // If we have no cache config, and we're in Dynamic I/O prerendering, it'll be a dynamic call.\n                // We don't have to issue that dynamic call.\n                if (cacheSignal) {\n                    cacheSignal.endRead();\n                    cacheSignal = null;\n                }\n                return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n            }\n            switch(pageFetchCacheMode){\n                case 'force-no-store':\n                    {\n                        cacheReason = 'fetchCache = force-no-store';\n                        break;\n                    }\n                case 'only-no-store':\n                    {\n                        if (currentFetchCacheConfig === 'force-cache' || typeof finalRevalidate !== 'undefined' && finalRevalidate > 0) {\n                            throw Object.defineProperty(new Error(`cache: 'force-cache' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-no-store'`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E448\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                        cacheReason = 'fetchCache = only-no-store';\n                        break;\n                    }\n                case 'only-cache':\n                    {\n                        if (currentFetchCacheConfig === 'no-store') {\n                            throw Object.defineProperty(new Error(`cache: 'no-store' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-cache'`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E521\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                        break;\n                    }\n                case 'force-cache':\n                    {\n                        if (typeof currentFetchRevalidate === 'undefined' || currentFetchRevalidate === 0) {\n                            cacheReason = 'fetchCache = force-cache';\n                            finalRevalidate = INFINITE_CACHE;\n                        }\n                        break;\n                    }\n                default:\n            }\n            if (typeof finalRevalidate === 'undefined') {\n                if (pageFetchCacheMode === 'default-cache' && !isUsingNoStore) {\n                    finalRevalidate = INFINITE_CACHE;\n                    cacheReason = 'fetchCache = default-cache';\n                } else if (pageFetchCacheMode === 'default-no-store') {\n                    finalRevalidate = 0;\n                    cacheReason = 'fetchCache = default-no-store';\n                } else if (isUsingNoStore) {\n                    finalRevalidate = 0;\n                    cacheReason = 'noStore call';\n                } else if (autoNoCache) {\n                    finalRevalidate = 0;\n                    cacheReason = 'auto no cache';\n                } else {\n                    // TODO: should we consider this case an invariant?\n                    cacheReason = 'auto cache';\n                    finalRevalidate = revalidateStore ? revalidateStore.revalidate : INFINITE_CACHE;\n                }\n            } else if (!cacheReason) {\n                cacheReason = `revalidate: ${finalRevalidate}`;\n            }\n            if (// when force static is configured we don't bail from\n            // `revalidate: 0` values\n            !(workStore.forceStatic && finalRevalidate === 0) && // we don't consider autoNoCache to switch to dynamic for ISR\n            !autoNoCache && // If the revalidate value isn't currently set or the value is less\n            // than the current revalidate value, we should update the revalidate\n            // value.\n            revalidateStore && finalRevalidate < revalidateStore.revalidate) {\n                // If we were setting the revalidate value to 0, we should try to\n                // postpone instead first.\n                if (finalRevalidate === 0) {\n                    if (workUnitStore && workUnitStore.type === 'prerender') {\n                        if (cacheSignal) {\n                            cacheSignal.endRead();\n                            cacheSignal = null;\n                        }\n                        return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n                    } else {\n                        markCurrentScopeAsDynamic(workStore, workUnitStore, `revalidate: 0 fetch ${input} ${workStore.route}`);\n                    }\n                }\n                // We only want to set the revalidate store's revalidate time if it\n                // was explicitly set for the fetch call, i.e. currentFetchRevalidate.\n                if (revalidateStore && currentFetchRevalidate === finalRevalidate) {\n                    revalidateStore.revalidate = finalRevalidate;\n                }\n            }\n            const isCacheableRevalidate = typeof finalRevalidate === 'number' && finalRevalidate > 0;\n            let cacheKey;\n            const { incrementalCache } = workStore;\n            const useCacheOrRequestStore = (workUnitStore == null ? void 0 : workUnitStore.type) === 'request' || (workUnitStore == null ? void 0 : workUnitStore.type) === 'cache' ? workUnitStore : undefined;\n            if (incrementalCache && (isCacheableRevalidate || (useCacheOrRequestStore == null ? void 0 : useCacheOrRequestStore.serverComponentsHmrCache))) {\n                try {\n                    cacheKey = await incrementalCache.generateCacheKey(fetchUrl, isRequestInput ? input : init);\n                } catch (err) {\n                    console.error(`Failed to generate cache key for`, input);\n                }\n            }\n            const fetchIdx = workStore.nextFetchId ?? 1;\n            workStore.nextFetchId = fetchIdx + 1;\n            let handleUnlock = ()=>Promise.resolve();\n            const doOriginalFetch = async (isStale, cacheReasonOverride)=>{\n                const requestInputFields = [\n                    'cache',\n                    'credentials',\n                    'headers',\n                    'integrity',\n                    'keepalive',\n                    'method',\n                    'mode',\n                    'redirect',\n                    'referrer',\n                    'referrerPolicy',\n                    'window',\n                    'duplex',\n                    // don't pass through signal when revalidating\n                    ...isStale ? [] : [\n                        'signal'\n                    ]\n                ];\n                if (isRequestInput) {\n                    const reqInput = input;\n                    const reqOptions = {\n                        body: reqInput._ogBody || reqInput.body\n                    };\n                    for (const field of requestInputFields){\n                        // @ts-expect-error custom fields\n                        reqOptions[field] = reqInput[field];\n                    }\n                    input = new Request(reqInput.url, reqOptions);\n                } else if (init) {\n                    const { _ogBody, body, signal, ...otherInput } = init;\n                    init = {\n                        ...otherInput,\n                        body: _ogBody || body,\n                        signal: isStale ? undefined : signal\n                    };\n                }\n                // add metadata to init without editing the original\n                const clonedInit = {\n                    ...init,\n                    next: {\n                        ...init == null ? void 0 : init.next,\n                        fetchType: 'origin',\n                        fetchIdx\n                    }\n                };\n                return originFetch(input, clonedInit).then(async (res)=>{\n                    if (!isStale && fetchStart) {\n                        trackFetchMetric(workStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason: cacheReasonOverride || cacheReason,\n                            cacheStatus: finalRevalidate === 0 || cacheReasonOverride ? 'skip' : 'miss',\n                            cacheWarning,\n                            status: res.status,\n                            method: clonedInit.method || 'GET'\n                        });\n                    }\n                    if (res.status === 200 && incrementalCache && cacheKey && (isCacheableRevalidate || (useCacheOrRequestStore == null ? void 0 : useCacheOrRequestStore.serverComponentsHmrCache))) {\n                        const normalizedRevalidate = finalRevalidate >= INFINITE_CACHE ? CACHE_ONE_YEAR : finalRevalidate;\n                        if (workUnitStore && workUnitStore.type === 'prerender') {\n                            // We are prerendering at build time or revalidate time with dynamicIO so we need to\n                            // buffer the response so we can guarantee it can be read in a microtask\n                            const bodyBuffer = await res.arrayBuffer();\n                            const fetchedData = {\n                                headers: Object.fromEntries(res.headers.entries()),\n                                body: Buffer.from(bodyBuffer).toString('base64'),\n                                status: res.status,\n                                url: res.url\n                            };\n                            // We can skip checking the serverComponentsHmrCache because we aren't in\n                            // dev mode.\n                            await incrementalCache.set(cacheKey, {\n                                kind: CachedRouteKind.FETCH,\n                                data: fetchedData,\n                                revalidate: normalizedRevalidate\n                            }, {\n                                fetchCache: true,\n                                fetchUrl,\n                                fetchIdx,\n                                tags\n                            });\n                            await handleUnlock();\n                            // We return a new Response to the caller.\n                            return new Response(bodyBuffer, {\n                                headers: res.headers,\n                                status: res.status,\n                                statusText: res.statusText\n                            });\n                        } else {\n                            // We're cloning the response using this utility because there\n                            // exists a bug in the undici library around response cloning.\n                            // See the following pull request for more details:\n                            // https://github.com/vercel/next.js/pull/73274\n                            const [cloned1, cloned2] = cloneResponse(res);\n                            // We are dynamically rendering including dev mode. We want to return\n                            // the response to the caller as soon as possible because it might stream\n                            // over a very long time.\n                            cloned1.arrayBuffer().then(async (arrayBuffer)=>{\n                                var _useCacheOrRequestStore_serverComponentsHmrCache;\n                                const bodyBuffer = Buffer.from(arrayBuffer);\n                                const fetchedData = {\n                                    headers: Object.fromEntries(cloned1.headers.entries()),\n                                    body: bodyBuffer.toString('base64'),\n                                    status: cloned1.status,\n                                    url: cloned1.url\n                                };\n                                useCacheOrRequestStore == null ? void 0 : (_useCacheOrRequestStore_serverComponentsHmrCache = useCacheOrRequestStore.serverComponentsHmrCache) == null ? void 0 : _useCacheOrRequestStore_serverComponentsHmrCache.set(cacheKey, fetchedData);\n                                if (isCacheableRevalidate) {\n                                    await incrementalCache.set(cacheKey, {\n                                        kind: CachedRouteKind.FETCH,\n                                        data: fetchedData,\n                                        revalidate: normalizedRevalidate\n                                    }, {\n                                        fetchCache: true,\n                                        fetchUrl,\n                                        fetchIdx,\n                                        tags\n                                    });\n                                }\n                            }).catch((error)=>console.warn(`Failed to set fetch cache`, input, error)).finally(handleUnlock);\n                            return cloned2;\n                        }\n                    }\n                    // we had response that we determined shouldn't be cached so we return it\n                    // and don't cache it. This also needs to unlock the cache lock we acquired.\n                    await handleUnlock();\n                    return res;\n                }).catch((error)=>{\n                    handleUnlock();\n                    throw error;\n                });\n            };\n            let cacheReasonOverride;\n            let isForegroundRevalidate = false;\n            let isHmrRefreshCache = false;\n            if (cacheKey && incrementalCache) {\n                let cachedFetchData;\n                if ((useCacheOrRequestStore == null ? void 0 : useCacheOrRequestStore.isHmrRefresh) && useCacheOrRequestStore.serverComponentsHmrCache) {\n                    cachedFetchData = useCacheOrRequestStore.serverComponentsHmrCache.get(cacheKey);\n                    isHmrRefreshCache = true;\n                }\n                if (isCacheableRevalidate && !cachedFetchData) {\n                    handleUnlock = await incrementalCache.lock(cacheKey);\n                    const entry = workStore.isOnDemandRevalidate ? null : await incrementalCache.get(cacheKey, {\n                        kind: IncrementalCacheKind.FETCH,\n                        revalidate: finalRevalidate,\n                        fetchUrl,\n                        fetchIdx,\n                        tags,\n                        softTags: implicitTags == null ? void 0 : implicitTags.tags\n                    });\n                    if (hasNoExplicitCacheConfig) {\n                        // We sometimes use the cache to dedupe fetches that do not specify a cache configuration\n                        // In these cases we want to make sure we still exclude them from prerenders if dynamicIO is on\n                        // so we introduce an artificial Task boundary here.\n                        if (workUnitStore && workUnitStore.type === 'prerender') {\n                            await waitAtLeastOneReactRenderTask();\n                        }\n                    }\n                    if (entry) {\n                        await handleUnlock();\n                    } else {\n                        // in dev, incremental cache response will be null in case the browser adds `cache-control: no-cache` in the request headers\n                        cacheReasonOverride = 'cache-control: no-cache (hard refresh)';\n                    }\n                    if ((entry == null ? void 0 : entry.value) && entry.value.kind === CachedRouteKind.FETCH) {\n                        // when stale and is revalidating we wait for fresh data\n                        // so the revalidated entry has the updated data\n                        if (workStore.isRevalidate && entry.isStale) {\n                            isForegroundRevalidate = true;\n                        } else {\n                            if (entry.isStale) {\n                                workStore.pendingRevalidates ??= {};\n                                if (!workStore.pendingRevalidates[cacheKey]) {\n                                    const pendingRevalidate = doOriginalFetch(true).then(async (response)=>({\n                                            body: await response.arrayBuffer(),\n                                            headers: response.headers,\n                                            status: response.status,\n                                            statusText: response.statusText\n                                        })).finally(()=>{\n                                        workStore.pendingRevalidates ??= {};\n                                        delete workStore.pendingRevalidates[cacheKey || ''];\n                                    });\n                                    // Attach the empty catch here so we don't get a \"unhandled\n                                    // promise rejection\" warning.\n                                    pendingRevalidate.catch(console.error);\n                                    workStore.pendingRevalidates[cacheKey] = pendingRevalidate;\n                                }\n                            }\n                            cachedFetchData = entry.value.data;\n                        }\n                    }\n                }\n                if (cachedFetchData) {\n                    if (fetchStart) {\n                        trackFetchMetric(workStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason,\n                            cacheStatus: isHmrRefreshCache ? 'hmr' : 'hit',\n                            cacheWarning,\n                            status: cachedFetchData.status || 200,\n                            method: (init == null ? void 0 : init.method) || 'GET'\n                        });\n                    }\n                    const response = new Response(Buffer.from(cachedFetchData.body, 'base64'), {\n                        headers: cachedFetchData.headers,\n                        status: cachedFetchData.status\n                    });\n                    Object.defineProperty(response, 'url', {\n                        value: cachedFetchData.url\n                    });\n                    return response;\n                }\n            }\n            if (workStore.isStaticGeneration && init && typeof init === 'object') {\n                const { cache } = init;\n                // Delete `cache` property as Cloudflare Workers will throw an error\n                if (isEdgeRuntime) delete init.cache;\n                if (cache === 'no-store') {\n                    // If enabled, we should bail out of static generation.\n                    if (workUnitStore && workUnitStore.type === 'prerender') {\n                        if (cacheSignal) {\n                            cacheSignal.endRead();\n                            cacheSignal = null;\n                        }\n                        return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n                    } else {\n                        markCurrentScopeAsDynamic(workStore, workUnitStore, `no-store fetch ${input} ${workStore.route}`);\n                    }\n                }\n                const hasNextConfig = 'next' in init;\n                const { next = {} } = init;\n                if (typeof next.revalidate === 'number' && revalidateStore && next.revalidate < revalidateStore.revalidate) {\n                    if (next.revalidate === 0) {\n                        // If enabled, we should bail out of static generation.\n                        if (workUnitStore && workUnitStore.type === 'prerender') {\n                            return makeHangingPromise(workUnitStore.renderSignal, 'fetch()');\n                        } else {\n                            markCurrentScopeAsDynamic(workStore, workUnitStore, `revalidate: 0 fetch ${input} ${workStore.route}`);\n                        }\n                    }\n                    if (!workStore.forceStatic || next.revalidate !== 0) {\n                        revalidateStore.revalidate = next.revalidate;\n                    }\n                }\n                if (hasNextConfig) delete init.next;\n            }\n            // if we are revalidating the whole page via time or on-demand and\n            // the fetch cache entry is stale we should still de-dupe the\n            // origin hit if it's a cache-able entry\n            if (cacheKey && isForegroundRevalidate) {\n                const pendingRevalidateKey = cacheKey;\n                workStore.pendingRevalidates ??= {};\n                let pendingRevalidate = workStore.pendingRevalidates[pendingRevalidateKey];\n                if (pendingRevalidate) {\n                    const revalidatedResult = await pendingRevalidate;\n                    return new Response(revalidatedResult.body, {\n                        headers: revalidatedResult.headers,\n                        status: revalidatedResult.status,\n                        statusText: revalidatedResult.statusText\n                    });\n                }\n                // We used to just resolve the Response and clone it however for\n                // static generation with dynamicIO we need the response to be able to\n                // be resolved in a microtask and cloning the response will never have\n                // a body that can resolve in a microtask in node (as observed through\n                // experimentation) So instead we await the body and then when it is\n                // available we construct manually cloned Response objects with the\n                // body as an ArrayBuffer. This will be resolvable in a microtask\n                // making it compatible with dynamicIO.\n                const pendingResponse = doOriginalFetch(true, cacheReasonOverride)// We're cloning the response using this utility because there\n                // exists a bug in the undici library around response cloning.\n                // See the following pull request for more details:\n                // https://github.com/vercel/next.js/pull/73274\n                .then(cloneResponse);\n                pendingRevalidate = pendingResponse.then(async (responses)=>{\n                    const response = responses[0];\n                    return {\n                        body: await response.arrayBuffer(),\n                        headers: response.headers,\n                        status: response.status,\n                        statusText: response.statusText\n                    };\n                }).finally(()=>{\n                    var _workStore_pendingRevalidates;\n                    // If the pending revalidate is not present in the store, then\n                    // we have nothing to delete.\n                    if (!((_workStore_pendingRevalidates = workStore.pendingRevalidates) == null ? void 0 : _workStore_pendingRevalidates[pendingRevalidateKey])) {\n                        return;\n                    }\n                    delete workStore.pendingRevalidates[pendingRevalidateKey];\n                });\n                // Attach the empty catch here so we don't get a \"unhandled promise\n                // rejection\" warning\n                pendingRevalidate.catch(()=>{});\n                workStore.pendingRevalidates[pendingRevalidateKey] = pendingRevalidate;\n                return pendingResponse.then((responses)=>responses[1]);\n            } else {\n                return doOriginalFetch(false, cacheReasonOverride);\n            }\n        });\n        if (cacheSignal) {\n            try {\n                return await result;\n            } finally{\n                if (cacheSignal) {\n                    cacheSignal.endRead();\n                }\n            }\n        }\n        return result;\n    };\n    // Attach the necessary properties to the patched fetch function.\n    // We don't use this to determine if the fetch function has been patched,\n    // but for external consumers to determine if the fetch function has been\n    // patched.\n    patched.__nextPatched = true;\n    patched.__nextGetStaticStore = ()=>workAsyncStorage;\n    patched._nextOriginalFetch = originFetch;\n    globalThis[NEXT_PATCH_SYMBOL] = true;\n    return patched;\n}\n// we patch fetch to collect cache information used for\n// determining if a page is static or not\nexport function patchFetch(options) {\n    // If we've already patched fetch, we should not patch it again.\n    if (isFetchPatched()) return;\n    // Grab the original fetch function. We'll attach this so we can use it in\n    // the patched fetch function.\n    const original = createDedupeFetch(globalThis.fetch);\n    // Set the global fetch to the patched fetch.\n    globalThis.fetch = createPatchedFetcher(original, options);\n}\n\n//# sourceMappingURL=patch-fetch.js.map","/*\n\nFiles in the rsc directory are meant to be packaged as part of the RSC graph using next-app-loader.\n\n*/ import ReactDOM from 'react-dom';\nexport function preloadStyle(href, crossOrigin, nonce) {\n    const opts = {\n        as: 'style'\n    };\n    if (typeof crossOrigin === 'string') {\n        opts.crossOrigin = crossOrigin;\n    }\n    if (typeof nonce === 'string') {\n        opts.nonce = nonce;\n    }\n    ReactDOM.preload(href, opts);\n}\nexport function preloadFont(href, type, crossOrigin, nonce) {\n    const opts = {\n        as: 'font',\n        type\n    };\n    if (typeof crossOrigin === 'string') {\n        opts.crossOrigin = crossOrigin;\n    }\n    if (typeof nonce === 'string') {\n        opts.nonce = nonce;\n    }\n    ReactDOM.preload(href, opts);\n}\nexport function preconnect(href, crossOrigin, nonce) {\n    const opts = {};\n    if (typeof crossOrigin === 'string') {\n        opts.crossOrigin = crossOrigin;\n    }\n    if (typeof nonce === 'string') {\n        opts.nonce = nonce;\n    }\n    ;\n    ReactDOM.preconnect(href, opts);\n}\n\n//# sourceMappingURL=preloads.js.map","/*\n\nFiles in the rsc directory are meant to be packaged as part of the RSC graph using next-app-loader.\n\n*/ // When postpone is available in canary React we can switch to importing it directly\nexport { Postpone } from '../dynamic-rendering';\n\n//# sourceMappingURL=postpone.js.map","/*\n\nFiles in the rsc directory are meant to be packaged as part of the RSC graph using next-app-loader.\n\n*/ import * as React from 'react';\nfunction notImplemented() {\n    throw Object.defineProperty(new Error('Taint can only be used with the taint flag.'), \"__NEXT_ERROR_CODE\", {\n        value: \"E354\",\n        enumerable: false,\n        configurable: true\n    });\n}\nexport const taintObjectReference = process.env.__NEXT_EXPERIMENTAL_REACT ? React.experimental_taintObjectReference : notImplemented;\nexport const taintUniqueValue = process.env.__NEXT_EXPERIMENTAL_REACT ? React.experimental_taintUniqueValue : notImplemented;\n\n//# sourceMappingURL=taint.js.map","import { PAGE_SEGMENT_KEY } from '../segment'\nimport type { Segment as FlightRouterStateSegment } from '../../../server/app-render/types'\n\n// TypeScript trick to simulate opaque types, like in Flow.\ntype Opaque<K, T> = T & { __brand: K }\n\nexport type EncodedSegment = Opaque<'EncodedSegment', string>\n\nexport function encodeSegment(\n  segment: FlightRouterStateSegment\n): EncodedSegment {\n  if (typeof segment === 'string') {\n    if (segment.startsWith(PAGE_SEGMENT_KEY)) {\n      // The Flight Router State type sometimes includes the search params in\n      // the page segment. However, the Segment Cache tracks this as a separate\n      // key. So, we strip the search params here, and then add them back when\n      // the cache entry is turned back into a FlightRouterState. This is an\n      // unfortunate consequence of the FlightRouteState being used both as a\n      // transport type and as a cache key; we'll address this once more of the\n      // Segment Cache implementation has settled.\n      // TODO: We should hoist the search params out of the FlightRouterState\n      // type entirely, This is our plan for dynamic route params, too.\n      return PAGE_SEGMENT_KEY as EncodedSegment\n    }\n    const safeName =\n      // TODO: FlightRouterState encodes Not Found routes as \"/_not-found\".\n      // But params typically don't include the leading slash. We should use\n      // a different encoding to avoid this special case.\n      segment === '/_not-found'\n        ? '_not-found'\n        : encodeToFilesystemAndURLSafeString(segment)\n    // Since this is not a dynamic segment, it's fully encoded. It does not\n    // need to be \"hydrated\" with a param value.\n    return safeName as EncodedSegment\n  }\n  const name = segment[0]\n  const paramValue = segment[1]\n  const paramType = segment[2]\n  const safeName = encodeToFilesystemAndURLSafeString(name)\n  const safeValue = encodeToFilesystemAndURLSafeString(paramValue)\n\n  const encodedName = '$' + paramType + '$' + safeName + '$' + safeValue\n  return encodedName as EncodedSegment\n}\n\nexport const ROOT_SEGMENT_KEY = ''\n\nexport function encodeChildSegmentKey(\n  // TODO: Make segment keys an opaque type, too?\n  parentSegmentKey: string,\n  parallelRouteKey: string,\n  segment: EncodedSegment\n): string {\n  // Aside from being filesystem safe, segment keys are also designed so that\n  // each segment and parallel route creates its own subdirectory. Roughly in\n  // the same shape as the source app directory. This is mostly just for easier\n  // debugging (you can open up the build folder and navigate the output); if\n  // we wanted to do we could just use a flat structure.\n\n  // Omit the parallel route key for children, since this is the most\n  // common case. Saves some bytes (and it's what the app directory does).\n  const slotKey =\n    parallelRouteKey === 'children'\n      ? segment\n      : `@${encodeToFilesystemAndURLSafeString(parallelRouteKey)}/${segment}`\n\n  return parentSegmentKey + '/' + slotKey\n}\n\n// Define a regex pattern to match the most common characters found in a route\n// param. It excludes anything that might not be cross-platform filesystem\n// compatible, like |. It does not need to be precise because the fallback is to\n// just base64url-encode the whole parameter, which is fine; we just don't do it\n// by default for compactness, and for easier debugging.\nconst simpleParamValueRegex = /^[a-zA-Z0-9\\-_@]+$/\n\nfunction encodeToFilesystemAndURLSafeString(value: string) {\n  if (simpleParamValueRegex.test(value)) {\n    return value\n  }\n  // If there are any unsafe characters, base64url-encode the entire value.\n  // We also add a ! prefix so it doesn't collide with the simple case.\n  const base64url = btoa(value)\n    .replace(/\\+/g, '-') // Replace '+' with '-'\n    .replace(/\\//g, '_') // Replace '/' with '_'\n    .replace(/=+$/, '') // Remove trailing '='\n  return '!' + base64url\n}\n\nexport function convertSegmentPathToStaticExportFilename(\n  segmentPath: string\n): string {\n  return `__next${segmentPath.replace(/\\//g, '.')}.txt`\n}\n","// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst BAILOUT_TO_CSR = 'BAILOUT_TO_CLIENT_SIDE_RENDERING'\n\n/** An error that should be thrown when we want to bail out to client-side rendering. */\nexport class BailoutToCSRError extends Error {\n  public readonly digest = BAILOUT_TO_CSR\n\n  constructor(public readonly reason: string) {\n    super(`Bail out to client-side rendering: ${reason}`)\n  }\n}\n\n/** Checks if a passed argument is an error that is thrown if we want to bail out to client-side rendering. */\nexport function isBailoutToCSRError(err: unknown): err is BailoutToCSRError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === BAILOUT_TO_CSR\n}\n","export enum RedirectStatusCode {\n  SeeOther = 303,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n}\n","import { RedirectStatusCode } from './redirect-status-code'\n\nexport const REDIRECT_ERROR_CODE = 'NEXT_REDIRECT'\n\nexport enum RedirectType {\n  push = 'push',\n  replace = 'replace',\n}\n\nexport type RedirectError = Error & {\n  digest: `${typeof REDIRECT_ERROR_CODE};${RedirectType};${string};${RedirectStatusCode};`\n}\n\n/**\n * Checks an error to determine if it's an error generated by the\n * `redirect(url)` helper.\n *\n * @param error the error that may reference a redirect error\n * @returns true if the error is a redirect error\n */\nexport function isRedirectError(error: unknown): error is RedirectError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n\n  const digest = error.digest.split(';')\n  const [errorCode, type] = digest\n  const destination = digest.slice(2, -2).join(';')\n  const status = digest.at(-2)\n\n  const statusCode = Number(status)\n\n  return (\n    errorCode === REDIRECT_ERROR_CODE &&\n    (type === 'replace' || type === 'push') &&\n    typeof destination === 'string' &&\n    !isNaN(statusCode) &&\n    statusCode in RedirectStatusCode\n  )\n}\n","import {\n  isHTTPAccessFallbackError,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\nimport { isRedirectError, type RedirectError } from './redirect-error'\n\n/**\n * Returns true if the error is a navigation signal error. These errors are\n * thrown by user code to perform navigation operations and interrupt the React\n * render.\n */\nexport function isNextRouterError(\n  error: unknown\n): error is RedirectError | HTTPAccessFallbackError {\n  return isRedirectError(error) || isHTTPAccessFallbackError(error)\n}\n","import stringHash from 'next/dist/compiled/string-hash';\nimport { formatServerError } from '../../lib/format-server-error';\nimport { SpanStatusCode, getTracer } from '../lib/trace/tracer';\nimport { isAbortError } from '../pipe-readable';\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr';\nimport { isDynamicServerError } from '../../client/components/hooks-server-context';\nimport { isNextRouterError } from '../../client/components/is-next-router-error';\nimport { getProperError } from '../../lib/is-error';\nimport { createDigestWithErrorCode } from '../../lib/error-telemetry-utils';\n/**\n * Returns a digest for well-known Next.js errors, otherwise `undefined`. If a\n * digest is returned this also means that the error does not need to be\n * reported.\n */ export function getDigestForWellKnownError(error) {\n    // If we're bailing out to CSR, we don't need to log the error.\n    if (isBailoutToCSRError(error)) return error.digest;\n    // If this is a navigation error, we don't need to log the error.\n    if (isNextRouterError(error)) return error.digest;\n    // If this error occurs, we know that we should be stopping the static\n    // render. This is only thrown in static generation when PPR is not enabled,\n    // which causes the whole page to be marked as dynamic. We don't need to\n    // tell the user about this error, as it's not actionable.\n    if (isDynamicServerError(error)) return error.digest;\n    return undefined;\n}\nexport function createFlightReactServerErrorHandler(shouldFormatError, onReactServerRenderError) {\n    return (thrownValue)=>{\n        if (typeof thrownValue === 'string') {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            return stringHash(thrownValue).toString();\n        }\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        const digest = getDigestForWellKnownError(thrownValue);\n        if (digest) {\n            return digest;\n        }\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (!err.digest) {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            err.digest = stringHash(err.message + err.stack || '').toString();\n        }\n        // Format server errors in development to add more helpful error messages\n        if (shouldFormatError) {\n            formatServerError(err);\n        }\n        // Record exception in an active span, if available.\n        const span = getTracer().getActiveScopeSpan();\n        if (span) {\n            span.recordException(err);\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: err.message\n            });\n        }\n        onReactServerRenderError(err);\n        return createDigestWithErrorCode(thrownValue, err.digest);\n    };\n}\nexport function createHTMLReactServerErrorHandler(shouldFormatError, isNextExport, reactServerErrors, silenceLogger, onReactServerRenderError) {\n    return (thrownValue)=>{\n        var _err_message;\n        if (typeof thrownValue === 'string') {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            return stringHash(thrownValue).toString();\n        }\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        const digest = getDigestForWellKnownError(thrownValue);\n        if (digest) {\n            return digest;\n        }\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (!err.digest) {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            err.digest = stringHash(err.message + (err.stack || '')).toString();\n        }\n        // @TODO by putting this here and not at the top it is possible that\n        // we don't error the build in places we actually expect to\n        if (!reactServerErrors.has(err.digest)) {\n            reactServerErrors.set(err.digest, err);\n        }\n        // Format server errors in development to add more helpful error messages\n        if (shouldFormatError) {\n            formatServerError(err);\n        }\n        // Don't log the suppressed error during export\n        if (!(isNextExport && (err == null ? void 0 : (_err_message = err.message) == null ? void 0 : _err_message.includes('The specific message is omitted in production builds to avoid leaking sensitive details.')))) {\n            // Record exception in an active span, if available.\n            const span = getTracer().getActiveScopeSpan();\n            if (span) {\n                span.recordException(err);\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: err.message\n                });\n            }\n            if (!silenceLogger) {\n                onReactServerRenderError == null ? void 0 : onReactServerRenderError(err);\n            }\n        }\n        return createDigestWithErrorCode(thrownValue, err.digest);\n    };\n}\nexport function createHTMLErrorHandler(shouldFormatError, isNextExport, reactServerErrors, allCapturedErrors, silenceLogger, onHTMLRenderSSRError) {\n    return (thrownValue, errorInfo)=>{\n        var _err_message;\n        let isSSRError = true;\n        allCapturedErrors.push(thrownValue);\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        const digest = getDigestForWellKnownError(thrownValue);\n        if (digest) {\n            return digest;\n        }\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (err.digest) {\n            if (reactServerErrors.has(err.digest)) {\n                // This error is likely an obfuscated error from react-server.\n                // We recover the original error here.\n                thrownValue = reactServerErrors.get(err.digest);\n                isSSRError = false;\n            } else {\n            // The error is not from react-server but has a digest\n            // from other means so we don't need to produce a new one\n            }\n        } else {\n            err.digest = stringHash(err.message + ((errorInfo == null ? void 0 : errorInfo.componentStack) || err.stack || '')).toString();\n        }\n        // Format server errors in development to add more helpful error messages\n        if (shouldFormatError) {\n            formatServerError(err);\n        }\n        // Don't log the suppressed error during export\n        if (!(isNextExport && (err == null ? void 0 : (_err_message = err.message) == null ? void 0 : _err_message.includes('The specific message is omitted in production builds to avoid leaking sensitive details.')))) {\n            // Record exception in an active span, if available.\n            const span = getTracer().getActiveScopeSpan();\n            if (span) {\n                span.recordException(err);\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: err.message\n                });\n            }\n            if (!silenceLogger && // HTML errors contain RSC errors as well, filter them out before reporting\n            isSSRError) {\n                onHTMLRenderSSRError(err, errorInfo);\n            }\n        }\n        return createDigestWithErrorCode(thrownValue, err.digest);\n    };\n}\nexport function isUserLandError(err) {\n    return !isAbortError(err) && !isBailoutToCSRError(err) && !isNextRouterError(err);\n}\n\n//# sourceMappingURL=create-error-handler.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { createFromReadableStream } from 'react-server-dom-webpack/client.edge';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { unstable_prerender as prerender } from 'react-server-dom-webpack/static.edge';\nimport { streamFromBuffer, streamToBuffer } from '../stream-utils/node-web-streams-helper';\nimport { waitAtLeastOneReactRenderTask } from '../../lib/scheduler';\nimport { encodeChildSegmentKey, encodeSegment, ROOT_SEGMENT_KEY } from '../../shared/lib/segment-cache/segment-value-encoding';\nimport { getDigestForWellKnownError } from './create-error-handler';\nfunction onSegmentPrerenderError(error) {\n    const digest = getDigestForWellKnownError(error);\n    if (digest) {\n        return digest;\n    }\n// We don't need to log the errors because we would have already done that\n// when generating the original Flight stream for the whole page.\n}\nexport async function collectSegmentData(shouldAssumePartialData, fullPageDataBuffer, staleTime, clientModules, serverConsumerManifest, fallbackRouteParams) {\n    // Traverse the router tree and generate a prefetch response for each segment.\n    // A mutable map to collect the results as we traverse the route tree.\n    const resultMap = new Map();\n    // Before we start, warm up the module cache by decoding the page data once.\n    // Then we can assume that any remaining async tasks that occur the next time\n    // are due to hanging promises caused by dynamic data access. Note we only\n    // have to do this once per page, not per individual segment.\n    //\n    try {\n        await createFromReadableStream(streamFromBuffer(fullPageDataBuffer), {\n            serverConsumerManifest\n        });\n        await waitAtLeastOneReactRenderTask();\n    } catch  {}\n    // Create an abort controller that we'll use to stop the stream.\n    const abortController = new AbortController();\n    const onCompletedProcessingRouteTree = async ()=>{\n        // Since all we're doing is decoding and re-encoding a cached prerender, if\n        // serializing the stream takes longer than a microtask, it must because of\n        // hanging promises caused by dynamic data.\n        await waitAtLeastOneReactRenderTask();\n        abortController.abort();\n    };\n    // Generate a stream for the route tree prefetch. While we're walking the\n    // tree, we'll also spawn additional tasks to generate the segment prefetches.\n    // The promises for these tasks are pushed to a mutable array that we will\n    // await once the route tree is fully rendered.\n    const segmentTasks = [];\n    const { prelude: treeStream } = await prerender(// RootTreePrefetch is not a valid return type for a React component, but\n    // we need to use a component so that when we decode the original stream\n    // inside of it, the side effects are transferred to the new stream.\n    // @ts-expect-error\n    /*#__PURE__*/ _jsx(PrefetchTreeData, {\n        shouldAssumePartialData: shouldAssumePartialData,\n        fullPageDataBuffer: fullPageDataBuffer,\n        fallbackRouteParams: fallbackRouteParams,\n        serverConsumerManifest: serverConsumerManifest,\n        clientModules: clientModules,\n        staleTime: staleTime,\n        segmentTasks: segmentTasks,\n        onCompletedProcessingRouteTree: onCompletedProcessingRouteTree\n    }), clientModules, {\n        signal: abortController.signal,\n        onError: onSegmentPrerenderError\n    });\n    // Write the route tree to a special `/_tree` segment.\n    const treeBuffer = await streamToBuffer(treeStream);\n    resultMap.set('/_tree', treeBuffer);\n    // Now that we've finished rendering the route tree, all the segment tasks\n    // should have been spawned. Await them in parallel and write the segment\n    // prefetches to the result map.\n    for (const [segmentPath, buffer] of (await Promise.all(segmentTasks))){\n        resultMap.set(segmentPath, buffer);\n    }\n    return resultMap;\n}\nasync function PrefetchTreeData({ shouldAssumePartialData, fullPageDataBuffer, fallbackRouteParams, serverConsumerManifest, clientModules, staleTime, segmentTasks, onCompletedProcessingRouteTree }) {\n    // We're currently rendering a Flight response for the route tree prefetch.\n    // Inside this component, decode the Flight stream for the whole page. This is\n    // a hack to transfer the side effects from the original Flight stream (e.g.\n    // Float preloads) onto the Flight stream for the tree prefetch.\n    // TODO: React needs a better way to do this. Needed for Server Actions, too.\n    const initialRSCPayload = await createFromReadableStream(createUnclosingPrefetchStream(streamFromBuffer(fullPageDataBuffer)), {\n        serverConsumerManifest\n    });\n    const buildId = initialRSCPayload.b;\n    // FlightDataPath is an unsound type, hence the additional checks.\n    const flightDataPaths = initialRSCPayload.f;\n    if (flightDataPaths.length !== 1 && flightDataPaths[0].length !== 3) {\n        console.error('Internal Next.js error: InitialRSCPayload does not match the expected ' + 'shape for a prerendered page during segment prefetch generation.');\n        return null;\n    }\n    const flightRouterState = flightDataPaths[0][0];\n    const seedData = flightDataPaths[0][1];\n    const head = flightDataPaths[0][2];\n    // Compute the route metadata tree by traversing the FlightRouterState. As we\n    // walk the tree, we will also spawn a task to produce a prefetch response for\n    // each segment.\n    const tree = collectSegmentDataImpl(shouldAssumePartialData, flightRouterState, buildId, seedData, fallbackRouteParams, fullPageDataBuffer, clientModules, serverConsumerManifest, ROOT_SEGMENT_KEY, segmentTasks);\n    const isHeadPartial = shouldAssumePartialData || await isPartialRSCData(head, clientModules);\n    // Notify the abort controller that we're done processing the route tree.\n    // Anything async that happens after this point must be due to hanging\n    // promises in the original stream.\n    onCompletedProcessingRouteTree();\n    // Render the route tree to a special `/_tree` segment.\n    const treePrefetch = {\n        buildId,\n        tree,\n        head,\n        isHeadPartial,\n        staleTime\n    };\n    return treePrefetch;\n}\nfunction collectSegmentDataImpl(shouldAssumePartialData, route, buildId, seedData, fallbackRouteParams, fullPageDataBuffer, clientModules, serverConsumerManifest, key, segmentTasks) {\n    // Metadata about the segment. Sent as part of the tree prefetch. Null if\n    // there are no children.\n    let slotMetadata = null;\n    const children = route[1];\n    const seedDataChildren = seedData !== null ? seedData[2] : null;\n    for(const parallelRouteKey in children){\n        const childRoute = children[parallelRouteKey];\n        const childSegment = childRoute[0];\n        const childSeedData = seedDataChildren !== null ? seedDataChildren[parallelRouteKey] : null;\n        const childKey = encodeChildSegmentKey(key, parallelRouteKey, Array.isArray(childSegment) && fallbackRouteParams !== null ? encodeSegmentWithPossibleFallbackParam(childSegment, fallbackRouteParams) : encodeSegment(childSegment));\n        const childTree = collectSegmentDataImpl(shouldAssumePartialData, childRoute, buildId, childSeedData, fallbackRouteParams, fullPageDataBuffer, clientModules, serverConsumerManifest, childKey, segmentTasks);\n        if (slotMetadata === null) {\n            slotMetadata = {};\n        }\n        slotMetadata[parallelRouteKey] = childTree;\n    }\n    if (seedData !== null) {\n        // Spawn a task to write the segment data to a new Flight stream.\n        segmentTasks.push(// Since we're already in the middle of a render, wait until after the\n        // current task to escape the current rendering context.\n        waitAtLeastOneReactRenderTask().then(()=>renderSegmentPrefetch(shouldAssumePartialData, buildId, seedData, key, clientModules)));\n    } else {\n    // This segment does not have any seed data. Skip generating a prefetch\n    // response for it. We'll still include it in the route tree, though.\n    // TODO: We should encode in the route tree whether a segment is missing\n    // so we don't attempt to fetch it for no reason. As of now this shouldn't\n    // ever happen in practice, though.\n    }\n    // Metadata about the segment. Sent to the client as part of the\n    // tree prefetch.\n    return {\n        segment: route[0],\n        slots: slotMetadata,\n        isRootLayout: route[4] === true\n    };\n}\nfunction encodeSegmentWithPossibleFallbackParam(segment, fallbackRouteParams) {\n    const name = segment[0];\n    if (!fallbackRouteParams.has(name)) {\n        // Normal case. No matching fallback parameter.\n        return encodeSegment(segment);\n    }\n    // This segment includes a fallback parameter. During prerendering, a random\n    // placeholder value was used; however, for segment prefetches, we need the\n    // segment path to be predictable so the server can create a rewrite for it.\n    // So, replace the placeholder segment value with a \"template\" string,\n    // e.g. `[name]`.\n    // TODO: This will become a bit cleaner once remove route parameters from the\n    // server response, and instead add them to the segment keys on the client.\n    // Instead of a string replacement, like we do here, route params will always\n    // be encoded in separate step from the rest of the segment, not just in the\n    // case of fallback params.\n    const encodedSegment = encodeSegment(segment);\n    const lastIndex = encodedSegment.lastIndexOf('$');\n    const encodedFallbackSegment = // NOTE: This is guaranteed not to clash with the rest of the segment\n    // because non-simple characters (including [ and ]) trigger a base\n    // 64 encoding.\n    encodedSegment.substring(0, lastIndex + 1) + `[${name}]`;\n    return encodedFallbackSegment;\n}\nasync function renderSegmentPrefetch(shouldAssumePartialData, buildId, seedData, key, clientModules) {\n    // Render the segment data to a stream.\n    // In the future, this is where we can include additional metadata, like the\n    // stale time and cache tags.\n    const rsc = seedData[1];\n    const loading = seedData[3];\n    const segmentPrefetch = {\n        buildId,\n        rsc,\n        loading,\n        isPartial: shouldAssumePartialData || await isPartialRSCData(rsc, clientModules)\n    };\n    // Since all we're doing is decoding and re-encoding a cached prerender, if\n    // it takes longer than a microtask, it must because of hanging promises\n    // caused by dynamic data. Abort the stream at the end of the current task.\n    const abortController = new AbortController();\n    waitAtLeastOneReactRenderTask().then(()=>abortController.abort());\n    const { prelude: segmentStream } = await prerender(segmentPrefetch, clientModules, {\n        signal: abortController.signal,\n        onError: onSegmentPrerenderError\n    });\n    const segmentBuffer = await streamToBuffer(segmentStream);\n    if (key === ROOT_SEGMENT_KEY) {\n        return [\n            '/_index',\n            segmentBuffer\n        ];\n    } else {\n        return [\n            key,\n            segmentBuffer\n        ];\n    }\n}\nasync function isPartialRSCData(rsc, clientModules) {\n    // We can determine if a segment contains only partial data if it takes longer\n    // than a task to encode, because dynamic data is encoded as an infinite\n    // promise. We must do this in a separate Flight prerender from the one that\n    // actually generates the prefetch stream because we need to include\n    // `isPartial` in the stream itself.\n    let isPartial = false;\n    const abortController = new AbortController();\n    waitAtLeastOneReactRenderTask().then(()=>{\n        // If we haven't yet finished the outer task, then it must be because we\n        // accessed dynamic data.\n        isPartial = true;\n        abortController.abort();\n    });\n    await prerender(rsc, clientModules, {\n        signal: abortController.signal,\n        onError () {}\n    });\n    return isPartial;\n}\nfunction createUnclosingPrefetchStream(originalFlightStream) {\n    // When PPR is enabled, prefetch streams may contain references that never\n    // resolve, because that's how we encode dynamic data access. In the decoded\n    // object returned by the Flight client, these are reified into hanging\n    // promises that suspend during render, which is effectively what we want.\n    // The UI resolves when it switches to the dynamic data stream\n    // (via useDeferredValue(dynamic, static)).\n    //\n    // However, the Flight implementation currently errors if the server closes\n    // the response before all the references are resolved. As a cheat to work\n    // around this, we wrap the original stream in a new stream that never closes,\n    // and therefore doesn't error.\n    const reader = originalFlightStream.getReader();\n    return new ReadableStream({\n        async pull (controller) {\n            while(true){\n                const { done, value } = await reader.read();\n                if (!done) {\n                    // Pass to the target stream and keep consuming the Flight response\n                    // from the server.\n                    controller.enqueue(value);\n                    continue;\n                }\n                // The server stream has closed. Exit, but intentionally do not close\n                // the target stream.\n                return;\n            }\n        }\n    });\n}\n\n//# sourceMappingURL=collect-segment-data.js.map","// eslint-disable-next-line import/no-extraneous-dependencies\nexport { createTemporaryReferenceSet, renderToReadableStream, decodeReply, decodeAction, decodeFormState } from 'react-server-dom-webpack/server.edge';\n// eslint-disable-next-line import/no-extraneous-dependencies\nexport { unstable_prerender as prerender } from 'react-server-dom-webpack/static.edge';\nimport LayoutRouter from '../../client/components/layout-router';\nimport RenderFromTemplateContext from '../../client/components/render-from-template-context';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external';\nimport { actionAsyncStorage } from '../app-render/action-async-storage.external';\nimport { ClientPageRoot } from '../../client/components/client-page';\nimport { ClientSegmentRoot } from '../../client/components/client-segment';\nimport { createServerSearchParamsForServerPage, createPrerenderSearchParamsForClientPage } from '../request/search-params';\nimport { createServerParamsForServerSegment, createPrerenderParamsForClientSegment } from '../request/params';\nimport * as serverHooks from '../../client/components/hooks-server-context';\nimport { HTTPAccessFallbackBoundary } from '../../client/components/http-access-fallback/error-boundary';\nimport { createMetadataComponents } from '../../lib/metadata/metadata';\nimport { patchFetch as _patchFetch } from '../lib/patch-fetch';\n// not being used but needs to be included in the client manifest for /_not-found\nimport '../../client/components/error-boundary';\nimport { MetadataBoundary, ViewportBoundary, OutletBoundary } from '../../client/components/metadata/metadata-boundary';\nimport { preloadStyle, preloadFont, preconnect } from './rsc/preloads';\nimport { Postpone } from './rsc/postpone';\nimport { taintObjectReference } from './rsc/taint';\nexport { collectSegmentData } from './collect-segment-data';\n// patchFetch makes use of APIs such as `React.unstable_postpone` which are only available\n// in the experimental channel of React, so export it from here so that it comes from the bundled runtime\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { LayoutRouter, RenderFromTemplateContext, workAsyncStorage, workUnitAsyncStorage, actionAsyncStorage, createServerSearchParamsForServerPage, createPrerenderSearchParamsForClientPage, createServerParamsForServerSegment, createPrerenderParamsForClientSegment, serverHooks, preloadStyle, preloadFont, preconnect, Postpone, MetadataBoundary, ViewportBoundary, OutletBoundary, taintObjectReference, ClientPageRoot, ClientSegmentRoot, HTTPAccessFallbackBoundary, patchFetch, createMetadataComponents,  };\n\n//# sourceMappingURL=entry-base.js.map","'use strict';\n\nvar s;\nif (process.env.NODE_ENV === 'production') {\n  s = require('./cjs/react-server-dom-webpack-server.edge.production.js');\n} else {\n  s = require('./cjs/react-server-dom-webpack-server.edge.development.js');\n}\n\nexports.renderToReadableStream = s.renderToReadableStream;\nexports.decodeReply = s.decodeReply;\nexports.decodeReplyFromAsyncIterable = s.decodeReplyFromAsyncIterable;\nexports.decodeAction = s.decodeAction;\nexports.decodeFormState = s.decodeFormState;\nexports.registerServerReference = s.registerServerReference;\nexports.registerClientReference = s.registerClientReference;\nexports.createClientModuleProxy = s.createClientModuleProxy;\nexports.createTemporaryReferenceSet = s.createTemporaryReferenceSet;\n","let e={data:\"\"},t=t=>\"object\"==typeof window?((t?t.querySelector(\"#_goober\"):window._goober)||Object.assign((t||document.head).appendChild(document.createElement(\"style\")),{innerHTML:\" \",id:\"_goober\"})).firstChild:t||e,r=e=>{let r=t(e),l=r.data;return r.data=\"\",l},l=/(?:([\\u0080-\\uFFFF\\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\\s*)/g,a=/\\/\\*[^]*?\\*\\/|  +/g,n=/\\n+/g,o=(e,t)=>{let r=\"\",l=\"\",a=\"\";for(let n in e){let c=e[n];\"@\"==n[0]?\"i\"==n[1]?r=n+\" \"+c+\";\":l+=\"f\"==n[1]?o(c,n):n+\"{\"+o(c,\"k\"==n[1]?\"\":t)+\"}\":\"object\"==typeof c?l+=o(c,t?t.replace(/([^,])+/g,e=>n.replace(/([^,]*:\\S+\\([^)]*\\))|([^,])+/g,t=>/&/.test(t)?t.replace(/&/g,e):e?e+\" \"+t:t)):n):null!=c&&(n=/^--/.test(n)?n:n.replace(/[A-Z]/g,\"-$&\").toLowerCase(),a+=o.p?o.p(n,c):n+\":\"+c+\";\")}return r+(t&&a?t+\"{\"+a+\"}\":a)+l},c={},s=e=>{if(\"object\"==typeof e){let t=\"\";for(let r in e)t+=r+s(e[r]);return t}return e},i=(e,t,r,i,p)=>{let u=s(e),d=c[u]||(c[u]=(e=>{let t=0,r=11;for(;t<e.length;)r=101*r+e.charCodeAt(t++)>>>0;return\"go\"+r})(u));if(!c[d]){let t=u!==e?e:(e=>{let t,r,o=[{}];for(;t=l.exec(e.replace(a,\"\"));)t[4]?o.shift():t[3]?(r=t[3].replace(n,\" \").trim(),o.unshift(o[0][r]=o[0][r]||{})):o[0][t[1]]=t[2].replace(n,\" \").trim();return o[0]})(e);c[d]=o(p?{[\"@keyframes \"+d]:t}:t,r?\"\":\".\"+d)}let f=r&&c.g?c.g:null;return r&&(c.g=c[d]),((e,t,r,l)=>{l?t.data=t.data.replace(l,e):-1===t.data.indexOf(e)&&(t.data=r?e+t.data:t.data+e)})(c[d],t,i,f),d},p=(e,t,r)=>e.reduce((e,l,a)=>{let n=t[a];if(n&&n.call){let e=n(r),t=e&&e.props&&e.props.className||/^go/.test(e)&&e;n=t?\".\"+t:e&&\"object\"==typeof e?e.props?\"\":o(e,\"\"):!1===e?\"\":e}return e+l+(null==n?\"\":n)},\"\");function u(e){let r=this||{},l=e.call?e(r.p):e;return i(l.unshift?l.raw?p(l,[].slice.call(arguments,1),r.p):l.reduce((e,t)=>Object.assign(e,t&&t.call?t(r.p):t),{}):l,t(r.target),r.g,r.o,r.k)}let d,f,g,b=u.bind({g:1}),h=u.bind({k:1});function m(e,t,r,l){o.p=t,d=e,f=r,g=l}function j(e,t){let r=this||{};return function(){let l=arguments;function a(n,o){let c=Object.assign({},n),s=c.className||a.className;r.p=Object.assign({theme:f&&f()},c),r.o=/ *go\\d+/.test(s),c.className=u.apply(r,l)+(s?\" \"+s:\"\"),t&&(c.ref=o);let i=e;return e[0]&&(i=c.as||e,delete c.as),g&&i[0]&&g(c),d(i,c)}return t?t(a):a}}export{u as css,r as extractCss,b as glob,h as keyframes,m as setup,j as styled};\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","(function(){\"use strict\";var e={114:function(e){function assertPath(e){if(typeof e!==\"string\"){throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(e))}}function normalizeStringPosix(e,r){var t=\"\";var i=0;var n=-1;var a=0;var f;for(var l=0;l<=e.length;++l){if(l<e.length)f=e.charCodeAt(l);else if(f===47)break;else f=47;if(f===47){if(n===l-1||a===1){}else if(n!==l-1&&a===2){if(t.length<2||i!==2||t.charCodeAt(t.length-1)!==46||t.charCodeAt(t.length-2)!==46){if(t.length>2){var s=t.lastIndexOf(\"/\");if(s!==t.length-1){if(s===-1){t=\"\";i=0}else{t=t.slice(0,s);i=t.length-1-t.lastIndexOf(\"/\")}n=l;a=0;continue}}else if(t.length===2||t.length===1){t=\"\";i=0;n=l;a=0;continue}}if(r){if(t.length>0)t+=\"/..\";else t=\"..\";i=2}}else{if(t.length>0)t+=\"/\"+e.slice(n+1,l);else t=e.slice(n+1,l);i=l-n-1}n=l;a=0}else if(f===46&&a!==-1){++a}else{a=-1}}return t}function _format(e,r){var t=r.dir||r.root;var i=r.base||(r.name||\"\")+(r.ext||\"\");if(!t){return i}if(t===r.root){return t+i}return t+e+i}var r={resolve:function resolve(){var e=\"\";var r=false;var t;for(var i=arguments.length-1;i>=-1&&!r;i--){var n;if(i>=0)n=arguments[i];else{if(t===undefined)t=\"\";n=t}assertPath(n);if(n.length===0){continue}e=n+\"/\"+e;r=n.charCodeAt(0)===47}e=normalizeStringPosix(e,!r);if(r){if(e.length>0)return\"/\"+e;else return\"/\"}else if(e.length>0){return e}else{return\".\"}},normalize:function normalize(e){assertPath(e);if(e.length===0)return\".\";var r=e.charCodeAt(0)===47;var t=e.charCodeAt(e.length-1)===47;e=normalizeStringPosix(e,!r);if(e.length===0&&!r)e=\".\";if(e.length>0&&t)e+=\"/\";if(r)return\"/\"+e;return e},isAbsolute:function isAbsolute(e){assertPath(e);return e.length>0&&e.charCodeAt(0)===47},join:function join(){if(arguments.length===0)return\".\";var e;for(var t=0;t<arguments.length;++t){var i=arguments[t];assertPath(i);if(i.length>0){if(e===undefined)e=i;else e+=\"/\"+i}}if(e===undefined)return\".\";return r.normalize(e)},relative:function relative(e,t){assertPath(e);assertPath(t);if(e===t)return\"\";e=r.resolve(e);t=r.resolve(t);if(e===t)return\"\";var i=1;for(;i<e.length;++i){if(e.charCodeAt(i)!==47)break}var n=e.length;var a=n-i;var f=1;for(;f<t.length;++f){if(t.charCodeAt(f)!==47)break}var l=t.length;var s=l-f;var o=a<s?a:s;var u=-1;var h=0;for(;h<=o;++h){if(h===o){if(s>o){if(t.charCodeAt(f+h)===47){return t.slice(f+h+1)}else if(h===0){return t.slice(f+h)}}else if(a>o){if(e.charCodeAt(i+h)===47){u=h}else if(h===0){u=0}}break}var c=e.charCodeAt(i+h);var v=t.charCodeAt(f+h);if(c!==v)break;else if(c===47)u=h}var g=\"\";for(h=i+u+1;h<=n;++h){if(h===n||e.charCodeAt(h)===47){if(g.length===0)g+=\"..\";else g+=\"/..\"}}if(g.length>0)return g+t.slice(f+u);else{f+=u;if(t.charCodeAt(f)===47)++f;return t.slice(f)}},_makeLong:function _makeLong(e){return e},dirname:function dirname(e){assertPath(e);if(e.length===0)return\".\";var r=e.charCodeAt(0);var t=r===47;var i=-1;var n=true;for(var a=e.length-1;a>=1;--a){r=e.charCodeAt(a);if(r===47){if(!n){i=a;break}}else{n=false}}if(i===-1)return t?\"/\":\".\";if(t&&i===1)return\"//\";return e.slice(0,i)},basename:function basename(e,r){if(r!==undefined&&typeof r!==\"string\")throw new TypeError('\"ext\" argument must be a string');assertPath(e);var t=0;var i=-1;var n=true;var a;if(r!==undefined&&r.length>0&&r.length<=e.length){if(r.length===e.length&&r===e)return\"\";var f=r.length-1;var l=-1;for(a=e.length-1;a>=0;--a){var s=e.charCodeAt(a);if(s===47){if(!n){t=a+1;break}}else{if(l===-1){n=false;l=a+1}if(f>=0){if(s===r.charCodeAt(f)){if(--f===-1){i=a}}else{f=-1;i=l}}}}if(t===i)i=l;else if(i===-1)i=e.length;return e.slice(t,i)}else{for(a=e.length-1;a>=0;--a){if(e.charCodeAt(a)===47){if(!n){t=a+1;break}}else if(i===-1){n=false;i=a+1}}if(i===-1)return\"\";return e.slice(t,i)}},extname:function extname(e){assertPath(e);var r=-1;var t=0;var i=-1;var n=true;var a=0;for(var f=e.length-1;f>=0;--f){var l=e.charCodeAt(f);if(l===47){if(!n){t=f+1;break}continue}if(i===-1){n=false;i=f+1}if(l===46){if(r===-1)r=f;else if(a!==1)a=1}else if(r!==-1){a=-1}}if(r===-1||i===-1||a===0||a===1&&r===i-1&&r===t+1){return\"\"}return e.slice(r,i)},format:function format(e){if(e===null||typeof e!==\"object\"){throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof e)}return _format(\"/\",e)},parse:function parse(e){assertPath(e);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(e.length===0)return r;var t=e.charCodeAt(0);var i=t===47;var n;if(i){r.root=\"/\";n=1}else{n=0}var a=-1;var f=0;var l=-1;var s=true;var o=e.length-1;var u=0;for(;o>=n;--o){t=e.charCodeAt(o);if(t===47){if(!s){f=o+1;break}continue}if(l===-1){s=false;l=o+1}if(t===46){if(a===-1)a=o;else if(u!==1)u=1}else if(a!==-1){u=-1}}if(a===-1||l===-1||u===0||u===1&&a===l-1&&a===f+1){if(l!==-1){if(f===0&&i)r.base=r.name=e.slice(1,l);else r.base=r.name=e.slice(f,l)}}else{if(f===0&&i){r.name=e.slice(1,a);r.base=e.slice(1,l)}else{r.name=e.slice(f,a);r.base=e.slice(f,l)}r.ext=e.slice(a,l)}if(f>0)r.dir=e.slice(0,f-1);else if(i)r.dir=\"/\";return r},sep:\"/\",delimiter:\":\",win32:null,posix:null};r.posix=r;e.exports=r}};var r={};function __nccwpck_require__(t){var i=r[t];if(i!==undefined){return i.exports}var n=r[t]={exports:{}};var a=true;try{e[t](n,n.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(114);module.exports=t})();","export interface PathLocale {\n  detectedLocale?: string\n  pathname: string\n}\n\n/**\n * A cache of lowercased locales for each list of locales. This is stored as a\n * WeakMap so if the locales are garbage collected, the cache entry will be\n * removed as well.\n */\nconst cache = new WeakMap<readonly string[], readonly string[]>()\n\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */\nexport function normalizeLocalePath(\n  pathname: string,\n  locales?: readonly string[]\n): PathLocale {\n  // If locales is undefined, return the pathname as is.\n  if (!locales) return { pathname }\n\n  // Get the cached lowercased locales or create a new cache entry.\n  let lowercasedLocales = cache.get(locales)\n  if (!lowercasedLocales) {\n    lowercasedLocales = locales.map((locale) => locale.toLowerCase())\n    cache.set(locales, lowercasedLocales)\n  }\n\n  let detectedLocale: string | undefined\n\n  // The first segment will be empty, because it has a leading `/`. If\n  // there is no further segment, there is no locale (or it's the default).\n  const segments = pathname.split('/', 2)\n\n  // If there's no second segment (ie, the pathname is just `/`), there's no\n  // locale.\n  if (!segments[1]) return { pathname }\n\n  // The second segment will contain the locale part if any.\n  const segment = segments[1].toLowerCase()\n\n  // See if the segment matches one of the locales. If it doesn't, there is\n  // no locale (or it's the default).\n  const index = lowercasedLocales.indexOf(segment)\n  if (index < 0) return { pathname }\n\n  // Return the case-sensitive locale.\n  detectedLocale = locales[index]\n\n  // Remove the `/${locale}` part of the pathname.\n  pathname = pathname.slice(detectedLocale.length + 1) || '/'\n\n  return { pathname, detectedLocale }\n}\n","function _class_private_field_loose_base(receiver, privateKey) {\n    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n        throw new TypeError(\"attempted to use private field on non-instance\");\n    }\n\n    return receiver;\n}\nexport { _class_private_field_loose_base as _ };\n","var id = 0;\n\nfunction _class_private_field_loose_key(name) {\n    return \"__private_\" + id++ + \"_\" + name;\n}\nexport { _class_private_field_loose_key as _ };\n","/*\n    This is a simple promise queue that allows you to limit the number of concurrent promises\n    that are running at any given time. It's used to limit the number of concurrent\n    prefetch requests that are being made to the server but could be used for other\n    things as well.\n*/\nexport class PromiseQueue {\n  #maxConcurrency: number\n  #runningCount: number\n  #queue: Array<{\n    promiseFn: Promise<any>\n    task: () => void\n  }>\n\n  constructor(maxConcurrency = 5) {\n    this.#maxConcurrency = maxConcurrency\n    this.#runningCount = 0\n    this.#queue = []\n  }\n\n  enqueue<T>(promiseFn: () => Promise<T>): Promise<T> {\n    let taskResolve: (value: T | PromiseLike<T>) => void\n    let taskReject: (reason?: any) => void\n\n    const taskPromise = new Promise((resolve, reject) => {\n      taskResolve = resolve\n      taskReject = reject\n    }) as Promise<T>\n\n    const task = async () => {\n      try {\n        this.#runningCount++\n        const result = await promiseFn()\n        taskResolve(result)\n      } catch (error) {\n        taskReject(error)\n      } finally {\n        this.#runningCount--\n        this.#processNext()\n      }\n    }\n\n    const enqueueResult = { promiseFn: taskPromise, task }\n    // wonder if we should take a LIFO approach here\n    this.#queue.push(enqueueResult)\n    this.#processNext()\n\n    return taskPromise\n  }\n\n  bump(promiseFn: Promise<any>) {\n    const index = this.#queue.findIndex((item) => item.promiseFn === promiseFn)\n\n    if (index > -1) {\n      const bumpedItem = this.#queue.splice(index, 1)[0]\n      this.#queue.unshift(bumpedItem)\n      this.#processNext(true)\n    }\n  }\n\n  #processNext(forced = false) {\n    if (\n      (this.#runningCount < this.#maxConcurrency || forced) &&\n      this.#queue.length > 0\n    ) {\n      this.#queue.shift()?.task()\n    }\n  }\n}\n","import type {\n  PrefetchAction,\n  ReducerState,\n  ReadonlyReducerState,\n} from '../router-reducer-types'\nimport { PromiseQueue } from '../../promise-queue'\nimport {\n  getOrCreatePrefetchCacheEntry,\n  prunePrefetchCache,\n} from '../prefetch-cache-utils'\nexport const prefetchQueue = new PromiseQueue(5)\n\nexport const prefetchReducer = process.env.__NEXT_CLIENT_SEGMENT_CACHE\n  ? identityReducerWhenSegmentCacheIsEnabled\n  : prefetchReducerImpl\n\nfunction identityReducerWhenSegmentCacheIsEnabled<T>(state: T): T {\n  // Unlike the old implementation, the Segment Cache doesn't store its data in\n  // the router reducer state.\n  //\n  // This shouldn't be reachable because we wrap the prefetch API in a check,\n  // too, which prevents the action from being dispatched. But it's here for\n  // clarity + code elimination.\n  return state\n}\n\nfunction prefetchReducerImpl(\n  state: ReadonlyReducerState,\n  action: PrefetchAction\n): ReducerState {\n  // let's prune the prefetch cache before we do anything else\n  prunePrefetchCache(state.prefetchCache)\n\n  const { url } = action\n\n  getOrCreatePrefetchCacheEntry({\n    url,\n    nextUrl: state.nextUrl,\n    prefetchCache: state.prefetchCache,\n    kind: action.kind,\n    tree: state.tree,\n    allowAliasing: true,\n  })\n\n  return state\n}\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","/**\n * @license React\n * react-dom-server.edge.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n\n\n JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n\n Copyright (c) 2011 Gary Court\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n*/\n\"use strict\";\nvar React = require(\"next/dist/compiled/react\"),\n  ReactDOM = require(\"next/dist/compiled/react-dom\"),\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  REACT_SCOPE_TYPE = Symbol.for(\"react.scope\"),\n  REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\"),\n  REACT_LEGACY_HIDDEN_TYPE = Symbol.for(\"react.legacy_hidden\"),\n  REACT_MEMO_CACHE_SENTINEL = Symbol.for(\"react.memo_cache_sentinel\"),\n  REACT_VIEW_TRANSITION_TYPE = Symbol.for(\"react.view_transition\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator,\n  isArrayImpl = Array.isArray;\nfunction murmurhash3_32_gc(key, seed) {\n  var remainder = key.length & 3;\n  var bytes = key.length - remainder;\n  var h1 = seed;\n  for (seed = 0; seed < bytes; ) {\n    var k1 =\n      (key.charCodeAt(seed) & 255) |\n      ((key.charCodeAt(++seed) & 255) << 8) |\n      ((key.charCodeAt(++seed) & 255) << 16) |\n      ((key.charCodeAt(++seed) & 255) << 24);\n    ++seed;\n    k1 =\n      (3432918353 * (k1 & 65535) +\n        (((3432918353 * (k1 >>> 16)) & 65535) << 16)) &\n      4294967295;\n    k1 = (k1 << 15) | (k1 >>> 17);\n    k1 =\n      (461845907 * (k1 & 65535) + (((461845907 * (k1 >>> 16)) & 65535) << 16)) &\n      4294967295;\n    h1 ^= k1;\n    h1 = (h1 << 13) | (h1 >>> 19);\n    h1 = (5 * (h1 & 65535) + (((5 * (h1 >>> 16)) & 65535) << 16)) & 4294967295;\n    h1 = (h1 & 65535) + 27492 + ((((h1 >>> 16) + 58964) & 65535) << 16);\n  }\n  k1 = 0;\n  switch (remainder) {\n    case 3:\n      k1 ^= (key.charCodeAt(seed + 2) & 255) << 16;\n    case 2:\n      k1 ^= (key.charCodeAt(seed + 1) & 255) << 8;\n    case 1:\n      (k1 ^= key.charCodeAt(seed) & 255),\n        (k1 =\n          (3432918353 * (k1 & 65535) +\n            (((3432918353 * (k1 >>> 16)) & 65535) << 16)) &\n          4294967295),\n        (k1 = (k1 << 15) | (k1 >>> 17)),\n        (h1 ^=\n          (461845907 * (k1 & 65535) +\n            (((461845907 * (k1 >>> 16)) & 65535) << 16)) &\n          4294967295);\n  }\n  h1 ^= key.length;\n  h1 ^= h1 >>> 16;\n  h1 =\n    (2246822507 * (h1 & 65535) + (((2246822507 * (h1 >>> 16)) & 65535) << 16)) &\n    4294967295;\n  h1 ^= h1 >>> 13;\n  h1 =\n    (3266489909 * (h1 & 65535) + (((3266489909 * (h1 >>> 16)) & 65535) << 16)) &\n    4294967295;\n  return (h1 ^ (h1 >>> 16)) >>> 0;\n}\nfunction handleErrorInNextTick(error) {\n  setTimeoutOrImmediate(function () {\n    throw error;\n  });\n}\nvar LocalPromise = Promise,\n  scheduleMicrotask =\n    \"function\" === typeof queueMicrotask\n      ? queueMicrotask\n      : function (callback) {\n          LocalPromise.resolve(null)\n            .then(callback)\n            .catch(handleErrorInNextTick);\n        },\n  currentView = null,\n  writtenBytes = 0;\nfunction writeChunk(destination, chunk) {\n  if (0 !== chunk.byteLength)\n    if (2048 < chunk.byteLength)\n      0 < writtenBytes &&\n        (destination.enqueue(\n          new Uint8Array(currentView.buffer, 0, writtenBytes)\n        ),\n        (currentView = new Uint8Array(2048)),\n        (writtenBytes = 0)),\n        destination.enqueue(chunk);\n    else {\n      var allowableBytes = currentView.length - writtenBytes;\n      allowableBytes < chunk.byteLength &&\n        (0 === allowableBytes\n          ? destination.enqueue(currentView)\n          : (currentView.set(chunk.subarray(0, allowableBytes), writtenBytes),\n            destination.enqueue(currentView),\n            (chunk = chunk.subarray(allowableBytes))),\n        (currentView = new Uint8Array(2048)),\n        (writtenBytes = 0));\n      currentView.set(chunk, writtenBytes);\n      writtenBytes += chunk.byteLength;\n    }\n}\nfunction writeChunkAndReturn(destination, chunk) {\n  writeChunk(destination, chunk);\n  return !0;\n}\nfunction completeWriting(destination) {\n  currentView &&\n    0 < writtenBytes &&\n    (destination.enqueue(new Uint8Array(currentView.buffer, 0, writtenBytes)),\n    (currentView = null),\n    (writtenBytes = 0));\n}\nvar textEncoder = new TextEncoder();\nfunction stringToChunk(content) {\n  return textEncoder.encode(content);\n}\nfunction stringToPrecomputedChunk(content) {\n  return textEncoder.encode(content);\n}\nfunction closeWithError(destination, error) {\n  \"function\" === typeof destination.error\n    ? destination.error(error)\n    : destination.close();\n}\nvar assign = Object.assign,\n  hasOwnProperty = Object.prototype.hasOwnProperty,\n  VALID_ATTRIBUTE_NAME_REGEX = RegExp(\n    \"^[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"\n  ),\n  illegalAttributeNameCache = {},\n  validatedAttributeNameCache = {};\nfunction isAttributeNameSafe(attributeName) {\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName))\n    return !0;\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return !1;\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName))\n    return (validatedAttributeNameCache[attributeName] = !0);\n  illegalAttributeNameCache[attributeName] = !0;\n  return !1;\n}\nvar unitlessNumbers = new Set(\n    \"animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp\".split(\n      \" \"\n    )\n  ),\n  aliases = new Map([\n    [\"acceptCharset\", \"accept-charset\"],\n    [\"htmlFor\", \"for\"],\n    [\"httpEquiv\", \"http-equiv\"],\n    [\"crossOrigin\", \"crossorigin\"],\n    [\"accentHeight\", \"accent-height\"],\n    [\"alignmentBaseline\", \"alignment-baseline\"],\n    [\"arabicForm\", \"arabic-form\"],\n    [\"baselineShift\", \"baseline-shift\"],\n    [\"capHeight\", \"cap-height\"],\n    [\"clipPath\", \"clip-path\"],\n    [\"clipRule\", \"clip-rule\"],\n    [\"colorInterpolation\", \"color-interpolation\"],\n    [\"colorInterpolationFilters\", \"color-interpolation-filters\"],\n    [\"colorProfile\", \"color-profile\"],\n    [\"colorRendering\", \"color-rendering\"],\n    [\"dominantBaseline\", \"dominant-baseline\"],\n    [\"enableBackground\", \"enable-background\"],\n    [\"fillOpacity\", \"fill-opacity\"],\n    [\"fillRule\", \"fill-rule\"],\n    [\"floodColor\", \"flood-color\"],\n    [\"floodOpacity\", \"flood-opacity\"],\n    [\"fontFamily\", \"font-family\"],\n    [\"fontSize\", \"font-size\"],\n    [\"fontSizeAdjust\", \"font-size-adjust\"],\n    [\"fontStretch\", \"font-stretch\"],\n    [\"fontStyle\", \"font-style\"],\n    [\"fontVariant\", \"font-variant\"],\n    [\"fontWeight\", \"font-weight\"],\n    [\"glyphName\", \"glyph-name\"],\n    [\"glyphOrientationHorizontal\", \"glyph-orientation-horizontal\"],\n    [\"glyphOrientationVertical\", \"glyph-orientation-vertical\"],\n    [\"horizAdvX\", \"horiz-adv-x\"],\n    [\"horizOriginX\", \"horiz-origin-x\"],\n    [\"imageRendering\", \"image-rendering\"],\n    [\"letterSpacing\", \"letter-spacing\"],\n    [\"lightingColor\", \"lighting-color\"],\n    [\"markerEnd\", \"marker-end\"],\n    [\"markerMid\", \"marker-mid\"],\n    [\"markerStart\", \"marker-start\"],\n    [\"overlinePosition\", \"overline-position\"],\n    [\"overlineThickness\", \"overline-thickness\"],\n    [\"paintOrder\", \"paint-order\"],\n    [\"panose-1\", \"panose-1\"],\n    [\"pointerEvents\", \"pointer-events\"],\n    [\"renderingIntent\", \"rendering-intent\"],\n    [\"shapeRendering\", \"shape-rendering\"],\n    [\"stopColor\", \"stop-color\"],\n    [\"stopOpacity\", \"stop-opacity\"],\n    [\"strikethroughPosition\", \"strikethrough-position\"],\n    [\"strikethroughThickness\", \"strikethrough-thickness\"],\n    [\"strokeDasharray\", \"stroke-dasharray\"],\n    [\"strokeDashoffset\", \"stroke-dashoffset\"],\n    [\"strokeLinecap\", \"stroke-linecap\"],\n    [\"strokeLinejoin\", \"stroke-linejoin\"],\n    [\"strokeMiterlimit\", \"stroke-miterlimit\"],\n    [\"strokeOpacity\", \"stroke-opacity\"],\n    [\"strokeWidth\", \"stroke-width\"],\n    [\"textAnchor\", \"text-anchor\"],\n    [\"textDecoration\", \"text-decoration\"],\n    [\"textRendering\", \"text-rendering\"],\n    [\"transformOrigin\", \"transform-origin\"],\n    [\"underlinePosition\", \"underline-position\"],\n    [\"underlineThickness\", \"underline-thickness\"],\n    [\"unicodeBidi\", \"unicode-bidi\"],\n    [\"unicodeRange\", \"unicode-range\"],\n    [\"unitsPerEm\", \"units-per-em\"],\n    [\"vAlphabetic\", \"v-alphabetic\"],\n    [\"vHanging\", \"v-hanging\"],\n    [\"vIdeographic\", \"v-ideographic\"],\n    [\"vMathematical\", \"v-mathematical\"],\n    [\"vectorEffect\", \"vector-effect\"],\n    [\"vertAdvY\", \"vert-adv-y\"],\n    [\"vertOriginX\", \"vert-origin-x\"],\n    [\"vertOriginY\", \"vert-origin-y\"],\n    [\"wordSpacing\", \"word-spacing\"],\n    [\"writingMode\", \"writing-mode\"],\n    [\"xmlnsXlink\", \"xmlns:xlink\"],\n    [\"xHeight\", \"x-height\"]\n  ]),\n  matchHtmlRegExp = /[\"'&<>]/;\nfunction escapeTextForBrowser(text) {\n  if (\n    \"boolean\" === typeof text ||\n    \"number\" === typeof text ||\n    \"bigint\" === typeof text\n  )\n    return \"\" + text;\n  text = \"\" + text;\n  var match = matchHtmlRegExp.exec(text);\n  if (match) {\n    var html = \"\",\n      index,\n      lastIndex = 0;\n    for (index = match.index; index < text.length; index++) {\n      switch (text.charCodeAt(index)) {\n        case 34:\n          match = \"&quot;\";\n          break;\n        case 38:\n          match = \"&amp;\";\n          break;\n        case 39:\n          match = \"&#x27;\";\n          break;\n        case 60:\n          match = \"&lt;\";\n          break;\n        case 62:\n          match = \"&gt;\";\n          break;\n        default:\n          continue;\n      }\n      lastIndex !== index && (html += text.slice(lastIndex, index));\n      lastIndex = index + 1;\n      html += match;\n    }\n    text = lastIndex !== index ? html + text.slice(lastIndex, index) : html;\n  }\n  return text;\n}\nvar uppercasePattern = /([A-Z])/g,\n  msPattern = /^ms-/,\n  isJavaScriptProtocol =\n    /^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*:/i;\nfunction sanitizeURL(url) {\n  return isJavaScriptProtocol.test(\"\" + url)\n    ? \"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')\"\n    : url;\n}\nvar ReactSharedInternals =\n    React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  ReactDOMSharedInternals =\n    ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  sharedNotPendingObject = {\n    pending: !1,\n    data: null,\n    method: null,\n    action: null\n  },\n  previousDispatcher = ReactDOMSharedInternals.d;\nReactDOMSharedInternals.d = {\n  f: previousDispatcher.f,\n  r: previousDispatcher.r,\n  D: prefetchDNS,\n  C: preconnect,\n  L: preload,\n  m: preloadModule,\n  X: preinitScript,\n  S: preinitStyle,\n  M: preinitModuleScript\n};\nvar PRELOAD_NO_CREDS = [];\nstringToPrecomputedChunk('\"></template>');\nvar startInlineScript = stringToPrecomputedChunk(\"<script>\"),\n  endInlineScript = stringToPrecomputedChunk(\"\\x3c/script>\"),\n  startScriptSrc = stringToPrecomputedChunk('<script src=\"'),\n  startModuleSrc = stringToPrecomputedChunk('<script type=\"module\" src=\"'),\n  scriptNonce = stringToPrecomputedChunk('\" nonce=\"'),\n  scriptIntegirty = stringToPrecomputedChunk('\" integrity=\"'),\n  scriptCrossOrigin = stringToPrecomputedChunk('\" crossorigin=\"'),\n  endAsyncScript = stringToPrecomputedChunk('\" async=\"\">\\x3c/script>'),\n  scriptRegex = /(<\\/|<)(s)(cript)/gi;\nfunction scriptReplacer(match, prefix, s, suffix) {\n  return \"\" + prefix + (\"s\" === s ? \"\\\\u0073\" : \"\\\\u0053\") + suffix;\n}\nvar importMapScriptStart = stringToPrecomputedChunk(\n    '<script type=\"importmap\">'\n  ),\n  importMapScriptEnd = stringToPrecomputedChunk(\"\\x3c/script>\");\nfunction createRenderState(\n  resumableState,\n  nonce,\n  externalRuntimeConfig,\n  importMap,\n  onHeaders,\n  maxHeadersLength\n) {\n  var inlineScriptWithNonce =\n      void 0 === nonce\n        ? startInlineScript\n        : stringToPrecomputedChunk(\n            '<script nonce=\"' + escapeTextForBrowser(nonce) + '\">'\n          ),\n    idPrefix = resumableState.idPrefix;\n  externalRuntimeConfig = [];\n  var bootstrapScriptContent = resumableState.bootstrapScriptContent,\n    bootstrapScripts = resumableState.bootstrapScripts,\n    bootstrapModules = resumableState.bootstrapModules;\n  void 0 !== bootstrapScriptContent &&\n    externalRuntimeConfig.push(\n      inlineScriptWithNonce,\n      stringToChunk(\n        (\"\" + bootstrapScriptContent).replace(scriptRegex, scriptReplacer)\n      ),\n      endInlineScript\n    );\n  bootstrapScriptContent = [];\n  void 0 !== importMap &&\n    (bootstrapScriptContent.push(importMapScriptStart),\n    bootstrapScriptContent.push(\n      stringToChunk(\n        (\"\" + JSON.stringify(importMap)).replace(scriptRegex, scriptReplacer)\n      )\n    ),\n    bootstrapScriptContent.push(importMapScriptEnd));\n  importMap = onHeaders\n    ? {\n        preconnects: \"\",\n        fontPreloads: \"\",\n        highImagePreloads: \"\",\n        remainingCapacity:\n          2 + (\"number\" === typeof maxHeadersLength ? maxHeadersLength : 2e3)\n      }\n    : null;\n  onHeaders = {\n    placeholderPrefix: stringToPrecomputedChunk(idPrefix + \"P:\"),\n    segmentPrefix: stringToPrecomputedChunk(idPrefix + \"S:\"),\n    boundaryPrefix: stringToPrecomputedChunk(idPrefix + \"B:\"),\n    startInlineScript: inlineScriptWithNonce,\n    preamble: createPreambleState(),\n    externalRuntimeScript: null,\n    bootstrapChunks: externalRuntimeConfig,\n    importMapChunks: bootstrapScriptContent,\n    onHeaders: onHeaders,\n    headers: importMap,\n    resets: {\n      font: {},\n      dns: {},\n      connect: { default: {}, anonymous: {}, credentials: {} },\n      image: {},\n      style: {}\n    },\n    charsetChunks: [],\n    viewportChunks: [],\n    hoistableChunks: [],\n    preconnects: new Set(),\n    fontPreloads: new Set(),\n    highImagePreloads: new Set(),\n    styles: new Map(),\n    bootstrapScripts: new Set(),\n    scripts: new Set(),\n    bulkPreloads: new Set(),\n    preloads: {\n      images: new Map(),\n      stylesheets: new Map(),\n      scripts: new Map(),\n      moduleScripts: new Map()\n    },\n    nonce: nonce,\n    hoistableState: null,\n    stylesToHoist: !1\n  };\n  if (void 0 !== bootstrapScripts)\n    for (importMap = 0; importMap < bootstrapScripts.length; importMap++) {\n      var scriptConfig = bootstrapScripts[importMap];\n      idPrefix = inlineScriptWithNonce = void 0;\n      bootstrapScriptContent = {\n        rel: \"preload\",\n        as: \"script\",\n        fetchPriority: \"low\",\n        nonce: nonce\n      };\n      \"string\" === typeof scriptConfig\n        ? (bootstrapScriptContent.href = maxHeadersLength = scriptConfig)\n        : ((bootstrapScriptContent.href = maxHeadersLength = scriptConfig.src),\n          (bootstrapScriptContent.integrity = idPrefix =\n            \"string\" === typeof scriptConfig.integrity\n              ? scriptConfig.integrity\n              : void 0),\n          (bootstrapScriptContent.crossOrigin = inlineScriptWithNonce =\n            \"string\" === typeof scriptConfig || null == scriptConfig.crossOrigin\n              ? void 0\n              : \"use-credentials\" === scriptConfig.crossOrigin\n                ? \"use-credentials\"\n                : \"\"));\n      scriptConfig = resumableState;\n      var href = maxHeadersLength;\n      scriptConfig.scriptResources[href] = null;\n      scriptConfig.moduleScriptResources[href] = null;\n      scriptConfig = [];\n      pushLinkImpl(scriptConfig, bootstrapScriptContent);\n      onHeaders.bootstrapScripts.add(scriptConfig);\n      externalRuntimeConfig.push(\n        startScriptSrc,\n        stringToChunk(escapeTextForBrowser(maxHeadersLength))\n      );\n      nonce &&\n        externalRuntimeConfig.push(\n          scriptNonce,\n          stringToChunk(escapeTextForBrowser(nonce))\n        );\n      \"string\" === typeof idPrefix &&\n        externalRuntimeConfig.push(\n          scriptIntegirty,\n          stringToChunk(escapeTextForBrowser(idPrefix))\n        );\n      \"string\" === typeof inlineScriptWithNonce &&\n        externalRuntimeConfig.push(\n          scriptCrossOrigin,\n          stringToChunk(escapeTextForBrowser(inlineScriptWithNonce))\n        );\n      externalRuntimeConfig.push(endAsyncScript);\n    }\n  if (void 0 !== bootstrapModules)\n    for (\n      bootstrapScripts = 0;\n      bootstrapScripts < bootstrapModules.length;\n      bootstrapScripts++\n    )\n      (bootstrapScriptContent = bootstrapModules[bootstrapScripts]),\n        (inlineScriptWithNonce = maxHeadersLength = void 0),\n        (idPrefix = {\n          rel: \"modulepreload\",\n          fetchPriority: \"low\",\n          nonce: nonce\n        }),\n        \"string\" === typeof bootstrapScriptContent\n          ? (idPrefix.href = importMap = bootstrapScriptContent)\n          : ((idPrefix.href = importMap = bootstrapScriptContent.src),\n            (idPrefix.integrity = inlineScriptWithNonce =\n              \"string\" === typeof bootstrapScriptContent.integrity\n                ? bootstrapScriptContent.integrity\n                : void 0),\n            (idPrefix.crossOrigin = maxHeadersLength =\n              \"string\" === typeof bootstrapScriptContent ||\n              null == bootstrapScriptContent.crossOrigin\n                ? void 0\n                : \"use-credentials\" === bootstrapScriptContent.crossOrigin\n                  ? \"use-credentials\"\n                  : \"\")),\n        (bootstrapScriptContent = resumableState),\n        (scriptConfig = importMap),\n        (bootstrapScriptContent.scriptResources[scriptConfig] = null),\n        (bootstrapScriptContent.moduleScriptResources[scriptConfig] = null),\n        (bootstrapScriptContent = []),\n        pushLinkImpl(bootstrapScriptContent, idPrefix),\n        onHeaders.bootstrapScripts.add(bootstrapScriptContent),\n        externalRuntimeConfig.push(\n          startModuleSrc,\n          stringToChunk(escapeTextForBrowser(importMap))\n        ),\n        nonce &&\n          externalRuntimeConfig.push(\n            scriptNonce,\n            stringToChunk(escapeTextForBrowser(nonce))\n          ),\n        \"string\" === typeof inlineScriptWithNonce &&\n          externalRuntimeConfig.push(\n            scriptIntegirty,\n            stringToChunk(escapeTextForBrowser(inlineScriptWithNonce))\n          ),\n        \"string\" === typeof maxHeadersLength &&\n          externalRuntimeConfig.push(\n            scriptCrossOrigin,\n            stringToChunk(escapeTextForBrowser(maxHeadersLength))\n          ),\n        externalRuntimeConfig.push(endAsyncScript);\n  return onHeaders;\n}\nfunction createResumableState(\n  identifierPrefix,\n  externalRuntimeConfig,\n  bootstrapScriptContent,\n  bootstrapScripts,\n  bootstrapModules\n) {\n  return {\n    idPrefix: void 0 === identifierPrefix ? \"\" : identifierPrefix,\n    nextFormID: 0,\n    streamingFormat: 0,\n    bootstrapScriptContent: bootstrapScriptContent,\n    bootstrapScripts: bootstrapScripts,\n    bootstrapModules: bootstrapModules,\n    instructions: 0,\n    hasBody: !1,\n    hasHtml: !1,\n    unknownResources: {},\n    dnsResources: {},\n    connectResources: { default: {}, anonymous: {}, credentials: {} },\n    imageResources: {},\n    styleResources: {},\n    scriptResources: {},\n    moduleUnknownResources: {},\n    moduleScriptResources: {}\n  };\n}\nfunction createPreambleState() {\n  return {\n    htmlChunks: null,\n    headChunks: null,\n    bodyChunks: null,\n    contribution: 0\n  };\n}\nfunction createFormatContext(insertionMode, selectedValue, tagScope) {\n  return {\n    insertionMode: insertionMode,\n    selectedValue: selectedValue,\n    tagScope: tagScope\n  };\n}\nfunction createRootFormatContext(namespaceURI) {\n  return createFormatContext(\n    \"http://www.w3.org/2000/svg\" === namespaceURI\n      ? 4\n      : \"http://www.w3.org/1998/Math/MathML\" === namespaceURI\n        ? 5\n        : 0,\n    null,\n    0\n  );\n}\nfunction getChildFormatContext(parentContext, type, props) {\n  switch (type) {\n    case \"noscript\":\n      return createFormatContext(2, null, parentContext.tagScope | 1);\n    case \"select\":\n      return createFormatContext(\n        2,\n        null != props.value ? props.value : props.defaultValue,\n        parentContext.tagScope\n      );\n    case \"svg\":\n      return createFormatContext(4, null, parentContext.tagScope);\n    case \"picture\":\n      return createFormatContext(2, null, parentContext.tagScope | 2);\n    case \"math\":\n      return createFormatContext(5, null, parentContext.tagScope);\n    case \"foreignObject\":\n      return createFormatContext(2, null, parentContext.tagScope);\n    case \"table\":\n      return createFormatContext(6, null, parentContext.tagScope);\n    case \"thead\":\n    case \"tbody\":\n    case \"tfoot\":\n      return createFormatContext(7, null, parentContext.tagScope);\n    case \"colgroup\":\n      return createFormatContext(9, null, parentContext.tagScope);\n    case \"tr\":\n      return createFormatContext(8, null, parentContext.tagScope);\n    case \"head\":\n      if (2 > parentContext.insertionMode)\n        return createFormatContext(3, null, parentContext.tagScope);\n      break;\n    case \"html\":\n      if (0 === parentContext.insertionMode)\n        return createFormatContext(1, null, parentContext.tagScope);\n  }\n  return 6 <= parentContext.insertionMode || 2 > parentContext.insertionMode\n    ? createFormatContext(2, null, parentContext.tagScope)\n    : parentContext;\n}\nvar textSeparator = stringToPrecomputedChunk(\"\\x3c!-- --\\x3e\");\nfunction pushTextInstance(target, text, renderState, textEmbedded) {\n  if (\"\" === text) return textEmbedded;\n  textEmbedded && target.push(textSeparator);\n  target.push(stringToChunk(escapeTextForBrowser(text)));\n  return !0;\n}\nvar styleNameCache = new Map(),\n  styleAttributeStart = stringToPrecomputedChunk(' style=\"'),\n  styleAssign = stringToPrecomputedChunk(\":\"),\n  styleSeparator = stringToPrecomputedChunk(\";\");\nfunction pushStyleAttribute(target, style) {\n  if (\"object\" !== typeof style)\n    throw Error(\n      \"The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.\"\n    );\n  var isFirst = !0,\n    styleName;\n  for (styleName in style)\n    if (hasOwnProperty.call(style, styleName)) {\n      var styleValue = style[styleName];\n      if (\n        null != styleValue &&\n        \"boolean\" !== typeof styleValue &&\n        \"\" !== styleValue\n      ) {\n        if (0 === styleName.indexOf(\"--\")) {\n          var nameChunk = stringToChunk(escapeTextForBrowser(styleName));\n          styleValue = stringToChunk(\n            escapeTextForBrowser((\"\" + styleValue).trim())\n          );\n        } else\n          (nameChunk = styleNameCache.get(styleName)),\n            void 0 === nameChunk &&\n              ((nameChunk = stringToPrecomputedChunk(\n                escapeTextForBrowser(\n                  styleName\n                    .replace(uppercasePattern, \"-$1\")\n                    .toLowerCase()\n                    .replace(msPattern, \"-ms-\")\n                )\n              )),\n              styleNameCache.set(styleName, nameChunk)),\n            (styleValue =\n              \"number\" === typeof styleValue\n                ? 0 === styleValue || unitlessNumbers.has(styleName)\n                  ? stringToChunk(\"\" + styleValue)\n                  : stringToChunk(styleValue + \"px\")\n                : stringToChunk(\n                    escapeTextForBrowser((\"\" + styleValue).trim())\n                  ));\n        isFirst\n          ? ((isFirst = !1),\n            target.push(\n              styleAttributeStart,\n              nameChunk,\n              styleAssign,\n              styleValue\n            ))\n          : target.push(styleSeparator, nameChunk, styleAssign, styleValue);\n      }\n    }\n  isFirst || target.push(attributeEnd);\n}\nvar attributeSeparator = stringToPrecomputedChunk(\" \"),\n  attributeAssign = stringToPrecomputedChunk('=\"'),\n  attributeEnd = stringToPrecomputedChunk('\"'),\n  attributeEmptyString = stringToPrecomputedChunk('=\"\"');\nfunction pushBooleanAttribute(target, name, value) {\n  value &&\n    \"function\" !== typeof value &&\n    \"symbol\" !== typeof value &&\n    target.push(attributeSeparator, stringToChunk(name), attributeEmptyString);\n}\nfunction pushStringAttribute(target, name, value) {\n  \"function\" !== typeof value &&\n    \"symbol\" !== typeof value &&\n    \"boolean\" !== typeof value &&\n    target.push(\n      attributeSeparator,\n      stringToChunk(name),\n      attributeAssign,\n      stringToChunk(escapeTextForBrowser(value)),\n      attributeEnd\n    );\n}\nvar actionJavaScriptURL = stringToPrecomputedChunk(\n    escapeTextForBrowser(\n      \"javascript:throw new Error('React form unexpectedly submitted.')\"\n    )\n  ),\n  startHiddenInputChunk = stringToPrecomputedChunk('<input type=\"hidden\"');\nfunction pushAdditionalFormField(value, key) {\n  this.push(startHiddenInputChunk);\n  validateAdditionalFormField(value);\n  pushStringAttribute(this, \"name\", key);\n  pushStringAttribute(this, \"value\", value);\n  this.push(endOfStartTagSelfClosing);\n}\nfunction validateAdditionalFormField(value) {\n  if (\"string\" !== typeof value)\n    throw Error(\n      \"File/Blob fields are not yet supported in progressive forms. Will fallback to client hydration.\"\n    );\n}\nfunction getCustomFormFields(resumableState, formAction) {\n  if (\"function\" === typeof formAction.$$FORM_ACTION) {\n    var id = resumableState.nextFormID++;\n    resumableState = resumableState.idPrefix + id;\n    try {\n      var customFields = formAction.$$FORM_ACTION(resumableState);\n      if (customFields) {\n        var formData = customFields.data;\n        null != formData && formData.forEach(validateAdditionalFormField);\n      }\n      return customFields;\n    } catch (x) {\n      if (\"object\" === typeof x && null !== x && \"function\" === typeof x.then)\n        throw x;\n    }\n  }\n  return null;\n}\nfunction pushFormActionAttribute(\n  target,\n  resumableState,\n  renderState,\n  formAction,\n  formEncType,\n  formMethod,\n  formTarget,\n  name\n) {\n  var formData = null;\n  if (\"function\" === typeof formAction) {\n    var customFields = getCustomFormFields(resumableState, formAction);\n    null !== customFields\n      ? ((name = customFields.name),\n        (formAction = customFields.action || \"\"),\n        (formEncType = customFields.encType),\n        (formMethod = customFields.method),\n        (formTarget = customFields.target),\n        (formData = customFields.data))\n      : (target.push(\n          attributeSeparator,\n          stringToChunk(\"formAction\"),\n          attributeAssign,\n          actionJavaScriptURL,\n          attributeEnd\n        ),\n        (formTarget = formMethod = formEncType = formAction = name = null),\n        injectFormReplayingRuntime(resumableState, renderState));\n  }\n  null != name && pushAttribute(target, \"name\", name);\n  null != formAction && pushAttribute(target, \"formAction\", formAction);\n  null != formEncType && pushAttribute(target, \"formEncType\", formEncType);\n  null != formMethod && pushAttribute(target, \"formMethod\", formMethod);\n  null != formTarget && pushAttribute(target, \"formTarget\", formTarget);\n  return formData;\n}\nfunction pushAttribute(target, name, value) {\n  switch (name) {\n    case \"className\":\n      pushStringAttribute(target, \"class\", value);\n      break;\n    case \"tabIndex\":\n      pushStringAttribute(target, \"tabindex\", value);\n      break;\n    case \"dir\":\n    case \"role\":\n    case \"viewBox\":\n    case \"width\":\n    case \"height\":\n      pushStringAttribute(target, name, value);\n      break;\n    case \"style\":\n      pushStyleAttribute(target, value);\n      break;\n    case \"src\":\n    case \"href\":\n      if (\"\" === value) break;\n    case \"action\":\n    case \"formAction\":\n      if (\n        null == value ||\n        \"function\" === typeof value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      )\n        break;\n      value = sanitizeURL(\"\" + value);\n      target.push(\n        attributeSeparator,\n        stringToChunk(name),\n        attributeAssign,\n        stringToChunk(escapeTextForBrowser(value)),\n        attributeEnd\n      );\n      break;\n    case \"defaultValue\":\n    case \"defaultChecked\":\n    case \"innerHTML\":\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"ref\":\n      break;\n    case \"autoFocus\":\n    case \"multiple\":\n    case \"muted\":\n      pushBooleanAttribute(target, name.toLowerCase(), value);\n      break;\n    case \"xlinkHref\":\n      if (\n        \"function\" === typeof value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      )\n        break;\n      value = sanitizeURL(\"\" + value);\n      target.push(\n        attributeSeparator,\n        stringToChunk(\"xlink:href\"),\n        attributeAssign,\n        stringToChunk(escapeTextForBrowser(value)),\n        attributeEnd\n      );\n      break;\n    case \"contentEditable\":\n    case \"spellCheck\":\n    case \"draggable\":\n    case \"value\":\n    case \"autoReverse\":\n    case \"externalResourcesRequired\":\n    case \"focusable\":\n    case \"preserveAlpha\":\n      \"function\" !== typeof value &&\n        \"symbol\" !== typeof value &&\n        target.push(\n          attributeSeparator,\n          stringToChunk(name),\n          attributeAssign,\n          stringToChunk(escapeTextForBrowser(value)),\n          attributeEnd\n        );\n      break;\n    case \"inert\":\n    case \"allowFullScreen\":\n    case \"async\":\n    case \"autoPlay\":\n    case \"controls\":\n    case \"default\":\n    case \"defer\":\n    case \"disabled\":\n    case \"disablePictureInPicture\":\n    case \"disableRemotePlayback\":\n    case \"formNoValidate\":\n    case \"hidden\":\n    case \"loop\":\n    case \"noModule\":\n    case \"noValidate\":\n    case \"open\":\n    case \"playsInline\":\n    case \"readOnly\":\n    case \"required\":\n    case \"reversed\":\n    case \"scoped\":\n    case \"seamless\":\n    case \"itemScope\":\n      value &&\n        \"function\" !== typeof value &&\n        \"symbol\" !== typeof value &&\n        target.push(\n          attributeSeparator,\n          stringToChunk(name),\n          attributeEmptyString\n        );\n      break;\n    case \"capture\":\n    case \"download\":\n      !0 === value\n        ? target.push(\n            attributeSeparator,\n            stringToChunk(name),\n            attributeEmptyString\n          )\n        : !1 !== value &&\n          \"function\" !== typeof value &&\n          \"symbol\" !== typeof value &&\n          target.push(\n            attributeSeparator,\n            stringToChunk(name),\n            attributeAssign,\n            stringToChunk(escapeTextForBrowser(value)),\n            attributeEnd\n          );\n      break;\n    case \"cols\":\n    case \"rows\":\n    case \"size\":\n    case \"span\":\n      \"function\" !== typeof value &&\n        \"symbol\" !== typeof value &&\n        !isNaN(value) &&\n        1 <= value &&\n        target.push(\n          attributeSeparator,\n          stringToChunk(name),\n          attributeAssign,\n          stringToChunk(escapeTextForBrowser(value)),\n          attributeEnd\n        );\n      break;\n    case \"rowSpan\":\n    case \"start\":\n      \"function\" === typeof value ||\n        \"symbol\" === typeof value ||\n        isNaN(value) ||\n        target.push(\n          attributeSeparator,\n          stringToChunk(name),\n          attributeAssign,\n          stringToChunk(escapeTextForBrowser(value)),\n          attributeEnd\n        );\n      break;\n    case \"xlinkActuate\":\n      pushStringAttribute(target, \"xlink:actuate\", value);\n      break;\n    case \"xlinkArcrole\":\n      pushStringAttribute(target, \"xlink:arcrole\", value);\n      break;\n    case \"xlinkRole\":\n      pushStringAttribute(target, \"xlink:role\", value);\n      break;\n    case \"xlinkShow\":\n      pushStringAttribute(target, \"xlink:show\", value);\n      break;\n    case \"xlinkTitle\":\n      pushStringAttribute(target, \"xlink:title\", value);\n      break;\n    case \"xlinkType\":\n      pushStringAttribute(target, \"xlink:type\", value);\n      break;\n    case \"xmlBase\":\n      pushStringAttribute(target, \"xml:base\", value);\n      break;\n    case \"xmlLang\":\n      pushStringAttribute(target, \"xml:lang\", value);\n      break;\n    case \"xmlSpace\":\n      pushStringAttribute(target, \"xml:space\", value);\n      break;\n    default:\n      if (\n        !(2 < name.length) ||\n        (\"o\" !== name[0] && \"O\" !== name[0]) ||\n        (\"n\" !== name[1] && \"N\" !== name[1])\n      )\n        if (((name = aliases.get(name) || name), isAttributeNameSafe(name))) {\n          switch (typeof value) {\n            case \"function\":\n            case \"symbol\":\n              return;\n            case \"boolean\":\n              var prefix$8 = name.toLowerCase().slice(0, 5);\n              if (\"data-\" !== prefix$8 && \"aria-\" !== prefix$8) return;\n          }\n          target.push(\n            attributeSeparator,\n            stringToChunk(name),\n            attributeAssign,\n            stringToChunk(escapeTextForBrowser(value)),\n            attributeEnd\n          );\n        }\n  }\n}\nvar endOfStartTag = stringToPrecomputedChunk(\">\"),\n  endOfStartTagSelfClosing = stringToPrecomputedChunk(\"/>\");\nfunction pushInnerHTML(target, innerHTML, children) {\n  if (null != innerHTML) {\n    if (null != children)\n      throw Error(\n        \"Can only set one of `children` or `props.dangerouslySetInnerHTML`.\"\n      );\n    if (\"object\" !== typeof innerHTML || !(\"__html\" in innerHTML))\n      throw Error(\n        \"`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information.\"\n      );\n    innerHTML = innerHTML.__html;\n    null !== innerHTML &&\n      void 0 !== innerHTML &&\n      target.push(stringToChunk(\"\" + innerHTML));\n  }\n}\nfunction flattenOptionChildren(children) {\n  var content = \"\";\n  React.Children.forEach(children, function (child) {\n    null != child && (content += child);\n  });\n  return content;\n}\nvar selectedMarkerAttribute = stringToPrecomputedChunk(' selected=\"\"'),\n  formReplayingRuntimeScript = stringToPrecomputedChunk(\n    'addEventListener(\"submit\",function(a){if(!a.defaultPrevented){var c=a.target,d=a.submitter,e=c.action,b=d;if(d){var f=d.getAttribute(\"formAction\");null!=f&&(e=f,b=null)}\"javascript:throw new Error(\\'React form unexpectedly submitted.\\')\"===e&&(a.preventDefault(),b?(a=document.createElement(\"input\"),a.name=b.name,a.value=b.value,b.parentNode.insertBefore(a,b),b=new FormData(c),a.parentNode.removeChild(a)):b=new FormData(c),a=c.ownerDocument||c,(a.$$reactFormReplay=a.$$reactFormReplay||[]).push(c,d,b))}});'\n  );\nfunction injectFormReplayingRuntime(resumableState, renderState) {\n  0 === (resumableState.instructions & 16) &&\n    ((resumableState.instructions |= 16),\n    renderState.bootstrapChunks.unshift(\n      renderState.startInlineScript,\n      formReplayingRuntimeScript,\n      endInlineScript\n    ));\n}\nvar formStateMarkerIsMatching = stringToPrecomputedChunk(\"\\x3c!--F!--\\x3e\"),\n  formStateMarkerIsNotMatching = stringToPrecomputedChunk(\"\\x3c!--F--\\x3e\");\nfunction pushLinkImpl(target, props) {\n  target.push(startChunkForTag(\"link\"));\n  for (var propKey in props)\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n      if (null != propValue)\n        switch (propKey) {\n          case \"children\":\n          case \"dangerouslySetInnerHTML\":\n            throw Error(\n              \"link is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\n            );\n          default:\n            pushAttribute(target, propKey, propValue);\n        }\n    }\n  target.push(endOfStartTagSelfClosing);\n  return null;\n}\nvar styleRegex = /(<\\/|<)(s)(tyle)/gi;\nfunction styleReplacer(match, prefix, s, suffix) {\n  return \"\" + prefix + (\"s\" === s ? \"\\\\73 \" : \"\\\\53 \") + suffix;\n}\nfunction pushSelfClosing(target, props, tag) {\n  target.push(startChunkForTag(tag));\n  for (var propKey in props)\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n      if (null != propValue)\n        switch (propKey) {\n          case \"children\":\n          case \"dangerouslySetInnerHTML\":\n            throw Error(\n              tag +\n                \" is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\n            );\n          default:\n            pushAttribute(target, propKey, propValue);\n        }\n    }\n  target.push(endOfStartTagSelfClosing);\n  return null;\n}\nfunction pushTitleImpl(target, props) {\n  target.push(startChunkForTag(\"title\"));\n  var children = null,\n    innerHTML = null,\n    propKey;\n  for (propKey in props)\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n      if (null != propValue)\n        switch (propKey) {\n          case \"children\":\n            children = propValue;\n            break;\n          case \"dangerouslySetInnerHTML\":\n            innerHTML = propValue;\n            break;\n          default:\n            pushAttribute(target, propKey, propValue);\n        }\n    }\n  target.push(endOfStartTag);\n  props = Array.isArray(children)\n    ? 2 > children.length\n      ? children[0]\n      : null\n    : children;\n  \"function\" !== typeof props &&\n    \"symbol\" !== typeof props &&\n    null !== props &&\n    void 0 !== props &&\n    target.push(stringToChunk(escapeTextForBrowser(\"\" + props)));\n  pushInnerHTML(target, innerHTML, children);\n  target.push(endChunkForTag(\"title\"));\n  return null;\n}\nfunction pushScriptImpl(target, props) {\n  target.push(startChunkForTag(\"script\"));\n  var children = null,\n    innerHTML = null,\n    propKey;\n  for (propKey in props)\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n      if (null != propValue)\n        switch (propKey) {\n          case \"children\":\n            children = propValue;\n            break;\n          case \"dangerouslySetInnerHTML\":\n            innerHTML = propValue;\n            break;\n          default:\n            pushAttribute(target, propKey, propValue);\n        }\n    }\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, children);\n  \"string\" === typeof children &&\n    target.push(\n      stringToChunk((\"\" + children).replace(scriptRegex, scriptReplacer))\n    );\n  target.push(endChunkForTag(\"script\"));\n  return null;\n}\nfunction pushStartSingletonElement(target, props, tag) {\n  target.push(startChunkForTag(tag));\n  var innerHTML = (tag = null),\n    propKey;\n  for (propKey in props)\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n      if (null != propValue)\n        switch (propKey) {\n          case \"children\":\n            tag = propValue;\n            break;\n          case \"dangerouslySetInnerHTML\":\n            innerHTML = propValue;\n            break;\n          default:\n            pushAttribute(target, propKey, propValue);\n        }\n    }\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, tag);\n  return tag;\n}\nfunction pushStartGenericElement(target, props, tag) {\n  target.push(startChunkForTag(tag));\n  var innerHTML = (tag = null),\n    propKey;\n  for (propKey in props)\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n      if (null != propValue)\n        switch (propKey) {\n          case \"children\":\n            tag = propValue;\n            break;\n          case \"dangerouslySetInnerHTML\":\n            innerHTML = propValue;\n            break;\n          default:\n            pushAttribute(target, propKey, propValue);\n        }\n    }\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, tag);\n  return \"string\" === typeof tag\n    ? (target.push(stringToChunk(escapeTextForBrowser(tag))), null)\n    : tag;\n}\nvar leadingNewline = stringToPrecomputedChunk(\"\\n\"),\n  VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/,\n  validatedTagCache = new Map();\nfunction startChunkForTag(tag) {\n  var tagStartChunk = validatedTagCache.get(tag);\n  if (void 0 === tagStartChunk) {\n    if (!VALID_TAG_REGEX.test(tag)) throw Error(\"Invalid tag: \" + tag);\n    tagStartChunk = stringToPrecomputedChunk(\"<\" + tag);\n    validatedTagCache.set(tag, tagStartChunk);\n  }\n  return tagStartChunk;\n}\nvar doctypeChunk = stringToPrecomputedChunk(\"<!DOCTYPE html>\");\nfunction pushStartInstance(\n  target$jscomp$0,\n  type,\n  props,\n  resumableState,\n  renderState,\n  preambleState,\n  hoistableState,\n  formatContext,\n  textEmbedded,\n  isFallback\n) {\n  switch (type) {\n    case \"div\":\n    case \"span\":\n    case \"svg\":\n    case \"path\":\n      break;\n    case \"a\":\n      target$jscomp$0.push(startChunkForTag(\"a\"));\n      var children = null,\n        innerHTML = null,\n        propKey;\n      for (propKey in props)\n        if (hasOwnProperty.call(props, propKey)) {\n          var propValue = props[propKey];\n          if (null != propValue)\n            switch (propKey) {\n              case \"children\":\n                children = propValue;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                innerHTML = propValue;\n                break;\n              case \"href\":\n                \"\" === propValue\n                  ? pushStringAttribute(target$jscomp$0, \"href\", \"\")\n                  : pushAttribute(target$jscomp$0, propKey, propValue);\n                break;\n              default:\n                pushAttribute(target$jscomp$0, propKey, propValue);\n            }\n        }\n      target$jscomp$0.push(endOfStartTag);\n      pushInnerHTML(target$jscomp$0, innerHTML, children);\n      if (\"string\" === typeof children) {\n        target$jscomp$0.push(stringToChunk(escapeTextForBrowser(children)));\n        var JSCompiler_inline_result = null;\n      } else JSCompiler_inline_result = children;\n      return JSCompiler_inline_result;\n    case \"g\":\n    case \"p\":\n    case \"li\":\n      break;\n    case \"select\":\n      target$jscomp$0.push(startChunkForTag(\"select\"));\n      var children$jscomp$0 = null,\n        innerHTML$jscomp$0 = null,\n        propKey$jscomp$0;\n      for (propKey$jscomp$0 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$0)) {\n          var propValue$jscomp$0 = props[propKey$jscomp$0];\n          if (null != propValue$jscomp$0)\n            switch (propKey$jscomp$0) {\n              case \"children\":\n                children$jscomp$0 = propValue$jscomp$0;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                innerHTML$jscomp$0 = propValue$jscomp$0;\n                break;\n              case \"defaultValue\":\n              case \"value\":\n                break;\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$0,\n                  propValue$jscomp$0\n                );\n            }\n        }\n      target$jscomp$0.push(endOfStartTag);\n      pushInnerHTML(target$jscomp$0, innerHTML$jscomp$0, children$jscomp$0);\n      return children$jscomp$0;\n    case \"option\":\n      var selectedValue = formatContext.selectedValue;\n      target$jscomp$0.push(startChunkForTag(\"option\"));\n      var children$jscomp$1 = null,\n        value = null,\n        selected = null,\n        innerHTML$jscomp$1 = null,\n        propKey$jscomp$1;\n      for (propKey$jscomp$1 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$1)) {\n          var propValue$jscomp$1 = props[propKey$jscomp$1];\n          if (null != propValue$jscomp$1)\n            switch (propKey$jscomp$1) {\n              case \"children\":\n                children$jscomp$1 = propValue$jscomp$1;\n                break;\n              case \"selected\":\n                selected = propValue$jscomp$1;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                innerHTML$jscomp$1 = propValue$jscomp$1;\n                break;\n              case \"value\":\n                value = propValue$jscomp$1;\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$1,\n                  propValue$jscomp$1\n                );\n            }\n        }\n      if (null != selectedValue) {\n        var stringValue =\n          null !== value\n            ? \"\" + value\n            : flattenOptionChildren(children$jscomp$1);\n        if (isArrayImpl(selectedValue))\n          for (var i = 0; i < selectedValue.length; i++) {\n            if (\"\" + selectedValue[i] === stringValue) {\n              target$jscomp$0.push(selectedMarkerAttribute);\n              break;\n            }\n          }\n        else\n          \"\" + selectedValue === stringValue &&\n            target$jscomp$0.push(selectedMarkerAttribute);\n      } else selected && target$jscomp$0.push(selectedMarkerAttribute);\n      target$jscomp$0.push(endOfStartTag);\n      pushInnerHTML(target$jscomp$0, innerHTML$jscomp$1, children$jscomp$1);\n      return children$jscomp$1;\n    case \"textarea\":\n      target$jscomp$0.push(startChunkForTag(\"textarea\"));\n      var value$jscomp$0 = null,\n        defaultValue = null,\n        children$jscomp$2 = null,\n        propKey$jscomp$2;\n      for (propKey$jscomp$2 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$2)) {\n          var propValue$jscomp$2 = props[propKey$jscomp$2];\n          if (null != propValue$jscomp$2)\n            switch (propKey$jscomp$2) {\n              case \"children\":\n                children$jscomp$2 = propValue$jscomp$2;\n                break;\n              case \"value\":\n                value$jscomp$0 = propValue$jscomp$2;\n                break;\n              case \"defaultValue\":\n                defaultValue = propValue$jscomp$2;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                throw Error(\n                  \"`dangerouslySetInnerHTML` does not make sense on <textarea>.\"\n                );\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$2,\n                  propValue$jscomp$2\n                );\n            }\n        }\n      null === value$jscomp$0 &&\n        null !== defaultValue &&\n        (value$jscomp$0 = defaultValue);\n      target$jscomp$0.push(endOfStartTag);\n      if (null != children$jscomp$2) {\n        if (null != value$jscomp$0)\n          throw Error(\n            \"If you supply `defaultValue` on a <textarea>, do not pass children.\"\n          );\n        if (isArrayImpl(children$jscomp$2)) {\n          if (1 < children$jscomp$2.length)\n            throw Error(\"<textarea> can only have at most one child.\");\n          value$jscomp$0 = \"\" + children$jscomp$2[0];\n        }\n        value$jscomp$0 = \"\" + children$jscomp$2;\n      }\n      \"string\" === typeof value$jscomp$0 &&\n        \"\\n\" === value$jscomp$0[0] &&\n        target$jscomp$0.push(leadingNewline);\n      null !== value$jscomp$0 &&\n        target$jscomp$0.push(\n          stringToChunk(escapeTextForBrowser(\"\" + value$jscomp$0))\n        );\n      return null;\n    case \"input\":\n      target$jscomp$0.push(startChunkForTag(\"input\"));\n      var name = null,\n        formAction = null,\n        formEncType = null,\n        formMethod = null,\n        formTarget = null,\n        value$jscomp$1 = null,\n        defaultValue$jscomp$0 = null,\n        checked = null,\n        defaultChecked = null,\n        propKey$jscomp$3;\n      for (propKey$jscomp$3 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$3)) {\n          var propValue$jscomp$3 = props[propKey$jscomp$3];\n          if (null != propValue$jscomp$3)\n            switch (propKey$jscomp$3) {\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                throw Error(\n                  \"input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\n                );\n              case \"name\":\n                name = propValue$jscomp$3;\n                break;\n              case \"formAction\":\n                formAction = propValue$jscomp$3;\n                break;\n              case \"formEncType\":\n                formEncType = propValue$jscomp$3;\n                break;\n              case \"formMethod\":\n                formMethod = propValue$jscomp$3;\n                break;\n              case \"formTarget\":\n                formTarget = propValue$jscomp$3;\n                break;\n              case \"defaultChecked\":\n                defaultChecked = propValue$jscomp$3;\n                break;\n              case \"defaultValue\":\n                defaultValue$jscomp$0 = propValue$jscomp$3;\n                break;\n              case \"checked\":\n                checked = propValue$jscomp$3;\n                break;\n              case \"value\":\n                value$jscomp$1 = propValue$jscomp$3;\n                break;\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$3,\n                  propValue$jscomp$3\n                );\n            }\n        }\n      var formData = pushFormActionAttribute(\n        target$jscomp$0,\n        resumableState,\n        renderState,\n        formAction,\n        formEncType,\n        formMethod,\n        formTarget,\n        name\n      );\n      null !== checked\n        ? pushBooleanAttribute(target$jscomp$0, \"checked\", checked)\n        : null !== defaultChecked &&\n          pushBooleanAttribute(target$jscomp$0, \"checked\", defaultChecked);\n      null !== value$jscomp$1\n        ? pushAttribute(target$jscomp$0, \"value\", value$jscomp$1)\n        : null !== defaultValue$jscomp$0 &&\n          pushAttribute(target$jscomp$0, \"value\", defaultValue$jscomp$0);\n      target$jscomp$0.push(endOfStartTagSelfClosing);\n      null != formData &&\n        formData.forEach(pushAdditionalFormField, target$jscomp$0);\n      return null;\n    case \"button\":\n      target$jscomp$0.push(startChunkForTag(\"button\"));\n      var children$jscomp$3 = null,\n        innerHTML$jscomp$2 = null,\n        name$jscomp$0 = null,\n        formAction$jscomp$0 = null,\n        formEncType$jscomp$0 = null,\n        formMethod$jscomp$0 = null,\n        formTarget$jscomp$0 = null,\n        propKey$jscomp$4;\n      for (propKey$jscomp$4 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$4)) {\n          var propValue$jscomp$4 = props[propKey$jscomp$4];\n          if (null != propValue$jscomp$4)\n            switch (propKey$jscomp$4) {\n              case \"children\":\n                children$jscomp$3 = propValue$jscomp$4;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                innerHTML$jscomp$2 = propValue$jscomp$4;\n                break;\n              case \"name\":\n                name$jscomp$0 = propValue$jscomp$4;\n                break;\n              case \"formAction\":\n                formAction$jscomp$0 = propValue$jscomp$4;\n                break;\n              case \"formEncType\":\n                formEncType$jscomp$0 = propValue$jscomp$4;\n                break;\n              case \"formMethod\":\n                formMethod$jscomp$0 = propValue$jscomp$4;\n                break;\n              case \"formTarget\":\n                formTarget$jscomp$0 = propValue$jscomp$4;\n                break;\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$4,\n                  propValue$jscomp$4\n                );\n            }\n        }\n      var formData$jscomp$0 = pushFormActionAttribute(\n        target$jscomp$0,\n        resumableState,\n        renderState,\n        formAction$jscomp$0,\n        formEncType$jscomp$0,\n        formMethod$jscomp$0,\n        formTarget$jscomp$0,\n        name$jscomp$0\n      );\n      target$jscomp$0.push(endOfStartTag);\n      null != formData$jscomp$0 &&\n        formData$jscomp$0.forEach(pushAdditionalFormField, target$jscomp$0);\n      pushInnerHTML(target$jscomp$0, innerHTML$jscomp$2, children$jscomp$3);\n      if (\"string\" === typeof children$jscomp$3) {\n        target$jscomp$0.push(\n          stringToChunk(escapeTextForBrowser(children$jscomp$3))\n        );\n        var JSCompiler_inline_result$jscomp$0 = null;\n      } else JSCompiler_inline_result$jscomp$0 = children$jscomp$3;\n      return JSCompiler_inline_result$jscomp$0;\n    case \"form\":\n      target$jscomp$0.push(startChunkForTag(\"form\"));\n      var children$jscomp$4 = null,\n        innerHTML$jscomp$3 = null,\n        formAction$jscomp$1 = null,\n        formEncType$jscomp$1 = null,\n        formMethod$jscomp$1 = null,\n        formTarget$jscomp$1 = null,\n        propKey$jscomp$5;\n      for (propKey$jscomp$5 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$5)) {\n          var propValue$jscomp$5 = props[propKey$jscomp$5];\n          if (null != propValue$jscomp$5)\n            switch (propKey$jscomp$5) {\n              case \"children\":\n                children$jscomp$4 = propValue$jscomp$5;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                innerHTML$jscomp$3 = propValue$jscomp$5;\n                break;\n              case \"action\":\n                formAction$jscomp$1 = propValue$jscomp$5;\n                break;\n              case \"encType\":\n                formEncType$jscomp$1 = propValue$jscomp$5;\n                break;\n              case \"method\":\n                formMethod$jscomp$1 = propValue$jscomp$5;\n                break;\n              case \"target\":\n                formTarget$jscomp$1 = propValue$jscomp$5;\n                break;\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$5,\n                  propValue$jscomp$5\n                );\n            }\n        }\n      var formData$jscomp$1 = null,\n        formActionName = null;\n      if (\"function\" === typeof formAction$jscomp$1) {\n        var customFields = getCustomFormFields(\n          resumableState,\n          formAction$jscomp$1\n        );\n        null !== customFields\n          ? ((formAction$jscomp$1 = customFields.action || \"\"),\n            (formEncType$jscomp$1 = customFields.encType),\n            (formMethod$jscomp$1 = customFields.method),\n            (formTarget$jscomp$1 = customFields.target),\n            (formData$jscomp$1 = customFields.data),\n            (formActionName = customFields.name))\n          : (target$jscomp$0.push(\n              attributeSeparator,\n              stringToChunk(\"action\"),\n              attributeAssign,\n              actionJavaScriptURL,\n              attributeEnd\n            ),\n            (formTarget$jscomp$1 =\n              formMethod$jscomp$1 =\n              formEncType$jscomp$1 =\n              formAction$jscomp$1 =\n                null),\n            injectFormReplayingRuntime(resumableState, renderState));\n      }\n      null != formAction$jscomp$1 &&\n        pushAttribute(target$jscomp$0, \"action\", formAction$jscomp$1);\n      null != formEncType$jscomp$1 &&\n        pushAttribute(target$jscomp$0, \"encType\", formEncType$jscomp$1);\n      null != formMethod$jscomp$1 &&\n        pushAttribute(target$jscomp$0, \"method\", formMethod$jscomp$1);\n      null != formTarget$jscomp$1 &&\n        pushAttribute(target$jscomp$0, \"target\", formTarget$jscomp$1);\n      target$jscomp$0.push(endOfStartTag);\n      null !== formActionName &&\n        (target$jscomp$0.push(startHiddenInputChunk),\n        pushStringAttribute(target$jscomp$0, \"name\", formActionName),\n        target$jscomp$0.push(endOfStartTagSelfClosing),\n        null != formData$jscomp$1 &&\n          formData$jscomp$1.forEach(pushAdditionalFormField, target$jscomp$0));\n      pushInnerHTML(target$jscomp$0, innerHTML$jscomp$3, children$jscomp$4);\n      if (\"string\" === typeof children$jscomp$4) {\n        target$jscomp$0.push(\n          stringToChunk(escapeTextForBrowser(children$jscomp$4))\n        );\n        var JSCompiler_inline_result$jscomp$1 = null;\n      } else JSCompiler_inline_result$jscomp$1 = children$jscomp$4;\n      return JSCompiler_inline_result$jscomp$1;\n    case \"menuitem\":\n      target$jscomp$0.push(startChunkForTag(\"menuitem\"));\n      for (var propKey$jscomp$6 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$6)) {\n          var propValue$jscomp$6 = props[propKey$jscomp$6];\n          if (null != propValue$jscomp$6)\n            switch (propKey$jscomp$6) {\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                throw Error(\n                  \"menuitems cannot have `children` nor `dangerouslySetInnerHTML`.\"\n                );\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$6,\n                  propValue$jscomp$6\n                );\n            }\n        }\n      target$jscomp$0.push(endOfStartTag);\n      return null;\n    case \"object\":\n      target$jscomp$0.push(startChunkForTag(\"object\"));\n      var children$jscomp$5 = null,\n        innerHTML$jscomp$4 = null,\n        propKey$jscomp$7;\n      for (propKey$jscomp$7 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$7)) {\n          var propValue$jscomp$7 = props[propKey$jscomp$7];\n          if (null != propValue$jscomp$7)\n            switch (propKey$jscomp$7) {\n              case \"children\":\n                children$jscomp$5 = propValue$jscomp$7;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                innerHTML$jscomp$4 = propValue$jscomp$7;\n                break;\n              case \"data\":\n                var sanitizedValue = sanitizeURL(\"\" + propValue$jscomp$7);\n                if (\"\" === sanitizedValue) break;\n                target$jscomp$0.push(\n                  attributeSeparator,\n                  stringToChunk(\"data\"),\n                  attributeAssign,\n                  stringToChunk(escapeTextForBrowser(sanitizedValue)),\n                  attributeEnd\n                );\n                break;\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$7,\n                  propValue$jscomp$7\n                );\n            }\n        }\n      target$jscomp$0.push(endOfStartTag);\n      pushInnerHTML(target$jscomp$0, innerHTML$jscomp$4, children$jscomp$5);\n      if (\"string\" === typeof children$jscomp$5) {\n        target$jscomp$0.push(\n          stringToChunk(escapeTextForBrowser(children$jscomp$5))\n        );\n        var JSCompiler_inline_result$jscomp$2 = null;\n      } else JSCompiler_inline_result$jscomp$2 = children$jscomp$5;\n      return JSCompiler_inline_result$jscomp$2;\n    case \"title\":\n      if (\n        4 === formatContext.insertionMode ||\n        formatContext.tagScope & 1 ||\n        null != props.itemProp\n      )\n        var JSCompiler_inline_result$jscomp$3 = pushTitleImpl(\n          target$jscomp$0,\n          props\n        );\n      else\n        isFallback\n          ? (JSCompiler_inline_result$jscomp$3 = null)\n          : (pushTitleImpl(renderState.hoistableChunks, props),\n            (JSCompiler_inline_result$jscomp$3 = void 0));\n      return JSCompiler_inline_result$jscomp$3;\n    case \"link\":\n      var rel = props.rel,\n        href = props.href,\n        precedence = props.precedence;\n      if (\n        4 === formatContext.insertionMode ||\n        formatContext.tagScope & 1 ||\n        null != props.itemProp ||\n        \"string\" !== typeof rel ||\n        \"string\" !== typeof href ||\n        \"\" === href\n      ) {\n        pushLinkImpl(target$jscomp$0, props);\n        var JSCompiler_inline_result$jscomp$4 = null;\n      } else if (\"stylesheet\" === props.rel)\n        if (\n          \"string\" !== typeof precedence ||\n          null != props.disabled ||\n          props.onLoad ||\n          props.onError\n        )\n          JSCompiler_inline_result$jscomp$4 = pushLinkImpl(\n            target$jscomp$0,\n            props\n          );\n        else {\n          var styleQueue = renderState.styles.get(precedence),\n            resourceState = resumableState.styleResources.hasOwnProperty(href)\n              ? resumableState.styleResources[href]\n              : void 0;\n          if (null !== resourceState) {\n            resumableState.styleResources[href] = null;\n            styleQueue ||\n              ((styleQueue = {\n                precedence: stringToChunk(escapeTextForBrowser(precedence)),\n                rules: [],\n                hrefs: [],\n                sheets: new Map()\n              }),\n              renderState.styles.set(precedence, styleQueue));\n            var resource = {\n              state: 0,\n              props: assign({}, props, {\n                \"data-precedence\": props.precedence,\n                precedence: null\n              })\n            };\n            if (resourceState) {\n              2 === resourceState.length &&\n                adoptPreloadCredentials(resource.props, resourceState);\n              var preloadResource = renderState.preloads.stylesheets.get(href);\n              preloadResource && 0 < preloadResource.length\n                ? (preloadResource.length = 0)\n                : (resource.state = 1);\n            }\n            styleQueue.sheets.set(href, resource);\n            hoistableState && hoistableState.stylesheets.add(resource);\n          } else if (styleQueue) {\n            var resource$9 = styleQueue.sheets.get(href);\n            resource$9 &&\n              hoistableState &&\n              hoistableState.stylesheets.add(resource$9);\n          }\n          textEmbedded && target$jscomp$0.push(textSeparator);\n          JSCompiler_inline_result$jscomp$4 = null;\n        }\n      else\n        props.onLoad || props.onError\n          ? (JSCompiler_inline_result$jscomp$4 = pushLinkImpl(\n              target$jscomp$0,\n              props\n            ))\n          : (textEmbedded && target$jscomp$0.push(textSeparator),\n            (JSCompiler_inline_result$jscomp$4 = isFallback\n              ? null\n              : pushLinkImpl(renderState.hoistableChunks, props)));\n      return JSCompiler_inline_result$jscomp$4;\n    case \"script\":\n      var asyncProp = props.async;\n      if (\n        \"string\" !== typeof props.src ||\n        !props.src ||\n        !asyncProp ||\n        \"function\" === typeof asyncProp ||\n        \"symbol\" === typeof asyncProp ||\n        props.onLoad ||\n        props.onError ||\n        4 === formatContext.insertionMode ||\n        formatContext.tagScope & 1 ||\n        null != props.itemProp\n      )\n        var JSCompiler_inline_result$jscomp$5 = pushScriptImpl(\n          target$jscomp$0,\n          props\n        );\n      else {\n        var key = props.src;\n        if (\"module\" === props.type) {\n          var resources = resumableState.moduleScriptResources;\n          var preloads = renderState.preloads.moduleScripts;\n        } else\n          (resources = resumableState.scriptResources),\n            (preloads = renderState.preloads.scripts);\n        var resourceState$jscomp$0 = resources.hasOwnProperty(key)\n          ? resources[key]\n          : void 0;\n        if (null !== resourceState$jscomp$0) {\n          resources[key] = null;\n          var scriptProps = props;\n          if (resourceState$jscomp$0) {\n            2 === resourceState$jscomp$0.length &&\n              ((scriptProps = assign({}, props)),\n              adoptPreloadCredentials(scriptProps, resourceState$jscomp$0));\n            var preloadResource$jscomp$0 = preloads.get(key);\n            preloadResource$jscomp$0 && (preloadResource$jscomp$0.length = 0);\n          }\n          var resource$jscomp$0 = [];\n          renderState.scripts.add(resource$jscomp$0);\n          pushScriptImpl(resource$jscomp$0, scriptProps);\n        }\n        textEmbedded && target$jscomp$0.push(textSeparator);\n        JSCompiler_inline_result$jscomp$5 = null;\n      }\n      return JSCompiler_inline_result$jscomp$5;\n    case \"style\":\n      var precedence$jscomp$0 = props.precedence,\n        href$jscomp$0 = props.href;\n      if (\n        4 === formatContext.insertionMode ||\n        formatContext.tagScope & 1 ||\n        null != props.itemProp ||\n        \"string\" !== typeof precedence$jscomp$0 ||\n        \"string\" !== typeof href$jscomp$0 ||\n        \"\" === href$jscomp$0\n      ) {\n        target$jscomp$0.push(startChunkForTag(\"style\"));\n        var children$jscomp$6 = null,\n          innerHTML$jscomp$5 = null,\n          propKey$jscomp$8;\n        for (propKey$jscomp$8 in props)\n          if (hasOwnProperty.call(props, propKey$jscomp$8)) {\n            var propValue$jscomp$8 = props[propKey$jscomp$8];\n            if (null != propValue$jscomp$8)\n              switch (propKey$jscomp$8) {\n                case \"children\":\n                  children$jscomp$6 = propValue$jscomp$8;\n                  break;\n                case \"dangerouslySetInnerHTML\":\n                  innerHTML$jscomp$5 = propValue$jscomp$8;\n                  break;\n                default:\n                  pushAttribute(\n                    target$jscomp$0,\n                    propKey$jscomp$8,\n                    propValue$jscomp$8\n                  );\n              }\n          }\n        target$jscomp$0.push(endOfStartTag);\n        var child = Array.isArray(children$jscomp$6)\n          ? 2 > children$jscomp$6.length\n            ? children$jscomp$6[0]\n            : null\n          : children$jscomp$6;\n        \"function\" !== typeof child &&\n          \"symbol\" !== typeof child &&\n          null !== child &&\n          void 0 !== child &&\n          target$jscomp$0.push(\n            stringToChunk((\"\" + child).replace(styleRegex, styleReplacer))\n          );\n        pushInnerHTML(target$jscomp$0, innerHTML$jscomp$5, children$jscomp$6);\n        target$jscomp$0.push(endChunkForTag(\"style\"));\n        var JSCompiler_inline_result$jscomp$6 = null;\n      } else {\n        var styleQueue$jscomp$0 = renderState.styles.get(precedence$jscomp$0);\n        if (\n          null !==\n          (resumableState.styleResources.hasOwnProperty(href$jscomp$0)\n            ? resumableState.styleResources[href$jscomp$0]\n            : void 0)\n        ) {\n          resumableState.styleResources[href$jscomp$0] = null;\n          styleQueue$jscomp$0\n            ? styleQueue$jscomp$0.hrefs.push(\n                stringToChunk(escapeTextForBrowser(href$jscomp$0))\n              )\n            : ((styleQueue$jscomp$0 = {\n                precedence: stringToChunk(\n                  escapeTextForBrowser(precedence$jscomp$0)\n                ),\n                rules: [],\n                hrefs: [stringToChunk(escapeTextForBrowser(href$jscomp$0))],\n                sheets: new Map()\n              }),\n              renderState.styles.set(precedence$jscomp$0, styleQueue$jscomp$0));\n          var target = styleQueue$jscomp$0.rules,\n            children$jscomp$7 = null,\n            innerHTML$jscomp$6 = null,\n            propKey$jscomp$9;\n          for (propKey$jscomp$9 in props)\n            if (hasOwnProperty.call(props, propKey$jscomp$9)) {\n              var propValue$jscomp$9 = props[propKey$jscomp$9];\n              if (null != propValue$jscomp$9)\n                switch (propKey$jscomp$9) {\n                  case \"children\":\n                    children$jscomp$7 = propValue$jscomp$9;\n                    break;\n                  case \"dangerouslySetInnerHTML\":\n                    innerHTML$jscomp$6 = propValue$jscomp$9;\n                }\n            }\n          var child$jscomp$0 = Array.isArray(children$jscomp$7)\n            ? 2 > children$jscomp$7.length\n              ? children$jscomp$7[0]\n              : null\n            : children$jscomp$7;\n          \"function\" !== typeof child$jscomp$0 &&\n            \"symbol\" !== typeof child$jscomp$0 &&\n            null !== child$jscomp$0 &&\n            void 0 !== child$jscomp$0 &&\n            target.push(\n              stringToChunk(\n                (\"\" + child$jscomp$0).replace(styleRegex, styleReplacer)\n              )\n            );\n          pushInnerHTML(target, innerHTML$jscomp$6, children$jscomp$7);\n        }\n        styleQueue$jscomp$0 &&\n          hoistableState &&\n          hoistableState.styles.add(styleQueue$jscomp$0);\n        textEmbedded && target$jscomp$0.push(textSeparator);\n        JSCompiler_inline_result$jscomp$6 = void 0;\n      }\n      return JSCompiler_inline_result$jscomp$6;\n    case \"meta\":\n      if (\n        4 === formatContext.insertionMode ||\n        formatContext.tagScope & 1 ||\n        null != props.itemProp\n      )\n        var JSCompiler_inline_result$jscomp$7 = pushSelfClosing(\n          target$jscomp$0,\n          props,\n          \"meta\"\n        );\n      else\n        textEmbedded && target$jscomp$0.push(textSeparator),\n          (JSCompiler_inline_result$jscomp$7 = isFallback\n            ? null\n            : \"string\" === typeof props.charSet\n              ? pushSelfClosing(renderState.charsetChunks, props, \"meta\")\n              : \"viewport\" === props.name\n                ? pushSelfClosing(renderState.viewportChunks, props, \"meta\")\n                : pushSelfClosing(renderState.hoistableChunks, props, \"meta\"));\n      return JSCompiler_inline_result$jscomp$7;\n    case \"listing\":\n    case \"pre\":\n      target$jscomp$0.push(startChunkForTag(type));\n      var children$jscomp$8 = null,\n        innerHTML$jscomp$7 = null,\n        propKey$jscomp$10;\n      for (propKey$jscomp$10 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$10)) {\n          var propValue$jscomp$10 = props[propKey$jscomp$10];\n          if (null != propValue$jscomp$10)\n            switch (propKey$jscomp$10) {\n              case \"children\":\n                children$jscomp$8 = propValue$jscomp$10;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                innerHTML$jscomp$7 = propValue$jscomp$10;\n                break;\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$10,\n                  propValue$jscomp$10\n                );\n            }\n        }\n      target$jscomp$0.push(endOfStartTag);\n      if (null != innerHTML$jscomp$7) {\n        if (null != children$jscomp$8)\n          throw Error(\n            \"Can only set one of `children` or `props.dangerouslySetInnerHTML`.\"\n          );\n        if (\n          \"object\" !== typeof innerHTML$jscomp$7 ||\n          !(\"__html\" in innerHTML$jscomp$7)\n        )\n          throw Error(\n            \"`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information.\"\n          );\n        var html = innerHTML$jscomp$7.__html;\n        null !== html &&\n          void 0 !== html &&\n          (\"string\" === typeof html && 0 < html.length && \"\\n\" === html[0]\n            ? target$jscomp$0.push(leadingNewline, stringToChunk(html))\n            : target$jscomp$0.push(stringToChunk(\"\" + html)));\n      }\n      \"string\" === typeof children$jscomp$8 &&\n        \"\\n\" === children$jscomp$8[0] &&\n        target$jscomp$0.push(leadingNewline);\n      return children$jscomp$8;\n    case \"img\":\n      var src = props.src,\n        srcSet = props.srcSet;\n      if (\n        !(\n          \"lazy\" === props.loading ||\n          (!src && !srcSet) ||\n          (\"string\" !== typeof src && null != src) ||\n          (\"string\" !== typeof srcSet && null != srcSet)\n        ) &&\n        \"low\" !== props.fetchPriority &&\n        !1 === !!(formatContext.tagScope & 3) &&\n        (\"string\" !== typeof src ||\n          \":\" !== src[4] ||\n          (\"d\" !== src[0] && \"D\" !== src[0]) ||\n          (\"a\" !== src[1] && \"A\" !== src[1]) ||\n          (\"t\" !== src[2] && \"T\" !== src[2]) ||\n          (\"a\" !== src[3] && \"A\" !== src[3])) &&\n        (\"string\" !== typeof srcSet ||\n          \":\" !== srcSet[4] ||\n          (\"d\" !== srcSet[0] && \"D\" !== srcSet[0]) ||\n          (\"a\" !== srcSet[1] && \"A\" !== srcSet[1]) ||\n          (\"t\" !== srcSet[2] && \"T\" !== srcSet[2]) ||\n          (\"a\" !== srcSet[3] && \"A\" !== srcSet[3]))\n      ) {\n        var sizes = \"string\" === typeof props.sizes ? props.sizes : void 0,\n          key$jscomp$0 = srcSet ? srcSet + \"\\n\" + (sizes || \"\") : src,\n          promotablePreloads = renderState.preloads.images,\n          resource$jscomp$1 = promotablePreloads.get(key$jscomp$0);\n        if (resource$jscomp$1) {\n          if (\n            \"high\" === props.fetchPriority ||\n            10 > renderState.highImagePreloads.size\n          )\n            promotablePreloads.delete(key$jscomp$0),\n              renderState.highImagePreloads.add(resource$jscomp$1);\n        } else if (\n          !resumableState.imageResources.hasOwnProperty(key$jscomp$0)\n        ) {\n          resumableState.imageResources[key$jscomp$0] = PRELOAD_NO_CREDS;\n          var input = props.crossOrigin;\n          var JSCompiler_inline_result$jscomp$8 =\n            \"string\" === typeof input\n              ? \"use-credentials\" === input\n                ? input\n                : \"\"\n              : void 0;\n          var headers = renderState.headers,\n            header;\n          headers &&\n          0 < headers.remainingCapacity &&\n          \"string\" !== typeof props.srcSet &&\n          (\"high\" === props.fetchPriority ||\n            500 > headers.highImagePreloads.length) &&\n          ((header = getPreloadAsHeader(src, \"image\", {\n            imageSrcSet: props.srcSet,\n            imageSizes: props.sizes,\n            crossOrigin: JSCompiler_inline_result$jscomp$8,\n            integrity: props.integrity,\n            nonce: props.nonce,\n            type: props.type,\n            fetchPriority: props.fetchPriority,\n            referrerPolicy: props.refererPolicy\n          })),\n          0 <= (headers.remainingCapacity -= header.length + 2))\n            ? ((renderState.resets.image[key$jscomp$0] = PRELOAD_NO_CREDS),\n              headers.highImagePreloads && (headers.highImagePreloads += \", \"),\n              (headers.highImagePreloads += header))\n            : ((resource$jscomp$1 = []),\n              pushLinkImpl(resource$jscomp$1, {\n                rel: \"preload\",\n                as: \"image\",\n                href: srcSet ? void 0 : src,\n                imageSrcSet: srcSet,\n                imageSizes: sizes,\n                crossOrigin: JSCompiler_inline_result$jscomp$8,\n                integrity: props.integrity,\n                type: props.type,\n                fetchPriority: props.fetchPriority,\n                referrerPolicy: props.referrerPolicy\n              }),\n              \"high\" === props.fetchPriority ||\n              10 > renderState.highImagePreloads.size\n                ? renderState.highImagePreloads.add(resource$jscomp$1)\n                : (renderState.bulkPreloads.add(resource$jscomp$1),\n                  promotablePreloads.set(key$jscomp$0, resource$jscomp$1)));\n        }\n      }\n      return pushSelfClosing(target$jscomp$0, props, \"img\");\n    case \"base\":\n    case \"area\":\n    case \"br\":\n    case \"col\":\n    case \"embed\":\n    case \"hr\":\n    case \"keygen\":\n    case \"param\":\n    case \"source\":\n    case \"track\":\n    case \"wbr\":\n      return pushSelfClosing(target$jscomp$0, props, type);\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      break;\n    case \"head\":\n      if (2 > formatContext.insertionMode) {\n        var preamble = preambleState || renderState.preamble;\n        if (preamble.headChunks)\n          throw Error(\"The `<head>` tag may only be rendered once.\");\n        preamble.headChunks = [];\n        var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(\n          preamble.headChunks,\n          props,\n          \"head\"\n        );\n      } else\n        JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(\n          target$jscomp$0,\n          props,\n          \"head\"\n        );\n      return JSCompiler_inline_result$jscomp$9;\n    case \"body\":\n      if (2 > formatContext.insertionMode) {\n        var preamble$jscomp$0 = preambleState || renderState.preamble;\n        if (preamble$jscomp$0.bodyChunks)\n          throw Error(\"The `<body>` tag may only be rendered once.\");\n        preamble$jscomp$0.bodyChunks = [];\n        var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(\n          preamble$jscomp$0.bodyChunks,\n          props,\n          \"body\"\n        );\n      } else\n        JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(\n          target$jscomp$0,\n          props,\n          \"body\"\n        );\n      return JSCompiler_inline_result$jscomp$10;\n    case \"html\":\n      if (0 === formatContext.insertionMode) {\n        var preamble$jscomp$1 = preambleState || renderState.preamble;\n        if (preamble$jscomp$1.htmlChunks)\n          throw Error(\"The `<html>` tag may only be rendered once.\");\n        preamble$jscomp$1.htmlChunks = [doctypeChunk];\n        var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(\n          preamble$jscomp$1.htmlChunks,\n          props,\n          \"html\"\n        );\n      } else\n        JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(\n          target$jscomp$0,\n          props,\n          \"html\"\n        );\n      return JSCompiler_inline_result$jscomp$11;\n    default:\n      if (-1 !== type.indexOf(\"-\")) {\n        target$jscomp$0.push(startChunkForTag(type));\n        var children$jscomp$9 = null,\n          innerHTML$jscomp$8 = null,\n          propKey$jscomp$11;\n        for (propKey$jscomp$11 in props)\n          if (hasOwnProperty.call(props, propKey$jscomp$11)) {\n            var propValue$jscomp$11 = props[propKey$jscomp$11];\n            if (null != propValue$jscomp$11) {\n              var attributeName = propKey$jscomp$11;\n              switch (propKey$jscomp$11) {\n                case \"children\":\n                  children$jscomp$9 = propValue$jscomp$11;\n                  break;\n                case \"dangerouslySetInnerHTML\":\n                  innerHTML$jscomp$8 = propValue$jscomp$11;\n                  break;\n                case \"style\":\n                  pushStyleAttribute(target$jscomp$0, propValue$jscomp$11);\n                  break;\n                case \"suppressContentEditableWarning\":\n                case \"suppressHydrationWarning\":\n                case \"ref\":\n                  break;\n                case \"className\":\n                  attributeName = \"class\";\n                default:\n                  if (\n                    isAttributeNameSafe(propKey$jscomp$11) &&\n                    \"function\" !== typeof propValue$jscomp$11 &&\n                    \"symbol\" !== typeof propValue$jscomp$11 &&\n                    !1 !== propValue$jscomp$11\n                  ) {\n                    if (!0 === propValue$jscomp$11) propValue$jscomp$11 = \"\";\n                    else if (\"object\" === typeof propValue$jscomp$11) continue;\n                    target$jscomp$0.push(\n                      attributeSeparator,\n                      stringToChunk(attributeName),\n                      attributeAssign,\n                      stringToChunk(escapeTextForBrowser(propValue$jscomp$11)),\n                      attributeEnd\n                    );\n                  }\n              }\n            }\n          }\n        target$jscomp$0.push(endOfStartTag);\n        pushInnerHTML(target$jscomp$0, innerHTML$jscomp$8, children$jscomp$9);\n        return children$jscomp$9;\n      }\n  }\n  return pushStartGenericElement(target$jscomp$0, props, type);\n}\nvar endTagCache = new Map();\nfunction endChunkForTag(tag) {\n  var chunk = endTagCache.get(tag);\n  void 0 === chunk &&\n    ((chunk = stringToPrecomputedChunk(\"</\" + tag + \">\")),\n    endTagCache.set(tag, chunk));\n  return chunk;\n}\nfunction hoistPreambleState(renderState, preambleState) {\n  renderState = renderState.preamble;\n  null === renderState.htmlChunks &&\n    preambleState.htmlChunks &&\n    ((renderState.htmlChunks = preambleState.htmlChunks),\n    (preambleState.contribution |= 1));\n  null === renderState.headChunks &&\n    preambleState.headChunks &&\n    ((renderState.headChunks = preambleState.headChunks),\n    (preambleState.contribution |= 4));\n  null === renderState.bodyChunks &&\n    preambleState.bodyChunks &&\n    ((renderState.bodyChunks = preambleState.bodyChunks),\n    (preambleState.contribution |= 2));\n}\nfunction writeBootstrap(destination, renderState) {\n  renderState = renderState.bootstrapChunks;\n  for (var i = 0; i < renderState.length - 1; i++)\n    writeChunk(destination, renderState[i]);\n  return i < renderState.length\n    ? ((i = renderState[i]),\n      (renderState.length = 0),\n      writeChunkAndReturn(destination, i))\n    : !0;\n}\nvar placeholder1 = stringToPrecomputedChunk('<template id=\"'),\n  placeholder2 = stringToPrecomputedChunk('\"></template>'),\n  startActivityBoundary = stringToPrecomputedChunk(\"\\x3c!--&--\\x3e\"),\n  endActivityBoundary = stringToPrecomputedChunk(\"\\x3c!--/&--\\x3e\"),\n  startCompletedSuspenseBoundary = stringToPrecomputedChunk(\"\\x3c!--$--\\x3e\"),\n  startPendingSuspenseBoundary1 = stringToPrecomputedChunk(\n    '\\x3c!--$?--\\x3e<template id=\"'\n  ),\n  startPendingSuspenseBoundary2 = stringToPrecomputedChunk('\"></template>'),\n  startClientRenderedSuspenseBoundary =\n    stringToPrecomputedChunk(\"\\x3c!--$!--\\x3e\"),\n  endSuspenseBoundary = stringToPrecomputedChunk(\"\\x3c!--/$--\\x3e\"),\n  clientRenderedSuspenseBoundaryError1 = stringToPrecomputedChunk(\"<template\"),\n  clientRenderedSuspenseBoundaryErrorAttrInterstitial =\n    stringToPrecomputedChunk('\"'),\n  clientRenderedSuspenseBoundaryError1A =\n    stringToPrecomputedChunk(' data-dgst=\"');\nstringToPrecomputedChunk(' data-msg=\"');\nstringToPrecomputedChunk(' data-stck=\"');\nstringToPrecomputedChunk(' data-cstck=\"');\nvar clientRenderedSuspenseBoundaryError2 =\n  stringToPrecomputedChunk(\"></template>\");\nfunction writeStartPendingSuspenseBoundary(destination, renderState, id) {\n  writeChunk(destination, startPendingSuspenseBoundary1);\n  if (null === id)\n    throw Error(\n      \"An ID must have been assigned before we can complete the boundary.\"\n    );\n  writeChunk(destination, renderState.boundaryPrefix);\n  writeChunk(destination, stringToChunk(id.toString(16)));\n  return writeChunkAndReturn(destination, startPendingSuspenseBoundary2);\n}\nvar boundaryPreambleContributionChunkStart =\n    stringToPrecomputedChunk(\"\\x3c!--\"),\n  boundaryPreambleContributionChunkEnd = stringToPrecomputedChunk(\"--\\x3e\");\nfunction writePreambleContribution(destination, preambleState) {\n  preambleState = preambleState.contribution;\n  0 !== preambleState &&\n    (writeChunk(destination, boundaryPreambleContributionChunkStart),\n    writeChunk(destination, stringToChunk(\"\" + preambleState)),\n    writeChunk(destination, boundaryPreambleContributionChunkEnd));\n}\nvar startSegmentHTML = stringToPrecomputedChunk('<div hidden id=\"'),\n  startSegmentHTML2 = stringToPrecomputedChunk('\">'),\n  endSegmentHTML = stringToPrecomputedChunk(\"</div>\"),\n  startSegmentSVG = stringToPrecomputedChunk(\n    '<svg aria-hidden=\"true\" style=\"display:none\" id=\"'\n  ),\n  startSegmentSVG2 = stringToPrecomputedChunk('\">'),\n  endSegmentSVG = stringToPrecomputedChunk(\"</svg>\"),\n  startSegmentMathML = stringToPrecomputedChunk(\n    '<math aria-hidden=\"true\" style=\"display:none\" id=\"'\n  ),\n  startSegmentMathML2 = stringToPrecomputedChunk('\">'),\n  endSegmentMathML = stringToPrecomputedChunk(\"</math>\"),\n  startSegmentTable = stringToPrecomputedChunk('<table hidden id=\"'),\n  startSegmentTable2 = stringToPrecomputedChunk('\">'),\n  endSegmentTable = stringToPrecomputedChunk(\"</table>\"),\n  startSegmentTableBody = stringToPrecomputedChunk('<table hidden><tbody id=\"'),\n  startSegmentTableBody2 = stringToPrecomputedChunk('\">'),\n  endSegmentTableBody = stringToPrecomputedChunk(\"</tbody></table>\"),\n  startSegmentTableRow = stringToPrecomputedChunk('<table hidden><tr id=\"'),\n  startSegmentTableRow2 = stringToPrecomputedChunk('\">'),\n  endSegmentTableRow = stringToPrecomputedChunk(\"</tr></table>\"),\n  startSegmentColGroup = stringToPrecomputedChunk(\n    '<table hidden><colgroup id=\"'\n  ),\n  startSegmentColGroup2 = stringToPrecomputedChunk('\">'),\n  endSegmentColGroup = stringToPrecomputedChunk(\"</colgroup></table>\");\nfunction writeStartSegment(destination, renderState, formatContext, id) {\n  switch (formatContext.insertionMode) {\n    case 0:\n    case 1:\n    case 3:\n    case 2:\n      return (\n        writeChunk(destination, startSegmentHTML),\n        writeChunk(destination, renderState.segmentPrefix),\n        writeChunk(destination, stringToChunk(id.toString(16))),\n        writeChunkAndReturn(destination, startSegmentHTML2)\n      );\n    case 4:\n      return (\n        writeChunk(destination, startSegmentSVG),\n        writeChunk(destination, renderState.segmentPrefix),\n        writeChunk(destination, stringToChunk(id.toString(16))),\n        writeChunkAndReturn(destination, startSegmentSVG2)\n      );\n    case 5:\n      return (\n        writeChunk(destination, startSegmentMathML),\n        writeChunk(destination, renderState.segmentPrefix),\n        writeChunk(destination, stringToChunk(id.toString(16))),\n        writeChunkAndReturn(destination, startSegmentMathML2)\n      );\n    case 6:\n      return (\n        writeChunk(destination, startSegmentTable),\n        writeChunk(destination, renderState.segmentPrefix),\n        writeChunk(destination, stringToChunk(id.toString(16))),\n        writeChunkAndReturn(destination, startSegmentTable2)\n      );\n    case 7:\n      return (\n        writeChunk(destination, startSegmentTableBody),\n        writeChunk(destination, renderState.segmentPrefix),\n        writeChunk(destination, stringToChunk(id.toString(16))),\n        writeChunkAndReturn(destination, startSegmentTableBody2)\n      );\n    case 8:\n      return (\n        writeChunk(destination, startSegmentTableRow),\n        writeChunk(destination, renderState.segmentPrefix),\n        writeChunk(destination, stringToChunk(id.toString(16))),\n        writeChunkAndReturn(destination, startSegmentTableRow2)\n      );\n    case 9:\n      return (\n        writeChunk(destination, startSegmentColGroup),\n        writeChunk(destination, renderState.segmentPrefix),\n        writeChunk(destination, stringToChunk(id.toString(16))),\n        writeChunkAndReturn(destination, startSegmentColGroup2)\n      );\n    default:\n      throw Error(\"Unknown insertion mode. This is a bug in React.\");\n  }\n}\nfunction writeEndSegment(destination, formatContext) {\n  switch (formatContext.insertionMode) {\n    case 0:\n    case 1:\n    case 3:\n    case 2:\n      return writeChunkAndReturn(destination, endSegmentHTML);\n    case 4:\n      return writeChunkAndReturn(destination, endSegmentSVG);\n    case 5:\n      return writeChunkAndReturn(destination, endSegmentMathML);\n    case 6:\n      return writeChunkAndReturn(destination, endSegmentTable);\n    case 7:\n      return writeChunkAndReturn(destination, endSegmentTableBody);\n    case 8:\n      return writeChunkAndReturn(destination, endSegmentTableRow);\n    case 9:\n      return writeChunkAndReturn(destination, endSegmentColGroup);\n    default:\n      throw Error(\"Unknown insertion mode. This is a bug in React.\");\n  }\n}\nvar completeSegmentScript1Full = stringToPrecomputedChunk(\n    '$RS=function(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS(\"'\n  ),\n  completeSegmentScript1Partial = stringToPrecomputedChunk('$RS(\"'),\n  completeSegmentScript2 = stringToPrecomputedChunk('\",\"'),\n  completeSegmentScriptEnd = stringToPrecomputedChunk('\")\\x3c/script>');\nstringToPrecomputedChunk('<template data-rsi=\"\" data-sid=\"');\nstringToPrecomputedChunk('\" data-pid=\"');\nvar completeBoundaryScript1Full = stringToPrecomputedChunk(\n    '$RC=function(b,c,e){c=document.getElementById(c);c.parentNode.removeChild(c);var a=document.getElementById(b);if(a){b=a.previousSibling;if(e)b.data=\"$!\",a.setAttribute(\"data-dgst\",e);else{e=b.parentNode;a=b.nextSibling;var f=0;do{if(a&&8===a.nodeType){var d=a.data;if(\"/$\"===d)if(0===f)break;else f--;else\"$\"!==d&&\"$?\"!==d&&\"$!\"!==d||f++}d=a.nextSibling;e.removeChild(a);a=d}while(a);for(;c.firstChild;)e.insertBefore(c.firstChild,a);b.data=\"$\"}b._reactRetry&&b._reactRetry()}};$RC(\"'\n  ),\n  completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC(\"'),\n  completeBoundaryWithStylesScript1FullBoth = stringToPrecomputedChunk(\n    '$RC=function(b,c,e){c=document.getElementById(c);c.parentNode.removeChild(c);var a=document.getElementById(b);if(a){b=a.previousSibling;if(e)b.data=\"$!\",a.setAttribute(\"data-dgst\",e);else{e=b.parentNode;a=b.nextSibling;var f=0;do{if(a&&8===a.nodeType){var d=a.data;if(\"/$\"===d)if(0===f)break;else f--;else\"$\"!==d&&\"$?\"!==d&&\"$!\"!==d||f++}d=a.nextSibling;e.removeChild(a);a=d}while(a);for(;c.firstChild;)e.insertBefore(c.firstChild,a);b.data=\"$\"}b._reactRetry&&b._reactRetry()}};$RM=new Map;\\n$RR=function(t,u,y){function v(n){this._p=null;n()}for(var w=$RC,p=$RM,q=new Map,r=document,g,b,h=r.querySelectorAll(\"link[data-precedence],style[data-precedence]\"),x=[],k=0;b=h[k++];)\"not all\"===b.getAttribute(\"media\")?x.push(b):(\"LINK\"===b.tagName&&p.set(b.getAttribute(\"href\"),b),q.set(b.dataset.precedence,g=b));b=0;h=[];var l,a;for(k=!0;;){if(k){var e=y[b++];if(!e){k=!1;b=0;continue}var c=!1,m=0;var d=e[m++];if(a=p.get(d)){var f=a._p;c=!0}else{a=r.createElement(\"link\");a.href=\\nd;a.rel=\"stylesheet\";for(a.dataset.precedence=l=e[m++];f=e[m++];)a.setAttribute(f,e[m++]);f=a._p=new Promise(function(n,z){a.onload=v.bind(a,n);a.onerror=v.bind(a,z)});p.set(d,a)}d=a.getAttribute(\"media\");!f||d&&!matchMedia(d).matches||h.push(f);if(c)continue}else{a=x[b++];if(!a)break;l=a.getAttribute(\"data-precedence\");a.removeAttribute(\"media\")}c=q.get(l)||g;c===g&&(g=a);q.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=r.head,c.insertBefore(a,c.firstChild))}Promise.all(h).then(w.bind(null,\\nt,u,\"\"),w.bind(null,t,u,\"Resource failed to load\"))};$RR(\"'\n  ),\n  completeBoundaryWithStylesScript1FullPartial = stringToPrecomputedChunk(\n    '$RM=new Map;\\n$RR=function(t,u,y){function v(n){this._p=null;n()}for(var w=$RC,p=$RM,q=new Map,r=document,g,b,h=r.querySelectorAll(\"link[data-precedence],style[data-precedence]\"),x=[],k=0;b=h[k++];)\"not all\"===b.getAttribute(\"media\")?x.push(b):(\"LINK\"===b.tagName&&p.set(b.getAttribute(\"href\"),b),q.set(b.dataset.precedence,g=b));b=0;h=[];var l,a;for(k=!0;;){if(k){var e=y[b++];if(!e){k=!1;b=0;continue}var c=!1,m=0;var d=e[m++];if(a=p.get(d)){var f=a._p;c=!0}else{a=r.createElement(\"link\");a.href=\\nd;a.rel=\"stylesheet\";for(a.dataset.precedence=l=e[m++];f=e[m++];)a.setAttribute(f,e[m++]);f=a._p=new Promise(function(n,z){a.onload=v.bind(a,n);a.onerror=v.bind(a,z)});p.set(d,a)}d=a.getAttribute(\"media\");!f||d&&!matchMedia(d).matches||h.push(f);if(c)continue}else{a=x[b++];if(!a)break;l=a.getAttribute(\"data-precedence\");a.removeAttribute(\"media\")}c=q.get(l)||g;c===g&&(g=a);q.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=r.head,c.insertBefore(a,c.firstChild))}Promise.all(h).then(w.bind(null,\\nt,u,\"\"),w.bind(null,t,u,\"Resource failed to load\"))};$RR(\"'\n  ),\n  completeBoundaryWithStylesScript1Partial = stringToPrecomputedChunk('$RR(\"'),\n  completeBoundaryScript2 = stringToPrecomputedChunk('\",\"'),\n  completeBoundaryScript3a = stringToPrecomputedChunk('\",'),\n  completeBoundaryScript3b = stringToPrecomputedChunk('\"'),\n  completeBoundaryScriptEnd = stringToPrecomputedChunk(\")\\x3c/script>\");\nstringToPrecomputedChunk('<template data-rci=\"\" data-bid=\"');\nstringToPrecomputedChunk('<template data-rri=\"\" data-bid=\"');\nstringToPrecomputedChunk('\" data-sid=\"');\nstringToPrecomputedChunk('\" data-sty=\"');\nvar clientRenderScript1Full = stringToPrecomputedChunk(\n    '$RX=function(b,c,d,e,f){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data=\"$!\",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),f&&(a.cstck=f),b._reactRetry&&b._reactRetry())};;$RX(\"'\n  ),\n  clientRenderScript1Partial = stringToPrecomputedChunk('$RX(\"'),\n  clientRenderScript1A = stringToPrecomputedChunk('\"'),\n  clientRenderErrorScriptArgInterstitial = stringToPrecomputedChunk(\",\"),\n  clientRenderScriptEnd = stringToPrecomputedChunk(\")\\x3c/script>\");\nstringToPrecomputedChunk('<template data-rxi=\"\" data-bid=\"');\nstringToPrecomputedChunk('\" data-dgst=\"');\nstringToPrecomputedChunk('\" data-msg=\"');\nstringToPrecomputedChunk('\" data-stck=\"');\nstringToPrecomputedChunk('\" data-cstck=\"');\nvar regexForJSStringsInInstructionScripts = /[<\\u2028\\u2029]/g;\nfunction escapeJSStringsForInstructionScripts(input) {\n  return JSON.stringify(input).replace(\n    regexForJSStringsInInstructionScripts,\n    function (match) {\n      switch (match) {\n        case \"<\":\n          return \"\\\\u003c\";\n        case \"\\u2028\":\n          return \"\\\\u2028\";\n        case \"\\u2029\":\n          return \"\\\\u2029\";\n        default:\n          throw Error(\n            \"escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React\"\n          );\n      }\n    }\n  );\n}\nvar regexForJSStringsInScripts = /[&><\\u2028\\u2029]/g;\nfunction escapeJSObjectForInstructionScripts(input) {\n  return JSON.stringify(input).replace(\n    regexForJSStringsInScripts,\n    function (match) {\n      switch (match) {\n        case \"&\":\n          return \"\\\\u0026\";\n        case \">\":\n          return \"\\\\u003e\";\n        case \"<\":\n          return \"\\\\u003c\";\n        case \"\\u2028\":\n          return \"\\\\u2028\";\n        case \"\\u2029\":\n          return \"\\\\u2029\";\n        default:\n          throw Error(\n            \"escapeJSObjectForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React\"\n          );\n      }\n    }\n  );\n}\nvar lateStyleTagResourceOpen1 = stringToPrecomputedChunk(\n    '<style media=\"not all\" data-precedence=\"'\n  ),\n  lateStyleTagResourceOpen2 = stringToPrecomputedChunk('\" data-href=\"'),\n  lateStyleTagResourceOpen3 = stringToPrecomputedChunk('\">'),\n  lateStyleTagTemplateClose = stringToPrecomputedChunk(\"</style>\"),\n  currentlyRenderingBoundaryHasStylesToHoist = !1,\n  destinationHasCapacity = !0;\nfunction flushStyleTagsLateForBoundary(styleQueue) {\n  var rules = styleQueue.rules,\n    hrefs = styleQueue.hrefs,\n    i = 0;\n  if (hrefs.length) {\n    writeChunk(this, lateStyleTagResourceOpen1);\n    writeChunk(this, styleQueue.precedence);\n    for (writeChunk(this, lateStyleTagResourceOpen2); i < hrefs.length - 1; i++)\n      writeChunk(this, hrefs[i]), writeChunk(this, spaceSeparator);\n    writeChunk(this, hrefs[i]);\n    writeChunk(this, lateStyleTagResourceOpen3);\n    for (i = 0; i < rules.length; i++) writeChunk(this, rules[i]);\n    destinationHasCapacity = writeChunkAndReturn(\n      this,\n      lateStyleTagTemplateClose\n    );\n    currentlyRenderingBoundaryHasStylesToHoist = !0;\n    rules.length = 0;\n    hrefs.length = 0;\n  }\n}\nfunction hasStylesToHoist(stylesheet) {\n  return 2 !== stylesheet.state\n    ? (currentlyRenderingBoundaryHasStylesToHoist = !0)\n    : !1;\n}\nfunction writeHoistablesForBoundary(destination, hoistableState, renderState) {\n  currentlyRenderingBoundaryHasStylesToHoist = !1;\n  destinationHasCapacity = !0;\n  hoistableState.styles.forEach(flushStyleTagsLateForBoundary, destination);\n  hoistableState.stylesheets.forEach(hasStylesToHoist);\n  currentlyRenderingBoundaryHasStylesToHoist &&\n    (renderState.stylesToHoist = !0);\n  return destinationHasCapacity;\n}\nfunction flushResource(resource) {\n  for (var i = 0; i < resource.length; i++) writeChunk(this, resource[i]);\n  resource.length = 0;\n}\nvar stylesheetFlushingQueue = [];\nfunction flushStyleInPreamble(stylesheet) {\n  pushLinkImpl(stylesheetFlushingQueue, stylesheet.props);\n  for (var i = 0; i < stylesheetFlushingQueue.length; i++)\n    writeChunk(this, stylesheetFlushingQueue[i]);\n  stylesheetFlushingQueue.length = 0;\n  stylesheet.state = 2;\n}\nvar styleTagResourceOpen1 = stringToPrecomputedChunk(\n    '<style data-precedence=\"'\n  ),\n  styleTagResourceOpen2 = stringToPrecomputedChunk('\" data-href=\"'),\n  spaceSeparator = stringToPrecomputedChunk(\" \"),\n  styleTagResourceOpen3 = stringToPrecomputedChunk('\">'),\n  styleTagResourceClose = stringToPrecomputedChunk(\"</style>\");\nfunction flushStylesInPreamble(styleQueue) {\n  var hasStylesheets = 0 < styleQueue.sheets.size;\n  styleQueue.sheets.forEach(flushStyleInPreamble, this);\n  styleQueue.sheets.clear();\n  var rules = styleQueue.rules,\n    hrefs = styleQueue.hrefs;\n  if (!hasStylesheets || hrefs.length) {\n    writeChunk(this, styleTagResourceOpen1);\n    writeChunk(this, styleQueue.precedence);\n    styleQueue = 0;\n    if (hrefs.length) {\n      for (\n        writeChunk(this, styleTagResourceOpen2);\n        styleQueue < hrefs.length - 1;\n        styleQueue++\n      )\n        writeChunk(this, hrefs[styleQueue]), writeChunk(this, spaceSeparator);\n      writeChunk(this, hrefs[styleQueue]);\n    }\n    writeChunk(this, styleTagResourceOpen3);\n    for (styleQueue = 0; styleQueue < rules.length; styleQueue++)\n      writeChunk(this, rules[styleQueue]);\n    writeChunk(this, styleTagResourceClose);\n    rules.length = 0;\n    hrefs.length = 0;\n  }\n}\nfunction preloadLateStyle(stylesheet) {\n  if (0 === stylesheet.state) {\n    stylesheet.state = 1;\n    var props = stylesheet.props;\n    pushLinkImpl(stylesheetFlushingQueue, {\n      rel: \"preload\",\n      as: \"style\",\n      href: stylesheet.props.href,\n      crossOrigin: props.crossOrigin,\n      fetchPriority: props.fetchPriority,\n      integrity: props.integrity,\n      media: props.media,\n      hrefLang: props.hrefLang,\n      referrerPolicy: props.referrerPolicy\n    });\n    for (\n      stylesheet = 0;\n      stylesheet < stylesheetFlushingQueue.length;\n      stylesheet++\n    )\n      writeChunk(this, stylesheetFlushingQueue[stylesheet]);\n    stylesheetFlushingQueue.length = 0;\n  }\n}\nfunction preloadLateStyles(styleQueue) {\n  styleQueue.sheets.forEach(preloadLateStyle, this);\n  styleQueue.sheets.clear();\n}\nvar arrayFirstOpenBracket = stringToPrecomputedChunk(\"[\"),\n  arraySubsequentOpenBracket = stringToPrecomputedChunk(\",[\"),\n  arrayInterstitial = stringToPrecomputedChunk(\",\"),\n  arrayCloseBracket = stringToPrecomputedChunk(\"]\");\nfunction writeStyleResourceDependenciesInJS(destination, hoistableState) {\n  writeChunk(destination, arrayFirstOpenBracket);\n  var nextArrayOpenBrackChunk = arrayFirstOpenBracket;\n  hoistableState.stylesheets.forEach(function (resource) {\n    if (2 !== resource.state)\n      if (3 === resource.state)\n        writeChunk(destination, nextArrayOpenBrackChunk),\n          writeChunk(\n            destination,\n            stringToChunk(\n              escapeJSObjectForInstructionScripts(\"\" + resource.props.href)\n            )\n          ),\n          writeChunk(destination, arrayCloseBracket),\n          (nextArrayOpenBrackChunk = arraySubsequentOpenBracket);\n      else {\n        writeChunk(destination, nextArrayOpenBrackChunk);\n        var precedence = resource.props[\"data-precedence\"],\n          props = resource.props,\n          coercedHref = sanitizeURL(\"\" + resource.props.href);\n        writeChunk(\n          destination,\n          stringToChunk(escapeJSObjectForInstructionScripts(coercedHref))\n        );\n        precedence = \"\" + precedence;\n        writeChunk(destination, arrayInterstitial);\n        writeChunk(\n          destination,\n          stringToChunk(escapeJSObjectForInstructionScripts(precedence))\n        );\n        for (var propKey in props)\n          if (\n            hasOwnProperty.call(props, propKey) &&\n            ((precedence = props[propKey]), null != precedence)\n          )\n            switch (propKey) {\n              case \"href\":\n              case \"rel\":\n              case \"precedence\":\n              case \"data-precedence\":\n                break;\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                throw Error(\n                  \"link is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\n                );\n              default:\n                writeStyleResourceAttributeInJS(\n                  destination,\n                  propKey,\n                  precedence\n                );\n            }\n        writeChunk(destination, arrayCloseBracket);\n        nextArrayOpenBrackChunk = arraySubsequentOpenBracket;\n        resource.state = 3;\n      }\n  });\n  writeChunk(destination, arrayCloseBracket);\n}\nfunction writeStyleResourceAttributeInJS(destination, name, value) {\n  var attributeName = name.toLowerCase();\n  switch (typeof value) {\n    case \"function\":\n    case \"symbol\":\n      return;\n  }\n  switch (name) {\n    case \"innerHTML\":\n    case \"dangerouslySetInnerHTML\":\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"style\":\n    case \"ref\":\n      return;\n    case \"className\":\n      attributeName = \"class\";\n      name = \"\" + value;\n      break;\n    case \"hidden\":\n      if (!1 === value) return;\n      name = \"\";\n      break;\n    case \"src\":\n    case \"href\":\n      value = sanitizeURL(value);\n      name = \"\" + value;\n      break;\n    default:\n      if (\n        (2 < name.length &&\n          (\"o\" === name[0] || \"O\" === name[0]) &&\n          (\"n\" === name[1] || \"N\" === name[1])) ||\n        !isAttributeNameSafe(name)\n      )\n        return;\n      name = \"\" + value;\n  }\n  writeChunk(destination, arrayInterstitial);\n  writeChunk(\n    destination,\n    stringToChunk(escapeJSObjectForInstructionScripts(attributeName))\n  );\n  writeChunk(destination, arrayInterstitial);\n  writeChunk(\n    destination,\n    stringToChunk(escapeJSObjectForInstructionScripts(name))\n  );\n}\nfunction createHoistableState() {\n  return { styles: new Set(), stylesheets: new Set() };\n}\nfunction prefetchDNS(href) {\n  var request = resolveRequest();\n  if (request) {\n    var resumableState = request.resumableState,\n      renderState = request.renderState;\n    if (\"string\" === typeof href && href) {\n      if (!resumableState.dnsResources.hasOwnProperty(href)) {\n        resumableState.dnsResources[href] = null;\n        resumableState = renderState.headers;\n        var header, JSCompiler_temp;\n        if (\n          (JSCompiler_temp =\n            resumableState && 0 < resumableState.remainingCapacity)\n        )\n          JSCompiler_temp =\n            ((header =\n              \"<\" +\n              (\"\" + href).replace(\n                regexForHrefInLinkHeaderURLContext,\n                escapeHrefForLinkHeaderURLContextReplacer\n              ) +\n              \">; rel=dns-prefetch\"),\n            0 <= (resumableState.remainingCapacity -= header.length + 2));\n        JSCompiler_temp\n          ? ((renderState.resets.dns[href] = null),\n            resumableState.preconnects && (resumableState.preconnects += \", \"),\n            (resumableState.preconnects += header))\n          : ((header = []),\n            pushLinkImpl(header, { href: href, rel: \"dns-prefetch\" }),\n            renderState.preconnects.add(header));\n      }\n      enqueueFlush(request);\n    }\n  } else previousDispatcher.D(href);\n}\nfunction preconnect(href, crossOrigin) {\n  var request = resolveRequest();\n  if (request) {\n    var resumableState = request.resumableState,\n      renderState = request.renderState;\n    if (\"string\" === typeof href && href) {\n      var bucket =\n        \"use-credentials\" === crossOrigin\n          ? \"credentials\"\n          : \"string\" === typeof crossOrigin\n            ? \"anonymous\"\n            : \"default\";\n      if (!resumableState.connectResources[bucket].hasOwnProperty(href)) {\n        resumableState.connectResources[bucket][href] = null;\n        resumableState = renderState.headers;\n        var header, JSCompiler_temp;\n        if (\n          (JSCompiler_temp =\n            resumableState && 0 < resumableState.remainingCapacity)\n        ) {\n          JSCompiler_temp =\n            \"<\" +\n            (\"\" + href).replace(\n              regexForHrefInLinkHeaderURLContext,\n              escapeHrefForLinkHeaderURLContextReplacer\n            ) +\n            \">; rel=preconnect\";\n          if (\"string\" === typeof crossOrigin) {\n            var escapedCrossOrigin = (\"\" + crossOrigin).replace(\n              regexForLinkHeaderQuotedParamValueContext,\n              escapeStringForLinkHeaderQuotedParamValueContextReplacer\n            );\n            JSCompiler_temp += '; crossorigin=\"' + escapedCrossOrigin + '\"';\n          }\n          JSCompiler_temp =\n            ((header = JSCompiler_temp),\n            0 <= (resumableState.remainingCapacity -= header.length + 2));\n        }\n        JSCompiler_temp\n          ? ((renderState.resets.connect[bucket][href] = null),\n            resumableState.preconnects && (resumableState.preconnects += \", \"),\n            (resumableState.preconnects += header))\n          : ((bucket = []),\n            pushLinkImpl(bucket, {\n              rel: \"preconnect\",\n              href: href,\n              crossOrigin: crossOrigin\n            }),\n            renderState.preconnects.add(bucket));\n      }\n      enqueueFlush(request);\n    }\n  } else previousDispatcher.C(href, crossOrigin);\n}\nfunction preload(href, as, options) {\n  var request = resolveRequest();\n  if (request) {\n    var resumableState = request.resumableState,\n      renderState = request.renderState;\n    if (as && href) {\n      switch (as) {\n        case \"image\":\n          if (options) {\n            var imageSrcSet = options.imageSrcSet;\n            var imageSizes = options.imageSizes;\n            var fetchPriority = options.fetchPriority;\n          }\n          var key = imageSrcSet\n            ? imageSrcSet + \"\\n\" + (imageSizes || \"\")\n            : href;\n          if (resumableState.imageResources.hasOwnProperty(key)) return;\n          resumableState.imageResources[key] = PRELOAD_NO_CREDS;\n          resumableState = renderState.headers;\n          var header;\n          resumableState &&\n          0 < resumableState.remainingCapacity &&\n          \"string\" !== typeof imageSrcSet &&\n          \"high\" === fetchPriority &&\n          ((header = getPreloadAsHeader(href, as, options)),\n          0 <= (resumableState.remainingCapacity -= header.length + 2))\n            ? ((renderState.resets.image[key] = PRELOAD_NO_CREDS),\n              resumableState.highImagePreloads &&\n                (resumableState.highImagePreloads += \", \"),\n              (resumableState.highImagePreloads += header))\n            : ((resumableState = []),\n              pushLinkImpl(\n                resumableState,\n                assign(\n                  { rel: \"preload\", href: imageSrcSet ? void 0 : href, as: as },\n                  options\n                )\n              ),\n              \"high\" === fetchPriority\n                ? renderState.highImagePreloads.add(resumableState)\n                : (renderState.bulkPreloads.add(resumableState),\n                  renderState.preloads.images.set(key, resumableState)));\n          break;\n        case \"style\":\n          if (resumableState.styleResources.hasOwnProperty(href)) return;\n          imageSrcSet = [];\n          pushLinkImpl(\n            imageSrcSet,\n            assign({ rel: \"preload\", href: href, as: as }, options)\n          );\n          resumableState.styleResources[href] =\n            !options ||\n            (\"string\" !== typeof options.crossOrigin &&\n              \"string\" !== typeof options.integrity)\n              ? PRELOAD_NO_CREDS\n              : [options.crossOrigin, options.integrity];\n          renderState.preloads.stylesheets.set(href, imageSrcSet);\n          renderState.bulkPreloads.add(imageSrcSet);\n          break;\n        case \"script\":\n          if (resumableState.scriptResources.hasOwnProperty(href)) return;\n          imageSrcSet = [];\n          renderState.preloads.scripts.set(href, imageSrcSet);\n          renderState.bulkPreloads.add(imageSrcSet);\n          pushLinkImpl(\n            imageSrcSet,\n            assign({ rel: \"preload\", href: href, as: as }, options)\n          );\n          resumableState.scriptResources[href] =\n            !options ||\n            (\"string\" !== typeof options.crossOrigin &&\n              \"string\" !== typeof options.integrity)\n              ? PRELOAD_NO_CREDS\n              : [options.crossOrigin, options.integrity];\n          break;\n        default:\n          if (resumableState.unknownResources.hasOwnProperty(as)) {\n            if (\n              ((imageSrcSet = resumableState.unknownResources[as]),\n              imageSrcSet.hasOwnProperty(href))\n            )\n              return;\n          } else\n            (imageSrcSet = {}),\n              (resumableState.unknownResources[as] = imageSrcSet);\n          imageSrcSet[href] = PRELOAD_NO_CREDS;\n          if (\n            (resumableState = renderState.headers) &&\n            0 < resumableState.remainingCapacity &&\n            \"font\" === as &&\n            ((key = getPreloadAsHeader(href, as, options)),\n            0 <= (resumableState.remainingCapacity -= key.length + 2))\n          )\n            (renderState.resets.font[href] = PRELOAD_NO_CREDS),\n              resumableState.fontPreloads &&\n                (resumableState.fontPreloads += \", \"),\n              (resumableState.fontPreloads += key);\n          else\n            switch (\n              ((resumableState = []),\n              (href = assign({ rel: \"preload\", href: href, as: as }, options)),\n              pushLinkImpl(resumableState, href),\n              as)\n            ) {\n              case \"font\":\n                renderState.fontPreloads.add(resumableState);\n                break;\n              default:\n                renderState.bulkPreloads.add(resumableState);\n            }\n      }\n      enqueueFlush(request);\n    }\n  } else previousDispatcher.L(href, as, options);\n}\nfunction preloadModule(href, options) {\n  var request = resolveRequest();\n  if (request) {\n    var resumableState = request.resumableState,\n      renderState = request.renderState;\n    if (href) {\n      var as =\n        options && \"string\" === typeof options.as ? options.as : \"script\";\n      switch (as) {\n        case \"script\":\n          if (resumableState.moduleScriptResources.hasOwnProperty(href)) return;\n          as = [];\n          resumableState.moduleScriptResources[href] =\n            !options ||\n            (\"string\" !== typeof options.crossOrigin &&\n              \"string\" !== typeof options.integrity)\n              ? PRELOAD_NO_CREDS\n              : [options.crossOrigin, options.integrity];\n          renderState.preloads.moduleScripts.set(href, as);\n          break;\n        default:\n          if (resumableState.moduleUnknownResources.hasOwnProperty(as)) {\n            var resources = resumableState.unknownResources[as];\n            if (resources.hasOwnProperty(href)) return;\n          } else\n            (resources = {}),\n              (resumableState.moduleUnknownResources[as] = resources);\n          as = [];\n          resources[href] = PRELOAD_NO_CREDS;\n      }\n      pushLinkImpl(as, assign({ rel: \"modulepreload\", href: href }, options));\n      renderState.bulkPreloads.add(as);\n      enqueueFlush(request);\n    }\n  } else previousDispatcher.m(href, options);\n}\nfunction preinitStyle(href, precedence, options) {\n  var request = resolveRequest();\n  if (request) {\n    var resumableState = request.resumableState,\n      renderState = request.renderState;\n    if (href) {\n      precedence = precedence || \"default\";\n      var styleQueue = renderState.styles.get(precedence),\n        resourceState = resumableState.styleResources.hasOwnProperty(href)\n          ? resumableState.styleResources[href]\n          : void 0;\n      null !== resourceState &&\n        ((resumableState.styleResources[href] = null),\n        styleQueue ||\n          ((styleQueue = {\n            precedence: stringToChunk(escapeTextForBrowser(precedence)),\n            rules: [],\n            hrefs: [],\n            sheets: new Map()\n          }),\n          renderState.styles.set(precedence, styleQueue)),\n        (precedence = {\n          state: 0,\n          props: assign(\n            { rel: \"stylesheet\", href: href, \"data-precedence\": precedence },\n            options\n          )\n        }),\n        resourceState &&\n          (2 === resourceState.length &&\n            adoptPreloadCredentials(precedence.props, resourceState),\n          (renderState = renderState.preloads.stylesheets.get(href)) &&\n          0 < renderState.length\n            ? (renderState.length = 0)\n            : (precedence.state = 1)),\n        styleQueue.sheets.set(href, precedence),\n        enqueueFlush(request));\n    }\n  } else previousDispatcher.S(href, precedence, options);\n}\nfunction preinitScript(src, options) {\n  var request = resolveRequest();\n  if (request) {\n    var resumableState = request.resumableState,\n      renderState = request.renderState;\n    if (src) {\n      var resourceState = resumableState.scriptResources.hasOwnProperty(src)\n        ? resumableState.scriptResources[src]\n        : void 0;\n      null !== resourceState &&\n        ((resumableState.scriptResources[src] = null),\n        (options = assign({ src: src, async: !0 }, options)),\n        resourceState &&\n          (2 === resourceState.length &&\n            adoptPreloadCredentials(options, resourceState),\n          (src = renderState.preloads.scripts.get(src))) &&\n          (src.length = 0),\n        (src = []),\n        renderState.scripts.add(src),\n        pushScriptImpl(src, options),\n        enqueueFlush(request));\n    }\n  } else previousDispatcher.X(src, options);\n}\nfunction preinitModuleScript(src, options) {\n  var request = resolveRequest();\n  if (request) {\n    var resumableState = request.resumableState,\n      renderState = request.renderState;\n    if (src) {\n      var resourceState = resumableState.moduleScriptResources.hasOwnProperty(\n        src\n      )\n        ? resumableState.moduleScriptResources[src]\n        : void 0;\n      null !== resourceState &&\n        ((resumableState.moduleScriptResources[src] = null),\n        (options = assign({ src: src, type: \"module\", async: !0 }, options)),\n        resourceState &&\n          (2 === resourceState.length &&\n            adoptPreloadCredentials(options, resourceState),\n          (src = renderState.preloads.moduleScripts.get(src))) &&\n          (src.length = 0),\n        (src = []),\n        renderState.scripts.add(src),\n        pushScriptImpl(src, options),\n        enqueueFlush(request));\n    }\n  } else previousDispatcher.M(src, options);\n}\nfunction adoptPreloadCredentials(target, preloadState) {\n  null == target.crossOrigin && (target.crossOrigin = preloadState[0]);\n  null == target.integrity && (target.integrity = preloadState[1]);\n}\nfunction getPreloadAsHeader(href, as, params) {\n  href = (\"\" + href).replace(\n    regexForHrefInLinkHeaderURLContext,\n    escapeHrefForLinkHeaderURLContextReplacer\n  );\n  as = (\"\" + as).replace(\n    regexForLinkHeaderQuotedParamValueContext,\n    escapeStringForLinkHeaderQuotedParamValueContextReplacer\n  );\n  as = \"<\" + href + '>; rel=preload; as=\"' + as + '\"';\n  for (var paramName in params)\n    hasOwnProperty.call(params, paramName) &&\n      ((href = params[paramName]),\n      \"string\" === typeof href &&\n        (as +=\n          \"; \" +\n          paramName.toLowerCase() +\n          '=\"' +\n          (\"\" + href).replace(\n            regexForLinkHeaderQuotedParamValueContext,\n            escapeStringForLinkHeaderQuotedParamValueContextReplacer\n          ) +\n          '\"'));\n  return as;\n}\nvar regexForHrefInLinkHeaderURLContext = /[<>\\r\\n]/g;\nfunction escapeHrefForLinkHeaderURLContextReplacer(match) {\n  switch (match) {\n    case \"<\":\n      return \"%3C\";\n    case \">\":\n      return \"%3E\";\n    case \"\\n\":\n      return \"%0A\";\n    case \"\\r\":\n      return \"%0D\";\n    default:\n      throw Error(\n        \"escapeLinkHrefForHeaderContextReplacer encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React\"\n      );\n  }\n}\nvar regexForLinkHeaderQuotedParamValueContext = /[\"';,\\r\\n]/g;\nfunction escapeStringForLinkHeaderQuotedParamValueContextReplacer(match) {\n  switch (match) {\n    case '\"':\n      return \"%22\";\n    case \"'\":\n      return \"%27\";\n    case \";\":\n      return \"%3B\";\n    case \",\":\n      return \"%2C\";\n    case \"\\n\":\n      return \"%0A\";\n    case \"\\r\":\n      return \"%0D\";\n    default:\n      throw Error(\n        \"escapeStringForLinkHeaderQuotedParamValueContextReplacer encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React\"\n      );\n  }\n}\nfunction hoistStyleQueueDependency(styleQueue) {\n  this.styles.add(styleQueue);\n}\nfunction hoistStylesheetDependency(stylesheet) {\n  this.stylesheets.add(stylesheet);\n}\nvar bind = Function.prototype.bind,\n  supportsRequestStorage = \"function\" === typeof AsyncLocalStorage,\n  requestStorage = supportsRequestStorage ? new AsyncLocalStorage() : null,\n  REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\nfunction getComponentNameFromType(type) {\n  if (null == type) return null;\n  if (\"function\" === typeof type)\n    return type.$$typeof === REACT_CLIENT_REFERENCE\n      ? null\n      : type.displayName || type.name || null;\n  if (\"string\" === typeof type) return type;\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return \"Fragment\";\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n    case REACT_STRICT_MODE_TYPE:\n      return \"StrictMode\";\n    case REACT_SUSPENSE_TYPE:\n      return \"Suspense\";\n    case REACT_SUSPENSE_LIST_TYPE:\n      return \"SuspenseList\";\n    case REACT_ACTIVITY_TYPE:\n      return \"Activity\";\n  }\n  if (\"object\" === typeof type)\n    switch (type.$$typeof) {\n      case REACT_PORTAL_TYPE:\n        return \"Portal\";\n      case REACT_CONTEXT_TYPE:\n        return (type.displayName || \"Context\") + \".Provider\";\n      case REACT_CONSUMER_TYPE:\n        return (type._context.displayName || \"Context\") + \".Consumer\";\n      case REACT_FORWARD_REF_TYPE:\n        var innerType = type.render;\n        type = type.displayName;\n        type ||\n          ((type = innerType.displayName || innerType.name || \"\"),\n          (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n        return type;\n      case REACT_MEMO_TYPE:\n        return (\n          (innerType = type.displayName || null),\n          null !== innerType\n            ? innerType\n            : getComponentNameFromType(type.type) || \"Memo\"\n        );\n      case REACT_LAZY_TYPE:\n        innerType = type._payload;\n        type = type._init;\n        try {\n          return getComponentNameFromType(type(innerType));\n        } catch (x) {}\n    }\n  return null;\n}\nvar emptyContextObject = {},\n  currentActiveSnapshot = null;\nfunction popToNearestCommonAncestor(prev, next) {\n  if (prev !== next) {\n    prev.context._currentValue = prev.parentValue;\n    prev = prev.parent;\n    var parentNext = next.parent;\n    if (null === prev) {\n      if (null !== parentNext)\n        throw Error(\n          \"The stacks must reach the root at the same time. This is a bug in React.\"\n        );\n    } else {\n      if (null === parentNext)\n        throw Error(\n          \"The stacks must reach the root at the same time. This is a bug in React.\"\n        );\n      popToNearestCommonAncestor(prev, parentNext);\n    }\n    next.context._currentValue = next.value;\n  }\n}\nfunction popAllPrevious(prev) {\n  prev.context._currentValue = prev.parentValue;\n  prev = prev.parent;\n  null !== prev && popAllPrevious(prev);\n}\nfunction pushAllNext(next) {\n  var parentNext = next.parent;\n  null !== parentNext && pushAllNext(parentNext);\n  next.context._currentValue = next.value;\n}\nfunction popPreviousToCommonLevel(prev, next) {\n  prev.context._currentValue = prev.parentValue;\n  prev = prev.parent;\n  if (null === prev)\n    throw Error(\n      \"The depth must equal at least at zero before reaching the root. This is a bug in React.\"\n    );\n  prev.depth === next.depth\n    ? popToNearestCommonAncestor(prev, next)\n    : popPreviousToCommonLevel(prev, next);\n}\nfunction popNextToCommonLevel(prev, next) {\n  var parentNext = next.parent;\n  if (null === parentNext)\n    throw Error(\n      \"The depth must equal at least at zero before reaching the root. This is a bug in React.\"\n    );\n  prev.depth === parentNext.depth\n    ? popToNearestCommonAncestor(prev, parentNext)\n    : popNextToCommonLevel(prev, parentNext);\n  next.context._currentValue = next.value;\n}\nfunction switchContext(newSnapshot) {\n  var prev = currentActiveSnapshot;\n  prev !== newSnapshot &&\n    (null === prev\n      ? pushAllNext(newSnapshot)\n      : null === newSnapshot\n        ? popAllPrevious(prev)\n        : prev.depth === newSnapshot.depth\n          ? popToNearestCommonAncestor(prev, newSnapshot)\n          : prev.depth > newSnapshot.depth\n            ? popPreviousToCommonLevel(prev, newSnapshot)\n            : popNextToCommonLevel(prev, newSnapshot),\n    (currentActiveSnapshot = newSnapshot));\n}\nvar classComponentUpdater = {\n    enqueueSetState: function (inst, payload) {\n      inst = inst._reactInternals;\n      null !== inst.queue && inst.queue.push(payload);\n    },\n    enqueueReplaceState: function (inst, payload) {\n      inst = inst._reactInternals;\n      inst.replace = !0;\n      inst.queue = [payload];\n    },\n    enqueueForceUpdate: function () {}\n  },\n  emptyTreeContext = { id: 1, overflow: \"\" };\nfunction pushTreeContext(baseContext, totalChildren, index) {\n  var baseIdWithLeadingBit = baseContext.id;\n  baseContext = baseContext.overflow;\n  var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;\n  baseIdWithLeadingBit &= ~(1 << baseLength);\n  index += 1;\n  var length = 32 - clz32(totalChildren) + baseLength;\n  if (30 < length) {\n    var numberOfOverflowBits = baseLength - (baseLength % 5);\n    length = (\n      baseIdWithLeadingBit &\n      ((1 << numberOfOverflowBits) - 1)\n    ).toString(32);\n    baseIdWithLeadingBit >>= numberOfOverflowBits;\n    baseLength -= numberOfOverflowBits;\n    return {\n      id:\n        (1 << (32 - clz32(totalChildren) + baseLength)) |\n        (index << baseLength) |\n        baseIdWithLeadingBit,\n      overflow: length + baseContext\n    };\n  }\n  return {\n    id: (1 << length) | (index << baseLength) | baseIdWithLeadingBit,\n    overflow: baseContext\n  };\n}\nvar clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,\n  log = Math.log,\n  LN2 = Math.LN2;\nfunction clz32Fallback(x) {\n  x >>>= 0;\n  return 0 === x ? 32 : (31 - ((log(x) / LN2) | 0)) | 0;\n}\nvar SuspenseException = Error(\n  \"Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\\n\\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`.\"\n);\nfunction noop$2() {}\nfunction trackUsedThenable(thenableState, thenable, index) {\n  index = thenableState[index];\n  void 0 === index\n    ? thenableState.push(thenable)\n    : index !== thenable && (thenable.then(noop$2, noop$2), (thenable = index));\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      \"string\" === typeof thenable.status\n        ? thenable.then(noop$2, noop$2)\n        : ((thenableState = thenable),\n          (thenableState.status = \"pending\"),\n          thenableState.then(\n            function (fulfilledValue) {\n              if (\"pending\" === thenable.status) {\n                var fulfilledThenable = thenable;\n                fulfilledThenable.status = \"fulfilled\";\n                fulfilledThenable.value = fulfilledValue;\n              }\n            },\n            function (error) {\n              if (\"pending\" === thenable.status) {\n                var rejectedThenable = thenable;\n                rejectedThenable.status = \"rejected\";\n                rejectedThenable.reason = error;\n              }\n            }\n          ));\n      switch (thenable.status) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n      suspendedThenable = thenable;\n      throw SuspenseException;\n  }\n}\nvar suspendedThenable = null;\nfunction getSuspendedThenable() {\n  if (null === suspendedThenable)\n    throw Error(\n      \"Expected a suspended thenable. This is a bug in React. Please file an issue.\"\n    );\n  var thenable = suspendedThenable;\n  suspendedThenable = null;\n  return thenable;\n}\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  currentlyRenderingComponent = null,\n  currentlyRenderingTask = null,\n  currentlyRenderingRequest = null,\n  currentlyRenderingKeyPath = null,\n  firstWorkInProgressHook = null,\n  workInProgressHook = null,\n  isReRender = !1,\n  didScheduleRenderPhaseUpdate = !1,\n  localIdCounter = 0,\n  actionStateCounter = 0,\n  actionStateMatchingIndex = -1,\n  thenableIndexCounter = 0,\n  thenableState = null,\n  renderPhaseUpdates = null,\n  numberOfReRenders = 0;\nfunction resolveCurrentlyRenderingComponent() {\n  if (null === currentlyRenderingComponent)\n    throw Error(\n      \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.\"\n    );\n  return currentlyRenderingComponent;\n}\nfunction createHook() {\n  if (0 < numberOfReRenders)\n    throw Error(\"Rendered more hooks than during the previous render\");\n  return { memoizedState: null, queue: null, next: null };\n}\nfunction createWorkInProgressHook() {\n  null === workInProgressHook\n    ? null === firstWorkInProgressHook\n      ? ((isReRender = !1),\n        (firstWorkInProgressHook = workInProgressHook = createHook()))\n      : ((isReRender = !0), (workInProgressHook = firstWorkInProgressHook))\n    : null === workInProgressHook.next\n      ? ((isReRender = !1),\n        (workInProgressHook = workInProgressHook.next = createHook()))\n      : ((isReRender = !0), (workInProgressHook = workInProgressHook.next));\n  return workInProgressHook;\n}\nfunction getThenableStateAfterSuspending() {\n  var state = thenableState;\n  thenableState = null;\n  return state;\n}\nfunction resetHooksState() {\n  currentlyRenderingKeyPath =\n    currentlyRenderingRequest =\n    currentlyRenderingTask =\n    currentlyRenderingComponent =\n      null;\n  didScheduleRenderPhaseUpdate = !1;\n  firstWorkInProgressHook = null;\n  numberOfReRenders = 0;\n  workInProgressHook = renderPhaseUpdates = null;\n}\nfunction basicStateReducer(state, action) {\n  return \"function\" === typeof action ? action(state) : action;\n}\nfunction useReducer(reducer, initialArg, init) {\n  currentlyRenderingComponent = resolveCurrentlyRenderingComponent();\n  workInProgressHook = createWorkInProgressHook();\n  if (isReRender) {\n    var queue = workInProgressHook.queue;\n    initialArg = queue.dispatch;\n    if (\n      null !== renderPhaseUpdates &&\n      ((init = renderPhaseUpdates.get(queue)), void 0 !== init)\n    ) {\n      renderPhaseUpdates.delete(queue);\n      queue = workInProgressHook.memoizedState;\n      do (queue = reducer(queue, init.action)), (init = init.next);\n      while (null !== init);\n      workInProgressHook.memoizedState = queue;\n      return [queue, initialArg];\n    }\n    return [workInProgressHook.memoizedState, initialArg];\n  }\n  reducer =\n    reducer === basicStateReducer\n      ? \"function\" === typeof initialArg\n        ? initialArg()\n        : initialArg\n      : void 0 !== init\n        ? init(initialArg)\n        : initialArg;\n  workInProgressHook.memoizedState = reducer;\n  reducer = workInProgressHook.queue = { last: null, dispatch: null };\n  reducer = reducer.dispatch = dispatchAction.bind(\n    null,\n    currentlyRenderingComponent,\n    reducer\n  );\n  return [workInProgressHook.memoizedState, reducer];\n}\nfunction useMemo(nextCreate, deps) {\n  currentlyRenderingComponent = resolveCurrentlyRenderingComponent();\n  workInProgressHook = createWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  if (null !== workInProgressHook) {\n    var prevState = workInProgressHook.memoizedState;\n    if (null !== prevState && null !== deps) {\n      var prevDeps = prevState[1];\n      a: if (null === prevDeps) prevDeps = !1;\n      else {\n        for (var i = 0; i < prevDeps.length && i < deps.length; i++)\n          if (!objectIs(deps[i], prevDeps[i])) {\n            prevDeps = !1;\n            break a;\n          }\n        prevDeps = !0;\n      }\n      if (prevDeps) return prevState[0];\n    }\n  }\n  nextCreate = nextCreate();\n  workInProgressHook.memoizedState = [nextCreate, deps];\n  return nextCreate;\n}\nfunction dispatchAction(componentIdentity, queue, action) {\n  if (25 <= numberOfReRenders)\n    throw Error(\n      \"Too many re-renders. React limits the number of renders to prevent an infinite loop.\"\n    );\n  if (componentIdentity === currentlyRenderingComponent)\n    if (\n      ((didScheduleRenderPhaseUpdate = !0),\n      (componentIdentity = { action: action, next: null }),\n      null === renderPhaseUpdates && (renderPhaseUpdates = new Map()),\n      (action = renderPhaseUpdates.get(queue)),\n      void 0 === action)\n    )\n      renderPhaseUpdates.set(queue, componentIdentity);\n    else {\n      for (queue = action; null !== queue.next; ) queue = queue.next;\n      queue.next = componentIdentity;\n    }\n}\nfunction unsupportedStartTransition() {\n  throw Error(\"startTransition cannot be called during server rendering.\");\n}\nfunction unsupportedSetOptimisticState() {\n  throw Error(\"Cannot update optimistic state while rendering.\");\n}\nfunction useActionState(action, initialState, permalink) {\n  resolveCurrentlyRenderingComponent();\n  var actionStateHookIndex = actionStateCounter++,\n    request = currentlyRenderingRequest;\n  if (\"function\" === typeof action.$$FORM_ACTION) {\n    var nextPostbackStateKey = null,\n      componentKeyPath = currentlyRenderingKeyPath;\n    request = request.formState;\n    var isSignatureEqual = action.$$IS_SIGNATURE_EQUAL;\n    if (null !== request && \"function\" === typeof isSignatureEqual) {\n      var postbackKey = request[1];\n      isSignatureEqual.call(action, request[2], request[3]) &&\n        ((nextPostbackStateKey =\n          void 0 !== permalink\n            ? \"p\" + permalink\n            : \"k\" +\n              murmurhash3_32_gc(\n                JSON.stringify([componentKeyPath, null, actionStateHookIndex]),\n                0\n              )),\n        postbackKey === nextPostbackStateKey &&\n          ((actionStateMatchingIndex = actionStateHookIndex),\n          (initialState = request[0])));\n    }\n    var boundAction = action.bind(null, initialState);\n    action = function (payload) {\n      boundAction(payload);\n    };\n    \"function\" === typeof boundAction.$$FORM_ACTION &&\n      (action.$$FORM_ACTION = function (prefix) {\n        prefix = boundAction.$$FORM_ACTION(prefix);\n        void 0 !== permalink &&\n          ((permalink += \"\"), (prefix.action = permalink));\n        var formData = prefix.data;\n        formData &&\n          (null === nextPostbackStateKey &&\n            (nextPostbackStateKey =\n              void 0 !== permalink\n                ? \"p\" + permalink\n                : \"k\" +\n                  murmurhash3_32_gc(\n                    JSON.stringify([\n                      componentKeyPath,\n                      null,\n                      actionStateHookIndex\n                    ]),\n                    0\n                  )),\n          formData.append(\"$ACTION_KEY\", nextPostbackStateKey));\n        return prefix;\n      });\n    return [initialState, action, !1];\n  }\n  var boundAction$22 = action.bind(null, initialState);\n  return [\n    initialState,\n    function (payload) {\n      boundAction$22(payload);\n    },\n    !1\n  ];\n}\nfunction unwrapThenable(thenable) {\n  var index = thenableIndexCounter;\n  thenableIndexCounter += 1;\n  null === thenableState && (thenableState = []);\n  return trackUsedThenable(thenableState, thenable, index);\n}\nfunction unsupportedRefresh() {\n  throw Error(\"Cache cannot be refreshed during server rendering.\");\n}\nfunction noop$1() {}\nvar HooksDispatcher = {\n    readContext: function (context) {\n      return context._currentValue;\n    },\n    use: function (usable) {\n      if (null !== usable && \"object\" === typeof usable) {\n        if (\"function\" === typeof usable.then) return unwrapThenable(usable);\n        if (usable.$$typeof === REACT_CONTEXT_TYPE) return usable._currentValue;\n      }\n      throw Error(\"An unsupported type was passed to use(): \" + String(usable));\n    },\n    useContext: function (context) {\n      resolveCurrentlyRenderingComponent();\n      return context._currentValue;\n    },\n    useMemo: useMemo,\n    useReducer: useReducer,\n    useRef: function (initialValue) {\n      currentlyRenderingComponent = resolveCurrentlyRenderingComponent();\n      workInProgressHook = createWorkInProgressHook();\n      var previousRef = workInProgressHook.memoizedState;\n      return null === previousRef\n        ? ((initialValue = { current: initialValue }),\n          (workInProgressHook.memoizedState = initialValue))\n        : previousRef;\n    },\n    useState: function (initialState) {\n      return useReducer(basicStateReducer, initialState);\n    },\n    useInsertionEffect: noop$1,\n    useLayoutEffect: noop$1,\n    useCallback: function (callback, deps) {\n      return useMemo(function () {\n        return callback;\n      }, deps);\n    },\n    useImperativeHandle: noop$1,\n    useEffect: noop$1,\n    useDebugValue: noop$1,\n    useDeferredValue: function (value, initialValue) {\n      resolveCurrentlyRenderingComponent();\n      return void 0 !== initialValue ? initialValue : value;\n    },\n    useTransition: function () {\n      resolveCurrentlyRenderingComponent();\n      return [!1, unsupportedStartTransition];\n    },\n    useId: function () {\n      var JSCompiler_inline_result = currentlyRenderingTask.treeContext;\n      var overflow = JSCompiler_inline_result.overflow;\n      JSCompiler_inline_result = JSCompiler_inline_result.id;\n      JSCompiler_inline_result =\n        (\n          JSCompiler_inline_result &\n          ~(1 << (32 - clz32(JSCompiler_inline_result) - 1))\n        ).toString(32) + overflow;\n      var resumableState = currentResumableState;\n      if (null === resumableState)\n        throw Error(\n          \"Invalid hook call. Hooks can only be called inside of the body of a function component.\"\n        );\n      overflow = localIdCounter++;\n      JSCompiler_inline_result =\n        \"\\u00ab\" + resumableState.idPrefix + \"R\" + JSCompiler_inline_result;\n      0 < overflow && (JSCompiler_inline_result += \"H\" + overflow.toString(32));\n      return JSCompiler_inline_result + \"\\u00bb\";\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      if (void 0 === getServerSnapshot)\n        throw Error(\n          \"Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.\"\n        );\n      return getServerSnapshot();\n    },\n    useOptimistic: function (passthrough) {\n      resolveCurrentlyRenderingComponent();\n      return [passthrough, unsupportedSetOptimisticState];\n    },\n    useActionState: useActionState,\n    useFormState: useActionState,\n    useHostTransitionStatus: function () {\n      resolveCurrentlyRenderingComponent();\n      return sharedNotPendingObject;\n    },\n    useMemoCache: function (size) {\n      for (var data = Array(size), i = 0; i < size; i++)\n        data[i] = REACT_MEMO_CACHE_SENTINEL;\n      return data;\n    },\n    useCacheRefresh: function () {\n      return unsupportedRefresh;\n    }\n  },\n  currentResumableState = null,\n  DefaultAsyncDispatcher = {\n    getCacheForType: function () {\n      throw Error(\"Not implemented.\");\n    }\n  };\nfunction prepareStackTrace(error, structuredStackTrace) {\n  error = (error.name || \"Error\") + \": \" + (error.message || \"\");\n  for (var i = 0; i < structuredStackTrace.length; i++)\n    error += \"\\n    at \" + structuredStackTrace[i].toString();\n  return error;\n}\nvar prefix, suffix;\nfunction describeBuiltInComponentFrame(name) {\n  if (void 0 === prefix)\n    try {\n      throw Error();\n    } catch (x) {\n      var match = x.stack.trim().match(/\\n( *(at )?)/);\n      prefix = (match && match[1]) || \"\";\n      suffix =\n        -1 < x.stack.indexOf(\"\\n    at\")\n          ? \" (<anonymous>)\"\n          : -1 < x.stack.indexOf(\"@\")\n            ? \"@unknown:0:0\"\n            : \"\";\n    }\n  return \"\\n\" + prefix + name + suffix;\n}\nvar reentry = !1;\nfunction describeNativeComponentFrame(fn, construct) {\n  if (!fn || reentry) return \"\";\n  reentry = !0;\n  var previousPrepareStackTrace = Error.prepareStackTrace;\n  Error.prepareStackTrace = prepareStackTrace;\n  try {\n    var RunInRootFrame = {\n      DetermineComponentFrameRoot: function () {\n        try {\n          if (construct) {\n            var Fake = function () {\n              throw Error();\n            };\n            Object.defineProperty(Fake.prototype, \"props\", {\n              set: function () {\n                throw Error();\n              }\n            });\n            if (\"object\" === typeof Reflect && Reflect.construct) {\n              try {\n                Reflect.construct(Fake, []);\n              } catch (x) {\n                var control = x;\n              }\n              Reflect.construct(fn, [], Fake);\n            } else {\n              try {\n                Fake.call();\n              } catch (x$24) {\n                control = x$24;\n              }\n              fn.call(Fake.prototype);\n            }\n          } else {\n            try {\n              throw Error();\n            } catch (x$25) {\n              control = x$25;\n            }\n            (Fake = fn()) &&\n              \"function\" === typeof Fake.catch &&\n              Fake.catch(function () {});\n          }\n        } catch (sample) {\n          if (sample && control && \"string\" === typeof sample.stack)\n            return [sample.stack, control.stack];\n        }\n        return [null, null];\n      }\n    };\n    RunInRootFrame.DetermineComponentFrameRoot.displayName =\n      \"DetermineComponentFrameRoot\";\n    var namePropDescriptor = Object.getOwnPropertyDescriptor(\n      RunInRootFrame.DetermineComponentFrameRoot,\n      \"name\"\n    );\n    namePropDescriptor &&\n      namePropDescriptor.configurable &&\n      Object.defineProperty(\n        RunInRootFrame.DetermineComponentFrameRoot,\n        \"name\",\n        { value: \"DetermineComponentFrameRoot\" }\n      );\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n      sampleStack = _RunInRootFrame$Deter[0],\n      controlStack = _RunInRootFrame$Deter[1];\n    if (sampleStack && controlStack) {\n      var sampleLines = sampleStack.split(\"\\n\"),\n        controlLines = controlStack.split(\"\\n\");\n      for (\n        namePropDescriptor = RunInRootFrame = 0;\n        RunInRootFrame < sampleLines.length &&\n        !sampleLines[RunInRootFrame].includes(\"DetermineComponentFrameRoot\");\n\n      )\n        RunInRootFrame++;\n      for (\n        ;\n        namePropDescriptor < controlLines.length &&\n        !controlLines[namePropDescriptor].includes(\n          \"DetermineComponentFrameRoot\"\n        );\n\n      )\n        namePropDescriptor++;\n      if (\n        RunInRootFrame === sampleLines.length ||\n        namePropDescriptor === controlLines.length\n      )\n        for (\n          RunInRootFrame = sampleLines.length - 1,\n            namePropDescriptor = controlLines.length - 1;\n          1 <= RunInRootFrame &&\n          0 <= namePropDescriptor &&\n          sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor];\n\n        )\n          namePropDescriptor--;\n      for (\n        ;\n        1 <= RunInRootFrame && 0 <= namePropDescriptor;\n        RunInRootFrame--, namePropDescriptor--\n      )\n        if (sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {\n          if (1 !== RunInRootFrame || 1 !== namePropDescriptor) {\n            do\n              if (\n                (RunInRootFrame--,\n                namePropDescriptor--,\n                0 > namePropDescriptor ||\n                  sampleLines[RunInRootFrame] !==\n                    controlLines[namePropDescriptor])\n              ) {\n                var frame =\n                  \"\\n\" +\n                  sampleLines[RunInRootFrame].replace(\" at new \", \" at \");\n                fn.displayName &&\n                  frame.includes(\"<anonymous>\") &&\n                  (frame = frame.replace(\"<anonymous>\", fn.displayName));\n                return frame;\n              }\n            while (1 <= RunInRootFrame && 0 <= namePropDescriptor);\n          }\n          break;\n        }\n    }\n  } finally {\n    (reentry = !1), (Error.prepareStackTrace = previousPrepareStackTrace);\n  }\n  return (previousPrepareStackTrace = fn ? fn.displayName || fn.name : \"\")\n    ? describeBuiltInComponentFrame(previousPrepareStackTrace)\n    : \"\";\n}\nfunction describeComponentStackByType(type) {\n  if (\"string\" === typeof type) return describeBuiltInComponentFrame(type);\n  if (\"function\" === typeof type)\n    return type.prototype && type.prototype.isReactComponent\n      ? describeNativeComponentFrame(type, !0)\n      : describeNativeComponentFrame(type, !1);\n  if (\"object\" === typeof type && null !== type) {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeNativeComponentFrame(type.render, !1);\n      case REACT_MEMO_TYPE:\n        return describeNativeComponentFrame(type.type, !1);\n      case REACT_LAZY_TYPE:\n        var lazyComponent = type,\n          payload = lazyComponent._payload;\n        lazyComponent = lazyComponent._init;\n        try {\n          type = lazyComponent(payload);\n        } catch (x) {\n          return describeBuiltInComponentFrame(\"Lazy\");\n        }\n        return describeComponentStackByType(type);\n    }\n    if (\"string\" === typeof type.name)\n      return (\n        (payload = type.env),\n        describeBuiltInComponentFrame(\n          type.name + (payload ? \" [\" + payload + \"]\" : \"\")\n        )\n      );\n  }\n  switch (type) {\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame(\"SuspenseList\");\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame(\"Suspense\");\n  }\n  return \"\";\n}\nfunction defaultErrorHandler(error) {\n  if (\n    \"object\" === typeof error &&\n    null !== error &&\n    \"string\" === typeof error.environmentName\n  ) {\n    var JSCompiler_inline_result = error.environmentName;\n    error = [error].slice(0);\n    \"string\" === typeof error[0]\n      ? error.splice(\n          0,\n          1,\n          \"\\u001b[0m\\u001b[7m%c%s\\u001b[0m%c \" + error[0],\n          \"background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px\",\n          \" \" + JSCompiler_inline_result + \" \",\n          \"\"\n        )\n      : error.splice(\n          0,\n          0,\n          \"\\u001b[0m\\u001b[7m%c%s\\u001b[0m%c \",\n          \"background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px\",\n          \" \" + JSCompiler_inline_result + \" \",\n          \"\"\n        );\n    error.unshift(console);\n    JSCompiler_inline_result = bind.apply(console.error, error);\n    JSCompiler_inline_result();\n  } else console.error(error);\n  return null;\n}\nfunction noop() {}\nfunction RequestInstance(\n  resumableState,\n  renderState,\n  rootFormatContext,\n  progressiveChunkSize,\n  onError,\n  onAllReady,\n  onShellReady,\n  onShellError,\n  onFatalError,\n  onPostpone,\n  formState\n) {\n  var abortSet = new Set();\n  this.destination = null;\n  this.flushScheduled = !1;\n  this.resumableState = resumableState;\n  this.renderState = renderState;\n  this.rootFormatContext = rootFormatContext;\n  this.progressiveChunkSize =\n    void 0 === progressiveChunkSize ? 12800 : progressiveChunkSize;\n  this.status = 10;\n  this.fatalError = null;\n  this.pendingRootTasks = this.allPendingTasks = this.nextSegmentId = 0;\n  this.completedPreambleSegments = this.completedRootSegment = null;\n  this.abortableTasks = abortSet;\n  this.pingedTasks = [];\n  this.clientRenderedBoundaries = [];\n  this.completedBoundaries = [];\n  this.partialBoundaries = [];\n  this.trackedPostpones = null;\n  this.onError = void 0 === onError ? defaultErrorHandler : onError;\n  this.onPostpone = void 0 === onPostpone ? noop : onPostpone;\n  this.onAllReady = void 0 === onAllReady ? noop : onAllReady;\n  this.onShellReady = void 0 === onShellReady ? noop : onShellReady;\n  this.onShellError = void 0 === onShellError ? noop : onShellError;\n  this.onFatalError = void 0 === onFatalError ? noop : onFatalError;\n  this.formState = void 0 === formState ? null : formState;\n}\nfunction createRequest(\n  children,\n  resumableState,\n  renderState,\n  rootFormatContext,\n  progressiveChunkSize,\n  onError,\n  onAllReady,\n  onShellReady,\n  onShellError,\n  onFatalError,\n  onPostpone,\n  formState\n) {\n  resumableState = new RequestInstance(\n    resumableState,\n    renderState,\n    rootFormatContext,\n    progressiveChunkSize,\n    onError,\n    onAllReady,\n    onShellReady,\n    onShellError,\n    onFatalError,\n    onPostpone,\n    formState\n  );\n  renderState = createPendingSegment(\n    resumableState,\n    0,\n    null,\n    rootFormatContext,\n    !1,\n    !1\n  );\n  renderState.parentFlushed = !0;\n  children = createRenderTask(\n    resumableState,\n    null,\n    children,\n    -1,\n    null,\n    renderState,\n    null,\n    null,\n    resumableState.abortableTasks,\n    null,\n    rootFormatContext,\n    null,\n    emptyTreeContext,\n    null,\n    !1\n  );\n  pushComponentStack(children);\n  resumableState.pingedTasks.push(children);\n  return resumableState;\n}\nfunction createPrerenderRequest(\n  children,\n  resumableState,\n  renderState,\n  rootFormatContext,\n  progressiveChunkSize,\n  onError,\n  onAllReady,\n  onShellReady,\n  onShellError,\n  onFatalError,\n  onPostpone\n) {\n  children = createRequest(\n    children,\n    resumableState,\n    renderState,\n    rootFormatContext,\n    progressiveChunkSize,\n    onError,\n    onAllReady,\n    onShellReady,\n    onShellError,\n    onFatalError,\n    onPostpone,\n    void 0\n  );\n  children.trackedPostpones = {\n    workingMap: new Map(),\n    rootNodes: [],\n    rootSlots: null\n  };\n  return children;\n}\nvar currentRequest = null;\nfunction resolveRequest() {\n  if (currentRequest) return currentRequest;\n  if (supportsRequestStorage) {\n    var store = requestStorage.getStore();\n    if (store) return store;\n  }\n  return null;\n}\nfunction pingTask(request, task) {\n  request.pingedTasks.push(task);\n  1 === request.pingedTasks.length &&\n    ((request.flushScheduled = null !== request.destination),\n    null !== request.trackedPostpones || 10 === request.status\n      ? scheduleMicrotask(function () {\n          return performWork(request);\n        })\n      : setTimeoutOrImmediate(function () {\n          return performWork(request);\n        }, 0));\n}\nfunction createSuspenseBoundary(\n  request,\n  fallbackAbortableTasks,\n  contentPreamble,\n  fallbackPreamble\n) {\n  return {\n    status: 0,\n    rootSegmentID: -1,\n    parentFlushed: !1,\n    pendingTasks: 0,\n    completedSegments: [],\n    byteSize: 0,\n    fallbackAbortableTasks: fallbackAbortableTasks,\n    errorDigest: null,\n    contentState: createHoistableState(),\n    fallbackState: createHoistableState(),\n    contentPreamble: contentPreamble,\n    fallbackPreamble: fallbackPreamble,\n    trackedContentKeyPath: null,\n    trackedFallbackNode: null\n  };\n}\nfunction createRenderTask(\n  request,\n  thenableState,\n  node,\n  childIndex,\n  blockedBoundary,\n  blockedSegment,\n  blockedPreamble,\n  hoistableState,\n  abortSet,\n  keyPath,\n  formatContext,\n  context,\n  treeContext,\n  componentStack,\n  isFallback\n) {\n  request.allPendingTasks++;\n  null === blockedBoundary\n    ? request.pendingRootTasks++\n    : blockedBoundary.pendingTasks++;\n  var task = {\n    replay: null,\n    node: node,\n    childIndex: childIndex,\n    ping: function () {\n      return pingTask(request, task);\n    },\n    blockedBoundary: blockedBoundary,\n    blockedSegment: blockedSegment,\n    blockedPreamble: blockedPreamble,\n    hoistableState: hoistableState,\n    abortSet: abortSet,\n    keyPath: keyPath,\n    formatContext: formatContext,\n    context: context,\n    treeContext: treeContext,\n    componentStack: componentStack,\n    thenableState: thenableState,\n    isFallback: isFallback\n  };\n  abortSet.add(task);\n  return task;\n}\nfunction createReplayTask(\n  request,\n  thenableState,\n  replay,\n  node,\n  childIndex,\n  blockedBoundary,\n  hoistableState,\n  abortSet,\n  keyPath,\n  formatContext,\n  context,\n  treeContext,\n  componentStack,\n  isFallback\n) {\n  request.allPendingTasks++;\n  null === blockedBoundary\n    ? request.pendingRootTasks++\n    : blockedBoundary.pendingTasks++;\n  replay.pendingTasks++;\n  var task = {\n    replay: replay,\n    node: node,\n    childIndex: childIndex,\n    ping: function () {\n      return pingTask(request, task);\n    },\n    blockedBoundary: blockedBoundary,\n    blockedSegment: null,\n    blockedPreamble: null,\n    hoistableState: hoistableState,\n    abortSet: abortSet,\n    keyPath: keyPath,\n    formatContext: formatContext,\n    context: context,\n    treeContext: treeContext,\n    componentStack: componentStack,\n    thenableState: thenableState,\n    isFallback: isFallback\n  };\n  abortSet.add(task);\n  return task;\n}\nfunction createPendingSegment(\n  request,\n  index,\n  boundary,\n  parentFormatContext,\n  lastPushedText,\n  textEmbedded\n) {\n  return {\n    status: 0,\n    parentFlushed: !1,\n    id: -1,\n    index: index,\n    chunks: [],\n    children: [],\n    preambleChildren: [],\n    parentFormatContext: parentFormatContext,\n    boundary: boundary,\n    lastPushedText: lastPushedText,\n    textEmbedded: textEmbedded\n  };\n}\nfunction pushComponentStack(task) {\n  var node = task.node;\n  if (\"object\" === typeof node && null !== node)\n    switch (node.$$typeof) {\n      case REACT_ELEMENT_TYPE:\n        task.componentStack = { parent: task.componentStack, type: node.type };\n    }\n}\nfunction getThrownInfo(node$jscomp$0) {\n  var errorInfo = {};\n  node$jscomp$0 &&\n    Object.defineProperty(errorInfo, \"componentStack\", {\n      configurable: !0,\n      enumerable: !0,\n      get: function () {\n        try {\n          var info = \"\",\n            node = node$jscomp$0;\n          do\n            (info += describeComponentStackByType(node.type)),\n              (node = node.parent);\n          while (node);\n          var JSCompiler_inline_result = info;\n        } catch (x) {\n          JSCompiler_inline_result =\n            \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\n        }\n        Object.defineProperty(errorInfo, \"componentStack\", {\n          value: JSCompiler_inline_result\n        });\n        return JSCompiler_inline_result;\n      }\n    });\n  return errorInfo;\n}\nfunction logRecoverableError(request, error, errorInfo) {\n  request = request.onError;\n  error = request(error, errorInfo);\n  if (null == error || \"string\" === typeof error) return error;\n}\nfunction fatalError(request, error) {\n  var onShellError = request.onShellError,\n    onFatalError = request.onFatalError;\n  onShellError(error);\n  onFatalError(error);\n  null !== request.destination\n    ? ((request.status = 14), closeWithError(request.destination, error))\n    : ((request.status = 13), (request.fatalError = error));\n}\nfunction renderWithHooks(request, task, keyPath, Component, props, secondArg) {\n  var prevThenableState = task.thenableState;\n  task.thenableState = null;\n  currentlyRenderingComponent = {};\n  currentlyRenderingTask = task;\n  currentlyRenderingRequest = request;\n  currentlyRenderingKeyPath = keyPath;\n  actionStateCounter = localIdCounter = 0;\n  actionStateMatchingIndex = -1;\n  thenableIndexCounter = 0;\n  thenableState = prevThenableState;\n  for (request = Component(props, secondArg); didScheduleRenderPhaseUpdate; )\n    (didScheduleRenderPhaseUpdate = !1),\n      (actionStateCounter = localIdCounter = 0),\n      (actionStateMatchingIndex = -1),\n      (thenableIndexCounter = 0),\n      (numberOfReRenders += 1),\n      (workInProgressHook = null),\n      (request = Component(props, secondArg));\n  resetHooksState();\n  return request;\n}\nfunction finishFunctionComponent(\n  request,\n  task,\n  keyPath,\n  children,\n  hasId,\n  actionStateCount,\n  actionStateMatchingIndex\n) {\n  var didEmitActionStateMarkers = !1;\n  if (0 !== actionStateCount && null !== request.formState) {\n    var segment = task.blockedSegment;\n    if (null !== segment) {\n      didEmitActionStateMarkers = !0;\n      segment = segment.chunks;\n      for (var i = 0; i < actionStateCount; i++)\n        i === actionStateMatchingIndex\n          ? segment.push(formStateMarkerIsMatching)\n          : segment.push(formStateMarkerIsNotMatching);\n    }\n  }\n  actionStateCount = task.keyPath;\n  task.keyPath = keyPath;\n  hasId\n    ? ((keyPath = task.treeContext),\n      (task.treeContext = pushTreeContext(keyPath, 1, 0)),\n      renderNode(request, task, children, -1),\n      (task.treeContext = keyPath))\n    : didEmitActionStateMarkers\n      ? renderNode(request, task, children, -1)\n      : renderNodeDestructive(request, task, children, -1);\n  task.keyPath = actionStateCount;\n}\nfunction renderElement(request, task, keyPath, type, props, ref) {\n  if (\"function\" === typeof type)\n    if (type.prototype && type.prototype.isReactComponent) {\n      var newProps = props;\n      if (\"ref\" in props) {\n        newProps = {};\n        for (var propName in props)\n          \"ref\" !== propName && (newProps[propName] = props[propName]);\n      }\n      var defaultProps = type.defaultProps;\n      if (defaultProps) {\n        newProps === props && (newProps = assign({}, newProps, props));\n        for (var propName$33 in defaultProps)\n          void 0 === newProps[propName$33] &&\n            (newProps[propName$33] = defaultProps[propName$33]);\n      }\n      props = newProps;\n      newProps = emptyContextObject;\n      defaultProps = type.contextType;\n      \"object\" === typeof defaultProps &&\n        null !== defaultProps &&\n        (newProps = defaultProps._currentValue);\n      newProps = new type(props, newProps);\n      var initialState = void 0 !== newProps.state ? newProps.state : null;\n      newProps.updater = classComponentUpdater;\n      newProps.props = props;\n      newProps.state = initialState;\n      defaultProps = { queue: [], replace: !1 };\n      newProps._reactInternals = defaultProps;\n      ref = type.contextType;\n      newProps.context =\n        \"object\" === typeof ref && null !== ref\n          ? ref._currentValue\n          : emptyContextObject;\n      ref = type.getDerivedStateFromProps;\n      \"function\" === typeof ref &&\n        ((ref = ref(props, initialState)),\n        (initialState =\n          null === ref || void 0 === ref\n            ? initialState\n            : assign({}, initialState, ref)),\n        (newProps.state = initialState));\n      if (\n        \"function\" !== typeof type.getDerivedStateFromProps &&\n        \"function\" !== typeof newProps.getSnapshotBeforeUpdate &&\n        (\"function\" === typeof newProps.UNSAFE_componentWillMount ||\n          \"function\" === typeof newProps.componentWillMount)\n      )\n        if (\n          ((type = newProps.state),\n          \"function\" === typeof newProps.componentWillMount &&\n            newProps.componentWillMount(),\n          \"function\" === typeof newProps.UNSAFE_componentWillMount &&\n            newProps.UNSAFE_componentWillMount(),\n          type !== newProps.state &&\n            classComponentUpdater.enqueueReplaceState(\n              newProps,\n              newProps.state,\n              null\n            ),\n          null !== defaultProps.queue && 0 < defaultProps.queue.length)\n        )\n          if (\n            ((type = defaultProps.queue),\n            (ref = defaultProps.replace),\n            (defaultProps.queue = null),\n            (defaultProps.replace = !1),\n            ref && 1 === type.length)\n          )\n            newProps.state = type[0];\n          else {\n            defaultProps = ref ? type[0] : newProps.state;\n            initialState = !0;\n            for (ref = ref ? 1 : 0; ref < type.length; ref++)\n              (propName$33 = type[ref]),\n                (propName$33 =\n                  \"function\" === typeof propName$33\n                    ? propName$33.call(newProps, defaultProps, props, void 0)\n                    : propName$33),\n                null != propName$33 &&\n                  (initialState\n                    ? ((initialState = !1),\n                      (defaultProps = assign({}, defaultProps, propName$33)))\n                    : assign(defaultProps, propName$33));\n            newProps.state = defaultProps;\n          }\n        else defaultProps.queue = null;\n      type = newProps.render();\n      if (12 === request.status) throw null;\n      props = task.keyPath;\n      task.keyPath = keyPath;\n      renderNodeDestructive(request, task, type, -1);\n      task.keyPath = props;\n    } else {\n      type = renderWithHooks(request, task, keyPath, type, props, void 0);\n      if (12 === request.status) throw null;\n      finishFunctionComponent(\n        request,\n        task,\n        keyPath,\n        type,\n        0 !== localIdCounter,\n        actionStateCounter,\n        actionStateMatchingIndex\n      );\n    }\n  else if (\"string\" === typeof type)\n    if (((newProps = task.blockedSegment), null === newProps))\n      (newProps = props.children),\n        (defaultProps = task.formatContext),\n        (initialState = task.keyPath),\n        (task.formatContext = getChildFormatContext(defaultProps, type, props)),\n        (task.keyPath = keyPath),\n        renderNode(request, task, newProps, -1),\n        (task.formatContext = defaultProps),\n        (task.keyPath = initialState);\n    else {\n      ref = pushStartInstance(\n        newProps.chunks,\n        type,\n        props,\n        request.resumableState,\n        request.renderState,\n        task.blockedPreamble,\n        task.hoistableState,\n        task.formatContext,\n        newProps.lastPushedText,\n        task.isFallback\n      );\n      newProps.lastPushedText = !1;\n      defaultProps = task.formatContext;\n      initialState = task.keyPath;\n      task.keyPath = keyPath;\n      3 ===\n      (task.formatContext = getChildFormatContext(defaultProps, type, props))\n        .insertionMode\n        ? ((keyPath = createPendingSegment(\n            request,\n            0,\n            null,\n            task.formatContext,\n            !1,\n            !1\n          )),\n          newProps.preambleChildren.push(keyPath),\n          (keyPath = createRenderTask(\n            request,\n            null,\n            ref,\n            -1,\n            task.blockedBoundary,\n            keyPath,\n            task.blockedPreamble,\n            task.hoistableState,\n            request.abortableTasks,\n            task.keyPath,\n            task.formatContext,\n            task.context,\n            task.treeContext,\n            task.componentStack,\n            task.isFallback\n          )),\n          pushComponentStack(keyPath),\n          request.pingedTasks.push(keyPath))\n        : renderNode(request, task, ref, -1);\n      task.formatContext = defaultProps;\n      task.keyPath = initialState;\n      a: {\n        task = newProps.chunks;\n        request = request.resumableState;\n        switch (type) {\n          case \"title\":\n          case \"style\":\n          case \"script\":\n          case \"area\":\n          case \"base\":\n          case \"br\":\n          case \"col\":\n          case \"embed\":\n          case \"hr\":\n          case \"img\":\n          case \"input\":\n          case \"keygen\":\n          case \"link\":\n          case \"meta\":\n          case \"param\":\n          case \"source\":\n          case \"track\":\n          case \"wbr\":\n            break a;\n          case \"body\":\n            if (1 >= defaultProps.insertionMode) {\n              request.hasBody = !0;\n              break a;\n            }\n            break;\n          case \"html\":\n            if (0 === defaultProps.insertionMode) {\n              request.hasHtml = !0;\n              break a;\n            }\n            break;\n          case \"head\":\n            if (1 >= defaultProps.insertionMode) break a;\n        }\n        task.push(endChunkForTag(type));\n      }\n      newProps.lastPushedText = !1;\n    }\n  else {\n    switch (type) {\n      case REACT_LEGACY_HIDDEN_TYPE:\n      case REACT_STRICT_MODE_TYPE:\n      case REACT_PROFILER_TYPE:\n      case REACT_FRAGMENT_TYPE:\n        type = task.keyPath;\n        task.keyPath = keyPath;\n        renderNodeDestructive(request, task, props.children, -1);\n        task.keyPath = type;\n        return;\n      case REACT_ACTIVITY_TYPE:\n        type = task.blockedSegment;\n        if (null === type)\n          \"hidden\" !== props.mode &&\n            ((type = task.keyPath),\n            (task.keyPath = keyPath),\n            renderNode(request, task, props.children, -1),\n            (task.keyPath = type));\n        else {\n          type.chunks.push(startActivityBoundary);\n          type.lastPushedText = !1;\n          \"hidden\" !== props.mode &&\n            ((newProps = task.keyPath),\n            (task.keyPath = keyPath),\n            renderNode(request, task, props.children, -1),\n            (task.keyPath = newProps));\n          request = type.chunks;\n          if ((task = task.blockedPreamble))\n            (task = task.contribution),\n              0 !== task &&\n                request.push(\n                  boundaryPreambleContributionChunkStart,\n                  stringToChunk(\"\" + task),\n                  boundaryPreambleContributionChunkEnd\n                );\n          request.push(endActivityBoundary);\n          type.lastPushedText = !1;\n        }\n        return;\n      case REACT_SUSPENSE_LIST_TYPE:\n        type = task.keyPath;\n        task.keyPath = keyPath;\n        renderNodeDestructive(request, task, props.children, -1);\n        task.keyPath = type;\n        return;\n      case REACT_VIEW_TRANSITION_TYPE:\n      case REACT_SCOPE_TYPE:\n        throw Error(\"ReactDOMServer does not yet support scope components.\");\n      case REACT_SUSPENSE_TYPE:\n        a: if (null !== task.replay) {\n          type = task.keyPath;\n          task.keyPath = keyPath;\n          keyPath = props.children;\n          try {\n            renderNode(request, task, keyPath, -1);\n          } finally {\n            task.keyPath = type;\n          }\n        } else {\n          type = task.keyPath;\n          var parentBoundary = task.blockedBoundary;\n          ref = task.blockedPreamble;\n          var parentHoistableState = task.hoistableState;\n          propName$33 = task.blockedSegment;\n          propName = props.fallback;\n          props = props.children;\n          var fallbackAbortSet = new Set();\n          var newBoundary =\n            2 > task.formatContext.insertionMode\n              ? createSuspenseBoundary(\n                  request,\n                  fallbackAbortSet,\n                  createPreambleState(),\n                  createPreambleState()\n                )\n              : createSuspenseBoundary(request, fallbackAbortSet, null, null);\n          null !== request.trackedPostpones &&\n            (newBoundary.trackedContentKeyPath = keyPath);\n          var boundarySegment = createPendingSegment(\n            request,\n            propName$33.chunks.length,\n            newBoundary,\n            task.formatContext,\n            !1,\n            !1\n          );\n          propName$33.children.push(boundarySegment);\n          propName$33.lastPushedText = !1;\n          var contentRootSegment = createPendingSegment(\n            request,\n            0,\n            null,\n            task.formatContext,\n            !1,\n            !1\n          );\n          contentRootSegment.parentFlushed = !0;\n          if (null !== request.trackedPostpones) {\n            newProps = [keyPath[0], \"Suspense Fallback\", keyPath[2]];\n            defaultProps = [newProps[1], newProps[2], [], null];\n            request.trackedPostpones.workingMap.set(newProps, defaultProps);\n            newBoundary.trackedFallbackNode = defaultProps;\n            task.blockedSegment = boundarySegment;\n            task.blockedPreamble = newBoundary.fallbackPreamble;\n            task.keyPath = newProps;\n            boundarySegment.status = 6;\n            try {\n              renderNode(request, task, propName, -1),\n                boundarySegment.lastPushedText &&\n                  boundarySegment.textEmbedded &&\n                  boundarySegment.chunks.push(textSeparator),\n                (boundarySegment.status = 1);\n            } catch (thrownValue) {\n              throw (\n                ((boundarySegment.status = 12 === request.status ? 3 : 4),\n                thrownValue)\n              );\n            } finally {\n              (task.blockedSegment = propName$33),\n                (task.blockedPreamble = ref),\n                (task.keyPath = type);\n            }\n            task = createRenderTask(\n              request,\n              null,\n              props,\n              -1,\n              newBoundary,\n              contentRootSegment,\n              newBoundary.contentPreamble,\n              newBoundary.contentState,\n              task.abortSet,\n              keyPath,\n              task.formatContext,\n              task.context,\n              task.treeContext,\n              task.componentStack,\n              task.isFallback\n            );\n            pushComponentStack(task);\n            request.pingedTasks.push(task);\n          } else {\n            task.blockedBoundary = newBoundary;\n            task.blockedPreamble = newBoundary.contentPreamble;\n            task.hoistableState = newBoundary.contentState;\n            task.blockedSegment = contentRootSegment;\n            task.keyPath = keyPath;\n            contentRootSegment.status = 6;\n            try {\n              if (\n                (renderNode(request, task, props, -1),\n                contentRootSegment.lastPushedText &&\n                  contentRootSegment.textEmbedded &&\n                  contentRootSegment.chunks.push(textSeparator),\n                (contentRootSegment.status = 1),\n                queueCompletedSegment(newBoundary, contentRootSegment),\n                0 === newBoundary.pendingTasks && 0 === newBoundary.status)\n              ) {\n                newBoundary.status = 1;\n                0 === request.pendingRootTasks &&\n                  task.blockedPreamble &&\n                  preparePreamble(request);\n                break a;\n              }\n            } catch (thrownValue$28) {\n              (newBoundary.status = 4),\n                12 === request.status\n                  ? ((contentRootSegment.status = 3),\n                    (newProps = request.fatalError))\n                  : ((contentRootSegment.status = 4),\n                    (newProps = thrownValue$28)),\n                (defaultProps = getThrownInfo(task.componentStack)),\n                (initialState = logRecoverableError(\n                  request,\n                  newProps,\n                  defaultProps\n                )),\n                (newBoundary.errorDigest = initialState),\n                untrackBoundary(request, newBoundary);\n            } finally {\n              (task.blockedBoundary = parentBoundary),\n                (task.blockedPreamble = ref),\n                (task.hoistableState = parentHoistableState),\n                (task.blockedSegment = propName$33),\n                (task.keyPath = type);\n            }\n            task = createRenderTask(\n              request,\n              null,\n              propName,\n              -1,\n              parentBoundary,\n              boundarySegment,\n              newBoundary.fallbackPreamble,\n              newBoundary.fallbackState,\n              fallbackAbortSet,\n              [keyPath[0], \"Suspense Fallback\", keyPath[2]],\n              task.formatContext,\n              task.context,\n              task.treeContext,\n              task.componentStack,\n              !0\n            );\n            pushComponentStack(task);\n            request.pingedTasks.push(task);\n          }\n        }\n        return;\n    }\n    if (\"object\" === typeof type && null !== type)\n      switch (type.$$typeof) {\n        case REACT_FORWARD_REF_TYPE:\n          if (\"ref\" in props)\n            for (newBoundary in ((newProps = {}), props))\n              \"ref\" !== newBoundary &&\n                (newProps[newBoundary] = props[newBoundary]);\n          else newProps = props;\n          type = renderWithHooks(\n            request,\n            task,\n            keyPath,\n            type.render,\n            newProps,\n            ref\n          );\n          finishFunctionComponent(\n            request,\n            task,\n            keyPath,\n            type,\n            0 !== localIdCounter,\n            actionStateCounter,\n            actionStateMatchingIndex\n          );\n          return;\n        case REACT_MEMO_TYPE:\n          renderElement(request, task, keyPath, type.type, props, ref);\n          return;\n        case REACT_PROVIDER_TYPE:\n        case REACT_CONTEXT_TYPE:\n          defaultProps = props.children;\n          newProps = task.keyPath;\n          props = props.value;\n          initialState = type._currentValue;\n          type._currentValue = props;\n          ref = currentActiveSnapshot;\n          currentActiveSnapshot = type = {\n            parent: ref,\n            depth: null === ref ? 0 : ref.depth + 1,\n            context: type,\n            parentValue: initialState,\n            value: props\n          };\n          task.context = type;\n          task.keyPath = keyPath;\n          renderNodeDestructive(request, task, defaultProps, -1);\n          request = currentActiveSnapshot;\n          if (null === request)\n            throw Error(\n              \"Tried to pop a Context at the root of the app. This is a bug in React.\"\n            );\n          request.context._currentValue = request.parentValue;\n          request = currentActiveSnapshot = request.parent;\n          task.context = request;\n          task.keyPath = newProps;\n          return;\n        case REACT_CONSUMER_TYPE:\n          props = props.children;\n          type = props(type._context._currentValue);\n          props = task.keyPath;\n          task.keyPath = keyPath;\n          renderNodeDestructive(request, task, type, -1);\n          task.keyPath = props;\n          return;\n        case REACT_LAZY_TYPE:\n          newProps = type._init;\n          type = newProps(type._payload);\n          if (12 === request.status) throw null;\n          renderElement(request, task, keyPath, type, props, ref);\n          return;\n      }\n    throw Error(\n      \"Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: \" +\n        ((null == type ? type : typeof type) + \".\")\n    );\n  }\n}\nfunction resumeNode(request, task, segmentId, node, childIndex) {\n  var prevReplay = task.replay,\n    blockedBoundary = task.blockedBoundary,\n    resumedSegment = createPendingSegment(\n      request,\n      0,\n      null,\n      task.formatContext,\n      !1,\n      !1\n    );\n  resumedSegment.id = segmentId;\n  resumedSegment.parentFlushed = !0;\n  try {\n    (task.replay = null),\n      (task.blockedSegment = resumedSegment),\n      renderNode(request, task, node, childIndex),\n      (resumedSegment.status = 1),\n      null === blockedBoundary\n        ? (request.completedRootSegment = resumedSegment)\n        : (queueCompletedSegment(blockedBoundary, resumedSegment),\n          blockedBoundary.parentFlushed &&\n            request.partialBoundaries.push(blockedBoundary));\n  } finally {\n    (task.replay = prevReplay), (task.blockedSegment = null);\n  }\n}\nfunction renderNodeDestructive(request, task, node, childIndex) {\n  null !== task.replay && \"number\" === typeof task.replay.slots\n    ? resumeNode(request, task, task.replay.slots, node, childIndex)\n    : ((task.node = node),\n      (task.childIndex = childIndex),\n      (node = task.componentStack),\n      pushComponentStack(task),\n      retryNode(request, task),\n      (task.componentStack = node));\n}\nfunction retryNode(request, task) {\n  var node = task.node,\n    childIndex = task.childIndex;\n  if (null !== node) {\n    if (\"object\" === typeof node) {\n      switch (node.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          var type = node.type,\n            key = node.key,\n            props = node.props;\n          node = props.ref;\n          var ref = void 0 !== node ? node : null,\n            name = getComponentNameFromType(type),\n            keyOrIndex =\n              null == key ? (-1 === childIndex ? 0 : childIndex) : key;\n          key = [task.keyPath, name, keyOrIndex];\n          if (null !== task.replay)\n            a: {\n              var replay = task.replay;\n              childIndex = replay.nodes;\n              for (node = 0; node < childIndex.length; node++) {\n                var node$jscomp$0 = childIndex[node];\n                if (keyOrIndex === node$jscomp$0[1]) {\n                  if (4 === node$jscomp$0.length) {\n                    if (null !== name && name !== node$jscomp$0[0])\n                      throw Error(\n                        \"Expected the resume to render <\" +\n                          node$jscomp$0[0] +\n                          \"> in this slot but instead it rendered <\" +\n                          name +\n                          \">. The tree doesn't match so React will fallback to client rendering.\"\n                      );\n                    var childNodes = node$jscomp$0[2];\n                    name = node$jscomp$0[3];\n                    keyOrIndex = task.node;\n                    task.replay = {\n                      nodes: childNodes,\n                      slots: name,\n                      pendingTasks: 1\n                    };\n                    try {\n                      renderElement(request, task, key, type, props, ref);\n                      if (\n                        1 === task.replay.pendingTasks &&\n                        0 < task.replay.nodes.length\n                      )\n                        throw Error(\n                          \"Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering.\"\n                        );\n                      task.replay.pendingTasks--;\n                    } catch (x) {\n                      if (\n                        \"object\" === typeof x &&\n                        null !== x &&\n                        (x === SuspenseException ||\n                          \"function\" === typeof x.then)\n                      )\n                        throw (\n                          (task.node === keyOrIndex && (task.replay = replay),\n                          x)\n                        );\n                      task.replay.pendingTasks--;\n                      props = getThrownInfo(task.componentStack);\n                      key = task.blockedBoundary;\n                      type = x;\n                      props = logRecoverableError(request, type, props);\n                      abortRemainingReplayNodes(\n                        request,\n                        key,\n                        childNodes,\n                        name,\n                        type,\n                        props\n                      );\n                    }\n                    task.replay = replay;\n                  } else {\n                    if (type !== REACT_SUSPENSE_TYPE)\n                      throw Error(\n                        \"Expected the resume to render <Suspense> in this slot but instead it rendered <\" +\n                          (getComponentNameFromType(type) || \"Unknown\") +\n                          \">. The tree doesn't match so React will fallback to client rendering.\"\n                      );\n                    b: {\n                      replay = void 0;\n                      type = node$jscomp$0[5];\n                      ref = node$jscomp$0[2];\n                      name = node$jscomp$0[3];\n                      keyOrIndex =\n                        null === node$jscomp$0[4] ? [] : node$jscomp$0[4][2];\n                      node$jscomp$0 =\n                        null === node$jscomp$0[4] ? null : node$jscomp$0[4][3];\n                      var prevKeyPath = task.keyPath,\n                        previousReplaySet = task.replay,\n                        parentBoundary = task.blockedBoundary,\n                        parentHoistableState = task.hoistableState,\n                        content = props.children,\n                        fallback = props.fallback,\n                        fallbackAbortSet = new Set();\n                      props =\n                        2 > task.formatContext.insertionMode\n                          ? createSuspenseBoundary(\n                              request,\n                              fallbackAbortSet,\n                              createPreambleState(),\n                              createPreambleState()\n                            )\n                          : createSuspenseBoundary(\n                              request,\n                              fallbackAbortSet,\n                              null,\n                              null\n                            );\n                      props.parentFlushed = !0;\n                      props.rootSegmentID = type;\n                      task.blockedBoundary = props;\n                      task.hoistableState = props.contentState;\n                      task.keyPath = key;\n                      task.replay = {\n                        nodes: ref,\n                        slots: name,\n                        pendingTasks: 1\n                      };\n                      try {\n                        renderNode(request, task, content, -1);\n                        if (\n                          1 === task.replay.pendingTasks &&\n                          0 < task.replay.nodes.length\n                        )\n                          throw Error(\n                            \"Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering.\"\n                          );\n                        task.replay.pendingTasks--;\n                        if (0 === props.pendingTasks && 0 === props.status) {\n                          props.status = 1;\n                          request.completedBoundaries.push(props);\n                          break b;\n                        }\n                      } catch (error) {\n                        (props.status = 4),\n                          (childNodes = getThrownInfo(task.componentStack)),\n                          (replay = logRecoverableError(\n                            request,\n                            error,\n                            childNodes\n                          )),\n                          (props.errorDigest = replay),\n                          task.replay.pendingTasks--,\n                          request.clientRenderedBoundaries.push(props);\n                      } finally {\n                        (task.blockedBoundary = parentBoundary),\n                          (task.hoistableState = parentHoistableState),\n                          (task.replay = previousReplaySet),\n                          (task.keyPath = prevKeyPath);\n                      }\n                      task = createReplayTask(\n                        request,\n                        null,\n                        {\n                          nodes: keyOrIndex,\n                          slots: node$jscomp$0,\n                          pendingTasks: 0\n                        },\n                        fallback,\n                        -1,\n                        parentBoundary,\n                        props.fallbackState,\n                        fallbackAbortSet,\n                        [key[0], \"Suspense Fallback\", key[2]],\n                        task.formatContext,\n                        task.context,\n                        task.treeContext,\n                        task.componentStack,\n                        !0\n                      );\n                      pushComponentStack(task);\n                      request.pingedTasks.push(task);\n                    }\n                  }\n                  childIndex.splice(node, 1);\n                  break a;\n                }\n              }\n            }\n          else renderElement(request, task, key, type, props, ref);\n          return;\n        case REACT_PORTAL_TYPE:\n          throw Error(\n            \"Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.\"\n          );\n        case REACT_LAZY_TYPE:\n          childNodes = node._init;\n          node = childNodes(node._payload);\n          if (12 === request.status) throw null;\n          renderNodeDestructive(request, task, node, childIndex);\n          return;\n      }\n      if (isArrayImpl(node)) {\n        renderChildrenArray(request, task, node, childIndex);\n        return;\n      }\n      null === node || \"object\" !== typeof node\n        ? (childNodes = null)\n        : ((childNodes =\n            (MAYBE_ITERATOR_SYMBOL && node[MAYBE_ITERATOR_SYMBOL]) ||\n            node[\"@@iterator\"]),\n          (childNodes = \"function\" === typeof childNodes ? childNodes : null));\n      if (childNodes && (childNodes = childNodes.call(node))) {\n        node = childNodes.next();\n        if (!node.done) {\n          props = [];\n          do props.push(node.value), (node = childNodes.next());\n          while (!node.done);\n          renderChildrenArray(request, task, props, childIndex);\n        }\n        return;\n      }\n      if (\"function\" === typeof node.then)\n        return (\n          (task.thenableState = null),\n          renderNodeDestructive(request, task, unwrapThenable(node), childIndex)\n        );\n      if (node.$$typeof === REACT_CONTEXT_TYPE)\n        return renderNodeDestructive(\n          request,\n          task,\n          node._currentValue,\n          childIndex\n        );\n      childIndex = Object.prototype.toString.call(node);\n      throw Error(\n        \"Objects are not valid as a React child (found: \" +\n          (\"[object Object]\" === childIndex\n            ? \"object with keys {\" + Object.keys(node).join(\", \") + \"}\"\n            : childIndex) +\n          \"). If you meant to render a collection of children, use an array instead.\"\n      );\n    }\n    if (\"string\" === typeof node)\n      (childIndex = task.blockedSegment),\n        null !== childIndex &&\n          (childIndex.lastPushedText = pushTextInstance(\n            childIndex.chunks,\n            node,\n            request.renderState,\n            childIndex.lastPushedText\n          ));\n    else if (\"number\" === typeof node || \"bigint\" === typeof node)\n      (childIndex = task.blockedSegment),\n        null !== childIndex &&\n          (childIndex.lastPushedText = pushTextInstance(\n            childIndex.chunks,\n            \"\" + node,\n            request.renderState,\n            childIndex.lastPushedText\n          ));\n  }\n}\nfunction renderChildrenArray(request, task, children, childIndex) {\n  var prevKeyPath = task.keyPath;\n  if (\n    -1 !== childIndex &&\n    ((task.keyPath = [task.keyPath, \"Fragment\", childIndex]),\n    null !== task.replay)\n  ) {\n    for (\n      var replay = task.replay, replayNodes = replay.nodes, j = 0;\n      j < replayNodes.length;\n      j++\n    ) {\n      var node = replayNodes[j];\n      if (node[1] === childIndex) {\n        childIndex = node[2];\n        node = node[3];\n        task.replay = { nodes: childIndex, slots: node, pendingTasks: 1 };\n        try {\n          renderChildrenArray(request, task, children, -1);\n          if (1 === task.replay.pendingTasks && 0 < task.replay.nodes.length)\n            throw Error(\n              \"Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering.\"\n            );\n          task.replay.pendingTasks--;\n        } catch (x) {\n          if (\n            \"object\" === typeof x &&\n            null !== x &&\n            (x === SuspenseException || \"function\" === typeof x.then)\n          )\n            throw x;\n          task.replay.pendingTasks--;\n          children = getThrownInfo(task.componentStack);\n          var boundary = task.blockedBoundary,\n            error = x;\n          children = logRecoverableError(request, error, children);\n          abortRemainingReplayNodes(\n            request,\n            boundary,\n            childIndex,\n            node,\n            error,\n            children\n          );\n        }\n        task.replay = replay;\n        replayNodes.splice(j, 1);\n        break;\n      }\n    }\n    task.keyPath = prevKeyPath;\n    return;\n  }\n  replay = task.treeContext;\n  replayNodes = children.length;\n  if (\n    null !== task.replay &&\n    ((j = task.replay.slots), null !== j && \"object\" === typeof j)\n  ) {\n    for (childIndex = 0; childIndex < replayNodes; childIndex++)\n      (node = children[childIndex]),\n        (task.treeContext = pushTreeContext(replay, replayNodes, childIndex)),\n        (boundary = j[childIndex]),\n        \"number\" === typeof boundary\n          ? (resumeNode(request, task, boundary, node, childIndex),\n            delete j[childIndex])\n          : renderNode(request, task, node, childIndex);\n    task.treeContext = replay;\n    task.keyPath = prevKeyPath;\n    return;\n  }\n  for (j = 0; j < replayNodes; j++)\n    (childIndex = children[j]),\n      (task.treeContext = pushTreeContext(replay, replayNodes, j)),\n      renderNode(request, task, childIndex, j);\n  task.treeContext = replay;\n  task.keyPath = prevKeyPath;\n}\nfunction untrackBoundary(request, boundary) {\n  request = request.trackedPostpones;\n  null !== request &&\n    ((boundary = boundary.trackedContentKeyPath),\n    null !== boundary &&\n      ((boundary = request.workingMap.get(boundary)),\n      void 0 !== boundary &&\n        ((boundary.length = 4), (boundary[2] = []), (boundary[3] = null))));\n}\nfunction spawnNewSuspendedReplayTask(request, task, thenableState) {\n  return createReplayTask(\n    request,\n    thenableState,\n    task.replay,\n    task.node,\n    task.childIndex,\n    task.blockedBoundary,\n    task.hoistableState,\n    task.abortSet,\n    task.keyPath,\n    task.formatContext,\n    task.context,\n    task.treeContext,\n    task.componentStack,\n    task.isFallback\n  );\n}\nfunction spawnNewSuspendedRenderTask(request, task, thenableState) {\n  var segment = task.blockedSegment,\n    newSegment = createPendingSegment(\n      request,\n      segment.chunks.length,\n      null,\n      task.formatContext,\n      segment.lastPushedText,\n      !0\n    );\n  segment.children.push(newSegment);\n  segment.lastPushedText = !1;\n  return createRenderTask(\n    request,\n    thenableState,\n    task.node,\n    task.childIndex,\n    task.blockedBoundary,\n    newSegment,\n    task.blockedPreamble,\n    task.hoistableState,\n    task.abortSet,\n    task.keyPath,\n    task.formatContext,\n    task.context,\n    task.treeContext,\n    task.componentStack,\n    task.isFallback\n  );\n}\nfunction renderNode(request, task, node, childIndex) {\n  var previousFormatContext = task.formatContext,\n    previousContext = task.context,\n    previousKeyPath = task.keyPath,\n    previousTreeContext = task.treeContext,\n    previousComponentStack = task.componentStack,\n    segment = task.blockedSegment;\n  if (null === segment)\n    try {\n      return renderNodeDestructive(request, task, node, childIndex);\n    } catch (thrownValue) {\n      if (\n        (resetHooksState(),\n        (node =\n          thrownValue === SuspenseException\n            ? getSuspendedThenable()\n            : thrownValue),\n        \"object\" === typeof node && null !== node)\n      ) {\n        if (\"function\" === typeof node.then) {\n          childIndex = getThenableStateAfterSuspending();\n          request = spawnNewSuspendedReplayTask(request, task, childIndex).ping;\n          node.then(request, request);\n          task.formatContext = previousFormatContext;\n          task.context = previousContext;\n          task.keyPath = previousKeyPath;\n          task.treeContext = previousTreeContext;\n          task.componentStack = previousComponentStack;\n          switchContext(previousContext);\n          return;\n        }\n        if (\"Maximum call stack size exceeded\" === node.message) {\n          node = getThenableStateAfterSuspending();\n          node = spawnNewSuspendedReplayTask(request, task, node);\n          request.pingedTasks.push(node);\n          task.formatContext = previousFormatContext;\n          task.context = previousContext;\n          task.keyPath = previousKeyPath;\n          task.treeContext = previousTreeContext;\n          task.componentStack = previousComponentStack;\n          switchContext(previousContext);\n          return;\n        }\n      }\n    }\n  else {\n    var childrenLength = segment.children.length,\n      chunkLength = segment.chunks.length;\n    try {\n      return renderNodeDestructive(request, task, node, childIndex);\n    } catch (thrownValue$50) {\n      if (\n        (resetHooksState(),\n        (segment.children.length = childrenLength),\n        (segment.chunks.length = chunkLength),\n        (node =\n          thrownValue$50 === SuspenseException\n            ? getSuspendedThenable()\n            : thrownValue$50),\n        \"object\" === typeof node && null !== node)\n      ) {\n        if (\"function\" === typeof node.then) {\n          childIndex = getThenableStateAfterSuspending();\n          request = spawnNewSuspendedRenderTask(request, task, childIndex).ping;\n          node.then(request, request);\n          task.formatContext = previousFormatContext;\n          task.context = previousContext;\n          task.keyPath = previousKeyPath;\n          task.treeContext = previousTreeContext;\n          task.componentStack = previousComponentStack;\n          switchContext(previousContext);\n          return;\n        }\n        if (\"Maximum call stack size exceeded\" === node.message) {\n          node = getThenableStateAfterSuspending();\n          node = spawnNewSuspendedRenderTask(request, task, node);\n          request.pingedTasks.push(node);\n          task.formatContext = previousFormatContext;\n          task.context = previousContext;\n          task.keyPath = previousKeyPath;\n          task.treeContext = previousTreeContext;\n          task.componentStack = previousComponentStack;\n          switchContext(previousContext);\n          return;\n        }\n      }\n    }\n  }\n  task.formatContext = previousFormatContext;\n  task.context = previousContext;\n  task.keyPath = previousKeyPath;\n  task.treeContext = previousTreeContext;\n  switchContext(previousContext);\n  throw node;\n}\nfunction abortTaskSoft(task) {\n  var boundary = task.blockedBoundary;\n  task = task.blockedSegment;\n  null !== task && ((task.status = 3), finishedTask(this, boundary, task));\n}\nfunction abortRemainingReplayNodes(\n  request$jscomp$0,\n  boundary,\n  nodes,\n  slots,\n  error,\n  errorDigest$jscomp$0\n) {\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    if (4 === node.length)\n      abortRemainingReplayNodes(\n        request$jscomp$0,\n        boundary,\n        node[2],\n        node[3],\n        error,\n        errorDigest$jscomp$0\n      );\n    else {\n      node = node[5];\n      var request = request$jscomp$0,\n        errorDigest = errorDigest$jscomp$0,\n        resumedBoundary = createSuspenseBoundary(\n          request,\n          new Set(),\n          null,\n          null\n        );\n      resumedBoundary.parentFlushed = !0;\n      resumedBoundary.rootSegmentID = node;\n      resumedBoundary.status = 4;\n      resumedBoundary.errorDigest = errorDigest;\n      resumedBoundary.parentFlushed &&\n        request.clientRenderedBoundaries.push(resumedBoundary);\n    }\n  }\n  nodes.length = 0;\n  if (null !== slots) {\n    if (null === boundary)\n      throw Error(\n        \"We should not have any resumable nodes in the shell. This is a bug in React.\"\n      );\n    4 !== boundary.status &&\n      ((boundary.status = 4),\n      (boundary.errorDigest = errorDigest$jscomp$0),\n      boundary.parentFlushed &&\n        request$jscomp$0.clientRenderedBoundaries.push(boundary));\n    if (\"object\" === typeof slots) for (var index in slots) delete slots[index];\n  }\n}\nfunction abortTask(task, request, error) {\n  var boundary = task.blockedBoundary,\n    segment = task.blockedSegment;\n  if (null !== segment) {\n    if (6 === segment.status) return;\n    segment.status = 3;\n  }\n  segment = getThrownInfo(task.componentStack);\n  if (null === boundary) {\n    if (13 !== request.status && 14 !== request.status) {\n      boundary = task.replay;\n      if (null === boundary) {\n        logRecoverableError(request, error, segment);\n        fatalError(request, error);\n        return;\n      }\n      boundary.pendingTasks--;\n      0 === boundary.pendingTasks &&\n        0 < boundary.nodes.length &&\n        ((task = logRecoverableError(request, error, segment)),\n        abortRemainingReplayNodes(\n          request,\n          null,\n          boundary.nodes,\n          boundary.slots,\n          error,\n          task\n        ));\n      request.pendingRootTasks--;\n      0 === request.pendingRootTasks && completeShell(request);\n    }\n  } else\n    boundary.pendingTasks--,\n      4 !== boundary.status &&\n        ((boundary.status = 4),\n        (task = logRecoverableError(request, error, segment)),\n        (boundary.status = 4),\n        (boundary.errorDigest = task),\n        untrackBoundary(request, boundary),\n        boundary.parentFlushed &&\n          request.clientRenderedBoundaries.push(boundary)),\n      boundary.fallbackAbortableTasks.forEach(function (fallbackTask) {\n        return abortTask(fallbackTask, request, error);\n      }),\n      boundary.fallbackAbortableTasks.clear();\n  request.allPendingTasks--;\n  0 === request.allPendingTasks && completeAll(request);\n}\nfunction safelyEmitEarlyPreloads(request, shellComplete) {\n  try {\n    var renderState = request.renderState,\n      onHeaders = renderState.onHeaders;\n    if (onHeaders) {\n      var headers = renderState.headers;\n      if (headers) {\n        renderState.headers = null;\n        var linkHeader = headers.preconnects;\n        headers.fontPreloads &&\n          (linkHeader && (linkHeader += \", \"),\n          (linkHeader += headers.fontPreloads));\n        headers.highImagePreloads &&\n          (linkHeader && (linkHeader += \", \"),\n          (linkHeader += headers.highImagePreloads));\n        if (!shellComplete) {\n          var queueIter = renderState.styles.values(),\n            queueStep = queueIter.next();\n          b: for (\n            ;\n            0 < headers.remainingCapacity && !queueStep.done;\n            queueStep = queueIter.next()\n          )\n            for (\n              var sheetIter = queueStep.value.sheets.values(),\n                sheetStep = sheetIter.next();\n              0 < headers.remainingCapacity && !sheetStep.done;\n              sheetStep = sheetIter.next()\n            ) {\n              var sheet = sheetStep.value,\n                props = sheet.props,\n                key = props.href,\n                props$jscomp$0 = sheet.props,\n                header = getPreloadAsHeader(props$jscomp$0.href, \"style\", {\n                  crossOrigin: props$jscomp$0.crossOrigin,\n                  integrity: props$jscomp$0.integrity,\n                  nonce: props$jscomp$0.nonce,\n                  type: props$jscomp$0.type,\n                  fetchPriority: props$jscomp$0.fetchPriority,\n                  referrerPolicy: props$jscomp$0.referrerPolicy,\n                  media: props$jscomp$0.media\n                });\n              if (0 <= (headers.remainingCapacity -= header.length + 2))\n                (renderState.resets.style[key] = PRELOAD_NO_CREDS),\n                  linkHeader && (linkHeader += \", \"),\n                  (linkHeader += header),\n                  (renderState.resets.style[key] =\n                    \"string\" === typeof props.crossOrigin ||\n                    \"string\" === typeof props.integrity\n                      ? [props.crossOrigin, props.integrity]\n                      : PRELOAD_NO_CREDS);\n              else break b;\n            }\n        }\n        linkHeader ? onHeaders({ Link: linkHeader }) : onHeaders({});\n      }\n    }\n  } catch (error) {\n    logRecoverableError(request, error, {});\n  }\n}\nfunction completeShell(request) {\n  null === request.trackedPostpones && safelyEmitEarlyPreloads(request, !0);\n  null === request.trackedPostpones && preparePreamble(request);\n  request.onShellError = noop;\n  request = request.onShellReady;\n  request();\n}\nfunction completeAll(request) {\n  safelyEmitEarlyPreloads(\n    request,\n    null === request.trackedPostpones\n      ? !0\n      : null === request.completedRootSegment ||\n          5 !== request.completedRootSegment.status\n  );\n  preparePreamble(request);\n  request = request.onAllReady;\n  request();\n}\nfunction queueCompletedSegment(boundary, segment) {\n  if (\n    0 === segment.chunks.length &&\n    1 === segment.children.length &&\n    null === segment.children[0].boundary &&\n    -1 === segment.children[0].id\n  ) {\n    var childSegment = segment.children[0];\n    childSegment.id = segment.id;\n    childSegment.parentFlushed = !0;\n    1 === childSegment.status && queueCompletedSegment(boundary, childSegment);\n  } else boundary.completedSegments.push(segment);\n}\nfunction finishedTask(request, boundary, segment) {\n  if (null === boundary) {\n    if (null !== segment && segment.parentFlushed) {\n      if (null !== request.completedRootSegment)\n        throw Error(\n          \"There can only be one root segment. This is a bug in React.\"\n        );\n      request.completedRootSegment = segment;\n    }\n    request.pendingRootTasks--;\n    0 === request.pendingRootTasks && completeShell(request);\n  } else\n    boundary.pendingTasks--,\n      4 !== boundary.status &&\n        (0 === boundary.pendingTasks\n          ? (0 === boundary.status && (boundary.status = 1),\n            null !== segment &&\n              segment.parentFlushed &&\n              1 === segment.status &&\n              queueCompletedSegment(boundary, segment),\n            boundary.parentFlushed &&\n              request.completedBoundaries.push(boundary),\n            1 === boundary.status &&\n              (boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request),\n              boundary.fallbackAbortableTasks.clear(),\n              0 === request.pendingRootTasks &&\n                null === request.trackedPostpones &&\n                null !== boundary.contentPreamble &&\n                preparePreamble(request)))\n          : null !== segment &&\n            segment.parentFlushed &&\n            1 === segment.status &&\n            (queueCompletedSegment(boundary, segment),\n            1 === boundary.completedSegments.length &&\n              boundary.parentFlushed &&\n              request.partialBoundaries.push(boundary)));\n  request.allPendingTasks--;\n  0 === request.allPendingTasks && completeAll(request);\n}\nfunction performWork(request$jscomp$2) {\n  if (14 !== request$jscomp$2.status && 13 !== request$jscomp$2.status) {\n    var prevContext = currentActiveSnapshot,\n      prevDispatcher = ReactSharedInternals.H;\n    ReactSharedInternals.H = HooksDispatcher;\n    var prevAsyncDispatcher = ReactSharedInternals.A;\n    ReactSharedInternals.A = DefaultAsyncDispatcher;\n    var prevRequest = currentRequest;\n    currentRequest = request$jscomp$2;\n    var prevResumableState = currentResumableState;\n    currentResumableState = request$jscomp$2.resumableState;\n    try {\n      var pingedTasks = request$jscomp$2.pingedTasks,\n        i;\n      for (i = 0; i < pingedTasks.length; i++) {\n        var task = pingedTasks[i],\n          request = request$jscomp$2,\n          segment = task.blockedSegment;\n        if (null === segment) {\n          var request$jscomp$0 = request;\n          if (0 !== task.replay.pendingTasks) {\n            switchContext(task.context);\n            try {\n              \"number\" === typeof task.replay.slots\n                ? resumeNode(\n                    request$jscomp$0,\n                    task,\n                    task.replay.slots,\n                    task.node,\n                    task.childIndex\n                  )\n                : retryNode(request$jscomp$0, task);\n              if (\n                1 === task.replay.pendingTasks &&\n                0 < task.replay.nodes.length\n              )\n                throw Error(\n                  \"Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering.\"\n                );\n              task.replay.pendingTasks--;\n              task.abortSet.delete(task);\n              finishedTask(request$jscomp$0, task.blockedBoundary, null);\n            } catch (thrownValue) {\n              resetHooksState();\n              var x =\n                thrownValue === SuspenseException\n                  ? getSuspendedThenable()\n                  : thrownValue;\n              if (\n                \"object\" === typeof x &&\n                null !== x &&\n                \"function\" === typeof x.then\n              ) {\n                var ping = task.ping;\n                x.then(ping, ping);\n                task.thenableState = getThenableStateAfterSuspending();\n              } else {\n                task.replay.pendingTasks--;\n                task.abortSet.delete(task);\n                var errorInfo = getThrownInfo(task.componentStack);\n                request = void 0;\n                var request$jscomp$1 = request$jscomp$0,\n                  boundary = task.blockedBoundary,\n                  error$jscomp$0 =\n                    12 === request$jscomp$0.status\n                      ? request$jscomp$0.fatalError\n                      : x,\n                  replayNodes = task.replay.nodes,\n                  resumeSlots = task.replay.slots;\n                request = logRecoverableError(\n                  request$jscomp$1,\n                  error$jscomp$0,\n                  errorInfo\n                );\n                abortRemainingReplayNodes(\n                  request$jscomp$1,\n                  boundary,\n                  replayNodes,\n                  resumeSlots,\n                  error$jscomp$0,\n                  request\n                );\n                request$jscomp$0.pendingRootTasks--;\n                0 === request$jscomp$0.pendingRootTasks &&\n                  completeShell(request$jscomp$0);\n                request$jscomp$0.allPendingTasks--;\n                0 === request$jscomp$0.allPendingTasks &&\n                  completeAll(request$jscomp$0);\n              }\n            } finally {\n            }\n          }\n        } else if (\n          ((request$jscomp$0 = void 0),\n          (request$jscomp$1 = segment),\n          0 === request$jscomp$1.status)\n        ) {\n          request$jscomp$1.status = 6;\n          switchContext(task.context);\n          var childrenLength = request$jscomp$1.children.length,\n            chunkLength = request$jscomp$1.chunks.length;\n          try {\n            retryNode(request, task),\n              request$jscomp$1.lastPushedText &&\n                request$jscomp$1.textEmbedded &&\n                request$jscomp$1.chunks.push(textSeparator),\n              task.abortSet.delete(task),\n              (request$jscomp$1.status = 1),\n              finishedTask(request, task.blockedBoundary, request$jscomp$1);\n          } catch (thrownValue) {\n            resetHooksState();\n            request$jscomp$1.children.length = childrenLength;\n            request$jscomp$1.chunks.length = chunkLength;\n            var x$jscomp$0 =\n              thrownValue === SuspenseException\n                ? getSuspendedThenable()\n                : 12 === request.status\n                  ? request.fatalError\n                  : thrownValue;\n            if (\n              \"object\" === typeof x$jscomp$0 &&\n              null !== x$jscomp$0 &&\n              \"function\" === typeof x$jscomp$0.then\n            ) {\n              request$jscomp$1.status = 0;\n              task.thenableState = getThenableStateAfterSuspending();\n              var ping$jscomp$0 = task.ping;\n              x$jscomp$0.then(ping$jscomp$0, ping$jscomp$0);\n            } else {\n              var errorInfo$jscomp$0 = getThrownInfo(task.componentStack);\n              task.abortSet.delete(task);\n              request$jscomp$1.status = 4;\n              var boundary$jscomp$0 = task.blockedBoundary;\n              request$jscomp$0 = logRecoverableError(\n                request,\n                x$jscomp$0,\n                errorInfo$jscomp$0\n              );\n              null === boundary$jscomp$0\n                ? fatalError(request, x$jscomp$0)\n                : (boundary$jscomp$0.pendingTasks--,\n                  4 !== boundary$jscomp$0.status &&\n                    ((boundary$jscomp$0.status = 4),\n                    (boundary$jscomp$0.errorDigest = request$jscomp$0),\n                    untrackBoundary(request, boundary$jscomp$0),\n                    boundary$jscomp$0.parentFlushed &&\n                      request.clientRenderedBoundaries.push(boundary$jscomp$0),\n                    0 === request.pendingRootTasks &&\n                      null === request.trackedPostpones &&\n                      null !== boundary$jscomp$0.contentPreamble &&\n                      preparePreamble(request)));\n              request.allPendingTasks--;\n              0 === request.allPendingTasks && completeAll(request);\n            }\n          } finally {\n          }\n        }\n      }\n      pingedTasks.splice(0, i);\n      null !== request$jscomp$2.destination &&\n        flushCompletedQueues(request$jscomp$2, request$jscomp$2.destination);\n    } catch (error) {\n      logRecoverableError(request$jscomp$2, error, {}),\n        fatalError(request$jscomp$2, error);\n    } finally {\n      (currentResumableState = prevResumableState),\n        (ReactSharedInternals.H = prevDispatcher),\n        (ReactSharedInternals.A = prevAsyncDispatcher),\n        prevDispatcher === HooksDispatcher && switchContext(prevContext),\n        (currentRequest = prevRequest);\n    }\n  }\n}\nfunction preparePreambleFromSubtree(\n  request,\n  segment,\n  collectedPreambleSegments\n) {\n  segment.preambleChildren.length &&\n    collectedPreambleSegments.push(segment.preambleChildren);\n  for (var pendingPreambles = !1, i = 0; i < segment.children.length; i++)\n    pendingPreambles =\n      preparePreambleFromSegment(\n        request,\n        segment.children[i],\n        collectedPreambleSegments\n      ) || pendingPreambles;\n  return pendingPreambles;\n}\nfunction preparePreambleFromSegment(\n  request,\n  segment,\n  collectedPreambleSegments\n) {\n  var boundary = segment.boundary;\n  if (null === boundary)\n    return preparePreambleFromSubtree(\n      request,\n      segment,\n      collectedPreambleSegments\n    );\n  var preamble = boundary.contentPreamble,\n    fallbackPreamble = boundary.fallbackPreamble;\n  if (null === preamble || null === fallbackPreamble) return !1;\n  switch (boundary.status) {\n    case 1:\n      hoistPreambleState(request.renderState, preamble);\n      segment = boundary.completedSegments[0];\n      if (!segment)\n        throw Error(\n          \"A previously unvisited boundary must have exactly one root segment. This is a bug in React.\"\n        );\n      return preparePreambleFromSubtree(\n        request,\n        segment,\n        collectedPreambleSegments\n      );\n    case 5:\n      if (null !== request.trackedPostpones) return !0;\n    case 4:\n      if (1 === segment.status)\n        return (\n          hoistPreambleState(request.renderState, fallbackPreamble),\n          preparePreambleFromSubtree(\n            request,\n            segment,\n            collectedPreambleSegments\n          )\n        );\n    default:\n      return !0;\n  }\n}\nfunction preparePreamble(request) {\n  if (\n    request.completedRootSegment &&\n    null === request.completedPreambleSegments\n  ) {\n    var collectedPreambleSegments = [],\n      hasPendingPreambles = preparePreambleFromSegment(\n        request,\n        request.completedRootSegment,\n        collectedPreambleSegments\n      ),\n      preamble = request.renderState.preamble;\n    if (\n      !1 === hasPendingPreambles ||\n      (preamble.headChunks && preamble.bodyChunks)\n    )\n      request.completedPreambleSegments = collectedPreambleSegments;\n  }\n}\nfunction flushSubtree(request, destination, segment, hoistableState) {\n  segment.parentFlushed = !0;\n  switch (segment.status) {\n    case 0:\n      segment.id = request.nextSegmentId++;\n    case 5:\n      return (\n        (hoistableState = segment.id),\n        (segment.lastPushedText = !1),\n        (segment.textEmbedded = !1),\n        (request = request.renderState),\n        writeChunk(destination, placeholder1),\n        writeChunk(destination, request.placeholderPrefix),\n        (request = stringToChunk(hoistableState.toString(16))),\n        writeChunk(destination, request),\n        writeChunkAndReturn(destination, placeholder2)\n      );\n    case 1:\n      segment.status = 2;\n      var r = !0,\n        chunks = segment.chunks,\n        chunkIdx = 0;\n      segment = segment.children;\n      for (var childIdx = 0; childIdx < segment.length; childIdx++) {\n        for (r = segment[childIdx]; chunkIdx < r.index; chunkIdx++)\n          writeChunk(destination, chunks[chunkIdx]);\n        r = flushSegment(request, destination, r, hoistableState);\n      }\n      for (; chunkIdx < chunks.length - 1; chunkIdx++)\n        writeChunk(destination, chunks[chunkIdx]);\n      chunkIdx < chunks.length &&\n        (r = writeChunkAndReturn(destination, chunks[chunkIdx]));\n      return r;\n    default:\n      throw Error(\n        \"Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.\"\n      );\n  }\n}\nfunction flushSegment(request, destination, segment, hoistableState) {\n  var boundary = segment.boundary;\n  if (null === boundary)\n    return flushSubtree(request, destination, segment, hoistableState);\n  boundary.parentFlushed = !0;\n  if (4 === boundary.status) {\n    var errorDigest = boundary.errorDigest;\n    writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary);\n    writeChunk(destination, clientRenderedSuspenseBoundaryError1);\n    errorDigest &&\n      (writeChunk(destination, clientRenderedSuspenseBoundaryError1A),\n      writeChunk(destination, stringToChunk(escapeTextForBrowser(errorDigest))),\n      writeChunk(\n        destination,\n        clientRenderedSuspenseBoundaryErrorAttrInterstitial\n      ));\n    writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2);\n    flushSubtree(request, destination, segment, hoistableState);\n    (request = boundary.fallbackPreamble) &&\n      writePreambleContribution(destination, request);\n    return writeChunkAndReturn(destination, endSuspenseBoundary);\n  }\n  if (1 !== boundary.status)\n    return (\n      0 === boundary.status &&\n        (boundary.rootSegmentID = request.nextSegmentId++),\n      0 < boundary.completedSegments.length &&\n        request.partialBoundaries.push(boundary),\n      writeStartPendingSuspenseBoundary(\n        destination,\n        request.renderState,\n        boundary.rootSegmentID\n      ),\n      hoistableState &&\n        ((boundary = boundary.fallbackState),\n        boundary.styles.forEach(hoistStyleQueueDependency, hoistableState),\n        boundary.stylesheets.forEach(\n          hoistStylesheetDependency,\n          hoistableState\n        )),\n      flushSubtree(request, destination, segment, hoistableState),\n      writeChunkAndReturn(destination, endSuspenseBoundary)\n    );\n  if (boundary.byteSize > request.progressiveChunkSize)\n    return (\n      (boundary.rootSegmentID = request.nextSegmentId++),\n      request.completedBoundaries.push(boundary),\n      writeStartPendingSuspenseBoundary(\n        destination,\n        request.renderState,\n        boundary.rootSegmentID\n      ),\n      flushSubtree(request, destination, segment, hoistableState),\n      writeChunkAndReturn(destination, endSuspenseBoundary)\n    );\n  hoistableState &&\n    ((segment = boundary.contentState),\n    segment.styles.forEach(hoistStyleQueueDependency, hoistableState),\n    segment.stylesheets.forEach(hoistStylesheetDependency, hoistableState));\n  writeChunkAndReturn(destination, startCompletedSuspenseBoundary);\n  segment = boundary.completedSegments;\n  if (1 !== segment.length)\n    throw Error(\n      \"A previously unvisited boundary must have exactly one root segment. This is a bug in React.\"\n    );\n  flushSegment(request, destination, segment[0], hoistableState);\n  (request = boundary.contentPreamble) &&\n    writePreambleContribution(destination, request);\n  return writeChunkAndReturn(destination, endSuspenseBoundary);\n}\nfunction flushSegmentContainer(request, destination, segment, hoistableState) {\n  writeStartSegment(\n    destination,\n    request.renderState,\n    segment.parentFormatContext,\n    segment.id\n  );\n  flushSegment(request, destination, segment, hoistableState);\n  return writeEndSegment(destination, segment.parentFormatContext);\n}\nfunction flushCompletedBoundary(request, destination, boundary) {\n  for (\n    var completedSegments = boundary.completedSegments, i = 0;\n    i < completedSegments.length;\n    i++\n  )\n    flushPartiallyCompletedSegment(\n      request,\n      destination,\n      boundary,\n      completedSegments[i]\n    );\n  completedSegments.length = 0;\n  writeHoistablesForBoundary(\n    destination,\n    boundary.contentState,\n    request.renderState\n  );\n  completedSegments = request.resumableState;\n  request = request.renderState;\n  i = boundary.rootSegmentID;\n  boundary = boundary.contentState;\n  var requiresStyleInsertion = request.stylesToHoist;\n  request.stylesToHoist = !1;\n  writeChunk(destination, request.startInlineScript);\n  requiresStyleInsertion\n    ? 0 === (completedSegments.instructions & 2)\n      ? ((completedSegments.instructions |= 10),\n        writeChunk(destination, completeBoundaryWithStylesScript1FullBoth))\n      : 0 === (completedSegments.instructions & 8)\n        ? ((completedSegments.instructions |= 8),\n          writeChunk(destination, completeBoundaryWithStylesScript1FullPartial))\n        : writeChunk(destination, completeBoundaryWithStylesScript1Partial)\n    : 0 === (completedSegments.instructions & 2)\n      ? ((completedSegments.instructions |= 2),\n        writeChunk(destination, completeBoundaryScript1Full))\n      : writeChunk(destination, completeBoundaryScript1Partial);\n  completedSegments = stringToChunk(i.toString(16));\n  writeChunk(destination, request.boundaryPrefix);\n  writeChunk(destination, completedSegments);\n  writeChunk(destination, completeBoundaryScript2);\n  writeChunk(destination, request.segmentPrefix);\n  writeChunk(destination, completedSegments);\n  requiresStyleInsertion\n    ? (writeChunk(destination, completeBoundaryScript3a),\n      writeStyleResourceDependenciesInJS(destination, boundary))\n    : writeChunk(destination, completeBoundaryScript3b);\n  boundary = writeChunkAndReturn(destination, completeBoundaryScriptEnd);\n  return writeBootstrap(destination, request) && boundary;\n}\nfunction flushPartiallyCompletedSegment(\n  request,\n  destination,\n  boundary,\n  segment\n) {\n  if (2 === segment.status) return !0;\n  var hoistableState = boundary.contentState,\n    segmentID = segment.id;\n  if (-1 === segmentID) {\n    if (-1 === (segment.id = boundary.rootSegmentID))\n      throw Error(\n        \"A root segment ID must have been assigned by now. This is a bug in React.\"\n      );\n    return flushSegmentContainer(request, destination, segment, hoistableState);\n  }\n  if (segmentID === boundary.rootSegmentID)\n    return flushSegmentContainer(request, destination, segment, hoistableState);\n  flushSegmentContainer(request, destination, segment, hoistableState);\n  boundary = request.resumableState;\n  request = request.renderState;\n  writeChunk(destination, request.startInlineScript);\n  0 === (boundary.instructions & 1)\n    ? ((boundary.instructions |= 1),\n      writeChunk(destination, completeSegmentScript1Full))\n    : writeChunk(destination, completeSegmentScript1Partial);\n  writeChunk(destination, request.segmentPrefix);\n  segmentID = stringToChunk(segmentID.toString(16));\n  writeChunk(destination, segmentID);\n  writeChunk(destination, completeSegmentScript2);\n  writeChunk(destination, request.placeholderPrefix);\n  writeChunk(destination, segmentID);\n  destination = writeChunkAndReturn(destination, completeSegmentScriptEnd);\n  return destination;\n}\nfunction flushCompletedQueues(request, destination) {\n  currentView = new Uint8Array(2048);\n  writtenBytes = 0;\n  try {\n    if (!(0 < request.pendingRootTasks)) {\n      var i,\n        completedRootSegment = request.completedRootSegment;\n      if (null !== completedRootSegment) {\n        if (5 === completedRootSegment.status) return;\n        var completedPreambleSegments = request.completedPreambleSegments;\n        if (null === completedPreambleSegments) return;\n        var renderState = request.renderState,\n          preamble = renderState.preamble,\n          htmlChunks = preamble.htmlChunks,\n          headChunks = preamble.headChunks,\n          i$jscomp$0;\n        if (htmlChunks) {\n          for (i$jscomp$0 = 0; i$jscomp$0 < htmlChunks.length; i$jscomp$0++)\n            writeChunk(destination, htmlChunks[i$jscomp$0]);\n          if (headChunks)\n            for (i$jscomp$0 = 0; i$jscomp$0 < headChunks.length; i$jscomp$0++)\n              writeChunk(destination, headChunks[i$jscomp$0]);\n          else\n            writeChunk(destination, startChunkForTag(\"head\")),\n              writeChunk(destination, endOfStartTag);\n        } else if (headChunks)\n          for (i$jscomp$0 = 0; i$jscomp$0 < headChunks.length; i$jscomp$0++)\n            writeChunk(destination, headChunks[i$jscomp$0]);\n        var charsetChunks = renderState.charsetChunks;\n        for (i$jscomp$0 = 0; i$jscomp$0 < charsetChunks.length; i$jscomp$0++)\n          writeChunk(destination, charsetChunks[i$jscomp$0]);\n        charsetChunks.length = 0;\n        renderState.preconnects.forEach(flushResource, destination);\n        renderState.preconnects.clear();\n        var viewportChunks = renderState.viewportChunks;\n        for (i$jscomp$0 = 0; i$jscomp$0 < viewportChunks.length; i$jscomp$0++)\n          writeChunk(destination, viewportChunks[i$jscomp$0]);\n        viewportChunks.length = 0;\n        renderState.fontPreloads.forEach(flushResource, destination);\n        renderState.fontPreloads.clear();\n        renderState.highImagePreloads.forEach(flushResource, destination);\n        renderState.highImagePreloads.clear();\n        renderState.styles.forEach(flushStylesInPreamble, destination);\n        var importMapChunks = renderState.importMapChunks;\n        for (i$jscomp$0 = 0; i$jscomp$0 < importMapChunks.length; i$jscomp$0++)\n          writeChunk(destination, importMapChunks[i$jscomp$0]);\n        importMapChunks.length = 0;\n        renderState.bootstrapScripts.forEach(flushResource, destination);\n        renderState.scripts.forEach(flushResource, destination);\n        renderState.scripts.clear();\n        renderState.bulkPreloads.forEach(flushResource, destination);\n        renderState.bulkPreloads.clear();\n        var hoistableChunks = renderState.hoistableChunks;\n        for (i$jscomp$0 = 0; i$jscomp$0 < hoistableChunks.length; i$jscomp$0++)\n          writeChunk(destination, hoistableChunks[i$jscomp$0]);\n        for (\n          renderState = hoistableChunks.length = 0;\n          renderState < completedPreambleSegments.length;\n          renderState++\n        ) {\n          var segments = completedPreambleSegments[renderState];\n          for (preamble = 0; preamble < segments.length; preamble++)\n            flushSegment(request, destination, segments[preamble], null);\n        }\n        var preamble$jscomp$0 = request.renderState.preamble,\n          headChunks$jscomp$0 = preamble$jscomp$0.headChunks;\n        (preamble$jscomp$0.htmlChunks || headChunks$jscomp$0) &&\n          writeChunk(destination, endChunkForTag(\"head\"));\n        var bodyChunks = preamble$jscomp$0.bodyChunks;\n        if (bodyChunks)\n          for (\n            completedPreambleSegments = 0;\n            completedPreambleSegments < bodyChunks.length;\n            completedPreambleSegments++\n          )\n            writeChunk(destination, bodyChunks[completedPreambleSegments]);\n        flushSegment(request, destination, completedRootSegment, null);\n        request.completedRootSegment = null;\n        writeBootstrap(destination, request.renderState);\n      }\n      var renderState$jscomp$0 = request.renderState;\n      completedRootSegment = 0;\n      var viewportChunks$jscomp$0 = renderState$jscomp$0.viewportChunks;\n      for (\n        completedRootSegment = 0;\n        completedRootSegment < viewportChunks$jscomp$0.length;\n        completedRootSegment++\n      )\n        writeChunk(destination, viewportChunks$jscomp$0[completedRootSegment]);\n      viewportChunks$jscomp$0.length = 0;\n      renderState$jscomp$0.preconnects.forEach(flushResource, destination);\n      renderState$jscomp$0.preconnects.clear();\n      renderState$jscomp$0.fontPreloads.forEach(flushResource, destination);\n      renderState$jscomp$0.fontPreloads.clear();\n      renderState$jscomp$0.highImagePreloads.forEach(\n        flushResource,\n        destination\n      );\n      renderState$jscomp$0.highImagePreloads.clear();\n      renderState$jscomp$0.styles.forEach(preloadLateStyles, destination);\n      renderState$jscomp$0.scripts.forEach(flushResource, destination);\n      renderState$jscomp$0.scripts.clear();\n      renderState$jscomp$0.bulkPreloads.forEach(flushResource, destination);\n      renderState$jscomp$0.bulkPreloads.clear();\n      var hoistableChunks$jscomp$0 = renderState$jscomp$0.hoistableChunks;\n      for (\n        completedRootSegment = 0;\n        completedRootSegment < hoistableChunks$jscomp$0.length;\n        completedRootSegment++\n      )\n        writeChunk(destination, hoistableChunks$jscomp$0[completedRootSegment]);\n      hoistableChunks$jscomp$0.length = 0;\n      var clientRenderedBoundaries = request.clientRenderedBoundaries;\n      for (i = 0; i < clientRenderedBoundaries.length; i++) {\n        var boundary = clientRenderedBoundaries[i];\n        renderState$jscomp$0 = destination;\n        var resumableState = request.resumableState,\n          renderState$jscomp$1 = request.renderState,\n          id = boundary.rootSegmentID,\n          errorDigest = boundary.errorDigest;\n        writeChunk(\n          renderState$jscomp$0,\n          renderState$jscomp$1.startInlineScript\n        );\n        0 === (resumableState.instructions & 4)\n          ? ((resumableState.instructions |= 4),\n            writeChunk(renderState$jscomp$0, clientRenderScript1Full))\n          : writeChunk(renderState$jscomp$0, clientRenderScript1Partial);\n        writeChunk(renderState$jscomp$0, renderState$jscomp$1.boundaryPrefix);\n        writeChunk(renderState$jscomp$0, stringToChunk(id.toString(16)));\n        writeChunk(renderState$jscomp$0, clientRenderScript1A);\n        errorDigest &&\n          (writeChunk(\n            renderState$jscomp$0,\n            clientRenderErrorScriptArgInterstitial\n          ),\n          writeChunk(\n            renderState$jscomp$0,\n            stringToChunk(\n              escapeJSStringsForInstructionScripts(errorDigest || \"\")\n            )\n          ));\n        var JSCompiler_inline_result = writeChunkAndReturn(\n          renderState$jscomp$0,\n          clientRenderScriptEnd\n        );\n        if (!JSCompiler_inline_result) {\n          request.destination = null;\n          i++;\n          clientRenderedBoundaries.splice(0, i);\n          return;\n        }\n      }\n      clientRenderedBoundaries.splice(0, i);\n      var completedBoundaries = request.completedBoundaries;\n      for (i = 0; i < completedBoundaries.length; i++)\n        if (\n          !flushCompletedBoundary(request, destination, completedBoundaries[i])\n        ) {\n          request.destination = null;\n          i++;\n          completedBoundaries.splice(0, i);\n          return;\n        }\n      completedBoundaries.splice(0, i);\n      completeWriting(destination);\n      currentView = new Uint8Array(2048);\n      writtenBytes = 0;\n      var partialBoundaries = request.partialBoundaries;\n      for (i = 0; i < partialBoundaries.length; i++) {\n        var boundary$53 = partialBoundaries[i];\n        a: {\n          clientRenderedBoundaries = request;\n          boundary = destination;\n          var completedSegments = boundary$53.completedSegments;\n          for (\n            JSCompiler_inline_result = 0;\n            JSCompiler_inline_result < completedSegments.length;\n            JSCompiler_inline_result++\n          )\n            if (\n              !flushPartiallyCompletedSegment(\n                clientRenderedBoundaries,\n                boundary,\n                boundary$53,\n                completedSegments[JSCompiler_inline_result]\n              )\n            ) {\n              JSCompiler_inline_result++;\n              completedSegments.splice(0, JSCompiler_inline_result);\n              var JSCompiler_inline_result$jscomp$0 = !1;\n              break a;\n            }\n          completedSegments.splice(0, JSCompiler_inline_result);\n          JSCompiler_inline_result$jscomp$0 = writeHoistablesForBoundary(\n            boundary,\n            boundary$53.contentState,\n            clientRenderedBoundaries.renderState\n          );\n        }\n        if (!JSCompiler_inline_result$jscomp$0) {\n          request.destination = null;\n          i++;\n          partialBoundaries.splice(0, i);\n          return;\n        }\n      }\n      partialBoundaries.splice(0, i);\n      var largeBoundaries = request.completedBoundaries;\n      for (i = 0; i < largeBoundaries.length; i++)\n        if (!flushCompletedBoundary(request, destination, largeBoundaries[i])) {\n          request.destination = null;\n          i++;\n          largeBoundaries.splice(0, i);\n          return;\n        }\n      largeBoundaries.splice(0, i);\n    }\n  } finally {\n    0 === request.allPendingTasks &&\n    0 === request.pingedTasks.length &&\n    0 === request.clientRenderedBoundaries.length &&\n    0 === request.completedBoundaries.length\n      ? ((request.flushScheduled = !1),\n        (i = request.resumableState),\n        i.hasBody && writeChunk(destination, endChunkForTag(\"body\")),\n        i.hasHtml && writeChunk(destination, endChunkForTag(\"html\")),\n        completeWriting(destination),\n        (request.status = 14),\n        destination.close(),\n        (request.destination = null))\n      : completeWriting(destination);\n  }\n}\nfunction startWork(request) {\n  request.flushScheduled = null !== request.destination;\n  supportsRequestStorage\n    ? scheduleMicrotask(function () {\n        return requestStorage.run(request, performWork, request);\n      })\n    : scheduleMicrotask(function () {\n        return performWork(request);\n      });\n  setTimeoutOrImmediate(function () {\n    10 === request.status && (request.status = 11);\n    null === request.trackedPostpones &&\n      (supportsRequestStorage\n        ? requestStorage.run(\n            request,\n            enqueueEarlyPreloadsAfterInitialWork,\n            request\n          )\n        : enqueueEarlyPreloadsAfterInitialWork(request));\n  }, 0);\n}\nfunction enqueueEarlyPreloadsAfterInitialWork(request) {\n  safelyEmitEarlyPreloads(request, 0 === request.pendingRootTasks);\n}\nfunction enqueueFlush(request) {\n  !1 === request.flushScheduled &&\n    0 === request.pingedTasks.length &&\n    null !== request.destination &&\n    ((request.flushScheduled = !0),\n    setTimeoutOrImmediate(function () {\n      var destination = request.destination;\n      destination\n        ? flushCompletedQueues(request, destination)\n        : (request.flushScheduled = !1);\n    }, 0));\n}\nfunction startFlowing(request, destination) {\n  if (13 === request.status)\n    (request.status = 14), closeWithError(destination, request.fatalError);\n  else if (14 !== request.status && null === request.destination) {\n    request.destination = destination;\n    try {\n      flushCompletedQueues(request, destination);\n    } catch (error) {\n      logRecoverableError(request, error, {}), fatalError(request, error);\n    }\n  }\n}\nfunction abort(request, reason) {\n  if (11 === request.status || 10 === request.status) request.status = 12;\n  try {\n    var abortableTasks = request.abortableTasks;\n    if (0 < abortableTasks.size) {\n      var error =\n        void 0 === reason\n          ? Error(\"The render was aborted by the server without a reason.\")\n          : \"object\" === typeof reason &&\n              null !== reason &&\n              \"function\" === typeof reason.then\n            ? Error(\"The render was aborted by the server with a promise.\")\n            : reason;\n      request.fatalError = error;\n      abortableTasks.forEach(function (task) {\n        return abortTask(task, request, error);\n      });\n      abortableTasks.clear();\n    }\n    null !== request.destination &&\n      flushCompletedQueues(request, request.destination);\n  } catch (error$55) {\n    logRecoverableError(request, error$55, {}), fatalError(request, error$55);\n  }\n}\nfunction ensureCorrectIsomorphicReactVersion() {\n  var isomorphicReactPackageVersion = React.version;\n  if (\"19.2.0-canary-3fbfb9ba-20250409\" !== isomorphicReactPackageVersion)\n    throw Error(\n      'Incompatible React versions: The \"react\" and \"react-dom\" packages must have the exact same version. Instead got:\\n  - react:      ' +\n        (isomorphicReactPackageVersion +\n          \"\\n  - react-dom:  19.2.0-canary-3fbfb9ba-20250409\\nLearn more: https://react.dev/warnings/version-mismatch\")\n    );\n}\nensureCorrectIsomorphicReactVersion();\nensureCorrectIsomorphicReactVersion();\nexports.prerender = function (children, options) {\n  return new Promise(function (resolve, reject) {\n    var onHeaders = options ? options.onHeaders : void 0,\n      onHeadersImpl;\n    onHeaders &&\n      (onHeadersImpl = function (headersDescriptor) {\n        onHeaders(new Headers(headersDescriptor));\n      });\n    var resources = createResumableState(\n        options ? options.identifierPrefix : void 0,\n        options ? options.unstable_externalRuntimeSrc : void 0,\n        options ? options.bootstrapScriptContent : void 0,\n        options ? options.bootstrapScripts : void 0,\n        options ? options.bootstrapModules : void 0\n      ),\n      request = createPrerenderRequest(\n        children,\n        resources,\n        createRenderState(\n          resources,\n          void 0,\n          options ? options.unstable_externalRuntimeSrc : void 0,\n          options ? options.importMap : void 0,\n          onHeadersImpl,\n          options ? options.maxHeadersLength : void 0\n        ),\n        createRootFormatContext(options ? options.namespaceURI : void 0),\n        options ? options.progressiveChunkSize : void 0,\n        options ? options.onError : void 0,\n        function () {\n          var result = {\n            prelude: new ReadableStream(\n              {\n                type: \"bytes\",\n                pull: function (controller) {\n                  startFlowing(request, controller);\n                },\n                cancel: function (reason) {\n                  request.destination = null;\n                  abort(request, reason);\n                }\n              },\n              { highWaterMark: 0 }\n            )\n          };\n          resolve(result);\n        },\n        void 0,\n        void 0,\n        reject,\n        options ? options.onPostpone : void 0\n      );\n    if (options && options.signal) {\n      var signal = options.signal;\n      if (signal.aborted) abort(request, signal.reason);\n      else {\n        var listener = function () {\n          abort(request, signal.reason);\n          signal.removeEventListener(\"abort\", listener);\n        };\n        signal.addEventListener(\"abort\", listener);\n      }\n    }\n    startWork(request);\n  });\n};\nexports.renderToReadableStream = function (children, options) {\n  return new Promise(function (resolve, reject) {\n    var onFatalError,\n      onAllReady,\n      allReady = new Promise(function (res, rej) {\n        onAllReady = res;\n        onFatalError = rej;\n      }),\n      onHeaders = options ? options.onHeaders : void 0,\n      onHeadersImpl;\n    onHeaders &&\n      (onHeadersImpl = function (headersDescriptor) {\n        onHeaders(new Headers(headersDescriptor));\n      });\n    var resumableState = createResumableState(\n        options ? options.identifierPrefix : void 0,\n        options ? options.unstable_externalRuntimeSrc : void 0,\n        options ? options.bootstrapScriptContent : void 0,\n        options ? options.bootstrapScripts : void 0,\n        options ? options.bootstrapModules : void 0\n      ),\n      request = createRequest(\n        children,\n        resumableState,\n        createRenderState(\n          resumableState,\n          options ? options.nonce : void 0,\n          options ? options.unstable_externalRuntimeSrc : void 0,\n          options ? options.importMap : void 0,\n          onHeadersImpl,\n          options ? options.maxHeadersLength : void 0\n        ),\n        createRootFormatContext(options ? options.namespaceURI : void 0),\n        options ? options.progressiveChunkSize : void 0,\n        options ? options.onError : void 0,\n        onAllReady,\n        function () {\n          var stream = new ReadableStream(\n            {\n              type: \"bytes\",\n              pull: function (controller) {\n                startFlowing(request, controller);\n              },\n              cancel: function (reason) {\n                request.destination = null;\n                abort(request, reason);\n              }\n            },\n            { highWaterMark: 0 }\n          );\n          stream.allReady = allReady;\n          resolve(stream);\n        },\n        function (error) {\n          allReady.catch(function () {});\n          reject(error);\n        },\n        onFatalError,\n        options ? options.onPostpone : void 0,\n        options ? options.formState : void 0\n      );\n    if (options && options.signal) {\n      var signal = options.signal;\n      if (signal.aborted) abort(request, signal.reason);\n      else {\n        var listener = function () {\n          abort(request, signal.reason);\n          signal.removeEventListener(\"abort\", listener);\n        };\n        signal.addEventListener(\"abort\", listener);\n      }\n    }\n    startWork(request);\n  });\n};\n\n// This is a patch added by Next.js\nconst setTimeoutOrImmediate =\n  typeof globalThis['set' + 'Immediate'] === 'function' &&\n  // edge runtime sandbox defines a stub for setImmediate\n  // (see 'addStub' in packages/next/src/server/web/sandbox/context.ts)\n  // but it's made non-enumerable, so we can detect it\n  globalThis.propertyIsEnumerable('setImmediate')\n    ? globalThis['set' + 'Immediate']\n    : setTimeout;\n\nexports.version = \"19.2.0-canary-3fbfb9ba-20250409\";\n","// regexp is based on https://github.com/sindresorhus/escape-string-regexp\nconst reHasRegExp = /[|\\\\{}()[\\]^$+*?.-]/\nconst reReplaceRegExp = /[|\\\\{}()[\\]^$+*?.-]/g\n\nexport function escapeStringRegexp(str: string) {\n  // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23\n  if (reHasRegExp.test(str)) {\n    return str.replace(reReplaceRegExp, '\\\\$&')\n  }\n  return str\n}\n","import React from 'react'\n\nconst styles: Record<string, React.CSSProperties> = {\n  error: {\n    // https://github.com/sindresorhus/modern-normalize/blob/main/modern-normalize.css#L38-L52\n    fontFamily:\n      'system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"',\n    height: '100vh',\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  desc: {\n    display: 'inline-block',\n  },\n\n  h1: {\n    display: 'inline-block',\n    margin: '0 20px 0 0',\n    padding: '0 23px 0 0',\n    fontSize: 24,\n    fontWeight: 500,\n    verticalAlign: 'top',\n    lineHeight: '49px',\n  },\n\n  h2: {\n    fontSize: 14,\n    fontWeight: 400,\n    lineHeight: '49px',\n    margin: 0,\n  },\n}\n\nexport function HTTPAccessErrorFallback({\n  status,\n  message,\n}: {\n  status: number\n  message: string\n}) {\n  return (\n    <>\n      {/* <head> */}\n      <title>{`${status}: ${message}`}</title>\n      {/* </head> */}\n      <div style={styles.error}>\n        <div>\n          <style\n            dangerouslySetInnerHTML={{\n              /* Minified CSS from\n                body { margin: 0; color: #000; background: #fff; }\n                .next-error-h1 {\n                  border-right: 1px solid rgba(0, 0, 0, .3);\n                }\n\n                @media (prefers-color-scheme: dark) {\n                  body { color: #fff; background: #000; }\n                  .next-error-h1 {\n                    border-right: 1px solid rgba(255, 255, 255, .3);\n                  }\n                }\n              */\n              __html: `body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}`,\n            }}\n          />\n          <h1 className=\"next-error-h1\" style={styles.h1}>\n            {status}\n          </h1>\n          <div style={styles.desc}>\n            <h2 style={styles.h2}>{message}</h2>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n","import { NEXT_CACHE_IMPLICIT_TAG_ID } from '../../lib/constants';\nimport { getCacheHandlerEntries } from '../use-cache/handlers';\nimport { createLazyResult } from './lazy-result';\nconst getDerivedTags = (pathname)=>{\n    const derivedTags = [\n        `/layout`\n    ];\n    // we automatically add the current path segments as tags\n    // for revalidatePath handling\n    if (pathname.startsWith('/')) {\n        const pathnameParts = pathname.split('/');\n        for(let i = 1; i < pathnameParts.length + 1; i++){\n            let curPathname = pathnameParts.slice(0, i).join('/');\n            if (curPathname) {\n                // all derived tags other than the page are layout tags\n                if (!curPathname.endsWith('/page') && !curPathname.endsWith('/route')) {\n                    curPathname = `${curPathname}${!curPathname.endsWith('/') ? '/' : ''}layout`;\n                }\n                derivedTags.push(curPathname);\n            }\n        }\n    }\n    return derivedTags;\n};\n/**\n * Creates a map with lazy results that fetch the expiration value for the given\n * tags and respective cache kind when they're awaited for the first time.\n */ function createTagsExpirationsByCacheKind(tags) {\n    const expirationsByCacheKind = new Map();\n    const cacheHandlers = getCacheHandlerEntries();\n    if (cacheHandlers) {\n        for (const [kind, cacheHandler] of cacheHandlers){\n            if ('getExpiration' in cacheHandler) {\n                expirationsByCacheKind.set(kind, createLazyResult(async ()=>cacheHandler.getExpiration(...tags)));\n            }\n        }\n    }\n    return expirationsByCacheKind;\n}\nexport async function getImplicitTags(page, url, fallbackRouteParams) {\n    const tags = [];\n    const hasFallbackRouteParams = fallbackRouteParams && fallbackRouteParams.size > 0;\n    // Add the derived tags from the page.\n    const derivedTags = getDerivedTags(page);\n    for (let tag of derivedTags){\n        tag = `${NEXT_CACHE_IMPLICIT_TAG_ID}${tag}`;\n        tags.push(tag);\n    }\n    // Add the tags from the pathname. If the route has unknown params, we don't\n    // want to add the pathname as a tag, as it will be invalid.\n    if (url.pathname && !hasFallbackRouteParams) {\n        const tag = `${NEXT_CACHE_IMPLICIT_TAG_ID}${url.pathname}`;\n        tags.push(tag);\n    }\n    return {\n        tags,\n        expirationsByCacheKind: createTagsExpirationsByCacheKind(tags)\n    };\n}\n\n//# sourceMappingURL=implicit-tags.js.map","// Buffer.byteLength polyfill in the Edge runtime, with only utf8 strings\n// supported at the moment.\nexport function byteLength(payload) {\n    return new TextEncoder().encode(payload).buffer.byteLength;\n}\n\n//# sourceMappingURL=web.js.map","import { getRouteMatcher } from '../../shared/lib/router/utils/route-matcher';\nimport { getRouteRegex } from '../../shared/lib/router/utils/route-regex';\nexport function getParamKeys(page) {\n    const pattern = getRouteRegex(page);\n    const matcher = getRouteMatcher(pattern);\n    // Get the default list of allowed params.\n    return Object.keys(matcher(page));\n}\nexport function getFallbackRouteParams(pageOrKeys) {\n    let keys;\n    if (typeof pageOrKeys === 'string') {\n        keys = getParamKeys(pageOrKeys);\n    } else {\n        keys = pageOrKeys;\n    }\n    // If there are no keys, we can return early.\n    if (keys.length === 0) return null;\n    const params = new Map();\n    // As we're creating unique keys for each of the dynamic route params, we only\n    // need to generate a unique ID once per request because each of the keys will\n    // be also be unique.\n    const uniqueID = Math.random().toString(16).slice(2);\n    for (const key of keys){\n        params.set(key, `%%drp:${key}:${uniqueID}%%`);\n    }\n    return params;\n}\n\n//# sourceMappingURL=fallback-params.js.map","// Regex from `node/lib/internal/net.js`: https://github.com/nodejs/node/blob/9fc57006c27564ed7f75eee090eca86786508f51/lib/internal/net.js#L19-L29\n// License included below:\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\nconst v6Seg = '(?:[0-9a-fA-F]{1,4})';\nconst IPv6Reg = new RegExp('^(' + `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` + `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` + `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1,2}|:)|` + `(?:${v6Seg}:){4}(?:(:${v6Seg}){0,1}:${v4Str}|(:${v6Seg}){1,3}|:)|` + `(?:${v6Seg}:){3}(?:(:${v6Seg}){0,2}:${v4Str}|(:${v6Seg}){1,4}|:)|` + `(?:${v6Seg}:){2}(?:(:${v6Seg}){0,3}:${v4Str}|(:${v6Seg}){1,5}|:)|` + `(?:${v6Seg}:){1}(?:(:${v6Seg}){0,4}:${v4Str}|(:${v6Seg}){1,6}|:)|` + `(?::((?::${v6Seg}){0,5}:${v4Str}|(?::${v6Seg}){1,7}|:))` + ')(%[0-9a-zA-Z-.:]{1,})?$');\nexport function isIPv6(s) {\n    return IPv6Reg.test(s);\n}\n\n//# sourceMappingURL=is-ipv6.js.map","import { isIPv6 } from './is-ipv6';\n/**\n * Formats a hostname so that it is a valid host that can be fetched by wrapping\n * IPv6 hosts with brackets.\n * @param hostname\n * @returns\n */ export function formatHostname(hostname) {\n    return isIPv6(hostname) ? `[${hostname}]` : hostname;\n}\n\n//# sourceMappingURL=format-hostname.js.map","import { RedirectStatusCode } from '../client/components/redirect-status-code';\nexport const allowedStatusCodes = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nexport function getRedirectStatus(route) {\n    return route.statusCode || (route.permanent ? RedirectStatusCode.PermanentRedirect : RedirectStatusCode.TemporaryRedirect);\n}\n// for redirects we restrict matching /_next and for all routes\n// we add an optional trailing slash at the end for easier\n// configuring between trailingSlash: true/false\nexport function modifyRouteRegex(regex, restrictedPaths) {\n    if (restrictedPaths) {\n        regex = regex.replace(/\\^/, `^(?!${restrictedPaths.map((path)=>path.replace(/\\//g, '\\\\/')).join('|')})`);\n    }\n    regex = regex.replace(/\\$$/, '(?:\\\\/)?$');\n    return regex;\n}\n\n//# sourceMappingURL=redirect-status.js.map","import { SERVER_RUNTIME } from './constants';\nexport function isEdgeRuntime(value) {\n    return value === SERVER_RUNTIME.experimentalEdge || value === SERVER_RUNTIME.edge;\n}\n\n//# sourceMappingURL=is-edge-runtime.js.map","import MODERN_BROWSERSLIST_TARGET from './modern-browserslist-target'\n\nexport { MODERN_BROWSERSLIST_TARGET }\n\nexport type ValueOf<T> = Required<T>[keyof T]\n\nexport const COMPILER_NAMES = {\n  client: 'client',\n  server: 'server',\n  edgeServer: 'edge-server',\n} as const\n\nexport type CompilerNameValues = ValueOf<typeof COMPILER_NAMES>\n\nexport const COMPILER_INDEXES: {\n  [compilerKey in CompilerNameValues]: number\n} = {\n  [COMPILER_NAMES.client]: 0,\n  [COMPILER_NAMES.server]: 1,\n  [COMPILER_NAMES.edgeServer]: 2,\n} as const\n\nexport const UNDERSCORE_NOT_FOUND_ROUTE = '/_not-found'\nexport const UNDERSCORE_NOT_FOUND_ROUTE_ENTRY = `${UNDERSCORE_NOT_FOUND_ROUTE}/page`\nexport const PHASE_EXPORT = 'phase-export'\nexport const PHASE_PRODUCTION_BUILD = 'phase-production-build'\nexport const PHASE_PRODUCTION_SERVER = 'phase-production-server'\nexport const PHASE_DEVELOPMENT_SERVER = 'phase-development-server'\nexport const PHASE_TEST = 'phase-test'\nexport const PHASE_INFO = 'phase-info'\nexport const PAGES_MANIFEST = 'pages-manifest.json'\nexport const WEBPACK_STATS = 'webpack-stats.json'\nexport const APP_PATHS_MANIFEST = 'app-paths-manifest.json'\nexport const APP_PATH_ROUTES_MANIFEST = 'app-path-routes-manifest.json'\nexport const BUILD_MANIFEST = 'build-manifest.json'\nexport const APP_BUILD_MANIFEST = 'app-build-manifest.json'\nexport const FUNCTIONS_CONFIG_MANIFEST = 'functions-config-manifest.json'\nexport const SUBRESOURCE_INTEGRITY_MANIFEST = 'subresource-integrity-manifest'\nexport const NEXT_FONT_MANIFEST = 'next-font-manifest'\nexport const EXPORT_MARKER = 'export-marker.json'\nexport const EXPORT_DETAIL = 'export-detail.json'\nexport const PRERENDER_MANIFEST = 'prerender-manifest.json'\nexport const ROUTES_MANIFEST = 'routes-manifest.json'\nexport const IMAGES_MANIFEST = 'images-manifest.json'\nexport const SERVER_FILES_MANIFEST = 'required-server-files.json'\nexport const DEV_CLIENT_PAGES_MANIFEST = '_devPagesManifest.json'\nexport const MIDDLEWARE_MANIFEST = 'middleware-manifest.json'\nexport const TURBOPACK_CLIENT_MIDDLEWARE_MANIFEST =\n  '_clientMiddlewareManifest.json'\nexport const DEV_CLIENT_MIDDLEWARE_MANIFEST = '_devMiddlewareManifest.json'\nexport const REACT_LOADABLE_MANIFEST = 'react-loadable-manifest.json'\nexport const SERVER_DIRECTORY = 'server'\nexport const CONFIG_FILES = [\n  'next.config.js',\n  'next.config.mjs',\n  'next.config.ts',\n]\nexport const BUILD_ID_FILE = 'BUILD_ID'\nexport const BLOCKED_PAGES = ['/_document', '/_app', '/_error']\nexport const CLIENT_PUBLIC_FILES_PATH = 'public'\nexport const CLIENT_STATIC_FILES_PATH = 'static'\nexport const STRING_LITERAL_DROP_BUNDLE = '__NEXT_DROP_CLIENT_FILE__'\nexport const NEXT_BUILTIN_DOCUMENT = '__NEXT_BUILTIN_DOCUMENT__'\nexport const BARREL_OPTIMIZATION_PREFIX = '__barrel_optimize__'\n\n// server/[entry]/page_client-reference-manifest.js\nexport const CLIENT_REFERENCE_MANIFEST = 'client-reference-manifest'\n// server/server-reference-manifest\nexport const SERVER_REFERENCE_MANIFEST = 'server-reference-manifest'\n// server/middleware-build-manifest.js\nexport const MIDDLEWARE_BUILD_MANIFEST = 'middleware-build-manifest'\n// server/middleware-react-loadable-manifest.js\nexport const MIDDLEWARE_REACT_LOADABLE_MANIFEST =\n  'middleware-react-loadable-manifest'\n// server/interception-route-rewrite-manifest.js\nexport const INTERCEPTION_ROUTE_REWRITE_MANIFEST =\n  'interception-route-rewrite-manifest'\n// server/dynamic-css-manifest.js\nexport const DYNAMIC_CSS_MANIFEST = 'dynamic-css-manifest'\n\n// static/runtime/main.js\nexport const CLIENT_STATIC_FILES_RUNTIME_MAIN = `main`\nexport const CLIENT_STATIC_FILES_RUNTIME_MAIN_APP = `${CLIENT_STATIC_FILES_RUNTIME_MAIN}-app`\n// next internal client components chunk for layouts\nexport const APP_CLIENT_INTERNALS = 'app-pages-internals'\n// static/runtime/react-refresh.js\nexport const CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH = `react-refresh`\n// static/runtime/amp.js\nexport const CLIENT_STATIC_FILES_RUNTIME_AMP = `amp`\n// static/runtime/webpack.js\nexport const CLIENT_STATIC_FILES_RUNTIME_WEBPACK = `webpack`\n// static/runtime/polyfills.js\nexport const CLIENT_STATIC_FILES_RUNTIME_POLYFILLS = 'polyfills'\nexport const CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL = Symbol(\n  CLIENT_STATIC_FILES_RUNTIME_POLYFILLS\n)\nexport const DEFAULT_RUNTIME_WEBPACK = 'webpack-runtime'\nexport const EDGE_RUNTIME_WEBPACK = 'edge-runtime-webpack'\nexport const STATIC_PROPS_ID = '__N_SSG'\nexport const SERVER_PROPS_ID = '__N_SSP'\nexport const DEFAULT_SERIF_FONT = {\n  name: 'Times New Roman',\n  xAvgCharWidth: 821,\n  azAvgWidth: 854.3953488372093,\n  unitsPerEm: 2048,\n}\nexport const DEFAULT_SANS_SERIF_FONT = {\n  name: 'Arial',\n  xAvgCharWidth: 904,\n  azAvgWidth: 934.5116279069767,\n  unitsPerEm: 2048,\n}\nexport const STATIC_STATUS_PAGES = ['/500']\nexport const TRACE_OUTPUT_VERSION = 1\n// in `MB`\nexport const TURBO_TRACE_DEFAULT_MEMORY_LIMIT = 6000\n\nexport const RSC_MODULE_TYPES = {\n  client: 'client',\n  server: 'server',\n} as const\n\n// comparing\n// https://nextjs.org/docs/api-reference/edge-runtime\n// with\n// https://nodejs.org/docs/latest/api/globals.html\nexport const EDGE_UNSUPPORTED_NODE_APIS = [\n  'clearImmediate',\n  'setImmediate',\n  'BroadcastChannel',\n  'ByteLengthQueuingStrategy',\n  'CompressionStream',\n  'CountQueuingStrategy',\n  'DecompressionStream',\n  'DomException',\n  'MessageChannel',\n  'MessageEvent',\n  'MessagePort',\n  'ReadableByteStreamController',\n  'ReadableStreamBYOBRequest',\n  'ReadableStreamDefaultController',\n  'TransformStreamDefaultController',\n  'WritableStreamDefaultController',\n]\n\nexport const SYSTEM_ENTRYPOINTS = new Set<string>([\n  CLIENT_STATIC_FILES_RUNTIME_MAIN,\n  CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n  CLIENT_STATIC_FILES_RUNTIME_AMP,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN_APP,\n])\n","let runtimeConfig: any\n\nexport default () => {\n  return runtimeConfig\n}\n\nexport function setConfig(configValue: any): void {\n  runtimeConfig = configValue\n}\n","import { CACHE_ONE_YEAR } from '../../lib/constants';\nexport function getCacheControlHeader({ revalidate, expire }) {\n    const swrHeader = typeof revalidate === 'number' && expire !== undefined && revalidate < expire ? `, stale-while-revalidate=${expire - revalidate}` : '';\n    if (revalidate === 0) {\n        return 'private, no-cache, no-store, max-age=0, must-revalidate';\n    } else if (typeof revalidate === 'number') {\n        return `s-maxage=${revalidate}${swrHeader}`;\n    }\n    return `s-maxage=${CACHE_ONE_YEAR}${swrHeader}`;\n}\n\n//# sourceMappingURL=cache-control.js.map","import { BLOCKED_PAGES } from '../shared/lib/constants';\nexport function isBlockedPage(page) {\n    return BLOCKED_PAGES.includes(page);\n}\nexport function cleanAmpPath(pathname) {\n    if (pathname.match(/\\?amp=(y|yes|true|1)/)) {\n        pathname = pathname.replace(/\\?amp=(y|yes|true|1)&?/, '?');\n    }\n    if (pathname.match(/&amp=(y|yes|true|1)/)) {\n        pathname = pathname.replace(/&amp=(y|yes|true|1)/, '');\n    }\n    pathname = pathname.replace(/\\?$/, '');\n    return pathname;\n}\nexport function debounce(fn, ms, maxWait = Infinity) {\n    let timeoutId;\n    // The time the debouncing function was first called during this debounce queue.\n    let startTime = 0;\n    // The time the debouncing function was last called.\n    let lastCall = 0;\n    // The arguments and this context of the last call to the debouncing function.\n    let args, context;\n    // A helper used to that either invokes the debounced function, or\n    // reschedules the timer if a more recent call was made.\n    function run() {\n        const now = Date.now();\n        const diff = lastCall + ms - now;\n        // If the diff is non-positive, then we've waited at least `ms`\n        // milliseconds since the last call. Or if we've waited for longer than the\n        // max wait time, we must call the debounced function.\n        if (diff <= 0 || startTime + maxWait >= now) {\n            // It's important to clear the timeout id before invoking the debounced\n            // function, in case the function calls the debouncing function again.\n            timeoutId = undefined;\n            fn.apply(context, args);\n        } else {\n            // Else, a new call was made after the original timer was scheduled. We\n            // didn't clear the timeout (doing so is very slow), so now we need to\n            // reschedule the timer for the time difference.\n            timeoutId = setTimeout(run, diff);\n        }\n    }\n    return function(...passedArgs) {\n        // The arguments and this context of the most recent call are saved so the\n        // debounced function can be invoked with them later.\n        args = passedArgs;\n        context = this;\n        // Instead of constantly clearing and scheduling a timer, we record the\n        // time of the last call. If a second call comes in before the timer fires,\n        // then we'll reschedule in the run function. Doing this is considerably\n        // faster.\n        lastCall = Date.now();\n        // Only schedule a new timer if we're not currently waiting.\n        if (timeoutId === undefined) {\n            startTime = lastCall;\n            timeoutId = setTimeout(run, ms);\n        }\n    };\n}\n\n//# sourceMappingURL=utils.js.map","/**\n * For a given page path, this function ensures that there is no backslash\n * escaping slashes in the path. Example:\n *  - `foo\\/bar\\/baz` -> `foo/bar/baz`\n */\nexport function normalizePathSep(path: string): string {\n  return path.replace(/\\\\/g, '/')\n}\n","import { isDynamicRoute } from '../router/utils'\nimport { normalizePathSep } from './normalize-path-sep'\n\n/**\n * Performs the opposite transformation of `normalizePagePath`. Note that\n * this function is not idempotent either in cases where there are multiple\n * leading `/index` for the page. Examples:\n *  - `/index` -> `/`\n *  - `/index/foo` -> `/foo`\n *  - `/index/index` -> `/index`\n */\nexport function denormalizePagePath(page: string) {\n  let _page = normalizePathSep(page)\n  return _page.startsWith('/index/') && !isDynamicRoute(_page)\n    ? _page.slice(6)\n    : _page !== '/index'\n      ? _page\n      : '/'\n}\n","/**\n * Normalizes the pathname by removing the locale prefix if any.\n */ export class LocaleRouteNormalizer {\n    constructor(provider){\n        this.provider = provider;\n    }\n    /**\n   * Normalizes the pathname by removing the locale prefix if any.\n   *\n   * @param pathname The pathname to normalize.\n   * @returns The pathname without the locale prefix (if any).\n   */ normalize(pathname) {\n        const match = this.provider.analyze(pathname);\n        return match.pathname;\n    }\n}\n\n//# sourceMappingURL=locale-route-normalizer.js.map","class UrlNode {\n  placeholder: boolean = true\n  children: Map<string, UrlNode> = new Map()\n  slugName: string | null = null\n  restSlugName: string | null = null\n  optionalRestSlugName: string | null = null\n\n  insert(urlPath: string): void {\n    this._insert(urlPath.split('/').filter(Boolean), [], false)\n  }\n\n  smoosh(): string[] {\n    return this._smoosh()\n  }\n\n  private _smoosh(prefix: string = '/'): string[] {\n    const childrenPaths = [...this.children.keys()].sort()\n    if (this.slugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[]'), 1)\n    }\n    if (this.restSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[...]'), 1)\n    }\n    if (this.optionalRestSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[[...]]'), 1)\n    }\n\n    const routes = childrenPaths\n      .map((c) => this.children.get(c)!._smoosh(`${prefix}${c}/`))\n      .reduce((prev, curr) => [...prev, ...curr], [])\n\n    if (this.slugName !== null) {\n      routes.push(\n        ...this.children.get('[]')!._smoosh(`${prefix}[${this.slugName}]/`)\n      )\n    }\n\n    if (!this.placeholder) {\n      const r = prefix === '/' ? '/' : prefix.slice(0, -1)\n      if (this.optionalRestSlugName != null) {\n        throw new Error(\n          `You cannot define a route with the same specificity as a optional catch-all route (\"${r}\" and \"${r}[[...${this.optionalRestSlugName}]]\").`\n        )\n      }\n\n      routes.unshift(r)\n    }\n\n    if (this.restSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[...]')!\n          ._smoosh(`${prefix}[...${this.restSlugName}]/`)\n      )\n    }\n\n    if (this.optionalRestSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[[...]]')!\n          ._smoosh(`${prefix}[[...${this.optionalRestSlugName}]]/`)\n      )\n    }\n\n    return routes\n  }\n\n  private _insert(\n    urlPaths: string[],\n    slugNames: string[],\n    isCatchAll: boolean\n  ): void {\n    if (urlPaths.length === 0) {\n      this.placeholder = false\n      return\n    }\n\n    if (isCatchAll) {\n      throw new Error(`Catch-all must be the last part of the URL.`)\n    }\n\n    // The next segment in the urlPaths list\n    let nextSegment = urlPaths[0]\n\n    // Check if the segment matches `[something]`\n    if (nextSegment.startsWith('[') && nextSegment.endsWith(']')) {\n      // Strip `[` and `]`, leaving only `something`\n      let segmentName = nextSegment.slice(1, -1)\n\n      let isOptional = false\n      if (segmentName.startsWith('[') && segmentName.endsWith(']')) {\n        // Strip optional `[` and `]`, leaving only `something`\n        segmentName = segmentName.slice(1, -1)\n        isOptional = true\n      }\n\n      if (segmentName.startsWith('…')) {\n        throw new Error(\n          `Detected a three-dot character ('…') at ('${segmentName}'). Did you mean ('...')?`\n        )\n      }\n\n      if (segmentName.startsWith('...')) {\n        // Strip `...`, leaving only `something`\n        segmentName = segmentName.substring(3)\n        isCatchAll = true\n      }\n\n      if (segmentName.startsWith('[') || segmentName.endsWith(']')) {\n        throw new Error(\n          `Segment names may not start or end with extra brackets ('${segmentName}').`\n        )\n      }\n\n      if (segmentName.startsWith('.')) {\n        throw new Error(\n          `Segment names may not start with erroneous periods ('${segmentName}').`\n        )\n      }\n\n      function handleSlug(previousSlug: string | null, nextSlug: string) {\n        if (previousSlug !== null) {\n          // If the specific segment already has a slug but the slug is not `something`\n          // This prevents collisions like:\n          // pages/[post]/index.js\n          // pages/[id]/index.js\n          // Because currently multiple dynamic params on the same segment level are not supported\n          if (previousSlug !== nextSlug) {\n            // TODO: This error seems to be confusing for users, needs an error link, the description can be based on above comment.\n            throw new Error(\n              `You cannot use different slug names for the same dynamic path ('${previousSlug}' !== '${nextSlug}').`\n            )\n          }\n        }\n\n        slugNames.forEach((slug) => {\n          if (slug === nextSlug) {\n            throw new Error(\n              `You cannot have the same slug name \"${nextSlug}\" repeat within a single dynamic path`\n            )\n          }\n\n          if (slug.replace(/\\W/g, '') === nextSegment.replace(/\\W/g, '')) {\n            throw new Error(\n              `You cannot have the slug names \"${slug}\" and \"${nextSlug}\" differ only by non-word symbols within a single dynamic path`\n            )\n          }\n        })\n\n        slugNames.push(nextSlug)\n      }\n\n      if (isCatchAll) {\n        if (isOptional) {\n          if (this.restSlugName != null) {\n            throw new Error(\n              `You cannot use both an required and optional catch-all route at the same level (\"[...${this.restSlugName}]\" and \"${urlPaths[0]}\" ).`\n            )\n          }\n\n          handleSlug(this.optionalRestSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.optionalRestSlugName = segmentName\n          // nextSegment is overwritten to [[...]] so that it can later be sorted specifically\n          nextSegment = '[[...]]'\n        } else {\n          if (this.optionalRestSlugName != null) {\n            throw new Error(\n              `You cannot use both an optional and required catch-all route at the same level (\"[[...${this.optionalRestSlugName}]]\" and \"${urlPaths[0]}\").`\n            )\n          }\n\n          handleSlug(this.restSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.restSlugName = segmentName\n          // nextSegment is overwritten to [...] so that it can later be sorted specifically\n          nextSegment = '[...]'\n        }\n      } else {\n        if (isOptional) {\n          throw new Error(\n            `Optional route parameters are not yet supported (\"${urlPaths[0]}\").`\n          )\n        }\n        handleSlug(this.slugName, segmentName)\n        // slugName is kept as it can only be one particular slugName\n        this.slugName = segmentName\n        // nextSegment is overwritten to [] so that it can later be sorted specifically\n        nextSegment = '[]'\n      }\n    }\n\n    // If this UrlNode doesn't have the nextSegment yet we create a new child UrlNode\n    if (!this.children.has(nextSegment)) {\n      this.children.set(nextSegment, new UrlNode())\n    }\n\n    this.children\n      .get(nextSegment)!\n      ._insert(urlPaths.slice(1), slugNames, isCatchAll)\n  }\n}\n\nexport function getSortedRoutes(\n  normalizedPages: ReadonlyArray<string>\n): string[] {\n  // First the UrlNode is created, and every UrlNode can have only 1 dynamic segment\n  // Eg you can't have pages/[post]/abc.js and pages/[hello]/something-else.js\n  // Only 1 dynamic segment per nesting level\n\n  // So in the case that is test/integration/dynamic-routing it'll be this:\n  // pages/[post]/comments.js\n  // pages/blog/[post]/comment/[id].js\n  // Both are fine because `pages/[post]` and `pages/blog` are on the same level\n  // So in this case `UrlNode` created here has `this.slugName === 'post'`\n  // And since your PR passed through `slugName` as an array basically it'd including it in too many possibilities\n  // Instead what has to be passed through is the upwards path's dynamic names\n  const root = new UrlNode()\n\n  // Here the `root` gets injected multiple paths, and insert will break them up into sublevels\n  normalizedPages.forEach((pagePath) => root.insert(pagePath))\n  // Smoosh will then sort those sublevels up to the point where you get the correct route definition priority\n  return root.smoosh()\n}\n\nexport function getSortedRouteObjects<T>(\n  objects: T[],\n  getter: (obj: T) => string\n): T[] {\n  // We're assuming here that all the pathnames are unique, that way we can\n  // sort the list and use the index as the key.\n  const indexes: Record<string, number> = {}\n  const pathnames: string[] = []\n  for (let i = 0; i < objects.length; i++) {\n    const pathname = getter(objects[i])\n    indexes[pathname] = i\n    pathnames[i] = pathname\n  }\n\n  // Sort the pathnames.\n  const sorted = getSortedRoutes(pathnames)\n\n  // Map the sorted pathnames back to the original objects using the new sorted\n  // index.\n  return sorted.map((pathname) => objects[indexes[pathname]])\n}\n","import { isDynamicRoute } from '../../shared/lib/router/utils';\nimport { getRouteMatcher } from '../../shared/lib/router/utils/route-matcher';\nimport { getRouteRegex } from '../../shared/lib/router/utils/route-regex';\nexport class RouteMatcher {\n    constructor(definition){\n        this.definition = definition;\n        if (isDynamicRoute(definition.pathname)) {\n            this.dynamic = getRouteMatcher(getRouteRegex(definition.pathname));\n        }\n    }\n    /**\n   * Identity returns the identity part of the matcher. This is used to compare\n   * a unique matcher to another. This is also used when sorting dynamic routes,\n   * so it must contain the pathname part.\n   */ get identity() {\n        return this.definition.pathname;\n    }\n    get isDynamic() {\n        return this.dynamic !== undefined;\n    }\n    match(pathname) {\n        const result = this.test(pathname);\n        if (!result) return null;\n        return {\n            definition: this.definition,\n            params: result.params\n        };\n    }\n    test(pathname) {\n        if (this.dynamic) {\n            const params = this.dynamic(pathname);\n            if (!params) return null;\n            return {\n                params\n            };\n        }\n        if (pathname === this.definition.pathname) {\n            return {};\n        }\n        return null;\n    }\n}\n\n//# sourceMappingURL=route-matcher.js.map","import { RouteMatcher } from './route-matcher';\nexport class LocaleRouteMatcher extends RouteMatcher {\n    /**\n   * Identity returns the identity part of the matcher. This is used to compare\n   * a unique matcher to another. This is also used when sorting dynamic routes,\n   * so it must contain the pathname part as well.\n   */ get identity() {\n        var _this_definition_i18n;\n        return `${this.definition.pathname}?__nextLocale=${(_this_definition_i18n = this.definition.i18n) == null ? void 0 : _this_definition_i18n.locale}`;\n    }\n    /**\n   * Match will attempt to match the given pathname against this route while\n   * also taking into account the locale information.\n   *\n   * @param pathname The pathname to match against.\n   * @param options The options to use when matching.\n   * @returns The match result, or `null` if there was no match.\n   */ match(pathname, options) {\n        var // If the options have a detected locale, then use that, otherwise use\n        // the route's locale.\n        _options_i18n, _this_definition_i18n;\n        // This is like the parent `match` method but instead this injects the\n        // additional `options` into the\n        const result = this.test(pathname, options);\n        if (!result) return null;\n        return {\n            definition: this.definition,\n            params: result.params,\n            detectedLocale: (options == null ? void 0 : (_options_i18n = options.i18n) == null ? void 0 : _options_i18n.detectedLocale) ?? ((_this_definition_i18n = this.definition.i18n) == null ? void 0 : _this_definition_i18n.locale)\n        };\n    }\n    /**\n   * Test will attempt to match the given pathname against this route while\n   * also taking into account the locale information.\n   *\n   * @param pathname The pathname to match against.\n   * @param options The options to use when matching.\n   * @returns The match result, or `null` if there was no match.\n   */ test(pathname, options) {\n        // If this route has locale information and we have detected a locale, then\n        // we need to compare the detected locale to the route's locale.\n        if (this.definition.i18n && (options == null ? void 0 : options.i18n)) {\n            // If we have detected a locale and it does not match this route's locale,\n            // then this isn't a match!\n            if (this.definition.i18n.locale && options.i18n.detectedLocale && this.definition.i18n.locale !== options.i18n.detectedLocale) {\n                return null;\n            }\n            // Perform regular matching against the locale stripped pathname now, the\n            // locale information matches!\n            return super.test(options.i18n.pathname);\n        }\n        // If we don't have locale information, then we can just perform regular\n        // matching.\n        return super.test(pathname);\n    }\n}\n\n//# sourceMappingURL=locale-route-matcher.js.map","import { isDynamicRoute } from '../../shared/lib/router/utils';\nimport { getSortedRoutes } from '../../shared/lib/router/utils';\nimport { LocaleRouteMatcher } from '../route-matchers/locale-route-matcher';\nimport { ensureLeadingSlash } from '../../shared/lib/page-path/ensure-leading-slash';\nimport { DetachedPromise } from '../../lib/detached-promise';\nexport class DefaultRouteMatcherManager {\n    /**\n   * When this value changes, it indicates that a change has been introduced\n   * that requires recompilation.\n   */ get compilationID() {\n        return this.providers.length;\n    }\n    async waitTillReady() {\n        if (this.waitTillReadyPromise) {\n            await this.waitTillReadyPromise;\n            delete this.waitTillReadyPromise;\n        }\n    }\n    async reload() {\n        const { promise, resolve, reject } = new DetachedPromise();\n        this.waitTillReadyPromise = promise;\n        // Grab the compilation ID for this run, we'll verify it at the end to\n        // ensure that if any routes were added before reloading is finished that\n        // we error out.\n        const compilationID = this.compilationID;\n        try {\n            // Collect all the matchers from each provider.\n            const matchers = [];\n            // Get all the providers matchers.\n            const providersMatchers = await Promise.all(this.providers.map((provider)=>provider.matchers()));\n            // Use this to detect duplicate pathnames.\n            const all = new Map();\n            const duplicates = {};\n            for (const providerMatchers of providersMatchers){\n                for (const matcher of providerMatchers){\n                    // Reset duplicated matches when reloading from pages conflicting state.\n                    if (matcher.duplicated) delete matcher.duplicated;\n                    // Test to see if the matcher being added is a duplicate.\n                    const duplicate = all.get(matcher.definition.pathname);\n                    if (duplicate) {\n                        // This looks a little weird, but essentially if the pathname\n                        // already exists in the duplicates map, then we got that array\n                        // reference. Otherwise, we create a new array with the original\n                        // duplicate first. Then we push the new matcher into the duplicate\n                        // array, and reset it to the duplicates object (which may be a\n                        // no-op if the pathname already existed in the duplicates object).\n                        // Then we set the array of duplicates on both the original\n                        // duplicate object and the new one, so we can keep them in sync.\n                        // If a new duplicate is found, and it matches an existing pathname,\n                        // the retrieval of the `other` will actually return the array\n                        // reference used by all other duplicates. This is why ReadonlyArray\n                        // is so important! Array's are always references!\n                        const others = duplicates[matcher.definition.pathname] ?? [\n                            duplicate\n                        ];\n                        others.push(matcher);\n                        duplicates[matcher.definition.pathname] = others;\n                        // Add duplicated details to each route.\n                        duplicate.duplicated = others;\n                        matcher.duplicated = others;\n                    // TODO: see if we should error for duplicates in production?\n                    }\n                    matchers.push(matcher);\n                    // Add the matcher's pathname to the set.\n                    all.set(matcher.definition.pathname, matcher);\n                }\n            }\n            // Update the duplicate matchers. This is used in the development manager\n            // to warn about duplicates.\n            this.matchers.duplicates = duplicates;\n            // If the cache is the same as what we just parsed, we can exit now. We\n            // can tell by using the `===` which compares object identity, which for\n            // the manifest matchers, will return the same matcher each time.\n            if (this.previousMatchers.length === matchers.length && this.previousMatchers.every((cachedMatcher, index)=>cachedMatcher === matchers[index])) {\n                return;\n            }\n            this.previousMatchers = matchers;\n            // For matchers that are for static routes, filter them now.\n            this.matchers.static = matchers.filter((matcher)=>!matcher.isDynamic);\n            // For matchers that are for dynamic routes, filter them and sort them now.\n            const dynamic = matchers.filter((matcher)=>matcher.isDynamic);\n            // As `getSortedRoutes` only takes an array of strings, we need to create\n            // a map of the pathnames (used for sorting) and the matchers. When we\n            // have locales, there may be multiple matches for the same pathname. To\n            // handle this, we keep a map of all the indexes (in `reference`) and\n            // merge them in later.\n            const reference = new Map();\n            const pathnames = new Array();\n            for(let index = 0; index < dynamic.length; index++){\n                // Grab the pathname from the definition.\n                const pathname = dynamic[index].definition.pathname;\n                // Grab the index in the dynamic array, push it into the reference.\n                const indexes = reference.get(pathname) ?? [];\n                indexes.push(index);\n                // If this is the first one set it. If it isn't, we don't need to\n                // because pushing above on the array will mutate the array already\n                // stored there because array's are always a reference!\n                if (indexes.length === 1) reference.set(pathname, indexes);\n                else continue;\n                pathnames.push(pathname);\n            }\n            // Sort the array of pathnames.\n            const sorted = getSortedRoutes(pathnames);\n            // For each of the sorted pathnames, iterate over them, grabbing the list\n            // of indexes and merging them back into the new `sortedDynamicMatchers`\n            // array. The order of the same matching pathname doesn't matter because\n            // they will have other matching characteristics (like the locale) that\n            // is considered.\n            const sortedDynamicMatchers = [];\n            for (const pathname of sorted){\n                const indexes = reference.get(pathname);\n                if (!Array.isArray(indexes)) {\n                    throw Object.defineProperty(new Error('Invariant: expected to find identity in indexes map'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E271\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                const dynamicMatches = indexes.map((index)=>dynamic[index]);\n                sortedDynamicMatchers.push(...dynamicMatches);\n            }\n            this.matchers.dynamic = sortedDynamicMatchers;\n            // This means that there was a new matcher pushed while we were waiting\n            if (this.compilationID !== compilationID) {\n                throw Object.defineProperty(new Error('Invariant: expected compilation to finish before new matchers were added, possible missing await'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E242\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        } catch (err) {\n            reject(err);\n        } finally{\n            // The compilation ID matched, so mark the complication as finished.\n            this.lastCompilationID = compilationID;\n            resolve();\n        }\n    }\n    push(provider) {\n        this.providers.push(provider);\n    }\n    async test(pathname, options) {\n        // See if there's a match for the pathname...\n        const match = await this.match(pathname, options);\n        // This default implementation only needs to check to see if there _was_ a\n        // match. The development matcher actually changes it's behavior by not\n        // recompiling the routes.\n        return match !== null;\n    }\n    async match(pathname, options) {\n        // \"Iterate\" over the match options. Once we found a single match, exit with\n        // it, otherwise return null below. If no match is found, the inner block\n        // won't be called.\n        for await (const match of this.matchAll(pathname, options)){\n            return match;\n        }\n        return null;\n    }\n    /**\n   * This is a point for other managers to override to inject other checking\n   * behavior like duplicate route checking on a per-request basis.\n   *\n   * @param pathname the pathname to validate against\n   * @param matcher the matcher to validate/test with\n   * @returns the match if found\n   */ validate(pathname, matcher, options) {\n        var _options_i18n;\n        if (matcher instanceof LocaleRouteMatcher) {\n            return matcher.match(pathname, options);\n        }\n        // If the locale was inferred from the default locale, then it will have\n        // already added a locale to the pathname. We need to remove it before\n        // matching because this matcher is not locale aware.\n        if ((_options_i18n = options.i18n) == null ? void 0 : _options_i18n.inferredFromDefault) {\n            return matcher.match(options.i18n.pathname);\n        }\n        return matcher.match(pathname);\n    }\n    async *matchAll(pathname, options) {\n        // Guard against the matcher manager from being run before it needs to be\n        // recompiled. This was preferred to re-running the compilation here because\n        // it should be re-ran only when it changes. If a match is attempted before\n        // this is done, it indicates that there is a case where a provider is added\n        // before it was recompiled (an error). We also don't want to affect request\n        // times.\n        if (this.lastCompilationID !== this.compilationID) {\n            throw Object.defineProperty(new Error('Invariant: expected routes to have been loaded before match'), \"__NEXT_ERROR_CODE\", {\n                value: \"E235\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        // Ensure that path matching is done with a leading slash.\n        pathname = ensureLeadingSlash(pathname);\n        // If this pathname doesn't look like a dynamic route, and this pathname is\n        // listed in the normalized list of routes, then return it. This ensures\n        // that when a route like `/user/[id]` is encountered, it doesn't just match\n        // with the list of normalized routes.\n        if (!isDynamicRoute(pathname)) {\n            for (const matcher of this.matchers.static){\n                const match = this.validate(pathname, matcher, options);\n                if (!match) continue;\n                yield match;\n            }\n        }\n        // If we should skip handling dynamic routes, exit now.\n        if (options == null ? void 0 : options.skipDynamic) return null;\n        // Loop over the dynamic matchers, yielding each match.\n        for (const matcher of this.matchers.dynamic){\n            const match = this.validate(pathname, matcher, options);\n            if (!match) continue;\n            yield match;\n        }\n        // We tried direct matching against the pathname and against all the dynamic\n        // paths, so there was no match.\n        return null;\n    }\n    constructor(){\n        this.providers = [];\n        this.matchers = {\n            static: [],\n            dynamic: [],\n            duplicates: {}\n        };\n        this.lastCompilationID = this.compilationID;\n        this.previousMatchers = [];\n    }\n}\n\n//# sourceMappingURL=default-route-matcher-manager.js.map","export function isAppPageRoute(route) {\n    return route.endsWith('/page');\n}\n\n//# sourceMappingURL=is-app-page-route.js.map","/**\n * Normalizers combines many normalizers into a single normalizer interface that\n * will normalize the inputted pathname with each normalizer in order.\n */ export class Normalizers {\n    constructor(normalizers = []){\n        this.normalizers = normalizers;\n    }\n    push(normalizer) {\n        this.normalizers.push(normalizer);\n    }\n    normalize(pathname) {\n        return this.normalizers.reduce((normalized, normalizer)=>normalizer.normalize(normalized), pathname);\n    }\n}\n\n//# sourceMappingURL=normalizers.js.map","import path from '../../shared/lib/isomorphic/path';\nexport class PrefixingNormalizer {\n    constructor(...prefixes){\n        this.prefix = path.posix.join(...prefixes);\n    }\n    normalize(pathname) {\n        return path.posix.join(this.prefix, pathname);\n    }\n}\n\n//# sourceMappingURL=prefixing-normalizer.js.map","import { Normalizers } from '../../normalizers';\nimport { PrefixingNormalizer } from '../../prefixing-normalizer';\nimport { normalizePagePath } from '../../../../shared/lib/page-path/normalize-page-path';\nexport class AppBundlePathNormalizer extends PrefixingNormalizer {\n    constructor(){\n        super('app');\n    }\n    normalize(page) {\n        return super.normalize(normalizePagePath(page));\n    }\n}\nexport class DevAppBundlePathNormalizer extends Normalizers {\n    constructor(pageNormalizer){\n        super([\n            // This should normalize the filename to a page.\n            pageNormalizer,\n            // Normalize the app page to a pathname.\n            new AppBundlePathNormalizer()\n        ]);\n    }\n    normalize(filename) {\n        return super.normalize(filename);\n    }\n}\n\n//# sourceMappingURL=app-bundle-path-normalizer.js.map","import { SERVER_DIRECTORY } from '../../../../shared/lib/constants';\nimport { PrefixingNormalizer } from '../../prefixing-normalizer';\nexport class AppFilenameNormalizer extends PrefixingNormalizer {\n    constructor(distDir){\n        super(distDir, SERVER_DIRECTORY);\n    }\n    normalize(manifestFilename) {\n        return super.normalize(manifestFilename);\n    }\n}\n\n//# sourceMappingURL=app-filename-normalizer.js.map","import { normalizePathSep } from './normalize-path-sep'\n\n/**\n * Removes the file extension for a page and the trailing `index` if it exists\n * making sure to not return an empty string. The page head is not touched\n * and returned as it is passed. Examples:\n *   - `/foo/bar/baz/index.js` -> `/foo/bar/baz`\n *   - `/foo/bar/baz.js` -> `/foo/bar/baz`\n *\n * @param pagePath A page to a page file (absolute or relative)\n * @param options.extensions Extensions allowed for the page.\n * @param options.keepIndex When true the trailing `index` is _not_ removed.\n */\nexport function removePagePathTail(\n  pagePath: string,\n  options: {\n    extensions: ReadonlyArray<string>\n    keepIndex?: boolean\n  }\n) {\n  pagePath = normalizePathSep(pagePath).replace(\n    new RegExp(`\\\\.+(?:${options.extensions.join('|')})$`),\n    ''\n  )\n\n  if (options.keepIndex !== true) {\n    pagePath = pagePath.replace(/\\/index$/, '') || '/'\n  }\n\n  return pagePath\n}\n","export function isAppRouteRoute(route) {\n    return route.endsWith('/route');\n}\n\n//# sourceMappingURL=is-app-route-route.js.map","import { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep';\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\nimport { isAppRouteRoute } from '../is-app-route-route';\nexport const STATIC_METADATA_IMAGES = {\n    icon: {\n        filename: 'icon',\n        extensions: [\n            'ico',\n            'jpg',\n            'jpeg',\n            'png',\n            'svg'\n        ]\n    },\n    apple: {\n        filename: 'apple-icon',\n        extensions: [\n            'jpg',\n            'jpeg',\n            'png'\n        ]\n    },\n    favicon: {\n        filename: 'favicon',\n        extensions: [\n            'ico'\n        ]\n    },\n    openGraph: {\n        filename: 'opengraph-image',\n        extensions: [\n            'jpg',\n            'jpeg',\n            'png',\n            'gif'\n        ]\n    },\n    twitter: {\n        filename: 'twitter-image',\n        extensions: [\n            'jpg',\n            'jpeg',\n            'png',\n            'gif'\n        ]\n    }\n};\n// Match routes that are metadata routes, e.g. /sitemap.xml, /favicon.<ext>, /<icon>.<ext>, etc.\n// TODO-METADATA: support more metadata routes with more extensions\nexport const DEFAULT_METADATA_ROUTE_EXTENSIONS = [\n    'js',\n    'jsx',\n    'ts',\n    'tsx'\n];\n// Match the file extension with the dynamic multi-routes extensions\n// e.g. ([xml, js], null) -> can match `/sitemap.xml/route`, `sitemap.js/route`\n// e.g. ([png], [ts]) -> can match `/opengrapg-image.png`, `/opengraph-image.ts`\nexport const getExtensionRegexString = (staticExtensions, dynamicExtensions)=>{\n    // If there's no possible multi dynamic routes, will not match any <name>[].<ext> files\n    if (!dynamicExtensions || dynamicExtensions.length === 0) {\n        return `(\\\\.(?:${staticExtensions.join('|')}))`;\n    }\n    return `(?:\\\\.(${staticExtensions.join('|')})|(\\\\.(${dynamicExtensions.join('|')})))`;\n};\n/**\n * Determine if the file is a metadata route file entry\n * @param appDirRelativePath the relative file path to app/\n * @param pageExtensions the js extensions, such as ['js', 'jsx', 'ts', 'tsx']\n * @param strictlyMatchExtensions if it's true, match the file with page extension, otherwise match the file with default corresponding extension\n * @returns {boolean} if the file is a metadata route file\n */ export function isMetadataRouteFile(appDirRelativePath, pageExtensions, strictlyMatchExtensions) {\n    // End with the extension or optional to have the extension\n    // When strictlyMatchExtensions is true, it's used for match file path;\n    // When strictlyMatchExtensions, the dynamic extension is skipped but\n    // static extension is kept, which is usually used for matching route path.\n    const trailingMatcher = (strictlyMatchExtensions ? '' : '?') + '$';\n    // Match the optional variants like /opengraph-image2, /icon-a102f4.png, etc.\n    const variantsMatcher = '\\\\d?';\n    // The -\\w{6} is the suffix that normalized from group routes;\n    const groupSuffix = strictlyMatchExtensions ? '' : '(-\\\\w{6})?';\n    const suffixMatcher = `${variantsMatcher}${groupSuffix}`;\n    const metadataRouteFilesRegex = [\n        new RegExp(`^[\\\\\\\\/]robots${getExtensionRegexString(pageExtensions.concat('txt'), null)}${trailingMatcher}`),\n        new RegExp(`^[\\\\\\\\/]manifest${getExtensionRegexString(pageExtensions.concat('webmanifest', 'json'), null)}${trailingMatcher}`),\n        new RegExp(`^[\\\\\\\\/]favicon\\\\.ico$`),\n        new RegExp(`[\\\\\\\\/]sitemap${getExtensionRegexString([\n            'xml'\n        ], pageExtensions)}${trailingMatcher}`),\n        new RegExp(`[\\\\\\\\/]${STATIC_METADATA_IMAGES.icon.filename}${suffixMatcher}${getExtensionRegexString(STATIC_METADATA_IMAGES.icon.extensions, pageExtensions)}${trailingMatcher}`),\n        new RegExp(`[\\\\\\\\/]${STATIC_METADATA_IMAGES.apple.filename}${suffixMatcher}${getExtensionRegexString(STATIC_METADATA_IMAGES.apple.extensions, pageExtensions)}${trailingMatcher}`),\n        new RegExp(`[\\\\\\\\/]${STATIC_METADATA_IMAGES.openGraph.filename}${suffixMatcher}${getExtensionRegexString(STATIC_METADATA_IMAGES.openGraph.extensions, pageExtensions)}${trailingMatcher}`),\n        new RegExp(`[\\\\\\\\/]${STATIC_METADATA_IMAGES.twitter.filename}${suffixMatcher}${getExtensionRegexString(STATIC_METADATA_IMAGES.twitter.extensions, pageExtensions)}${trailingMatcher}`)\n    ];\n    const normalizedAppDirRelativePath = normalizePathSep(appDirRelativePath);\n    const matched = metadataRouteFilesRegex.some((r)=>r.test(normalizedAppDirRelativePath));\n    return matched;\n}\n// Check if the route is a static metadata route, with /route suffix\n// e.g. /favicon.ico/route, /icon.png/route, etc.\n// But skip the text routes like robots.txt since they might also be dynamic.\n// Checking route path is not enough to determine if text routes is dynamic.\nexport function isStaticMetadataRoute(route) {\n    // extract ext with regex\n    const pathname = route.replace(/\\/route$/, '');\n    const matched = isAppRouteRoute(route) && isMetadataRouteFile(pathname, [], true) && // These routes can either be built by static or dynamic entrypoints,\n    // so we assume they're dynamic\n    pathname !== '/robots.txt' && pathname !== '/manifest.webmanifest' && !pathname.endsWith('/sitemap.xml');\n    return matched;\n}\n/**\n * Determine if a page or pathname is a metadata page.\n *\n * The input is a page or pathname, which can be with or without page suffix /foo/page or /foo.\n * But it will not contain the /route suffix.\n *\n * .e.g\n * /robots -> true\n * /sitemap -> true\n * /foo -> false\n */ export function isMetadataPage(page) {\n    const matched = !isAppRouteRoute(page) && isMetadataRouteFile(page, [], false);\n    return matched;\n}\n/*\n * Determine if a Next.js route is a metadata route.\n * `route` will has a route suffix.\n *\n * e.g.\n * /app/robots/route -> true\n * /robots/route -> true\n * /sitemap/[__metadata_id__]/route -> true\n * /app/sitemap/page -> false\n * /icon-a102f4/route -> true\n */ export function isMetadataRoute(route) {\n    let page = normalizeAppPath(route).replace(/^\\/?app\\//, '')// Remove the dynamic route id\n    .replace('/[__metadata_id__]', '')// Remove the /route suffix\n    .replace(/\\/route$/, '');\n    if (page[0] !== '/') page = '/' + page;\n    const matched = isAppRouteRoute(route) && isMetadataRouteFile(page, [], false);\n    return matched;\n}\n\n//# sourceMappingURL=is-metadata-route.js.map","import { isMetadataPage } from './is-metadata-route';\nimport path from '../../shared/lib/isomorphic/path';\nimport { interpolateDynamicPath } from '../../server/server-utils';\nimport { getNamedRouteRegex } from '../../shared/lib/router/utils/route-regex';\nimport { djb2Hash } from '../../shared/lib/hash';\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\nimport { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep';\nimport { isGroupSegment, isParallelRouteSegment } from '../../shared/lib/segment';\n/*\n * If there's special convention like (...) or @ in the page path,\n * Give it a unique hash suffix to avoid conflicts\n *\n * e.g.\n * /opengraph-image -> /opengraph-image\n * /(post)/opengraph-image.tsx -> /opengraph-image-[0-9a-z]{6}\n *\n * Sitemap is an exception, it should not have a suffix.\n * Each sitemap contains all the urls of sub routes, we don't have the case of duplicates `/(group)/sitemap.[ext]` and `/sitemap.[ext]` since they should be the same.\n * Hence we always normalize the urls for sitemap and do not append hash suffix, and ensure user-land only contains one sitemap per pathname.\n *\n * /sitemap -> /sitemap\n * /(post)/sitemap -> /sitemap\n */ function getMetadataRouteSuffix(page) {\n    // Remove the last segment and get the parent pathname\n    // e.g. /parent/a/b/c -> /parent/a/b\n    // e.g. /parent/opengraph-image -> /parent\n    const parentPathname = path.dirname(page);\n    // Only apply suffix to metadata routes except for sitemaps\n    if (page.endsWith('/sitemap')) {\n        return '';\n    }\n    // Calculate the hash suffix based on the parent path\n    let suffix = '';\n    // Check if there's any special characters in the parent pathname.\n    const segments = parentPathname.split('/');\n    if (segments.some((seg)=>isGroupSegment(seg) || isParallelRouteSegment(seg))) {\n        // Hash the parent path to get a unique suffix\n        suffix = djb2Hash(parentPathname).toString(36).slice(0, 6);\n    }\n    return suffix;\n}\n/**\n * Fill the dynamic segment in the metadata route\n *\n * Example:\n * fillMetadataSegment('/a/[slug]', { params: { slug: 'b' } }, 'open-graph') -> '/a/b/open-graph'\n *\n */ export function fillMetadataSegment(segment, params, lastSegment) {\n    const pathname = normalizeAppPath(segment);\n    const routeRegex = getNamedRouteRegex(pathname, {\n        prefixRouteKeys: false\n    });\n    const route = interpolateDynamicPath(pathname, params, routeRegex);\n    const { name, ext } = path.parse(lastSegment);\n    const pagePath = path.posix.join(segment, name);\n    const suffix = getMetadataRouteSuffix(pagePath);\n    const routeSuffix = suffix ? `-${suffix}` : '';\n    return normalizePathSep(path.join(route, `${name}${routeSuffix}${ext}`));\n}\n/**\n * Map metadata page key to the corresponding route\n *\n * static file page key:    /app/robots.txt -> /robots.xml -> /robots.txt/route\n * dynamic route page key:  /app/robots.tsx -> /robots -> /robots.txt/route\n *\n * @param page\n * @returns\n */ export function normalizeMetadataRoute(page) {\n    if (!isMetadataPage(page)) {\n        return page;\n    }\n    let route = page;\n    let suffix = '';\n    if (page === '/robots') {\n        route += '.txt';\n    } else if (page === '/manifest') {\n        route += '.webmanifest';\n    } else {\n        suffix = getMetadataRouteSuffix(page);\n    }\n    // Support both /<metadata-route.ext> and custom routes /<metadata-route>/route.ts.\n    // If it's a metadata file route, we need to append /[id]/route to the page.\n    if (!route.endsWith('/route')) {\n        const { dir, name: baseName, ext } = path.parse(route);\n        route = path.posix.join(dir, `${baseName}${suffix ? `-${suffix}` : ''}${ext}`, 'route');\n    }\n    return route;\n}\n// Normalize metadata route page to either a single route or a dynamic route.\n// e.g. Input: /sitemap/route\n// when isDynamic is false, single route -> /sitemap.xml/route\n// when isDynamic is false, dynamic route -> /sitemap/[__metadata_id__]/route\n// also works for pathname such as /sitemap -> /sitemap.xml, but will not append /route suffix\nexport function normalizeMetadataPageToRoute(page, isDynamic) {\n    const isRoute = page.endsWith('/route');\n    const routePagePath = isRoute ? page.slice(0, -'/route'.length) : page;\n    const metadataRouteExtension = routePagePath.endsWith('/sitemap') ? '.xml' : '';\n    const mapped = isDynamic ? `${routePagePath}/[__metadata_id__]` : `${routePagePath}${metadataRouteExtension}`;\n    return mapped + (isRoute ? '/route' : '');\n}\n\n//# sourceMappingURL=get-metadata-route.js.map","import { ensureLeadingSlash } from './ensure-leading-slash'\nimport { normalizePathSep } from './normalize-path-sep'\nimport path from '../isomorphic/path'\nimport { removePagePathTail } from './remove-page-path-tail'\nimport { normalizeMetadataRoute } from '../../../lib/metadata/get-metadata-route'\nimport type { PAGE_TYPES } from '../../../lib/page-types'\n\n/**\n * Given the absolute path to the pages folder, an absolute file path for a\n * page and the page extensions, this function will return the page path\n * relative to the pages folder. It doesn't consider index tail. Example:\n *  - `/Users/rick/my-project/pages/foo/bar/baz.js` -> `/foo/bar/baz`\n *\n * It also handles special metadata routes mapping. Example:\n * - `/Users/rick/my-project/app/sitemap.js` -> `/sitemap/route`\n *\n * @param filepath Absolute path to the page.\n * @param opts.dir Absolute path to the pages/app folder.\n * @param opts.extensions Extensions allowed for the page.\n * @param opts.keepIndex When true the trailing `index` kept in the path.\n * @param opts.pagesType Whether the page is in the pages or app directory.\n */\nexport function absolutePathToPage(\n  pagePath: string,\n  options: {\n    extensions: string[] | readonly string[]\n    keepIndex: boolean\n    dir: string\n    pagesType: PAGE_TYPES\n  }\n) {\n  const isAppDir = options.pagesType === 'app'\n  const page = removePagePathTail(\n    normalizePathSep(ensureLeadingSlash(path.relative(options.dir, pagePath))),\n    {\n      extensions: options.extensions,\n      keepIndex: options.keepIndex,\n    }\n  )\n  return isAppDir ? normalizeMetadataRoute(page) : page\n}\n","import { absolutePathToPage } from '../../shared/lib/page-path/absolute-path-to-page';\n/**\n * Normalizes a given filename so that it's relative to the provided directory.\n * It will also strip the extension (if provided) and the trailing `/index`.\n */ export class AbsoluteFilenameNormalizer {\n    /**\n   *\n   * @param dir the directory for which the files should be made relative to\n   * @param extensions the extensions the file could have\n   * @param keepIndex when `true` the trailing `/index` is _not_ removed\n   */ constructor(dir, extensions, pagesType){\n        this.dir = dir;\n        this.extensions = extensions;\n        this.pagesType = pagesType;\n    }\n    normalize(filename) {\n        return absolutePathToPage(filename, {\n            extensions: this.extensions,\n            keepIndex: false,\n            dir: this.dir,\n            pagesType: this.pagesType\n        });\n    }\n}\n\n//# sourceMappingURL=absolute-filename-normalizer.js.map","import { PAGE_TYPES } from '../../../../lib/page-types';\nimport { AbsoluteFilenameNormalizer } from '../../absolute-filename-normalizer';\n/**\n * DevAppPageNormalizer is a normalizer that is used to normalize a pathname\n * to a page in the `app` directory.\n */ export class DevAppPageNormalizer extends AbsoluteFilenameNormalizer {\n    constructor(appDir, extensions){\n        super(appDir, extensions, PAGE_TYPES.APP);\n    }\n}\n\n//# sourceMappingURL=app-page-normalizer.js.map","export function wrapNormalizerFn(fn) {\n    return {\n        normalize: fn\n    };\n}\n\n//# sourceMappingURL=wrap-normalizer-fn.js.map","/**\n * UnderscoreNormalizer replaces all instances of %5F with _.\n */ export class UnderscoreNormalizer {\n    normalize(pathname) {\n        return pathname.replace(/%5F/g, '_');\n    }\n}\n\n//# sourceMappingURL=underscore-normalizer.js.map","import { normalizeAppPath } from '../../../../shared/lib/router/utils/app-paths';\nimport { Normalizers } from '../../normalizers';\nimport { wrapNormalizerFn } from '../../wrap-normalizer-fn';\nimport { UnderscoreNormalizer } from '../../underscore-normalizer';\nexport class AppPathnameNormalizer extends Normalizers {\n    constructor(){\n        super([\n            // The pathname to match should have the trailing `/page` and other route\n            // group information stripped from it.\n            wrapNormalizerFn(normalizeAppPath),\n            // The page should have the `%5F` characters replaced with `_` characters.\n            new UnderscoreNormalizer()\n        ]);\n    }\n    normalize(page) {\n        return super.normalize(page);\n    }\n}\nexport class DevAppPathnameNormalizer extends Normalizers {\n    constructor(pageNormalizer){\n        super([\n            // This should normalize the filename to a page.\n            pageNormalizer,\n            // Normalize the app page to a pathname.\n            new AppPathnameNormalizer()\n        ]);\n    }\n    normalize(filename) {\n        return super.normalize(filename);\n    }\n}\n\n//# sourceMappingURL=app-pathname-normalizer.js.map","import { AppBundlePathNormalizer, DevAppBundlePathNormalizer } from './app-bundle-path-normalizer';\nimport { AppFilenameNormalizer } from './app-filename-normalizer';\nimport { DevAppPageNormalizer } from './app-page-normalizer';\nimport { AppPathnameNormalizer, DevAppPathnameNormalizer } from './app-pathname-normalizer';\nexport class AppNormalizers {\n    constructor(distDir){\n        this.filename = new AppFilenameNormalizer(distDir);\n        this.pathname = new AppPathnameNormalizer();\n        this.bundlePath = new AppBundlePathNormalizer();\n    }\n}\nexport class DevAppNormalizers {\n    constructor(appDir, extensions){\n        this.page = new DevAppPageNormalizer(appDir, extensions);\n        this.pathname = new DevAppPathnameNormalizer(this.page);\n        this.bundlePath = new DevAppBundlePathNormalizer(this.page);\n    }\n}\n\n//# sourceMappingURL=index.js.map","import { RouteMatcher } from './route-matcher';\nexport class AppPageRouteMatcher extends RouteMatcher {\n    get identity() {\n        return `${this.definition.pathname}?__nextPage=${this.definition.page}`;\n    }\n}\n\n//# sourceMappingURL=app-page-route-matcher.js.map","/**\n * This will memoize the matchers if the loaded data is comparable.\n */ export class CachedRouteMatcherProvider {\n    constructor(loader){\n        this.loader = loader;\n        this.cached = [];\n    }\n    async matchers() {\n        const data = await this.loader.load();\n        if (!data) return [];\n        // Return the cached matchers if the data has not changed.\n        if (this.data && this.loader.compare(this.data, data)) return this.cached;\n        this.data = data;\n        // Transform the manifest into matchers.\n        const matchers = await this.transform(data);\n        // Cache the matchers.\n        this.cached = matchers;\n        return matchers;\n    }\n}\n\n//# sourceMappingURL=cached-route-matcher-provider.js.map","import { CachedRouteMatcherProvider } from './helpers/cached-route-matcher-provider';\nexport class ManifestRouteMatcherProvider extends CachedRouteMatcherProvider {\n    constructor(manifestName, manifestLoader){\n        super({\n            load: async ()=>manifestLoader.load(manifestName),\n            compare: (left, right)=>left === right\n        });\n    }\n}\n\n//# sourceMappingURL=manifest-route-matcher-provider.js.map","import { isAppPageRoute } from '../../lib/is-app-page-route';\nimport { APP_PATHS_MANIFEST } from '../../shared/lib/constants';\nimport { AppNormalizers } from '../normalizers/built/app';\nimport { RouteKind } from '../route-kind';\nimport { AppPageRouteMatcher } from '../route-matchers/app-page-route-matcher';\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider';\nexport class AppPageRouteMatcherProvider extends ManifestRouteMatcherProvider {\n    constructor(distDir, manifestLoader){\n        super(APP_PATHS_MANIFEST, manifestLoader);\n        this.normalizers = new AppNormalizers(distDir);\n    }\n    async transform(manifest) {\n        // This matcher only matches app pages.\n        const pages = Object.keys(manifest).filter((page)=>isAppPageRoute(page));\n        // Collect all the app paths for each page. This could include any parallel\n        // routes.\n        const allAppPaths = {};\n        for (const page of pages){\n            const pathname = this.normalizers.pathname.normalize(page);\n            if (pathname in allAppPaths) allAppPaths[pathname].push(page);\n            else allAppPaths[pathname] = [\n                page\n            ];\n        }\n        // Format the routes.\n        const matchers = [];\n        for (const [pathname, appPaths] of Object.entries(allAppPaths)){\n            // TODO-APP: (wyattjoh) this is a hack right now, should be more deterministic\n            const page = appPaths[0];\n            const filename = this.normalizers.filename.normalize(manifest[page]);\n            const bundlePath = this.normalizers.bundlePath.normalize(page);\n            matchers.push(new AppPageRouteMatcher({\n                kind: RouteKind.APP_PAGE,\n                pathname,\n                page,\n                bundlePath,\n                filename,\n                appPaths\n            }));\n        }\n        return matchers;\n    }\n}\n\n//# sourceMappingURL=app-page-route-matcher-provider.js.map","import { RouteMatcher } from './route-matcher';\nexport class AppRouteRouteMatcher extends RouteMatcher {\n}\n\n//# sourceMappingURL=app-route-route-matcher.js.map","import { isAppRouteRoute } from '../../lib/is-app-route-route';\nimport { APP_PATHS_MANIFEST } from '../../shared/lib/constants';\nimport { RouteKind } from '../route-kind';\nimport { AppRouteRouteMatcher } from '../route-matchers/app-route-route-matcher';\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider';\nimport { AppNormalizers } from '../normalizers/built/app';\nexport class AppRouteRouteMatcherProvider extends ManifestRouteMatcherProvider {\n    constructor(distDir, manifestLoader){\n        super(APP_PATHS_MANIFEST, manifestLoader);\n        this.normalizers = new AppNormalizers(distDir);\n    }\n    async transform(manifest) {\n        // This matcher only matches app routes.\n        const pages = Object.keys(manifest).filter((page)=>isAppRouteRoute(page));\n        // Format the routes.\n        const matchers = [];\n        for (const page of pages){\n            const filename = this.normalizers.filename.normalize(manifest[page]);\n            const pathname = this.normalizers.pathname.normalize(page);\n            const bundlePath = this.normalizers.bundlePath.normalize(page);\n            matchers.push(new AppRouteRouteMatcher({\n                kind: RouteKind.APP_ROUTE,\n                pathname,\n                page,\n                bundlePath,\n                filename\n            }));\n        }\n        return matchers;\n    }\n}\n\n//# sourceMappingURL=app-route-route-matcher-provider.js.map","export function isAPIRoute(value) {\n    return value === '/api' || Boolean(value == null ? void 0 : value.startsWith('/api/'));\n}\n\n//# sourceMappingURL=is-api-route.js.map","import { LocaleRouteMatcher } from './locale-route-matcher';\nimport { RouteMatcher } from './route-matcher';\nexport class PagesAPIRouteMatcher extends RouteMatcher {\n}\nexport class PagesAPILocaleRouteMatcher extends LocaleRouteMatcher {\n}\n\n//# sourceMappingURL=pages-api-route-matcher.js.map","import { normalizePagePath } from '../../../../shared/lib/page-path/normalize-page-path';\nimport { Normalizers } from '../../normalizers';\nimport { PrefixingNormalizer } from '../../prefixing-normalizer';\nimport { wrapNormalizerFn } from '../../wrap-normalizer-fn';\nexport class PagesBundlePathNormalizer extends Normalizers {\n    constructor(){\n        super([\n            // The bundle path should have the trailing `/index` stripped from\n            // it.\n            wrapNormalizerFn(normalizePagePath),\n            // The page should prefixed with `pages/`.\n            new PrefixingNormalizer('pages')\n        ]);\n    }\n    normalize(page) {\n        return super.normalize(page);\n    }\n}\nexport class DevPagesBundlePathNormalizer extends Normalizers {\n    constructor(pagesNormalizer){\n        super([\n            // This should normalize the filename to a page.\n            pagesNormalizer,\n            // Normalize the app page to a pathname.\n            new PagesBundlePathNormalizer()\n        ]);\n    }\n    normalize(filename) {\n        return super.normalize(filename);\n    }\n}\n\n//# sourceMappingURL=pages-bundle-path-normalizer.js.map","import { SERVER_DIRECTORY } from '../../../../shared/lib/constants';\nimport { PrefixingNormalizer } from '../../prefixing-normalizer';\nexport class PagesFilenameNormalizer extends PrefixingNormalizer {\n    constructor(distDir){\n        super(distDir, SERVER_DIRECTORY);\n    }\n    normalize(manifestFilename) {\n        return super.normalize(manifestFilename);\n    }\n}\n\n//# sourceMappingURL=pages-filename-normalizer.js.map","import { PAGE_TYPES } from '../../../../lib/page-types';\nimport { AbsoluteFilenameNormalizer } from '../../absolute-filename-normalizer';\nexport class DevPagesPageNormalizer extends AbsoluteFilenameNormalizer {\n    constructor(pagesDir, extensions){\n        super(pagesDir, extensions, PAGE_TYPES.PAGES);\n    }\n}\n\n//# sourceMappingURL=pages-page-normalizer.js.map","import { PAGE_TYPES } from '../../../../lib/page-types';\nimport { AbsoluteFilenameNormalizer } from '../../absolute-filename-normalizer';\nexport class DevPagesPathnameNormalizer extends AbsoluteFilenameNormalizer {\n    constructor(pagesDir, extensions){\n        super(pagesDir, extensions, PAGE_TYPES.PAGES);\n    }\n}\n\n//# sourceMappingURL=pages-pathname-normalizer.js.map","import { DevPagesBundlePathNormalizer, PagesBundlePathNormalizer } from './pages-bundle-path-normalizer';\nimport { PagesFilenameNormalizer } from './pages-filename-normalizer';\nimport { DevPagesPageNormalizer } from './pages-page-normalizer';\nimport { DevPagesPathnameNormalizer } from './pages-pathname-normalizer';\nexport class PagesNormalizers {\n    constructor(distDir){\n        this.filename = new PagesFilenameNormalizer(distDir);\n        this.bundlePath = new PagesBundlePathNormalizer();\n    // You'd think that we'd require a `pathname` normalizer here, but for\n    // `/pages` we have to handle i18n routes, which means that we need to\n    // analyze the page path to determine the locale prefix and it's locale.\n    }\n}\nexport class DevPagesNormalizers {\n    constructor(pagesDir, extensions){\n        this.page = new DevPagesPageNormalizer(pagesDir, extensions);\n        this.pathname = new DevPagesPathnameNormalizer(pagesDir, extensions);\n        this.bundlePath = new DevPagesBundlePathNormalizer(this.page);\n    }\n}\n\n//# sourceMappingURL=index.js.map","import { isAPIRoute } from '../../lib/is-api-route';\nimport { PAGES_MANIFEST } from '../../shared/lib/constants';\nimport { RouteKind } from '../route-kind';\nimport { PagesAPILocaleRouteMatcher, PagesAPIRouteMatcher } from '../route-matchers/pages-api-route-matcher';\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider';\nimport { PagesNormalizers } from '../normalizers/built/pages';\nexport class PagesAPIRouteMatcherProvider extends ManifestRouteMatcherProvider {\n    constructor(distDir, manifestLoader, i18nProvider){\n        super(PAGES_MANIFEST, manifestLoader), this.i18nProvider = i18nProvider;\n        this.normalizers = new PagesNormalizers(distDir);\n    }\n    async transform(manifest) {\n        // This matcher is only for Pages API routes.\n        const pathnames = Object.keys(manifest).filter((pathname)=>isAPIRoute(pathname));\n        const matchers = [];\n        for (const page of pathnames){\n            if (this.i18nProvider) {\n                // Match the locale on the page name, or default to the default locale.\n                const { detectedLocale, pathname } = this.i18nProvider.analyze(page);\n                matchers.push(new PagesAPILocaleRouteMatcher({\n                    kind: RouteKind.PAGES_API,\n                    pathname,\n                    page,\n                    bundlePath: this.normalizers.bundlePath.normalize(page),\n                    filename: this.normalizers.filename.normalize(manifest[page]),\n                    i18n: {\n                        locale: detectedLocale\n                    }\n                }));\n            } else {\n                matchers.push(new PagesAPIRouteMatcher({\n                    kind: RouteKind.PAGES_API,\n                    // In `pages/`, the page is the same as the pathname.\n                    pathname: page,\n                    page,\n                    bundlePath: this.normalizers.bundlePath.normalize(page),\n                    filename: this.normalizers.filename.normalize(manifest[page])\n                }));\n            }\n        }\n        return matchers;\n    }\n}\n\n//# sourceMappingURL=pages-api-route-matcher-provider.js.map","import { LocaleRouteMatcher } from './locale-route-matcher';\nimport { RouteMatcher } from './route-matcher';\nexport class PagesRouteMatcher extends RouteMatcher {\n}\nexport class PagesLocaleRouteMatcher extends LocaleRouteMatcher {\n}\n\n//# sourceMappingURL=pages-route-matcher.js.map","import { isAPIRoute } from '../../lib/is-api-route';\nimport { BLOCKED_PAGES, PAGES_MANIFEST } from '../../shared/lib/constants';\nimport { RouteKind } from '../route-kind';\nimport { PagesLocaleRouteMatcher, PagesRouteMatcher } from '../route-matchers/pages-route-matcher';\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider';\nimport { PagesNormalizers } from '../normalizers/built/pages';\nexport class PagesRouteMatcherProvider extends ManifestRouteMatcherProvider {\n    constructor(distDir, manifestLoader, i18nProvider){\n        super(PAGES_MANIFEST, manifestLoader), this.i18nProvider = i18nProvider;\n        this.normalizers = new PagesNormalizers(distDir);\n    }\n    async transform(manifest) {\n        // This matcher is only for Pages routes, not Pages API routes which are\n        // included in this manifest.\n        const pathnames = Object.keys(manifest).filter((pathname)=>!isAPIRoute(pathname))// Remove any blocked pages (page that can't be routed to, like error or\n        // internal pages).\n        .filter((pathname)=>{\n            var _this_i18nProvider;\n            const normalized = ((_this_i18nProvider = this.i18nProvider) == null ? void 0 : _this_i18nProvider.analyze(pathname).pathname) ?? pathname;\n            // Skip any blocked pages.\n            if (BLOCKED_PAGES.includes(normalized)) return false;\n            return true;\n        });\n        const matchers = [];\n        for (const page of pathnames){\n            if (this.i18nProvider) {\n                // Match the locale on the page name, or default to the default locale.\n                const { detectedLocale, pathname } = this.i18nProvider.analyze(page);\n                matchers.push(new PagesLocaleRouteMatcher({\n                    kind: RouteKind.PAGES,\n                    pathname,\n                    page,\n                    bundlePath: this.normalizers.bundlePath.normalize(page),\n                    filename: this.normalizers.filename.normalize(manifest[page]),\n                    i18n: {\n                        locale: detectedLocale\n                    }\n                }));\n            } else {\n                matchers.push(new PagesRouteMatcher({\n                    kind: RouteKind.PAGES,\n                    // In `pages/`, the page is the same as the pathname.\n                    pathname: page,\n                    page,\n                    bundlePath: this.normalizers.bundlePath.normalize(page),\n                    filename: this.normalizers.filename.normalize(manifest[page])\n                }));\n            }\n        }\n        return matchers;\n    }\n}\n\n//# sourceMappingURL=pages-route-matcher-provider.js.map","export class ServerManifestLoader {\n    constructor(getter){\n        this.getter = getter;\n    }\n    load(name) {\n        return this.getter(name);\n    }\n}\n\n//# sourceMappingURL=server-manifest-loader.js.map","import { getRequestMeta } from '../request-meta';\n/**\n * The I18NProvider is used to match locale aware routes, detect the locale from\n * the pathname and hostname and normalize the pathname by removing the locale\n * prefix.\n */ export class I18NProvider {\n    constructor(config){\n        var _config_domains;\n        this.config = config;\n        if (!config.locales.length) {\n            throw Object.defineProperty(new Error('Invariant: No locales provided'), \"__NEXT_ERROR_CODE\", {\n                value: \"E510\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        this.lowerCaseLocales = config.locales.map((locale)=>locale.toLowerCase());\n        this.lowerCaseDomains = (_config_domains = config.domains) == null ? void 0 : _config_domains.map((domainLocale)=>{\n            var _domainLocale_locales;\n            const domain = domainLocale.domain.toLowerCase();\n            return {\n                defaultLocale: domainLocale.defaultLocale.toLowerCase(),\n                hostname: domain.split(':', 1)[0],\n                domain,\n                locales: (_domainLocale_locales = domainLocale.locales) == null ? void 0 : _domainLocale_locales.map((locale)=>locale.toLowerCase()),\n                http: domainLocale.http\n            };\n        });\n    }\n    /**\n   * Detects the domain locale from the hostname and the detected locale if\n   * provided.\n   *\n   * @param hostname The hostname to detect the domain locale from, this must be lowercased.\n   * @param detectedLocale The detected locale to use if the hostname does not match.\n   * @returns The domain locale if found, `undefined` otherwise.\n   */ detectDomainLocale(hostname, detectedLocale) {\n        if (!hostname || !this.lowerCaseDomains || !this.config.domains) return;\n        if (detectedLocale) detectedLocale = detectedLocale.toLowerCase();\n        for(let i = 0; i < this.lowerCaseDomains.length; i++){\n            var // Configuration validation ensures that the locale is not repeated in\n            // other domains locales.\n            _domainLocale_locales;\n            const domainLocale = this.lowerCaseDomains[i];\n            if (// We assume that the hostname is already lowercased.\n            domainLocale.hostname === hostname || ((_domainLocale_locales = domainLocale.locales) == null ? void 0 : _domainLocale_locales.some((locale)=>locale === detectedLocale))) {\n                return this.config.domains[i];\n            }\n        }\n        return;\n    }\n    /**\n   * Pulls the pre-computed locale and inference results from the query\n   * object.\n   *\n   * @param req the request object\n   * @param pathname the pathname that could contain a locale prefix\n   * @returns the locale analysis result\n   */ fromRequest(req, pathname) {\n        const detectedLocale = getRequestMeta(req, 'locale');\n        // If a locale was detected on the query, analyze the pathname to ensure\n        // that the locale matches.\n        if (detectedLocale) {\n            const analysis = this.analyze(pathname);\n            // If the analysis contained a locale we should validate it against the\n            // query and strip it from the pathname.\n            if (analysis.detectedLocale) {\n                if (analysis.detectedLocale !== detectedLocale) {\n                    throw Object.defineProperty(new Error(`Invariant: The detected locale does not match the locale in the query. Expected to find '${detectedLocale}' in '${pathname}' but found '${analysis.detectedLocale}'}`), \"__NEXT_ERROR_CODE\", {\n                        value: \"E517\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                pathname = analysis.pathname;\n            }\n        }\n        return {\n            pathname,\n            detectedLocale,\n            inferredFromDefault: getRequestMeta(req, 'localeInferredFromDefault') ?? false\n        };\n    }\n    /**\n   * Analyzes the pathname for a locale and returns the pathname without it.\n   *\n   * @param pathname The pathname that could contain a locale prefix.\n   * @param options The options to use when matching the locale.\n   * @returns The matched locale and the pathname without the locale prefix\n   *          (if any).\n   */ analyze(pathname, options = {}) {\n        let detectedLocale = options.defaultLocale;\n        // By default, we assume that the default locale was inferred if there was\n        // no detected locale.\n        let inferredFromDefault = typeof detectedLocale === 'string';\n        // The first segment will be empty, because it has a leading `/`. If\n        // there is no further segment, there is no locale (or it's the default).\n        const segments = pathname.split('/', 2);\n        if (!segments[1]) return {\n            detectedLocale,\n            pathname,\n            inferredFromDefault\n        };\n        // The second segment will contain the locale part if any.\n        const segment = segments[1].toLowerCase();\n        // See if the segment matches one of the locales. If it doesn't, there is\n        // no locale (or it's the default).\n        const index = this.lowerCaseLocales.indexOf(segment);\n        if (index < 0) return {\n            detectedLocale,\n            pathname,\n            inferredFromDefault\n        };\n        // Return the case-sensitive locale.\n        detectedLocale = this.config.locales[index];\n        inferredFromDefault = false;\n        // Remove the `/${locale}` part of the pathname.\n        pathname = pathname.slice(detectedLocale.length + 1) || '/';\n        return {\n            detectedLocale,\n            pathname,\n            inferredFromDefault\n        };\n    }\n}\n\n//# sourceMappingURL=i18n-provider.js.map","import { isNodeNextResponse } from './base-http/helpers';\nimport { pipeToNodeResponse } from './pipe-readable';\nimport { splitCookiesString } from './web/utils';\n/**\n * Sends the response on the underlying next response object.\n *\n * @param req the underlying request object\n * @param res the underlying response object\n * @param response the response to send\n */ export async function sendResponse(req, res, response, waitUntil) {\n    if (// The type check here ensures that `req` is correctly typed, and the\n    // environment variable check provides dead code elimination.\n    process.env.NEXT_RUNTIME !== 'edge' && isNodeNextResponse(res)) {\n        var // Copy over the response headers.\n        _response_headers;\n        // Copy over the response status.\n        res.statusCode = response.status;\n        res.statusMessage = response.statusText;\n        // TODO: this is not spec-compliant behavior and we should not restrict\n        // headers that are allowed to appear many times.\n        //\n        // See:\n        // https://github.com/vercel/next.js/pull/70127\n        const headersWithMultipleValuesAllowed = [\n            // can add more headers to this list if needed\n            'set-cookie',\n            'www-authenticate',\n            'proxy-authenticate',\n            'vary'\n        ];\n        (_response_headers = response.headers) == null ? void 0 : _response_headers.forEach((value, name)=>{\n            // `x-middleware-set-cookie` is an internal header not needed for the response\n            if (name.toLowerCase() === 'x-middleware-set-cookie') {\n                return;\n            }\n            // The append handling is special cased for `set-cookie`.\n            if (name.toLowerCase() === 'set-cookie') {\n                // TODO: (wyattjoh) replace with native response iteration when we can upgrade undici\n                for (const cookie of splitCookiesString(value)){\n                    res.appendHeader(name, cookie);\n                }\n            } else {\n                // only append the header if it is either not present in the outbound response\n                // or if the header supports multiple values\n                const isHeaderPresent = typeof res.getHeader(name) !== 'undefined';\n                if (headersWithMultipleValuesAllowed.includes(name.toLowerCase()) || !isHeaderPresent) {\n                    res.appendHeader(name, value);\n                }\n            }\n        });\n        /**\n     * The response can't be directly piped to the underlying response. The\n     * following is duplicated from the edge runtime handler.\n     *\n     * See packages/next/server/next-server.ts\n     */ const { originalResponse } = res;\n        // A response body must not be sent for HEAD requests. See https://httpwg.org/specs/rfc9110.html#HEAD\n        if (response.body && req.method !== 'HEAD') {\n            await pipeToNodeResponse(response.body, originalResponse, waitUntil);\n        } else {\n            originalResponse.end();\n        }\n    }\n}\n\n//# sourceMappingURL=send-response.js.map","import { getPathMatch } from '../../shared/lib/router/utils/path-match';\nconst matcher = getPathMatch('/_next/data/:path*');\nexport function matchNextDataPathname(pathname) {\n    if (typeof pathname !== 'string') return false;\n    return matcher(pathname);\n}\n\n//# sourceMappingURL=match-next-data-pathname.js.map","// Translate a pages asset path (relative from a common prefix) back into its logical route\n\nimport { isDynamicRoute } from './is-dynamic'\n\n// \"asset path\" being its javascript file, data file, prerendered html,...\nexport default function getRouteFromAssetPath(\n  assetPath: string,\n  ext: string = ''\n): string {\n  assetPath = assetPath.replace(/\\\\/g, '/')\n  assetPath =\n    ext && assetPath.endsWith(ext) ? assetPath.slice(0, -ext.length) : assetPath\n  if (assetPath.startsWith('/index/') && !isDynamicRoute(assetPath)) {\n    assetPath = assetPath.slice(6)\n  } else if (assetPath === '/index') {\n    assetPath = '/'\n  }\n  return assetPath\n}\n","// escape delimiters used by path-to-regexp\nexport default function escapePathDelimiters(\n  segment: string,\n  escapeEncoded?: boolean\n): string {\n  return segment.replace(\n    new RegExp(`([/#?]${escapeEncoded ? '|%(2f|23|3f|5c)' : ''})`, 'gi'),\n    (char: string) => encodeURIComponent(char)\n  )\n}\n","import escapePathDelimiters from '../../../shared/lib/router/utils/escape-path-delimiters';\nimport { DecodeError } from '../../../shared/lib/utils';\n/**\n * We only encode path delimiters for path segments from\n * getStaticPaths so we need to attempt decoding the URL\n * to match against and only escape the path delimiters\n * this allows non-ascii values to be handled e.g.\n * Japanese characters.\n * */ function decodePathParams(pathname) {\n    // TODO: investigate adding this handling for non-SSG\n    // pages so non-ascii names also work there.\n    return pathname.split('/').map((seg)=>{\n        try {\n            seg = escapePathDelimiters(decodeURIComponent(seg), true);\n        } catch (_) {\n            // An improperly encoded URL was provided\n            throw Object.defineProperty(new DecodeError('Failed to decode path param(s).'), \"__NEXT_ERROR_CODE\", {\n                value: \"E539\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        return seg;\n    }).join('/');\n}\nexport { decodePathParams };\n\n//# sourceMappingURL=decode-path-params.js.map","export class SuffixPathnameNormalizer {\n    constructor(suffix){\n        this.suffix = suffix;\n    }\n    match(pathname) {\n        // If the pathname doesn't end in the suffix, we don't match.\n        if (!pathname.endsWith(this.suffix)) return false;\n        return true;\n    }\n    normalize(pathname, matched) {\n        // If we're not matched and we don't match, we don't need to normalize.\n        if (!matched && !this.match(pathname)) return pathname;\n        return pathname.substring(0, pathname.length - this.suffix.length);\n    }\n}\n\n//# sourceMappingURL=suffix.js.map","import { RSC_SUFFIX } from '../../../lib/constants';\nimport { SuffixPathnameNormalizer } from './suffix';\nexport class RSCPathnameNormalizer extends SuffixPathnameNormalizer {\n    constructor(){\n        super(RSC_SUFFIX);\n    }\n}\n\n//# sourceMappingURL=rsc.js.map","import { FLIGHT_HEADERS } from '../../client/components/app-router-headers';\n/**\n * Removes the flight headers from the request.\n *\n * @param req the request to strip the headers from\n */ export function stripFlightHeaders(headers) {\n    for (const header of FLIGHT_HEADERS){\n        delete headers[header.toLowerCase()];\n    }\n}\n\n//# sourceMappingURL=strip-flight-headers.js.map","import { RouteKind } from '../route-kind';\nexport function isAppRouteRouteModule(routeModule) {\n    return routeModule.definition.kind === RouteKind.APP_ROUTE;\n}\nexport function isAppPageRouteModule(routeModule) {\n    return routeModule.definition.kind === RouteKind.APP_PAGE;\n}\nexport function isPagesRouteModule(routeModule) {\n    return routeModule.definition.kind === RouteKind.PAGES;\n}\nexport function isPagesAPIRouteModule(routeModule) {\n    return routeModule.definition.kind === RouteKind.PAGES_API;\n}\n\n//# sourceMappingURL=checks.js.map","import { RSC_PREFETCH_SUFFIX } from '../../../lib/constants';\nimport { SuffixPathnameNormalizer } from './suffix';\nexport class PrefetchRSCPathnameNormalizer extends SuffixPathnameNormalizer {\n    constructor(){\n        super(RSC_PREFETCH_SUFFIX);\n    }\n    match(pathname) {\n        if (pathname === '/__index' + RSC_PREFETCH_SUFFIX) {\n            return true;\n        }\n        return super.match(pathname);\n    }\n    normalize(pathname, matched) {\n        if (pathname === '/__index' + RSC_PREFETCH_SUFFIX) {\n            return '/';\n        }\n        return super.normalize(pathname, matched);\n    }\n}\n\n//# sourceMappingURL=prefetch-rsc.js.map","export class PrefixPathnameNormalizer {\n    constructor(prefix){\n        this.prefix = prefix;\n        if (prefix.endsWith('/')) {\n            throw Object.defineProperty(new Error(`PrefixPathnameNormalizer: prefix \"${prefix}\" should not end with a slash`), \"__NEXT_ERROR_CODE\", {\n                value: \"E219\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    match(pathname) {\n        // If the pathname doesn't start with the prefix, we don't match.\n        if (pathname !== this.prefix && !pathname.startsWith(this.prefix + '/')) {\n            return false;\n        }\n        return true;\n    }\n    normalize(pathname, matched) {\n        // If we're not matched and we don't match, we don't need to normalize.\n        if (!matched && !this.match(pathname)) return pathname;\n        if (pathname.length === this.prefix.length) {\n            return '/';\n        }\n        return pathname.substring(this.prefix.length);\n    }\n}\n\n//# sourceMappingURL=prefix.js.map","import { denormalizePagePath } from '../../../shared/lib/page-path/denormalize-page-path';\nimport { PrefixPathnameNormalizer } from './prefix';\nimport { SuffixPathnameNormalizer } from './suffix';\nexport class NextDataPathnameNormalizer {\n    constructor(buildID){\n        this.suffix = new SuffixPathnameNormalizer('.json');\n        if (!buildID) {\n            throw Object.defineProperty(new Error('Invariant: buildID is required'), \"__NEXT_ERROR_CODE\", {\n                value: \"E200\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        this.prefix = new PrefixPathnameNormalizer(`/_next/data/${buildID}`);\n    }\n    match(pathname) {\n        return this.prefix.match(pathname) && this.suffix.match(pathname);\n    }\n    normalize(pathname, matched) {\n        // If we're not matched and we don't match, we don't need to normalize.\n        if (!matched && !this.match(pathname)) return pathname;\n        pathname = this.prefix.normalize(pathname, true);\n        pathname = this.suffix.normalize(pathname, true);\n        return denormalizePagePath(pathname);\n    }\n}\n\n//# sourceMappingURL=next-data.js.map","import { getRequestMeta } from '../request-meta';\n/**\n * Ensure cookies set in middleware are merged and not overridden by API\n * routes/getServerSideProps.\n *\n * @param req Incoming request\n * @param res Outgoing response\n */ export function patchSetHeaderWithCookieSupport(req, res) {\n    const setHeader = res.setHeader.bind(res);\n    res.setHeader = (name, value)=>{\n        // When renders /_error after page is failed, it could attempt to set\n        // headers after headers.\n        if ('headersSent' in res && res.headersSent) {\n            return res;\n        }\n        if (name.toLowerCase() === 'set-cookie') {\n            const middlewareValue = getRequestMeta(req, 'middlewareCookie');\n            if (!middlewareValue || !Array.isArray(value) || !value.every((item, idx)=>item === middlewareValue[idx])) {\n                value = [\n                    // TODO: (wyattjoh) find out why this is called multiple times resulting in duplicate cookies being added\n                    ...new Set([\n                        ...middlewareValue || [],\n                        ...typeof value === 'string' ? [\n                            value\n                        ] : Array.isArray(value) ? value : []\n                    ])\n                ];\n            }\n        }\n        return setHeader(name, value);\n    };\n}\n\n//# sourceMappingURL=patch-set-header.js.map","/**\n * If set to `incremental`, only those leaf pages that export\n * `experimental_ppr = true` will have partial prerendering enabled. If any\n * page exports this value as `false` or does not export it at all will not\n * have partial prerendering enabled. If set to a boolean, it the options for\n * `experimental_ppr` will be ignored.\n */ /**\n * Returns true if partial prerendering is enabled for the application. It does\n * not tell you if a given route has PPR enabled, as that requires analysis of\n * the route's configuration.\n *\n * @see {@link checkIsRoutePPREnabled} - for checking if a specific route has PPR enabled.\n */ export function checkIsAppPPREnabled(config) {\n    // If the config is undefined, partial prerendering is disabled.\n    if (typeof config === 'undefined') return false;\n    // If the config is a boolean, use it directly.\n    if (typeof config === 'boolean') return config;\n    // If the config is a string, it must be 'incremental' to enable partial\n    // prerendering.\n    if (config === 'incremental') return true;\n    return false;\n}\n/**\n * Returns true if partial prerendering is supported for the current page with\n * the provided app configuration. If the application doesn't have partial\n * prerendering enabled, this function will always return false. If you want to\n * check if the application has partial prerendering enabled\n *\n * @see {@link checkIsAppPPREnabled} for checking if the application has PPR enabled.\n */ export function checkIsRoutePPREnabled(config, appConfig) {\n    // If the config is undefined, partial prerendering is disabled.\n    if (typeof config === 'undefined') return false;\n    // If the config is a boolean, use it directly.\n    if (typeof config === 'boolean') return config;\n    // If the config is a string, it must be 'incremental' to enable partial\n    // prerendering.\n    if (config === 'incremental' && appConfig.experimental_ppr === true) {\n        return true;\n    }\n    return false;\n}\n\n//# sourceMappingURL=ppr.js.map","/**\n * Describes the different fallback modes that a given page can have.\n */ export var FallbackMode = /*#__PURE__*/ function(FallbackMode) {\n    /**\n   * A BLOCKING_STATIC_RENDER fallback will block the request until the page is\n   * generated. No fallback page will be rendered, and users will have to wait\n   * to render the page.\n   */ FallbackMode[\"BLOCKING_STATIC_RENDER\"] = \"BLOCKING_STATIC_RENDER\";\n    /**\n   * When set to PRERENDER, a fallback page will be sent to users in place of\n   * forcing them to wait for the page to be generated. This allows the user to\n   * see a rendered page earlier.\n   */ FallbackMode[\"PRERENDER\"] = \"PRERENDER\";\n    /**\n   * When set to NOT_FOUND, pages that are not already prerendered will result\n   * in a not found response.\n   */ FallbackMode[\"NOT_FOUND\"] = \"NOT_FOUND\";\n    return FallbackMode;\n}({});\n/**\n * Parses the fallback field from the prerender manifest.\n *\n * @param fallbackField The fallback field from the prerender manifest.\n * @returns The fallback mode.\n */ export function parseFallbackField(fallbackField) {\n    if (typeof fallbackField === 'string') {\n        return \"PRERENDER\";\n    } else if (fallbackField === null) {\n        return \"BLOCKING_STATIC_RENDER\";\n    } else if (fallbackField === false) {\n        return \"NOT_FOUND\";\n    } else if (fallbackField === undefined) {\n        return undefined;\n    } else {\n        throw Object.defineProperty(new Error(`Invalid fallback option: ${fallbackField}. Fallback option must be a string, null, undefined, or false.`), \"__NEXT_ERROR_CODE\", {\n            value: \"E285\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\nexport function fallbackModeToFallbackField(fallback, page) {\n    switch(fallback){\n        case \"BLOCKING_STATIC_RENDER\":\n            return null;\n        case \"NOT_FOUND\":\n            return false;\n        case \"PRERENDER\":\n            if (!page) {\n                throw Object.defineProperty(new Error(`Invariant: expected a page to be provided when fallback mode is \"${fallback}\"`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E422\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            return page;\n        default:\n            throw Object.defineProperty(new Error(`Invalid fallback mode: ${fallback}`), \"__NEXT_ERROR_CODE\", {\n                value: \"E254\",\n                enumerable: false,\n                configurable: true\n            });\n    }\n}\n/**\n * Parses the fallback from the static paths result.\n *\n * @param result The result from the static paths function.\n * @returns The fallback mode.\n */ export function parseStaticPathsResult(result) {\n    if (result === true) {\n        return \"PRERENDER\";\n    } else if (result === 'blocking') {\n        return \"BLOCKING_STATIC_RENDER\";\n    } else {\n        return \"NOT_FOUND\";\n    }\n}\n\n//# sourceMappingURL=fallback.js.map","import { RSC_SEGMENT_SUFFIX, RSC_SEGMENTS_DIR_SUFFIX } from '../../../lib/constants';\nconst PATTERN = new RegExp(`^(/.*)${RSC_SEGMENTS_DIR_SUFFIX}(/.*)${RSC_SEGMENT_SUFFIX}$`);\nexport class SegmentPrefixRSCPathnameNormalizer {\n    match(pathname) {\n        return PATTERN.test(pathname);\n    }\n    extract(pathname) {\n        const match = pathname.match(PATTERN);\n        if (!match) return null;\n        return {\n            originalPathname: match[1],\n            segmentPath: match[2]\n        };\n    }\n    normalize(pathname) {\n        const match = this.extract(pathname);\n        if (!match) return pathname;\n        return match.originalPathname;\n    }\n}\n\n//# sourceMappingURL=segment-prefix-rsc.js.map","import { getBotType, HTML_LIMITED_BOT_UA_RE_STRING } from '../../shared/lib/router/utils/is-bot';\nexport function shouldServeStreamingMetadata(userAgent, htmlLimitedBots) {\n    const blockingMetadataUARegex = new RegExp(htmlLimitedBots || HTML_LIMITED_BOT_UA_RE_STRING, 'i');\n    return(// When it's static generation, userAgents are not available - do not serve streaming metadata\n    !!userAgent && !blockingMetadataUARegex.test(userAgent));\n}\n// When the request UA is a html-limited bot, we should do a dynamic render.\n// In this case, postpone state is not sent.\nexport function isHtmlBotRequest(req) {\n    const ua = req.headers['user-agent'] || '';\n    const botType = getBotType(ua);\n    return botType === 'html';\n}\n\n//# sourceMappingURL=streaming-metadata.js.map","/**\n * Decodes a query path parameter.\n *\n * @param value - The value to decode.\n * @returns The decoded value.\n */ export function decodeQueryPathParameter(value) {\n    // When deployed to Vercel, the value may be encoded, so this attempts to\n    // decode it and returns the original value if it fails.\n    try {\n        return decodeURIComponent(value);\n    } catch  {\n        return value;\n    }\n}\n\n//# sourceMappingURL=decode-query-path-parameter.js.map","import { getFallbackRouteParams } from './request/fallback-params';\nimport { CachedRouteKind } from './response-cache';\nimport { NormalizeError, DecodeError, normalizeRepeatedSlashes, MissingStaticPage } from '../shared/lib/utils';\nimport { format as formatUrl, parse as parseUrl } from 'url';\nimport { formatHostname } from './lib/format-hostname';\nimport { getRedirectStatus } from '../lib/redirect-status';\nimport { isEdgeRuntime } from '../lib/is-edge-runtime';\nimport { APP_PATHS_MANIFEST, NEXT_BUILTIN_DOCUMENT, PAGES_MANIFEST, STATIC_STATUS_PAGES, UNDERSCORE_NOT_FOUND_ROUTE, UNDERSCORE_NOT_FOUND_ROUTE_ENTRY } from '../shared/lib/constants';\nimport { isDynamicRoute } from '../shared/lib/router/utils';\nimport { checkIsOnDemandRevalidate } from './api-utils';\nimport { setConfig } from '../shared/lib/runtime-config.external';\nimport { getCacheControlHeader } from './lib/cache-control';\nimport { execOnce } from '../shared/lib/utils';\nimport { isBlockedPage } from './utils';\nimport { getBotType, isBot } from '../shared/lib/router/utils/is-bot';\nimport RenderResult from './render-result';\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash';\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path';\nimport * as Log from '../build/output/log';\nimport { getPreviouslyRevalidatedTags, getUtils } from './server-utils';\nimport isError, { getProperError } from '../lib/is-error';\nimport { addRequestMeta, getRequestMeta, removeRequestMeta, setRequestMeta } from './request-meta';\nimport { removePathPrefix } from '../shared/lib/router/utils/remove-path-prefix';\nimport { normalizeAppPath } from '../shared/lib/router/utils/app-paths';\nimport { getHostname } from '../shared/lib/get-hostname';\nimport { parseUrl as parseUrlUtil } from '../shared/lib/router/utils/parse-url';\nimport { getNextPathnameInfo } from '../shared/lib/router/utils/get-next-pathname-info';\nimport { RSC_HEADER, NEXT_RSC_UNION_QUERY, NEXT_ROUTER_PREFETCH_HEADER, NEXT_ROUTER_SEGMENT_PREFETCH_HEADER, NEXT_DID_POSTPONE_HEADER, NEXT_URL, NEXT_ROUTER_STATE_TREE_HEADER, NEXT_IS_PRERENDER_HEADER } from '../client/components/app-router-headers';\nimport { LocaleRouteNormalizer } from './normalizers/locale-route-normalizer';\nimport { DefaultRouteMatcherManager } from './route-matcher-managers/default-route-matcher-manager';\nimport { AppPageRouteMatcherProvider } from './route-matcher-providers/app-page-route-matcher-provider';\nimport { AppRouteRouteMatcherProvider } from './route-matcher-providers/app-route-route-matcher-provider';\nimport { PagesAPIRouteMatcherProvider } from './route-matcher-providers/pages-api-route-matcher-provider';\nimport { PagesRouteMatcherProvider } from './route-matcher-providers/pages-route-matcher-provider';\nimport { ServerManifestLoader } from './route-matcher-providers/helpers/manifest-loaders/server-manifest-loader';\nimport { getTracer, isBubbledError, SpanKind } from './lib/trace/tracer';\nimport { BaseServerSpan } from './lib/trace/constants';\nimport { I18NProvider } from './lib/i18n-provider';\nimport { sendResponse } from './send-response';\nimport { fromNodeOutgoingHttpHeaders, normalizeNextQueryParam, toNodeOutgoingHttpHeaders } from './web/utils';\nimport { CACHE_ONE_YEAR, INFINITE_CACHE, MATCHED_PATH_HEADER, NEXT_CACHE_TAGS_HEADER, NEXT_RESUME_HEADER } from '../lib/constants';\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path';\nimport { NextRequestAdapter, signalFromNodeResponse } from './web/spec-extension/adapters/next-request';\nimport { matchNextDataPathname } from './lib/match-next-data-pathname';\nimport getRouteFromAssetPath from '../shared/lib/router/utils/get-route-from-asset-path';\nimport { decodePathParams } from './lib/router-utils/decode-path-params';\nimport { RSCPathnameNormalizer } from './normalizers/request/rsc';\nimport { stripFlightHeaders } from './app-render/strip-flight-headers';\nimport { isAppPageRouteModule, isAppRouteRouteModule, isPagesRouteModule } from './route-modules/checks';\nimport { PrefetchRSCPathnameNormalizer } from './normalizers/request/prefetch-rsc';\nimport { NextDataPathnameNormalizer } from './normalizers/request/next-data';\nimport { getIsPossibleServerAction } from './lib/server-action-request-meta';\nimport { isInterceptionRouteAppPath } from '../shared/lib/router/utils/interception-routes';\nimport { toRoute } from './lib/to-route';\nimport { isNodeNextRequest, isNodeNextResponse } from './base-http/helpers';\nimport { patchSetHeaderWithCookieSupport } from './lib/patch-set-header';\nimport { checkIsAppPPREnabled } from './lib/experimental/ppr';\nimport { getBuiltinRequestContext } from './after/builtin-request-context';\nimport { ENCODED_TAGS } from './stream-utils/encodedTags';\nimport { NextRequestHint } from './web/adapter';\nimport { getRevalidateReason } from './instrumentation/utils';\nimport { RouteKind } from './route-kind';\nimport { FallbackMode, parseFallbackField } from '../lib/fallback';\nimport { toResponseCacheEntry } from './response-cache/utils';\nimport { scheduleOnNextTick } from '../lib/scheduler';\nimport { SegmentPrefixRSCPathnameNormalizer } from './normalizers/request/segment-prefix-rsc';\nimport { shouldServeStreamingMetadata, isHtmlBotRequest } from './lib/streaming-metadata';\nimport { InvariantError } from '../shared/lib/invariant-error';\nimport { decodeQueryPathParameter } from './lib/decode-query-path-parameter';\nimport { getCacheHandlers } from './use-cache/handlers';\nexport class NoFallbackError extends Error {\n}\n// Internal wrapper around build errors at development\n// time, to prevent us from propagating or logging them\nexport class WrappedBuildError extends Error {\n    constructor(innerError){\n        super();\n        this.innerError = innerError;\n    }\n}\nexport default class Server {\n    getServerComponentsHmrCache() {\n        return this.nextConfig.experimental.serverComponentsHmrCache ? globalThis.__serverComponentsHmrCache : undefined;\n    }\n    /**\n   * This is used to persist cache scopes across\n   * prefetch -> full route requests for dynamic IO\n   * it's only fully used in dev\n   */ constructor(options){\n        var _this_nextConfig_i18n, _this_nextConfig_experimental_amp, _this_nextConfig_i18n1;\n        this.handleRSCRequest = (req, _res, parsedUrl)=>{\n            var _this_normalizers_segmentPrefetchRSC, _this_normalizers_prefetchRSC, _this_normalizers_rsc;\n            if (!parsedUrl.pathname) return false;\n            if ((_this_normalizers_segmentPrefetchRSC = this.normalizers.segmentPrefetchRSC) == null ? void 0 : _this_normalizers_segmentPrefetchRSC.match(parsedUrl.pathname)) {\n                const result = this.normalizers.segmentPrefetchRSC.extract(parsedUrl.pathname);\n                if (!result) return false;\n                const { originalPathname, segmentPath } = result;\n                parsedUrl.pathname = originalPathname;\n                // Mark the request as a router prefetch request.\n                req.headers[RSC_HEADER.toLowerCase()] = '1';\n                req.headers[NEXT_ROUTER_PREFETCH_HEADER.toLowerCase()] = '1';\n                req.headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER.toLowerCase()] = segmentPath;\n                addRequestMeta(req, 'isRSCRequest', true);\n                addRequestMeta(req, 'isPrefetchRSCRequest', true);\n                addRequestMeta(req, 'segmentPrefetchRSCRequest', segmentPath);\n            } else if ((_this_normalizers_prefetchRSC = this.normalizers.prefetchRSC) == null ? void 0 : _this_normalizers_prefetchRSC.match(parsedUrl.pathname)) {\n                parsedUrl.pathname = this.normalizers.prefetchRSC.normalize(parsedUrl.pathname, true);\n                // Mark the request as a router prefetch request.\n                req.headers[RSC_HEADER.toLowerCase()] = '1';\n                req.headers[NEXT_ROUTER_PREFETCH_HEADER.toLowerCase()] = '1';\n                addRequestMeta(req, 'isRSCRequest', true);\n                addRequestMeta(req, 'isPrefetchRSCRequest', true);\n            } else if ((_this_normalizers_rsc = this.normalizers.rsc) == null ? void 0 : _this_normalizers_rsc.match(parsedUrl.pathname)) {\n                parsedUrl.pathname = this.normalizers.rsc.normalize(parsedUrl.pathname, true);\n                // Mark the request as a RSC request.\n                req.headers[RSC_HEADER.toLowerCase()] = '1';\n                addRequestMeta(req, 'isRSCRequest', true);\n            } else if (req.headers['x-now-route-matches']) {\n                // If we didn't match, return with the flight headers stripped. If in\n                // minimal mode we didn't match based on the path, this can't be a RSC\n                // request. This is because Vercel only sends this header during\n                // revalidation requests and we want the cache to instead depend on the\n                // request path for flight information.\n                stripFlightHeaders(req.headers);\n                return false;\n            } else if (req.headers[RSC_HEADER.toLowerCase()] === '1') {\n                addRequestMeta(req, 'isRSCRequest', true);\n                if (req.headers[NEXT_ROUTER_PREFETCH_HEADER.toLowerCase()] === '1') {\n                    addRequestMeta(req, 'isPrefetchRSCRequest', true);\n                    const segmentPrefetchRSCRequest = req.headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER.toLowerCase()];\n                    if (typeof segmentPrefetchRSCRequest === 'string') {\n                        addRequestMeta(req, 'segmentPrefetchRSCRequest', segmentPrefetchRSCRequest);\n                    }\n                }\n            } else {\n                // Otherwise just return without doing anything.\n                return false;\n            }\n            if (req.url) {\n                const parsed = parseUrl(req.url);\n                parsed.pathname = parsedUrl.pathname;\n                req.url = formatUrl(parsed);\n            }\n            return false;\n        };\n        this.handleNextDataRequest = async (req, res, parsedUrl)=>{\n            const middleware = await this.getMiddleware();\n            const params = matchNextDataPathname(parsedUrl.pathname);\n            // ignore for non-next data URLs\n            if (!params || !params.path) {\n                return false;\n            }\n            if (params.path[0] !== this.buildId) {\n                // Ignore if its a middleware request when we aren't on edge.\n                if (process.env.NEXT_RUNTIME !== 'edge' && getRequestMeta(req, 'middlewareInvoke')) {\n                    return false;\n                }\n                // Make sure to 404 if the buildId isn't correct\n                await this.render404(req, res, parsedUrl);\n                return true;\n            }\n            // remove buildId from URL\n            params.path.shift();\n            const lastParam = params.path[params.path.length - 1];\n            // show 404 if it doesn't end with .json\n            if (typeof lastParam !== 'string' || !lastParam.endsWith('.json')) {\n                await this.render404(req, res, parsedUrl);\n                return true;\n            }\n            // re-create page's pathname\n            let pathname = `/${params.path.join('/')}`;\n            pathname = getRouteFromAssetPath(pathname, '.json');\n            // ensure trailing slash is normalized per config\n            if (middleware) {\n                if (this.nextConfig.trailingSlash && !pathname.endsWith('/')) {\n                    pathname += '/';\n                }\n                if (!this.nextConfig.trailingSlash && pathname.length > 1 && pathname.endsWith('/')) {\n                    pathname = pathname.substring(0, pathname.length - 1);\n                }\n            }\n            if (this.i18nProvider) {\n                var _req_headers_host;\n                // Remove the port from the hostname if present.\n                const hostname = req == null ? void 0 : (_req_headers_host = req.headers.host) == null ? void 0 : _req_headers_host.split(':', 1)[0].toLowerCase();\n                const domainLocale = this.i18nProvider.detectDomainLocale(hostname);\n                const defaultLocale = (domainLocale == null ? void 0 : domainLocale.defaultLocale) ?? this.i18nProvider.config.defaultLocale;\n                const localePathResult = this.i18nProvider.analyze(pathname);\n                // If the locale is detected from the path, we need to remove it\n                // from the pathname.\n                if (localePathResult.detectedLocale) {\n                    pathname = localePathResult.pathname;\n                }\n                // Update the query with the detected locale and default locale.\n                addRequestMeta(req, 'locale', localePathResult.detectedLocale);\n                addRequestMeta(req, 'defaultLocale', defaultLocale);\n                // If the locale is not detected from the path, we need to mark that\n                // it was not inferred from default.\n                if (!localePathResult.detectedLocale) {\n                    removeRequestMeta(req, 'localeInferredFromDefault');\n                }\n                // If no locale was detected and we don't have middleware, we need\n                // to render a 404 page.\n                if (!localePathResult.detectedLocale && !middleware) {\n                    addRequestMeta(req, 'locale', defaultLocale);\n                    await this.render404(req, res, parsedUrl);\n                    return true;\n                }\n            }\n            parsedUrl.pathname = pathname;\n            addRequestMeta(req, 'isNextDataReq', true);\n            return false;\n        };\n        this.handleNextImageRequest = ()=>false;\n        this.handleCatchallRenderRequest = ()=>false;\n        this.handleCatchallMiddlewareRequest = ()=>false;\n        /**\n   * Normalizes a pathname without attaching any metadata from any matched\n   * normalizer.\n   *\n   * @param pathname the pathname to normalize\n   * @returns the normalized pathname\n   */ this.normalize = (pathname)=>{\n            const normalizers = [];\n            if (this.normalizers.data) {\n                normalizers.push(this.normalizers.data);\n            }\n            // We have to put the segment prefetch normalizer before the RSC normalizer\n            // because the RSC normalizer will match the prefetch RSC routes too.\n            if (this.normalizers.segmentPrefetchRSC) {\n                normalizers.push(this.normalizers.segmentPrefetchRSC);\n            }\n            // We have to put the prefetch normalizer before the RSC normalizer\n            // because the RSC normalizer will match the prefetch RSC routes too.\n            if (this.normalizers.prefetchRSC) {\n                normalizers.push(this.normalizers.prefetchRSC);\n            }\n            if (this.normalizers.rsc) {\n                normalizers.push(this.normalizers.rsc);\n            }\n            for (const normalizer of normalizers){\n                if (!normalizer.match(pathname)) continue;\n                return normalizer.normalize(pathname, true);\n            }\n            return pathname;\n        };\n        this.normalizeAndAttachMetadata = async (req, res, url)=>{\n            let finished = await this.handleNextImageRequest(req, res, url);\n            if (finished) return true;\n            if (this.enabledDirectories.pages) {\n                finished = await this.handleNextDataRequest(req, res, url);\n                if (finished) return true;\n            }\n            return false;\n        };\n        this.prepared = false;\n        this.preparedPromise = null;\n        this.customErrorNo404Warn = execOnce(()=>{\n            Log.warn(`You have added a custom /_error page without a custom /404 page. This prevents the 404 page from being auto statically optimized.\\nSee here for info: https://nextjs.org/docs/messages/custom-error-no-custom-404`);\n        });\n        const { dir = '.', quiet = false, conf, dev = false, minimalMode = false, hostname, port, experimentalTestProxy } = options;\n        this.experimentalTestProxy = experimentalTestProxy;\n        this.serverOptions = options;\n        this.dir = process.env.NEXT_RUNTIME === 'edge' ? dir : require('path').resolve(dir);\n        this.quiet = quiet;\n        this.loadEnvConfig({\n            dev\n        });\n        // TODO: should conf be normalized to prevent missing\n        // values from causing issues as this can be user provided\n        this.nextConfig = conf;\n        this.hostname = hostname;\n        if (this.hostname) {\n            // we format the hostname so that it can be fetched\n            this.fetchHostname = formatHostname(this.hostname);\n        }\n        this.port = port;\n        this.distDir = process.env.NEXT_RUNTIME === 'edge' ? this.nextConfig.distDir : require('path').join(this.dir, this.nextConfig.distDir);\n        this.publicDir = this.getPublicDir();\n        this.hasStaticDir = !minimalMode && this.getHasStaticDir();\n        this.i18nProvider = ((_this_nextConfig_i18n = this.nextConfig.i18n) == null ? void 0 : _this_nextConfig_i18n.locales) ? new I18NProvider(this.nextConfig.i18n) : undefined;\n        // Configure the locale normalizer, it's used for routes inside `pages/`.\n        this.localeNormalizer = this.i18nProvider ? new LocaleRouteNormalizer(this.i18nProvider) : undefined;\n        // Only serverRuntimeConfig needs the default\n        // publicRuntimeConfig gets it's default in client/index.js\n        const { serverRuntimeConfig = {}, publicRuntimeConfig, assetPrefix, generateEtags } = this.nextConfig;\n        this.buildId = this.getBuildId();\n        // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n        // because we replace this.minimalMode to true in production bundles.\n        const minimalModeKey = 'minimalMode';\n        this[minimalModeKey] = minimalMode || !!process.env.NEXT_PRIVATE_MINIMAL_MODE;\n        this.enabledDirectories = this.getEnabledDirectories(dev);\n        this.isAppPPREnabled = this.enabledDirectories.app && checkIsAppPPREnabled(this.nextConfig.experimental.ppr);\n        this.isAppSegmentPrefetchEnabled = this.enabledDirectories.app && this.nextConfig.experimental.clientSegmentCache === true;\n        this.normalizers = {\n            // We should normalize the pathname from the RSC prefix only in minimal\n            // mode as otherwise that route is not exposed external to the server as\n            // we instead only rely on the headers.\n            rsc: this.enabledDirectories.app && this.minimalMode ? new RSCPathnameNormalizer() : undefined,\n            prefetchRSC: this.isAppPPREnabled && this.minimalMode ? new PrefetchRSCPathnameNormalizer() : undefined,\n            segmentPrefetchRSC: this.isAppSegmentPrefetchEnabled && this.minimalMode ? new SegmentPrefixRSCPathnameNormalizer() : undefined,\n            data: this.enabledDirectories.pages ? new NextDataPathnameNormalizer(this.buildId) : undefined\n        };\n        this.nextFontManifest = this.getNextFontManifest();\n        if (process.env.NEXT_RUNTIME !== 'edge') {\n            process.env.NEXT_DEPLOYMENT_ID = this.nextConfig.deploymentId || '';\n        }\n        this.renderOpts = {\n            supportsDynamicResponse: true,\n            trailingSlash: this.nextConfig.trailingSlash,\n            deploymentId: this.nextConfig.deploymentId,\n            strictNextHead: this.nextConfig.experimental.strictNextHead ?? true,\n            poweredByHeader: this.nextConfig.poweredByHeader,\n            canonicalBase: this.nextConfig.amp.canonicalBase || '',\n            generateEtags,\n            previewProps: this.getPrerenderManifest().preview,\n            ampOptimizerConfig: (_this_nextConfig_experimental_amp = this.nextConfig.experimental.amp) == null ? void 0 : _this_nextConfig_experimental_amp.optimizer,\n            basePath: this.nextConfig.basePath,\n            images: this.nextConfig.images,\n            optimizeCss: this.nextConfig.experimental.optimizeCss,\n            nextConfigOutput: this.nextConfig.output,\n            nextScriptWorkers: this.nextConfig.experimental.nextScriptWorkers,\n            disableOptimizedLoading: this.nextConfig.experimental.disableOptimizedLoading,\n            domainLocales: (_this_nextConfig_i18n1 = this.nextConfig.i18n) == null ? void 0 : _this_nextConfig_i18n1.domains,\n            distDir: this.distDir,\n            serverComponents: this.enabledDirectories.app,\n            cacheLifeProfiles: this.nextConfig.experimental.cacheLife,\n            enableTainting: this.nextConfig.experimental.taint,\n            crossOrigin: this.nextConfig.crossOrigin ? this.nextConfig.crossOrigin : undefined,\n            largePageDataBytes: this.nextConfig.experimental.largePageDataBytes,\n            // Only the `publicRuntimeConfig` key is exposed to the client side\n            // It'll be rendered as part of __NEXT_DATA__ on the client side\n            runtimeConfig: Object.keys(publicRuntimeConfig).length > 0 ? publicRuntimeConfig : undefined,\n            // @ts-expect-error internal field not publicly exposed\n            isExperimentalCompile: this.nextConfig.experimental.isExperimentalCompile,\n            // `htmlLimitedBots` is passed to server as serialized config in string format\n            htmlLimitedBots: this.nextConfig.htmlLimitedBots,\n            experimental: {\n                expireTime: this.nextConfig.expireTime,\n                staleTimes: this.nextConfig.experimental.staleTimes,\n                clientTraceMetadata: this.nextConfig.experimental.clientTraceMetadata,\n                dynamicIO: this.nextConfig.experimental.dynamicIO ?? false,\n                clientSegmentCache: this.nextConfig.experimental.clientSegmentCache === 'client-only' ? 'client-only' : Boolean(this.nextConfig.experimental.clientSegmentCache),\n                dynamicOnHover: this.nextConfig.experimental.dynamicOnHover ?? false,\n                inlineCss: this.nextConfig.experimental.inlineCss ?? false,\n                authInterrupts: !!this.nextConfig.experimental.authInterrupts\n            },\n            onInstrumentationRequestError: this.instrumentationOnRequestError.bind(this),\n            reactMaxHeadersLength: this.nextConfig.reactMaxHeadersLength\n        };\n        // Initialize next/config with the environment configuration\n        setConfig({\n            serverRuntimeConfig,\n            publicRuntimeConfig\n        });\n        this.pagesManifest = this.getPagesManifest();\n        this.appPathsManifest = this.getAppPathsManifest();\n        this.appPathRoutes = this.getAppPathRoutes();\n        this.interceptionRoutePatterns = this.getinterceptionRoutePatterns();\n        // Configure the routes.\n        this.matchers = this.getRouteMatchers();\n        // Start route compilation. We don't wait for the routes to finish loading\n        // because we use the `waitTillReady` promise below in `handleRequest` to\n        // wait. Also we can't `await` in the constructor.\n        void this.matchers.reload();\n        this.setAssetPrefix(assetPrefix);\n        this.responseCache = this.getResponseCache({\n            dev\n        });\n    }\n    reloadMatchers() {\n        return this.matchers.reload();\n    }\n    getRouteMatchers() {\n        // Create a new manifest loader that get's the manifests from the server.\n        const manifestLoader = new ServerManifestLoader((name)=>{\n            switch(name){\n                case PAGES_MANIFEST:\n                    return this.getPagesManifest() ?? null;\n                case APP_PATHS_MANIFEST:\n                    return this.getAppPathsManifest() ?? null;\n                default:\n                    return null;\n            }\n        });\n        // Configure the matchers and handlers.\n        const matchers = new DefaultRouteMatcherManager();\n        // Match pages under `pages/`.\n        matchers.push(new PagesRouteMatcherProvider(this.distDir, manifestLoader, this.i18nProvider));\n        // Match api routes under `pages/api/`.\n        matchers.push(new PagesAPIRouteMatcherProvider(this.distDir, manifestLoader, this.i18nProvider));\n        // If the app directory is enabled, then add the app matchers and handlers.\n        if (this.enabledDirectories.app) {\n            // Match app pages under `app/`.\n            matchers.push(new AppPageRouteMatcherProvider(this.distDir, manifestLoader));\n            matchers.push(new AppRouteRouteMatcherProvider(this.distDir, manifestLoader));\n        }\n        return matchers;\n    }\n    async instrumentationOnRequestError(...args) {\n        const [err, req, ctx] = args;\n        if (this.instrumentation) {\n            try {\n                await (this.instrumentation.onRequestError == null ? void 0 : this.instrumentation.onRequestError.call(this.instrumentation, err, {\n                    path: req.url || '',\n                    method: req.method || 'GET',\n                    // Normalize middleware headers and other server request headers\n                    headers: req instanceof NextRequestHint ? Object.fromEntries(req.headers.entries()) : req.headers\n                }, ctx));\n            } catch (handlerErr) {\n                // Log the soft error and continue, since errors can thrown from react stream handler\n                console.error('Error in instrumentation.onRequestError:', handlerErr);\n            }\n        }\n    }\n    logError(err) {\n        if (this.quiet) return;\n        Log.error(err);\n    }\n    async handleRequest(req, res, parsedUrl) {\n        await this.prepare();\n        const method = req.method.toUpperCase();\n        const tracer = getTracer();\n        return tracer.withPropagatedContext(req.headers, ()=>{\n            return tracer.trace(BaseServerSpan.handleRequest, {\n                spanName: `${method} ${req.url}`,\n                kind: SpanKind.SERVER,\n                attributes: {\n                    'http.method': method,\n                    'http.target': req.url\n                }\n            }, async (span)=>this.handleRequestImpl(req, res, parsedUrl).finally(()=>{\n                    if (!span) return;\n                    const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? false;\n                    span.setAttributes({\n                        'http.status_code': res.statusCode,\n                        'next.rsc': isRSCRequest\n                    });\n                    const rootSpanAttributes = tracer.getRootSpanAttributes();\n                    // We were unable to get attributes, probably OTEL is not enabled\n                    if (!rootSpanAttributes) return;\n                    if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                        console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                        return;\n                    }\n                    const route = rootSpanAttributes.get('next.route');\n                    if (route) {\n                        const name = isRSCRequest ? `RSC ${method} ${route}` : `${method} ${route}`;\n                        span.setAttributes({\n                            'next.route': route,\n                            'http.route': route,\n                            'next.span_name': name\n                        });\n                        span.updateName(name);\n                    } else {\n                        span.updateName(isRSCRequest ? `RSC ${method} ${req.url}` : `${method} ${req.url}`);\n                    }\n                }));\n        });\n    }\n    async handleRequestImpl(req, res, parsedUrl) {\n        try {\n            var _originalRequest_socket, _originalRequest_socket1, _this_i18nProvider, _this_nextConfig_i18n;\n            // Wait for the matchers to be ready.\n            await this.matchers.waitTillReady();\n            // ensure cookies set in middleware are merged and\n            // not overridden by API routes/getServerSideProps\n            patchSetHeaderWithCookieSupport(req, isNodeNextResponse(res) ? res.originalResponse : res);\n            const urlParts = (req.url || '').split('?', 1);\n            const urlNoQuery = urlParts[0];\n            // this normalizes repeated slashes in the path e.g. hello//world ->\n            // hello/world or backslashes to forward slashes, this does not\n            // handle trailing slash as that is handled the same as a next.config.js\n            // redirect\n            if (urlNoQuery == null ? void 0 : urlNoQuery.match(/(\\\\|\\/\\/)/)) {\n                const cleanUrl = normalizeRepeatedSlashes(req.url);\n                res.redirect(cleanUrl, 308).body(cleanUrl).send();\n                return;\n            }\n            // Parse url if parsedUrl not provided\n            if (!parsedUrl || typeof parsedUrl !== 'object') {\n                if (!req.url) {\n                    throw Object.defineProperty(new Error('Invariant: url can not be undefined'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E123\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                parsedUrl = parseUrl(req.url, true);\n            }\n            if (!parsedUrl.pathname) {\n                throw Object.defineProperty(new Error(\"Invariant: pathname can't be empty\"), \"__NEXT_ERROR_CODE\", {\n                    value: \"E412\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            // Parse the querystring ourselves if the user doesn't handle querystring parsing\n            if (typeof parsedUrl.query === 'string') {\n                parsedUrl.query = Object.fromEntries(new URLSearchParams(parsedUrl.query));\n            }\n            // Update the `x-forwarded-*` headers.\n            const { originalRequest = null } = isNodeNextRequest(req) ? req : {};\n            const xForwardedProto = originalRequest == null ? void 0 : originalRequest.headers['x-forwarded-proto'];\n            const isHttps = xForwardedProto ? xForwardedProto === 'https' : !!(originalRequest == null ? void 0 : (_originalRequest_socket = originalRequest.socket) == null ? void 0 : _originalRequest_socket.encrypted);\n            req.headers['x-forwarded-host'] ??= req.headers['host'] ?? this.hostname;\n            req.headers['x-forwarded-port'] ??= this.port ? this.port.toString() : isHttps ? '443' : '80';\n            req.headers['x-forwarded-proto'] ??= isHttps ? 'https' : 'http';\n            req.headers['x-forwarded-for'] ??= originalRequest == null ? void 0 : (_originalRequest_socket1 = originalRequest.socket) == null ? void 0 : _originalRequest_socket1.remoteAddress;\n            // This should be done before any normalization of the pathname happens as\n            // it captures the initial URL.\n            this.attachRequestMeta(req, parsedUrl);\n            let finished = await this.handleRSCRequest(req, res, parsedUrl);\n            if (finished) return;\n            const domainLocale = (_this_i18nProvider = this.i18nProvider) == null ? void 0 : _this_i18nProvider.detectDomainLocale(getHostname(parsedUrl, req.headers));\n            const defaultLocale = (domainLocale == null ? void 0 : domainLocale.defaultLocale) || ((_this_nextConfig_i18n = this.nextConfig.i18n) == null ? void 0 : _this_nextConfig_i18n.defaultLocale);\n            addRequestMeta(req, 'defaultLocale', defaultLocale);\n            const url = parseUrlUtil(req.url.replace(/^\\/+/, '/'));\n            const pathnameInfo = getNextPathnameInfo(url.pathname, {\n                nextConfig: this.nextConfig,\n                i18nProvider: this.i18nProvider\n            });\n            url.pathname = pathnameInfo.pathname;\n            if (pathnameInfo.basePath) {\n                req.url = removePathPrefix(req.url, this.nextConfig.basePath);\n            }\n            const useMatchedPathHeader = this.minimalMode && typeof req.headers[MATCHED_PATH_HEADER] === 'string';\n            // TODO: merge handling with invokePath\n            if (useMatchedPathHeader) {\n                try {\n                    var _this_normalizers_data, _this_i18nProvider1, _this_getRoutesManifest;\n                    if (this.enabledDirectories.app) {\n                        // ensure /index path is normalized for prerender\n                        // in minimal mode\n                        if (req.url.match(/^\\/index($|\\?)/)) {\n                            req.url = req.url.replace(/^\\/index/, '/');\n                        }\n                        parsedUrl.pathname = parsedUrl.pathname === '/index' ? '/' : parsedUrl.pathname;\n                    }\n                    // x-matched-path is the source of truth, it tells what page\n                    // should be rendered because we don't process rewrites in minimalMode\n                    let { pathname: matchedPath } = new URL(req.headers[MATCHED_PATH_HEADER], 'http://localhost');\n                    let { pathname: urlPathname } = new URL(req.url, 'http://localhost');\n                    // For ISR the URL is normalized to the prerenderPath so if\n                    // it's a data request the URL path will be the data URL,\n                    // basePath is already stripped by this point\n                    if ((_this_normalizers_data = this.normalizers.data) == null ? void 0 : _this_normalizers_data.match(urlPathname)) {\n                        addRequestMeta(req, 'isNextDataReq', true);\n                    } else if (this.isAppPPREnabled && this.minimalMode && req.headers[NEXT_RESUME_HEADER] === '1' && req.method === 'POST') {\n                        // Decode the postponed state from the request body, it will come as\n                        // an array of buffers, so collect them and then concat them to form\n                        // the string.\n                        const body = [];\n                        for await (const chunk of req.body){\n                            body.push(chunk);\n                        }\n                        const postponed = Buffer.concat(body).toString('utf8');\n                        addRequestMeta(req, 'postponed', postponed);\n                    }\n                    matchedPath = this.normalize(matchedPath);\n                    const normalizedUrlPath = this.stripNextDataPath(urlPathname);\n                    // Perform locale detection and normalization.\n                    const localeAnalysisResult = (_this_i18nProvider1 = this.i18nProvider) == null ? void 0 : _this_i18nProvider1.analyze(matchedPath, {\n                        defaultLocale\n                    });\n                    // The locale result will be defined even if the locale was not\n                    // detected for the request because it will be inferred from the\n                    // default locale.\n                    if (localeAnalysisResult) {\n                        addRequestMeta(req, 'locale', localeAnalysisResult.detectedLocale);\n                        // If the detected locale was inferred from the default locale, we\n                        // need to modify the metadata on the request to indicate that.\n                        if (localeAnalysisResult.inferredFromDefault) {\n                            addRequestMeta(req, 'localeInferredFromDefault', true);\n                        } else {\n                            removeRequestMeta(req, 'localeInferredFromDefault');\n                        }\n                    }\n                    // TODO: check if this is needed any more?\n                    matchedPath = denormalizePagePath(matchedPath);\n                    let srcPathname = matchedPath;\n                    let pageIsDynamic = isDynamicRoute(srcPathname);\n                    if (!pageIsDynamic) {\n                        const match = await this.matchers.match(srcPathname, {\n                            i18n: localeAnalysisResult\n                        });\n                        // Update the source pathname to the matched page's pathname.\n                        if (match) {\n                            srcPathname = match.definition.pathname;\n                            // The page is dynamic if the params are defined.\n                            pageIsDynamic = typeof match.params !== 'undefined';\n                        }\n                    }\n                    // The rest of this function can't handle i18n properly, so ensure we\n                    // restore the pathname with the locale information stripped from it\n                    // now that we're done matching if we're using i18n.\n                    if (localeAnalysisResult) {\n                        matchedPath = localeAnalysisResult.pathname;\n                    }\n                    const utils = getUtils({\n                        pageIsDynamic,\n                        page: srcPathname,\n                        i18n: this.nextConfig.i18n,\n                        basePath: this.nextConfig.basePath,\n                        rewrites: ((_this_getRoutesManifest = this.getRoutesManifest()) == null ? void 0 : _this_getRoutesManifest.rewrites) || {\n                            beforeFiles: [],\n                            afterFiles: [],\n                            fallback: []\n                        },\n                        caseSensitive: !!this.nextConfig.experimental.caseSensitiveRoutes\n                    });\n                    // Ensure parsedUrl.pathname includes locale before processing\n                    // rewrites or they won't match correctly.\n                    if (defaultLocale && !pathnameInfo.locale) {\n                        parsedUrl.pathname = `/${defaultLocale}${parsedUrl.pathname}`;\n                    }\n                    const pathnameBeforeRewrite = parsedUrl.pathname;\n                    const rewriteParamKeys = Object.keys(utils.handleRewrites(req, parsedUrl));\n                    const didRewrite = pathnameBeforeRewrite !== parsedUrl.pathname;\n                    if (didRewrite && parsedUrl.pathname) {\n                        addRequestMeta(req, 'rewroteURL', parsedUrl.pathname);\n                    }\n                    // Create a copy of the query params to avoid mutating the original\n                    // object. This prevents any overlapping query params that have the\n                    // same normalized key from causing issues.\n                    const queryParams = {\n                        ...parsedUrl.query\n                    };\n                    for (const [key, value] of Object.entries(parsedUrl.query)){\n                        const normalizedKey = normalizeNextQueryParam(key);\n                        if (!normalizedKey) continue;\n                        // Remove the prefixed key from the query params because we want\n                        // to consume it for the dynamic route matcher.\n                        delete parsedUrl.query[key];\n                        if (typeof value === 'undefined') continue;\n                        queryParams[normalizedKey] = Array.isArray(value) ? value.map((v)=>decodeQueryPathParameter(v)) : decodeQueryPathParameter(value);\n                    }\n                    // interpolate dynamic params and normalize URL if needed\n                    if (pageIsDynamic) {\n                        let params = {};\n                        let paramsResult = utils.normalizeDynamicRouteParams(queryParams, false);\n                        // for prerendered ISR paths we attempt parsing the route\n                        // params from the URL directly as route-matches may not\n                        // contain the correct values due to the filesystem path\n                        // matching before the dynamic route has been matched\n                        if (!paramsResult.hasValidParams && !isDynamicRoute(normalizedUrlPath)) {\n                            let matcherParams = utils.dynamicRouteMatcher == null ? void 0 : utils.dynamicRouteMatcher.call(utils, normalizedUrlPath);\n                            if (matcherParams) {\n                                utils.normalizeDynamicRouteParams(matcherParams, false);\n                                Object.assign(paramsResult.params, matcherParams);\n                                paramsResult.hasValidParams = true;\n                            }\n                        }\n                        // if an action request is bypassing a prerender and we\n                        // don't have the params in the URL since it was prerendered\n                        // and matched during handle: 'filesystem' rather than dynamic route\n                        // resolving we need to parse the params from the matched-path.\n                        // Note: this is similar to above case but from match-path instead\n                        // of from the request URL since a rewrite could cause that to not\n                        // match the src pathname\n                        if (// we can have a collision with /index and a top-level /[slug]\n                        matchedPath !== '/index' && !paramsResult.hasValidParams && !isDynamicRoute(matchedPath)) {\n                            let matcherParams = utils.dynamicRouteMatcher == null ? void 0 : utils.dynamicRouteMatcher.call(utils, matchedPath);\n                            if (matcherParams) {\n                                const curParamsResult = utils.normalizeDynamicRouteParams(matcherParams, false);\n                                if (curParamsResult.hasValidParams) {\n                                    Object.assign(params, matcherParams);\n                                    paramsResult = curParamsResult;\n                                }\n                            }\n                        }\n                        if (paramsResult.hasValidParams) {\n                            params = paramsResult.params;\n                        }\n                        const routeMatchesHeader = req.headers['x-now-route-matches'];\n                        if (typeof routeMatchesHeader === 'string' && routeMatchesHeader && isDynamicRoute(matchedPath) && !paramsResult.hasValidParams) {\n                            const routeMatches = utils.getParamsFromRouteMatches(routeMatchesHeader);\n                            if (routeMatches) {\n                                paramsResult = utils.normalizeDynamicRouteParams(routeMatches, true);\n                                if (paramsResult.hasValidParams) {\n                                    params = paramsResult.params;\n                                }\n                            }\n                        }\n                        // Try to parse the params from the query if we couldn't parse them\n                        // from the route matches but ignore missing optional params.\n                        if (!paramsResult.hasValidParams) {\n                            paramsResult = utils.normalizeDynamicRouteParams(queryParams, true);\n                            if (paramsResult.hasValidParams) {\n                                params = paramsResult.params;\n                            }\n                        }\n                        // handle the actual dynamic route name being requested\n                        if (utils.defaultRouteMatches && normalizedUrlPath === srcPathname && !paramsResult.hasValidParams && !utils.normalizeDynamicRouteParams({\n                            ...params\n                        }, true).hasValidParams) {\n                            params = utils.defaultRouteMatches;\n                            // Mark that the default route matches were set on the request\n                            // during routing.\n                            addRequestMeta(req, 'didSetDefaultRouteMatches', true);\n                        }\n                        if (params) {\n                            matchedPath = utils.interpolateDynamicPath(srcPathname, params);\n                            req.url = utils.interpolateDynamicPath(req.url, params);\n                            // If the request is for a segment prefetch, we need to update the\n                            // segment prefetch request path to include the interpolated\n                            // params.\n                            let segmentPrefetchRSCRequest = getRequestMeta(req, 'segmentPrefetchRSCRequest');\n                            if (segmentPrefetchRSCRequest && isDynamicRoute(segmentPrefetchRSCRequest, false)) {\n                                segmentPrefetchRSCRequest = utils.interpolateDynamicPath(segmentPrefetchRSCRequest, params);\n                                req.headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER.toLowerCase()] = segmentPrefetchRSCRequest;\n                                addRequestMeta(req, 'segmentPrefetchRSCRequest', segmentPrefetchRSCRequest);\n                            }\n                        }\n                    }\n                    if (pageIsDynamic || didRewrite) {\n                        var _utils_defaultRouteRegex;\n                        utils.normalizeVercelUrl(req, [\n                            ...rewriteParamKeys,\n                            ...Object.keys(((_utils_defaultRouteRegex = utils.defaultRouteRegex) == null ? void 0 : _utils_defaultRouteRegex.groups) || {})\n                        ]);\n                    }\n                    parsedUrl.pathname = matchedPath;\n                    url.pathname = parsedUrl.pathname;\n                    finished = await this.normalizeAndAttachMetadata(req, res, parsedUrl);\n                    if (finished) return;\n                } catch (err) {\n                    if (err instanceof DecodeError || err instanceof NormalizeError) {\n                        res.statusCode = 400;\n                        return this.renderError(null, req, res, '/_error', {});\n                    }\n                    throw err;\n                }\n            }\n            addRequestMeta(req, 'isLocaleDomain', Boolean(domainLocale));\n            if (pathnameInfo.locale) {\n                req.url = formatUrl(url);\n                addRequestMeta(req, 'didStripLocale', true);\n            }\n            // If we aren't in minimal mode or there is no locale in the query\n            // string, add the locale to the query string.\n            if (!this.minimalMode || !getRequestMeta(req, 'locale')) {\n                // If the locale is in the pathname, add it to the query string.\n                if (pathnameInfo.locale) {\n                    addRequestMeta(req, 'locale', pathnameInfo.locale);\n                } else if (defaultLocale) {\n                    addRequestMeta(req, 'locale', defaultLocale);\n                    addRequestMeta(req, 'localeInferredFromDefault', true);\n                }\n            }\n            // set incremental cache to request meta so it can\n            // be passed down for edge functions and the fetch disk\n            // cache can be leveraged locally\n            if (!this.serverOptions.webServerConfig && !getRequestMeta(req, 'incrementalCache')) {\n                let protocol = 'https:';\n                try {\n                    const parsedFullUrl = new URL(getRequestMeta(req, 'initURL') || '/', 'http://n');\n                    protocol = parsedFullUrl.protocol;\n                } catch  {}\n                const incrementalCache = await this.getIncrementalCache({\n                    requestHeaders: Object.assign({}, req.headers),\n                    requestProtocol: protocol.substring(0, protocol.length - 1)\n                });\n                incrementalCache.resetRequestCache();\n                addRequestMeta(req, 'incrementalCache', incrementalCache);\n                globalThis.__incrementalCache = incrementalCache;\n            }\n            const cacheHandlers = getCacheHandlers();\n            if (cacheHandlers) {\n                await Promise.all([\n                    ...cacheHandlers\n                ].map(async (cacheHandler)=>{\n                    if ('refreshTags' in cacheHandler) {\n                    // Note: cacheHandler.refreshTags() is called lazily before the\n                    // first cache entry is retrieved. It allows us to skip the\n                    // refresh request if no caches are read at all.\n                    } else {\n                        const previouslyRevalidatedTags = getPreviouslyRevalidatedTags(req.headers, this.getPrerenderManifest().preview.previewModeId);\n                        await cacheHandler.receiveExpiredTags(...previouslyRevalidatedTags);\n                    }\n                }));\n            }\n            // set server components HMR cache to request meta so it can be passed\n            // down for edge functions\n            if (!getRequestMeta(req, 'serverComponentsHmrCache')) {\n                addRequestMeta(req, 'serverComponentsHmrCache', this.getServerComponentsHmrCache());\n            }\n            // when invokePath is specified we can short short circuit resolving\n            // we only honor this header if we are inside of a render worker to\n            // prevent external users coercing the routing path\n            const invokePath = getRequestMeta(req, 'invokePath');\n            const useInvokePath = !useMatchedPathHeader && process.env.NEXT_RUNTIME !== 'edge' && invokePath;\n            if (useInvokePath) {\n                var _this_nextConfig_i18n1;\n                const invokeStatus = getRequestMeta(req, 'invokeStatus');\n                if (invokeStatus) {\n                    const invokeQuery = getRequestMeta(req, 'invokeQuery');\n                    if (invokeQuery) {\n                        Object.assign(parsedUrl.query, invokeQuery);\n                    }\n                    res.statusCode = invokeStatus;\n                    let err = getRequestMeta(req, 'invokeError') || null;\n                    return this.renderError(err, req, res, '/_error', parsedUrl.query);\n                }\n                const parsedMatchedPath = new URL(invokePath || '/', 'http://n');\n                const invokePathnameInfo = getNextPathnameInfo(parsedMatchedPath.pathname, {\n                    nextConfig: this.nextConfig,\n                    parseData: false\n                });\n                if (invokePathnameInfo.locale) {\n                    addRequestMeta(req, 'locale', invokePathnameInfo.locale);\n                }\n                if (parsedUrl.pathname !== parsedMatchedPath.pathname) {\n                    parsedUrl.pathname = parsedMatchedPath.pathname;\n                    addRequestMeta(req, 'rewroteURL', invokePathnameInfo.pathname);\n                }\n                const normalizeResult = normalizeLocalePath(removePathPrefix(parsedUrl.pathname, this.nextConfig.basePath || ''), (_this_nextConfig_i18n1 = this.nextConfig.i18n) == null ? void 0 : _this_nextConfig_i18n1.locales);\n                if (normalizeResult.detectedLocale) {\n                    addRequestMeta(req, 'locale', normalizeResult.detectedLocale);\n                }\n                parsedUrl.pathname = normalizeResult.pathname;\n                for (const key of Object.keys(parsedUrl.query)){\n                    delete parsedUrl.query[key];\n                }\n                const invokeQuery = getRequestMeta(req, 'invokeQuery');\n                if (invokeQuery) {\n                    Object.assign(parsedUrl.query, invokeQuery);\n                }\n                finished = await this.normalizeAndAttachMetadata(req, res, parsedUrl);\n                if (finished) return;\n                await this.handleCatchallRenderRequest(req, res, parsedUrl);\n                return;\n            }\n            if (process.env.NEXT_RUNTIME !== 'edge' && getRequestMeta(req, 'middlewareInvoke')) {\n                finished = await this.normalizeAndAttachMetadata(req, res, parsedUrl);\n                if (finished) return;\n                finished = await this.handleCatchallMiddlewareRequest(req, res, parsedUrl);\n                if (finished) return;\n                const err = new Error();\n                err.result = {\n                    response: new Response(null, {\n                        headers: {\n                            'x-middleware-next': '1'\n                        }\n                    })\n                };\n                err.bubble = true;\n                throw err;\n            }\n            // This wasn't a request via the matched path or the invoke path, so\n            // prepare for a legacy run by removing the base path.\n            // ensure we strip the basePath when not using an invoke header\n            if (!useMatchedPathHeader && pathnameInfo.basePath) {\n                parsedUrl.pathname = removePathPrefix(parsedUrl.pathname, pathnameInfo.basePath);\n            }\n            res.statusCode = 200;\n            return await this.run(req, res, parsedUrl);\n        } catch (err) {\n            if (err instanceof NoFallbackError) {\n                throw err;\n            }\n            if (err && typeof err === 'object' && err.code === 'ERR_INVALID_URL' || err instanceof DecodeError || err instanceof NormalizeError) {\n                res.statusCode = 400;\n                return this.renderError(null, req, res, '/_error', {});\n            }\n            if (this.minimalMode || this.renderOpts.dev || isBubbledError(err) && err.bubble) {\n                throw err;\n            }\n            this.logError(getProperError(err));\n            res.statusCode = 500;\n            res.body('Internal Server Error').send();\n        }\n    }\n    /**\n   * @internal - this method is internal to Next.js and should not be used directly by end-users\n   */ getRequestHandlerWithMetadata(meta) {\n        const handler = this.getRequestHandler();\n        return (req, res, parsedUrl)=>{\n            setRequestMeta(req, meta);\n            return handler(req, res, parsedUrl);\n        };\n    }\n    getRequestHandler() {\n        return this.handleRequest.bind(this);\n    }\n    setAssetPrefix(prefix) {\n        this.renderOpts.assetPrefix = prefix ? prefix.replace(/\\/$/, '') : '';\n    }\n    /**\n   * Runs async initialization of server.\n   * It is idempotent, won't fire underlying initialization more than once.\n   */ async prepare() {\n        if (this.prepared) return;\n        if (this.preparedPromise === null) {\n            // Get instrumentation module\n            this.instrumentation = await this.loadInstrumentationModule();\n            this.preparedPromise = this.prepareImpl().then(()=>{\n                this.prepared = true;\n                this.preparedPromise = null;\n            });\n        }\n        return this.preparedPromise;\n    }\n    async prepareImpl() {}\n    async loadInstrumentationModule() {}\n    async close() {}\n    getAppPathRoutes() {\n        const appPathRoutes = {};\n        Object.keys(this.appPathsManifest || {}).forEach((entry)=>{\n            const normalizedPath = normalizeAppPath(entry);\n            if (!appPathRoutes[normalizedPath]) {\n                appPathRoutes[normalizedPath] = [];\n            }\n            appPathRoutes[normalizedPath].push(entry);\n        });\n        return appPathRoutes;\n    }\n    async run(req, res, parsedUrl) {\n        return getTracer().trace(BaseServerSpan.run, async ()=>this.runImpl(req, res, parsedUrl));\n    }\n    async runImpl(req, res, parsedUrl) {\n        await this.handleCatchallRenderRequest(req, res, parsedUrl);\n    }\n    async pipe(fn, partialContext) {\n        return getTracer().trace(BaseServerSpan.pipe, async ()=>this.pipeImpl(fn, partialContext));\n    }\n    async pipeImpl(fn, partialContext) {\n        const ua = partialContext.req.headers['user-agent'] || '';\n        const isBotRequest = isBot(ua);\n        const ctx = {\n            ...partialContext,\n            renderOpts: {\n                ...this.renderOpts,\n                supportsDynamicResponse: !isBotRequest,\n                botType: getBotType(ua),\n                serveStreamingMetadata: shouldServeStreamingMetadata(ua, this.nextConfig.htmlLimitedBots)\n            }\n        };\n        const payload = await fn(ctx);\n        if (payload === null) {\n            return;\n        }\n        const { req, res } = ctx;\n        const originalStatus = res.statusCode;\n        const { body, type } = payload;\n        let { cacheControl } = payload;\n        if (!res.sent) {\n            const { generateEtags, poweredByHeader, dev } = this.renderOpts;\n            // In dev, we should not cache pages for any reason.\n            if (dev) {\n                res.setHeader('Cache-Control', 'no-store, must-revalidate');\n                cacheControl = undefined;\n            }\n            if (cacheControl && cacheControl.expire === undefined) {\n                cacheControl.expire = this.nextConfig.expireTime;\n            }\n            await this.sendRenderResult(req, res, {\n                result: body,\n                type,\n                generateEtags,\n                poweredByHeader,\n                cacheControl\n            });\n            res.statusCode = originalStatus;\n        }\n    }\n    async getStaticHTML(fn, partialContext) {\n        const ctx = {\n            ...partialContext,\n            renderOpts: {\n                ...this.renderOpts,\n                supportsDynamicResponse: false\n            }\n        };\n        const payload = await fn(ctx);\n        if (payload === null) {\n            return null;\n        }\n        return payload.body.toUnchunkedString();\n    }\n    async render(req, res, pathname, query = {}, parsedUrl, internalRender = false) {\n        return getTracer().trace(BaseServerSpan.render, async ()=>this.renderImpl(req, res, pathname, query, parsedUrl, internalRender));\n    }\n    getWaitUntil() {\n        const builtinRequestContext = getBuiltinRequestContext();\n        if (builtinRequestContext) {\n            // the platform provided a request context.\n            // use the `waitUntil` from there, whether actually present or not --\n            // if not present, `after` will error.\n            // NOTE: if we're in an edge runtime sandbox, this context will be used to forward the outer waitUntil.\n            return builtinRequestContext.waitUntil;\n        }\n        if (this.minimalMode) {\n            // we're built for a serverless environment, and `waitUntil` is not available,\n            // but using a noop would likely lead to incorrect behavior,\n            // because we have no way of keeping the invocation alive.\n            // return nothing, and `after` will error if used.\n            //\n            // NOTE: for edge functions, `NextWebServer` always runs in minimal mode.\n            //\n            // NOTE: if we're in an edge runtime sandbox, waitUntil will be passed in using \"@next/request-context\",\n            // so we won't get here.\n            return undefined;\n        }\n        return this.getInternalWaitUntil();\n    }\n    getInternalWaitUntil() {\n        return undefined;\n    }\n    async renderImpl(req, res, pathname, query = {}, parsedUrl, internalRender = false) {\n        var _req_url;\n        if (!pathname.startsWith('/')) {\n            console.warn(`Cannot render page with path \"${pathname}\", did you mean \"/${pathname}\"?. See more info here: https://nextjs.org/docs/messages/render-no-starting-slash`);\n        }\n        if (this.serverOptions.customServer && pathname === '/index' && !await this.hasPage('/index')) {\n            // maintain backwards compatibility for custom server\n            // (see custom-server integration tests)\n            pathname = '/';\n        }\n        // we allow custom servers to call render for all URLs\n        // so check if we need to serve a static _next file or not.\n        // we don't modify the URL for _next/data request but still\n        // call render so we special case this to prevent an infinite loop\n        if (!internalRender && !this.minimalMode && !getRequestMeta(req, 'isNextDataReq') && (((_req_url = req.url) == null ? void 0 : _req_url.match(/^\\/_next\\//)) || this.hasStaticDir && req.url.match(/^\\/static\\//))) {\n            return this.handleRequest(req, res, parsedUrl);\n        }\n        if (isBlockedPage(pathname)) {\n            return this.render404(req, res, parsedUrl);\n        }\n        return this.pipe((ctx)=>this.renderToResponse(ctx), {\n            req,\n            res,\n            pathname,\n            query\n        });\n    }\n    async getStaticPaths({ pathname }) {\n        var _this_getPrerenderManifest_dynamicRoutes_pathname;\n        // Read whether or not fallback should exist from the manifest.\n        const fallbackField = (_this_getPrerenderManifest_dynamicRoutes_pathname = this.getPrerenderManifest().dynamicRoutes[pathname]) == null ? void 0 : _this_getPrerenderManifest_dynamicRoutes_pathname.fallback;\n        return {\n            // `staticPaths` is intentionally set to `undefined` as it should've\n            // been caught when checking disk data.\n            staticPaths: undefined,\n            fallbackMode: parseFallbackField(fallbackField)\n        };\n    }\n    async renderToResponseWithComponents(requestContext, findComponentsResult) {\n        return getTracer().trace(BaseServerSpan.renderToResponseWithComponents, async ()=>this.renderToResponseWithComponentsImpl(requestContext, findComponentsResult));\n    }\n    pathCouldBeIntercepted(resolvedPathname) {\n        return isInterceptionRouteAppPath(resolvedPathname) || this.interceptionRoutePatterns.some((regexp)=>{\n            return regexp.test(resolvedPathname);\n        });\n    }\n    setVaryHeader(req, res, isAppPath, resolvedPathname) {\n        const baseVaryHeader = `${RSC_HEADER}, ${NEXT_ROUTER_STATE_TREE_HEADER}, ${NEXT_ROUTER_PREFETCH_HEADER}, ${NEXT_ROUTER_SEGMENT_PREFETCH_HEADER}`;\n        const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? false;\n        let addedNextUrlToVary = false;\n        if (isAppPath && this.pathCouldBeIntercepted(resolvedPathname)) {\n            // Interception route responses can vary based on the `Next-URL` header.\n            // We use the Vary header to signal this behavior to the client to properly cache the response.\n            res.appendHeader('vary', `${baseVaryHeader}, ${NEXT_URL}`);\n            addedNextUrlToVary = true;\n        } else if (isAppPath || isRSCRequest) {\n            // We don't need to include `Next-URL` in the Vary header for non-interception routes since it won't affect the response.\n            // We also set this header for pages to avoid caching issues when navigating between pages and app.\n            res.appendHeader('vary', baseVaryHeader);\n        }\n        if (!addedNextUrlToVary) {\n            // Remove `Next-URL` from the request headers we determined it wasn't necessary to include in the Vary header.\n            // This is to avoid any dependency on the `Next-URL` header being present when preparing the response.\n            delete req.headers[NEXT_URL];\n        }\n    }\n    async renderToResponseWithComponentsImpl({ req, res, pathname, renderOpts: opts }, { components, query }) {\n        var _components_Component, _this_nextConfig_i18n, _this, _this_nextConfig_i18n1, _cacheEntry_value, _cacheEntry_value1;\n        if (pathname === UNDERSCORE_NOT_FOUND_ROUTE) {\n            pathname = '/404';\n        }\n        const isErrorPathname = pathname === '/_error';\n        const is404Page = pathname === '/404' || isErrorPathname && res.statusCode === 404;\n        const is500Page = pathname === '/500' || isErrorPathname && res.statusCode === 500;\n        const isAppPath = components.isAppPath === true;\n        const hasServerProps = !!components.getServerSideProps;\n        let hasGetStaticPaths = !!components.getStaticPaths;\n        const isPossibleServerAction = getIsPossibleServerAction(req);\n        const hasGetInitialProps = !!((_components_Component = components.Component) == null ? void 0 : _components_Component.getInitialProps);\n        let isSSG = !!components.getStaticProps;\n        // Compute the iSSG cache key. We use the rewroteUrl since\n        // pages with fallback: false are allowed to be rewritten to\n        // and we need to look up the path by the rewritten path\n        let urlPathname = parseUrl(req.url || '').pathname || '/';\n        let resolvedUrlPathname = getRequestMeta(req, 'rewroteURL') || urlPathname;\n        this.setVaryHeader(req, res, isAppPath, resolvedUrlPathname);\n        let staticPaths;\n        let fallbackMode;\n        let hasFallback = false;\n        const isDynamic = isDynamicRoute(components.page);\n        const prerenderManifest = this.getPrerenderManifest();\n        if (isAppPath && isDynamic) {\n            const pathsResult = await this.getStaticPaths({\n                pathname,\n                page: components.page,\n                isAppPath,\n                requestHeaders: req.headers\n            });\n            staticPaths = pathsResult.staticPaths;\n            fallbackMode = pathsResult.fallbackMode;\n            hasFallback = typeof fallbackMode !== 'undefined';\n            if (this.nextConfig.output === 'export') {\n                const page = components.page;\n                if (!staticPaths) {\n                    throw Object.defineProperty(new Error(`Page \"${page}\" is missing exported function \"generateStaticParams()\", which is required with \"output: export\" config.`), \"__NEXT_ERROR_CODE\", {\n                        value: \"E353\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                const resolvedWithoutSlash = removeTrailingSlash(resolvedUrlPathname);\n                if (!staticPaths.includes(resolvedWithoutSlash)) {\n                    throw Object.defineProperty(new Error(`Page \"${page}\" is missing param \"${resolvedWithoutSlash}\" in \"generateStaticParams()\", which is required with \"output: export\" config.`), \"__NEXT_ERROR_CODE\", {\n                        value: \"E443\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n            }\n            if (hasFallback) {\n                hasGetStaticPaths = true;\n            }\n        }\n        if (hasFallback || (staticPaths == null ? void 0 : staticPaths.includes(resolvedUrlPathname)) || // this signals revalidation in deploy environments\n        // TODO: make this more generic\n        req.headers['x-now-route-matches']) {\n            isSSG = true;\n        } else if (!this.renderOpts.dev) {\n            isSSG ||= !!prerenderManifest.routes[toRoute(pathname)];\n        }\n        // Toggle whether or not this is a Data request\n        const isNextDataRequest = !!(getRequestMeta(req, 'isNextDataReq') || req.headers['x-nextjs-data'] && this.serverOptions.webServerConfig) && (isSSG || hasServerProps);\n        /**\n     * If true, this indicates that the request being made is for an app\n     * prefetch request.\n     */ const isPrefetchRSCRequest = getRequestMeta(req, 'isPrefetchRSCRequest') ?? false;\n        // NOTE: Don't delete headers[RSC] yet, it still needs to be used in renderToHTML later\n        const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? false;\n        // when we are handling a middleware prefetch and it doesn't\n        // resolve to a static data route we bail early to avoid\n        // unexpected SSR invocations\n        if (!isSSG && req.headers['x-middleware-prefetch'] && !(is404Page || pathname === '/_error')) {\n            res.setHeader(MATCHED_PATH_HEADER, pathname);\n            res.setHeader('x-middleware-skip', '1');\n            res.setHeader('cache-control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            res.body('{}').send();\n            return null;\n        }\n        // normalize req.url for SSG paths as it is not exposed\n        // to getStaticProps and the asPath should not expose /_next/data\n        if (isSSG && this.minimalMode && req.headers[MATCHED_PATH_HEADER] && req.url.startsWith('/_next/data')) {\n            req.url = this.stripNextDataPath(req.url);\n        }\n        const locale = getRequestMeta(req, 'locale');\n        const defaultLocale = isSSG ? (_this_nextConfig_i18n = this.nextConfig.i18n) == null ? void 0 : _this_nextConfig_i18n.defaultLocale : getRequestMeta(req, 'defaultLocale');\n        if (!!req.headers['x-nextjs-data'] && (!res.statusCode || res.statusCode === 200)) {\n            res.setHeader('x-nextjs-matched-path', `${locale ? `/${locale}` : ''}${pathname}`);\n        }\n        let routeModule;\n        if (components.routeModule) {\n            routeModule = components.routeModule;\n        }\n        /**\n     * If the route being rendered is an app page, and the ppr feature has been\n     * enabled, then the given route _could_ support PPR.\n     */ const couldSupportPPR = this.isAppPPREnabled && typeof routeModule !== 'undefined' && isAppPageRouteModule(routeModule);\n        // When enabled, this will allow the use of the `?__nextppronly` query to\n        // enable debugging of the static shell.\n        const hasDebugStaticShellQuery = process.env.__NEXT_EXPERIMENTAL_STATIC_SHELL_DEBUGGING === '1' && typeof query.__nextppronly !== 'undefined' && couldSupportPPR;\n        // When enabled, this will allow the use of the `?__nextppronly` query\n        // to enable debugging of the fallback shell.\n        const hasDebugFallbackShellQuery = hasDebugStaticShellQuery && query.__nextppronly === 'fallback';\n        // This page supports PPR if it is marked as being `PARTIALLY_STATIC` in the\n        // prerender manifest and this is an app page.\n        const isRoutePPREnabled = couldSupportPPR && (((_this = prerenderManifest.routes[pathname] ?? prerenderManifest.dynamicRoutes[pathname]) == null ? void 0 : _this.renderingMode) === 'PARTIALLY_STATIC' || // Ideally we'd want to check the appConfig to see if this page has PPR\n        // enabled or not, but that would require plumbing the appConfig through\n        // to the server during development. We assume that the page supports it\n        // but only during development.\n        hasDebugStaticShellQuery && (this.renderOpts.dev === true || this.experimentalTestProxy === true));\n        const isDebugStaticShell = hasDebugStaticShellQuery && isRoutePPREnabled;\n        // We should enable debugging dynamic accesses when the static shell\n        // debugging has been enabled and we're also in development mode.\n        const isDebugDynamicAccesses = isDebugStaticShell && this.renderOpts.dev === true;\n        const isDebugFallbackShell = hasDebugFallbackShellQuery && isRoutePPREnabled;\n        // If we're in minimal mode, then try to get the postponed information from\n        // the request metadata. If available, use it for resuming the postponed\n        // render.\n        const minimalPostponed = isRoutePPREnabled ? getRequestMeta(req, 'postponed') : undefined;\n        // If PPR is enabled, and this is a RSC request (but not a prefetch), then\n        // we can use this fact to only generate the flight data for the request\n        // because we can't cache the HTML (as it's also dynamic).\n        const isDynamicRSCRequest = isRoutePPREnabled && isRSCRequest && !isPrefetchRSCRequest;\n        // Need to read this before it's stripped by stripFlightHeaders. We don't\n        // need to transfer it to the request meta because it's only read\n        // within this function; the static segment data should have already been\n        // generated, so we will always either return a static response or a 404.\n        const segmentPrefetchHeader = getRequestMeta(req, 'segmentPrefetchRSCRequest');\n        const isHtmlBot = isHtmlBotRequest(req);\n        if (isHtmlBot && isRoutePPREnabled) {\n            isSSG = false;\n            this.renderOpts.serveStreamingMetadata = false;\n        }\n        // we need to ensure the status code if /404 is visited directly\n        if (is404Page && !isNextDataRequest && !isRSCRequest) {\n            res.statusCode = 404;\n        }\n        // ensure correct status is set when visiting a status page\n        // directly e.g. /500\n        if (STATIC_STATUS_PAGES.includes(pathname)) {\n            res.statusCode = parseInt(pathname.slice(1), 10);\n        }\n        if (// Server actions can use non-GET/HEAD methods.\n        !isPossibleServerAction && // Resume can use non-GET/HEAD methods.\n        !minimalPostponed && !is404Page && !is500Page && pathname !== '/_error' && req.method !== 'HEAD' && req.method !== 'GET' && (typeof components.Component === 'string' || isSSG)) {\n            res.statusCode = 405;\n            res.setHeader('Allow', [\n                'GET',\n                'HEAD'\n            ]);\n            res.body('Method Not Allowed').send();\n            return null;\n        }\n        // handle static page\n        if (typeof components.Component === 'string') {\n            return {\n                type: 'html',\n                // TODO: Static pages should be serialized as RenderResult\n                body: RenderResult.fromStatic(components.Component)\n            };\n        }\n        // Ensure that if the `amp` query parameter is falsy that we remove it from\n        // the query object. This ensures it won't be found by the `in` operator.\n        if ('amp' in query && !query.amp) delete query.amp;\n        if (opts.supportsDynamicResponse === true) {\n            var _components_Document;\n            const ua = req.headers['user-agent'] || '';\n            const isBotRequest = isBot(ua);\n            const isSupportedDocument = typeof ((_components_Document = components.Document) == null ? void 0 : _components_Document.getInitialProps) !== 'function' || // The built-in `Document` component also supports dynamic HTML for concurrent mode.\n            NEXT_BUILTIN_DOCUMENT in components.Document;\n            // Disable dynamic HTML in cases that we know it won't be generated,\n            // so that we can continue generating a cache key when possible.\n            // TODO-APP: should the first render for a dynamic app path\n            // be static so we can collect revalidate and populate the\n            // cache if there are no dynamic data requirements\n            opts.supportsDynamicResponse = !isSSG && !isBotRequest && !query.amp && isSupportedDocument;\n        }\n        // In development, we always want to generate dynamic HTML.\n        if (!isNextDataRequest && isAppPath && opts.dev) {\n            opts.supportsDynamicResponse = true;\n        }\n        const locales = (_this_nextConfig_i18n1 = this.nextConfig.i18n) == null ? void 0 : _this_nextConfig_i18n1.locales;\n        let previewData;\n        let isPreviewMode = false;\n        if (hasServerProps || isSSG || isAppPath) {\n            // For the edge runtime, we don't support preview mode in SSG.\n            if (process.env.NEXT_RUNTIME !== 'edge') {\n                const { tryGetPreviewData } = require('./api-utils/node/try-get-preview-data');\n                previewData = tryGetPreviewData(req, res, this.renderOpts.previewProps, !!this.nextConfig.experimental.multiZoneDraftMode);\n                isPreviewMode = previewData !== false;\n            }\n        }\n        // If this is a request for an app path that should be statically generated\n        // and we aren't in the edge runtime, strip the flight headers so it will\n        // generate the static response.\n        if (isAppPath && !opts.dev && !isPreviewMode && isSSG && isRSCRequest && !isDynamicRSCRequest && (!isEdgeRuntime(opts.runtime) || this.serverOptions.webServerConfig)) {\n            stripFlightHeaders(req.headers);\n        }\n        let { isOnDemandRevalidate, revalidateOnlyGenerated } = checkIsOnDemandRevalidate(req, this.renderOpts.previewProps);\n        if (isSSG && this.minimalMode && req.headers[MATCHED_PATH_HEADER]) {\n            // the url value is already correct when the matched-path header is set\n            resolvedUrlPathname = urlPathname;\n        }\n        urlPathname = removeTrailingSlash(urlPathname);\n        resolvedUrlPathname = removeTrailingSlash(resolvedUrlPathname);\n        if (this.localeNormalizer) {\n            resolvedUrlPathname = this.localeNormalizer.normalize(resolvedUrlPathname);\n        }\n        const handleRedirect = (pageData)=>{\n            const redirect = {\n                destination: pageData.pageProps.__N_REDIRECT,\n                statusCode: pageData.pageProps.__N_REDIRECT_STATUS,\n                basePath: pageData.pageProps.__N_REDIRECT_BASE_PATH\n            };\n            const statusCode = getRedirectStatus(redirect);\n            const { basePath } = this.nextConfig;\n            if (basePath && redirect.basePath !== false && redirect.destination.startsWith('/')) {\n                redirect.destination = `${basePath}${redirect.destination}`;\n            }\n            if (redirect.destination.startsWith('/')) {\n                redirect.destination = normalizeRepeatedSlashes(redirect.destination);\n            }\n            res.redirect(redirect.destination, statusCode).body(redirect.destination).send();\n        };\n        // remove /_next/data prefix from urlPathname so it matches\n        // for direct page visit and /_next/data visit\n        if (isNextDataRequest) {\n            resolvedUrlPathname = this.stripNextDataPath(resolvedUrlPathname);\n            urlPathname = this.stripNextDataPath(urlPathname);\n        }\n        let ssgCacheKey = null;\n        if (!isPreviewMode && isSSG && !opts.supportsDynamicResponse && !isPossibleServerAction && !minimalPostponed && !isDynamicRSCRequest) {\n            ssgCacheKey = `${locale ? `/${locale}` : ''}${(pathname === '/' || resolvedUrlPathname === '/') && locale ? '' : resolvedUrlPathname}${query.amp ? '.amp' : ''}`;\n        }\n        if ((is404Page || is500Page) && isSSG) {\n            ssgCacheKey = `${locale ? `/${locale}` : ''}${pathname}${query.amp ? '.amp' : ''}`;\n        }\n        if (ssgCacheKey) {\n            ssgCacheKey = decodePathParams(ssgCacheKey);\n            // ensure /index and / is normalized to one key\n            ssgCacheKey = ssgCacheKey === '/index' && pathname === '/' ? '/' : ssgCacheKey;\n        }\n        let protocol = 'https:';\n        try {\n            const parsedFullUrl = new URL(getRequestMeta(req, 'initURL') || '/', 'http://n');\n            protocol = parsedFullUrl.protocol;\n        } catch  {}\n        // use existing incrementalCache instance if available\n        const incrementalCache = globalThis.__incrementalCache || await this.getIncrementalCache({\n            requestHeaders: Object.assign({}, req.headers),\n            requestProtocol: protocol.substring(0, protocol.length - 1)\n        });\n        // TODO: investigate, this is not safe across multiple concurrent requests\n        incrementalCache.resetRequestCache();\n        const doRender = async ({ postponed, pagesFallback = false, fallbackRouteParams })=>{\n            // In development, we always want to generate dynamic HTML.\n            let supportsDynamicResponse = // If we're in development, we always support dynamic HTML, unless it's\n            // a data request, in which case we only produce static HTML.\n            !isNextDataRequest && opts.dev === true || // If this is not SSG or does not have static paths, then it supports\n            // dynamic HTML.\n            !isSSG && !hasGetStaticPaths || // If this request has provided postponed data, it supports dynamic\n            // HTML.\n            typeof postponed === 'string' || // If this is a dynamic RSC request, then this render supports dynamic\n            // HTML (it's dynamic).\n            isDynamicRSCRequest;\n            const origQuery = parseUrl(req.url || '', true).query;\n            // clear any dynamic route params so they aren't in\n            // the resolvedUrl\n            if (opts.params) {\n                Object.keys(opts.params).forEach((key)=>{\n                    delete origQuery[key];\n                });\n            }\n            const hadTrailingSlash = urlPathname !== '/' && this.nextConfig.trailingSlash;\n            const resolvedUrl = formatUrl({\n                pathname: `${resolvedUrlPathname}${hadTrailingSlash ? '/' : ''}`,\n                // make sure to only add query values from original URL\n                query: origQuery\n            });\n            // When html bots request PPR page, perform the full dynamic rendering.\n            const shouldWaitOnAllReady = isHtmlBot && isRoutePPREnabled;\n            const renderOpts = {\n                ...components,\n                ...opts,\n                ...isAppPath ? {\n                    incrementalCache,\n                    // This is a revalidation request if the request is for a static\n                    // page and it is not being resumed from a postponed render and\n                    // it is not a dynamic RSC request then it is a revalidation\n                    // request.\n                    isRevalidate: isSSG && !postponed && !isDynamicRSCRequest,\n                    serverActions: this.nextConfig.experimental.serverActions\n                } : {},\n                isNextDataRequest,\n                resolvedUrl,\n                locale,\n                locales,\n                defaultLocale,\n                multiZoneDraftMode: this.nextConfig.experimental.multiZoneDraftMode,\n                // For getServerSideProps and getInitialProps we need to ensure we use the original URL\n                // and not the resolved URL to prevent a hydration mismatch on\n                // asPath\n                resolvedAsPath: hasServerProps || hasGetInitialProps ? formatUrl({\n                    // we use the original URL pathname less the _next/data prefix if\n                    // present\n                    pathname: `${urlPathname}${hadTrailingSlash ? '/' : ''}`,\n                    query: origQuery\n                }) : resolvedUrl,\n                experimental: {\n                    ...opts.experimental,\n                    isRoutePPREnabled\n                },\n                supportsDynamicResponse,\n                shouldWaitOnAllReady,\n                isOnDemandRevalidate,\n                isDraftMode: isPreviewMode,\n                isPossibleServerAction,\n                postponed,\n                waitUntil: this.getWaitUntil(),\n                onClose: res.onClose.bind(res),\n                onAfterTaskError: undefined,\n                // only available in dev\n                setIsrStatus: this.setIsrStatus\n            };\n            if (isDebugStaticShell || isDebugDynamicAccesses) {\n                supportsDynamicResponse = false;\n                renderOpts.nextExport = true;\n                renderOpts.supportsDynamicResponse = false;\n                renderOpts.isStaticGeneration = true;\n                renderOpts.isRevalidate = true;\n                renderOpts.isDebugDynamicAccesses = isDebugDynamicAccesses;\n            }\n            // Legacy render methods will return a render result that needs to be\n            // served by the server.\n            let result;\n            if (routeModule) {\n                if (isAppRouteRouteModule(routeModule)) {\n                    var _this_nextConfig_experimental;\n                    if (// The type check here ensures that `req` is correctly typed, and the\n                    // environment variable check provides dead code elimination.\n                    process.env.NEXT_RUNTIME === 'edge' || !isNodeNextRequest(req) || !isNodeNextResponse(res)) {\n                        throw Object.defineProperty(new Error('Invariant: App Route Route Modules cannot be used in the edge runtime'), \"__NEXT_ERROR_CODE\", {\n                            value: \"E130\",\n                            enumerable: false,\n                            configurable: true\n                        });\n                    }\n                    const context = {\n                        params: opts.params,\n                        prerenderManifest,\n                        renderOpts: {\n                            experimental: {\n                                dynamicIO: renderOpts.experimental.dynamicIO,\n                                authInterrupts: renderOpts.experimental.authInterrupts\n                            },\n                            supportsDynamicResponse,\n                            incrementalCache,\n                            cacheLifeProfiles: (_this_nextConfig_experimental = this.nextConfig.experimental) == null ? void 0 : _this_nextConfig_experimental.cacheLife,\n                            isRevalidate: isSSG,\n                            waitUntil: this.getWaitUntil(),\n                            onClose: res.onClose.bind(res),\n                            onAfterTaskError: undefined,\n                            onInstrumentationRequestError: this.renderOpts.onInstrumentationRequestError\n                        },\n                        sharedContext: {\n                            buildId: this.buildId\n                        }\n                    };\n                    try {\n                        const request = NextRequestAdapter.fromNodeNextRequest(req, signalFromNodeResponse(res.originalResponse));\n                        const response = await routeModule.handle(request, context);\n                        req.fetchMetrics = context.renderOpts.fetchMetrics;\n                        const cacheTags = context.renderOpts.collectedTags;\n                        // If the request is for a static response, we can cache it so long\n                        // as it's not edge.\n                        if (isSSG) {\n                            const blob = await response.blob();\n                            // Copy the headers from the response.\n                            const headers = toNodeOutgoingHttpHeaders(response.headers);\n                            if (cacheTags) {\n                                headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                            }\n                            if (!headers['content-type'] && blob.type) {\n                                headers['content-type'] = blob.type;\n                            }\n                            const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                            const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                            // Create the cache entry for the response.\n                            const cacheEntry = {\n                                value: {\n                                    kind: CachedRouteKind.APP_ROUTE,\n                                    status: response.status,\n                                    body: Buffer.from(await blob.arrayBuffer()),\n                                    headers\n                                },\n                                cacheControl: {\n                                    revalidate,\n                                    expire\n                                },\n                                isFallback: false\n                            };\n                            return cacheEntry;\n                        }\n                        let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                        // Attempt using provided waitUntil if available\n                        // if it's not we fallback to sendResponse's handling\n                        if (pendingWaitUntil) {\n                            if (context.renderOpts.waitUntil) {\n                                context.renderOpts.waitUntil(pendingWaitUntil);\n                                pendingWaitUntil = undefined;\n                            }\n                        }\n                        // Send the response now that we have copied it into the cache.\n                        await sendResponse(req, res, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    } catch (err) {\n                        await this.instrumentationOnRequestError(err, req, {\n                            routerKind: 'App Router',\n                            routePath: pathname,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason(renderOpts)\n                        });\n                        // If this is during static generation, throw the error again.\n                        if (isSSG) throw err;\n                        Log.error(err);\n                        // Otherwise, send a 500 response.\n                        await sendResponse(req, res, new Response(null, {\n                            status: 500\n                        }));\n                        return null;\n                    }\n                } else if (isPagesRouteModule(routeModule) || isAppPageRouteModule(routeModule)) {\n                    // An OPTIONS request to a page handler is invalid.\n                    if (req.method === 'OPTIONS' && !is404Page) {\n                        await sendResponse(req, res, new Response(null, {\n                            status: 400\n                        }));\n                        return null;\n                    }\n                    if (isPagesRouteModule(routeModule)) {\n                        // Due to the way we pass data by mutating `renderOpts`, we can't extend\n                        // the object here but only updating its `clientReferenceManifest` and\n                        // `nextFontManifest` properties.\n                        // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n                        renderOpts.nextFontManifest = this.nextFontManifest;\n                        renderOpts.clientReferenceManifest = components.clientReferenceManifest;\n                        const request = isNodeNextRequest(req) ? req.originalRequest : req;\n                        const response = isNodeNextResponse(res) ? res.originalResponse : res;\n                        // Call the built-in render method on the module.\n                        try {\n                            result = await routeModule.render(request, response, {\n                                page: pathname,\n                                params: opts.params,\n                                query,\n                                renderOpts,\n                                sharedContext: {\n                                    buildId: this.buildId,\n                                    deploymentId: this.nextConfig.deploymentId,\n                                    customServer: this.serverOptions.customServer || undefined\n                                },\n                                renderContext: {\n                                    isFallback: pagesFallback,\n                                    isDraftMode: renderOpts.isDraftMode,\n                                    developmentNotFoundSourcePage: getRequestMeta(req, 'developmentNotFoundSourcePage')\n                                }\n                            });\n                        } catch (err) {\n                            await this.instrumentationOnRequestError(err, req, {\n                                routerKind: 'Pages Router',\n                                routePath: pathname,\n                                routeType: 'render',\n                                revalidateReason: getRevalidateReason({\n                                    isRevalidate: isSSG,\n                                    isOnDemandRevalidate: renderOpts.isOnDemandRevalidate\n                                })\n                            });\n                            throw err;\n                        }\n                    } else {\n                        const module = components.routeModule;\n                        // Due to the way we pass data by mutating `renderOpts`, we can't extend the\n                        // object here but only updating its `nextFontManifest` field.\n                        // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n                        renderOpts.nextFontManifest = this.nextFontManifest;\n                        const context = {\n                            page: is404Page ? '/404' : pathname,\n                            params: opts.params,\n                            query,\n                            fallbackRouteParams,\n                            renderOpts,\n                            serverComponentsHmrCache: this.getServerComponentsHmrCache(),\n                            sharedContext: {\n                                buildId: this.buildId\n                            }\n                        };\n                        // TODO: adapt for putting the RDC inside the postponed data\n                        // If we're in dev, and this isn't a prefetch or a server action,\n                        // we should seed the resume data cache.\n                        if (this.nextConfig.experimental.dynamicIO && this.renderOpts.dev && !isPrefetchRSCRequest && !isPossibleServerAction) {\n                            const warmup = await module.warmup(req, res, context);\n                            // If the warmup is successful, we should use the resume data\n                            // cache from the warmup.\n                            if (warmup.metadata.devRenderResumeDataCache) {\n                                renderOpts.devRenderResumeDataCache = warmup.metadata.devRenderResumeDataCache;\n                            }\n                        }\n                        // Call the built-in render method on the module.\n                        result = await module.render(req, res, context);\n                    }\n                } else {\n                    throw Object.defineProperty(new Error('Invariant: Unknown route module type'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E450\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n            } else {\n                // If we didn't match a page, we should fallback to using the legacy\n                // render method.\n                result = await this.renderHTML(req, res, pathname, query, renderOpts);\n            }\n            const { metadata } = result;\n            const { cacheControl, headers = {}, // Add any fetch tags that were on the page to the response headers.\n            fetchTags: cacheTags } = metadata;\n            if (cacheTags) {\n                headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n            }\n            // Pull any fetch metrics from the render onto the request.\n            ;\n            req.fetchMetrics = metadata.fetchMetrics;\n            // we don't throw static to dynamic errors in dev as isSSG\n            // is a best guess in dev since we don't have the prerender pass\n            // to know whether the path is actually static or not\n            if (isAppPath && isSSG && (cacheControl == null ? void 0 : cacheControl.revalidate) === 0 && !this.renderOpts.dev && !isRoutePPREnabled) {\n                const staticBailoutInfo = metadata.staticBailoutInfo;\n                const err = Object.defineProperty(new Error(`Page changed from static to dynamic at runtime ${urlPathname}${(staticBailoutInfo == null ? void 0 : staticBailoutInfo.description) ? `, reason: ${staticBailoutInfo.description}` : ``}` + `\\nsee more here https://nextjs.org/docs/messages/app-static-to-dynamic-error`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E132\",\n                    enumerable: false,\n                    configurable: true\n                });\n                if (staticBailoutInfo == null ? void 0 : staticBailoutInfo.stack) {\n                    const stack = staticBailoutInfo.stack;\n                    err.stack = err.message + stack.substring(stack.indexOf('\\n'));\n                }\n                throw err;\n            }\n            // Based on the metadata, we can determine what kind of cache result we\n            // should return.\n            // Handle `isNotFound`.\n            if ('isNotFound' in metadata && metadata.isNotFound) {\n                return {\n                    value: null,\n                    cacheControl,\n                    isFallback: false\n                };\n            }\n            // Handle `isRedirect`.\n            if (metadata.isRedirect) {\n                return {\n                    value: {\n                        kind: CachedRouteKind.REDIRECT,\n                        props: metadata.pageData ?? metadata.flightData\n                    },\n                    cacheControl,\n                    isFallback: false\n                };\n            }\n            // Handle `isNull`.\n            if (result.isNull) {\n                return null;\n            }\n            // We now have a valid HTML result that we can return to the user.\n            if (isAppPath) {\n                return {\n                    value: {\n                        kind: CachedRouteKind.APP_PAGE,\n                        html: result,\n                        headers,\n                        rscData: metadata.flightData,\n                        postponed: metadata.postponed,\n                        status: res.statusCode,\n                        segmentData: metadata.segmentData\n                    },\n                    cacheControl,\n                    isFallback: !!fallbackRouteParams\n                };\n            }\n            return {\n                value: {\n                    kind: CachedRouteKind.PAGES,\n                    html: result,\n                    pageData: metadata.pageData ?? metadata.flightData,\n                    headers,\n                    status: isAppPath ? res.statusCode : undefined\n                },\n                cacheControl,\n                isFallback: pagesFallback\n            };\n        };\n        let responseGenerator = async ({ hasResolved, previousCacheEntry, isRevalidating })=>{\n            const isProduction = !this.renderOpts.dev;\n            const didRespond = hasResolved || res.sent;\n            // If we haven't found the static paths for the route, then do it now.\n            if (!staticPaths && isDynamic) {\n                if (hasGetStaticPaths) {\n                    const pathsResult = await this.getStaticPaths({\n                        pathname,\n                        requestHeaders: req.headers,\n                        isAppPath,\n                        page: components.page\n                    });\n                    staticPaths = pathsResult.staticPaths;\n                    fallbackMode = pathsResult.fallbackMode;\n                } else {\n                    staticPaths = undefined;\n                    fallbackMode = FallbackMode.NOT_FOUND;\n                }\n            }\n            // When serving a bot request, we want to serve a blocking render and not\n            // the prerendered page. This ensures that the correct content is served\n            // to the bot in the head.\n            if (fallbackMode === FallbackMode.PRERENDER && isBot(req.headers['user-agent'] || '')) {\n                fallbackMode = FallbackMode.BLOCKING_STATIC_RENDER;\n            }\n            // skip on-demand revalidate if cache is not present and\n            // revalidate-if-generated is set\n            if (isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry && !this.minimalMode) {\n                await this.render404(req, res);\n                return null;\n            }\n            if ((previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) === -1) {\n                isOnDemandRevalidate = true;\n            }\n            // TODO: adapt for PPR\n            // only allow on-demand revalidate for fallback: true/blocking\n            // or for prerendered fallback: false paths\n            if (isOnDemandRevalidate && (fallbackMode !== FallbackMode.NOT_FOUND || previousCacheEntry)) {\n                fallbackMode = FallbackMode.BLOCKING_STATIC_RENDER;\n            }\n            // We use `ssgCacheKey` here as it is normalized to match the encoding\n            // from getStaticPaths along with including the locale.\n            //\n            // We use the `resolvedUrlPathname` for the development case when this\n            // is an app path since it doesn't include locale information.\n            //\n            // We decode the `resolvedUrlPathname` to correctly match the app path\n            // with prerendered paths.\n            let staticPathKey = ssgCacheKey;\n            if (!staticPathKey && opts.dev && isAppPath) {\n                staticPathKey = decodePathParams(resolvedUrlPathname);\n            }\n            if (staticPathKey && query.amp) {\n                staticPathKey = staticPathKey.replace(/\\.amp$/, '');\n            }\n            const isPageIncludedInStaticPaths = staticPathKey && (staticPaths == null ? void 0 : staticPaths.includes(staticPathKey));\n            // When experimental compile is used, no pages have been prerendered,\n            // so they should all be blocking.\n            // @ts-expect-error internal field\n            if (this.nextConfig.experimental.isExperimentalCompile) {\n                fallbackMode = FallbackMode.BLOCKING_STATIC_RENDER;\n            }\n            // When we did not respond from cache, we need to choose to block on\n            // rendering or return a skeleton.\n            //\n            // - Data requests always block.\n            // - Blocking mode fallback always blocks.\n            // - Preview mode toggles all pages to be resolved in a blocking manner.\n            // - Non-dynamic pages should block (though this is an impossible\n            //   case in production).\n            // - Dynamic pages should return their skeleton if not defined in\n            //   getStaticPaths, then finish the data request on the client-side.\n            //\n            if (process.env.NEXT_RUNTIME !== 'edge' && !this.minimalMode && fallbackMode !== FallbackMode.BLOCKING_STATIC_RENDER && staticPathKey && !didRespond && !isPreviewMode && isDynamic && (isProduction || !staticPaths || !isPageIncludedInStaticPaths)) {\n                if (// In development, fall through to render to handle missing\n                // getStaticPaths.\n                (isProduction || staticPaths && (staticPaths == null ? void 0 : staticPaths.length) > 0) && // When fallback isn't present, abort this render so we 404\n                fallbackMode === FallbackMode.NOT_FOUND) {\n                    throw new NoFallbackError();\n                }\n                let fallbackResponse;\n                // If this is a pages router page.\n                if (isPagesRouteModule(components.routeModule) && !isNextDataRequest) {\n                    // We use the response cache here to handle the revalidation and\n                    // management of the fallback shell.\n                    fallbackResponse = await this.responseCache.get(isProduction ? locale ? `/${locale}${pathname}` : pathname : null, // This is the response generator for the fallback shell.\n                    async ({ previousCacheEntry: previousFallbackCacheEntry = null })=>{\n                        // For the pages router, fallbacks cannot be revalidated or\n                        // generated in production. In the case of a missing fallback,\n                        // we return null, but if it's being revalidated, we just return\n                        // the previous fallback cache entry. This preserves the previous\n                        // behavior.\n                        if (isProduction) {\n                            return toResponseCacheEntry(previousFallbackCacheEntry);\n                        }\n                        // We pass `undefined` and `null` as it doesn't apply to the pages\n                        // router.\n                        return doRender({\n                            postponed: undefined,\n                            // For the pages router, fallbacks can only be generated on\n                            // demand in development, so if we're not in production, and we\n                            // aren't a app path.\n                            pagesFallback: true,\n                            fallbackRouteParams: null\n                        });\n                    }, {\n                        routeKind: RouteKind.PAGES,\n                        incrementalCache,\n                        isRoutePPREnabled,\n                        isFallback: true\n                    });\n                } else if (isRoutePPREnabled && isAppPageRouteModule(components.routeModule) && !isRSCRequest) {\n                    // We use the response cache here to handle the revalidation and\n                    // management of the fallback shell.\n                    fallbackResponse = await this.responseCache.get(isProduction ? pathname : null, // This is the response generator for the fallback shell.\n                    async ()=>doRender({\n                            // We pass `undefined` as rendering a fallback isn't resumed\n                            // here.\n                            postponed: undefined,\n                            pagesFallback: undefined,\n                            fallbackRouteParams: // If we're in production of we're debugging the fallback\n                            // shell then we should postpone when dynamic params are\n                            // accessed.\n                            isProduction || isDebugFallbackShell ? getFallbackRouteParams(pathname) : null\n                        }), {\n                        routeKind: RouteKind.APP_PAGE,\n                        incrementalCache,\n                        isRoutePPREnabled,\n                        isFallback: true\n                    });\n                }\n                // If the fallback response was set to null, then we should return null.\n                if (fallbackResponse === null) return null;\n                // Otherwise, if we did get a fallback response, we should return it.\n                if (fallbackResponse) {\n                    // Remove the cache control from the response to prevent it from being\n                    // used in the surrounding cache.\n                    delete fallbackResponse.cacheControl;\n                    return fallbackResponse;\n                }\n            }\n            // Only requests that aren't revalidating can be resumed. If we have the\n            // minimal postponed data, then we should resume the render with it.\n            const postponed = !isOnDemandRevalidate && !isRevalidating && minimalPostponed ? minimalPostponed : undefined;\n            // When we're in minimal mode, if we're trying to debug the static shell,\n            // we should just return nothing instead of resuming the dynamic render.\n            if ((isDebugStaticShell || isDebugDynamicAccesses) && typeof postponed !== 'undefined') {\n                return {\n                    cacheControl: {\n                        revalidate: 1,\n                        expire: undefined\n                    },\n                    isFallback: false,\n                    value: {\n                        kind: CachedRouteKind.PAGES,\n                        html: RenderResult.fromStatic(''),\n                        pageData: {},\n                        headers: undefined,\n                        status: undefined\n                    }\n                };\n            }\n            // If this is a dynamic route with PPR enabled and the default route\n            // matches were set, then we should pass the fallback route params to\n            // the renderer as this is a fallback revalidation request.\n            const fallbackRouteParams = isDynamic && isRoutePPREnabled && (getRequestMeta(req, 'didSetDefaultRouteMatches') || isDebugFallbackShell) ? getFallbackRouteParams(pathname) : null;\n            // Perform the render.\n            return doRender({\n                postponed,\n                pagesFallback: undefined,\n                fallbackRouteParams\n            });\n        };\n        const cacheEntry = await this.responseCache.get(ssgCacheKey, responseGenerator, {\n            routeKind: // If the route module is not defined, we can assume it's a page being\n            // rendered and thus check isAppPath.\n            (routeModule == null ? void 0 : routeModule.definition.kind) ?? (isAppPath ? RouteKind.APP_PAGE : RouteKind.PAGES),\n            incrementalCache,\n            isOnDemandRevalidate,\n            isPrefetch: req.headers.purpose === 'prefetch',\n            isRoutePPREnabled\n        });\n        if (isPreviewMode) {\n            res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n        }\n        if (!cacheEntry) {\n            if (ssgCacheKey && !(isOnDemandRevalidate && revalidateOnlyGenerated)) {\n                // A cache entry might not be generated if a response is written\n                // in `getInitialProps` or `getServerSideProps`, but those shouldn't\n                // have a cache key. If we do have a cache key but we don't end up\n                // with a cache entry, then either Next.js or the application has a\n                // bug that needs fixing.\n                throw Object.defineProperty(new Error('invariant: cache entry required but not generated'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E62\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            return null;\n        }\n        // If we're not in minimal mode and the cache entry that was returned was a\n        // app page fallback, then we need to kick off the dynamic shell generation.\n        if (ssgCacheKey && !this.minimalMode && isRoutePPREnabled && ((_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) === CachedRouteKind.APP_PAGE && cacheEntry.isFallback && !isOnDemandRevalidate && // When we're debugging the fallback shell, we don't want to regenerate\n        // the route shell.\n        !isDebugFallbackShell && process.env.DISABLE_ROUTE_SHELL_GENERATION !== 'true') {\n            scheduleOnNextTick(async ()=>{\n                try {\n                    await this.responseCache.get(ssgCacheKey, ()=>doRender({\n                            // We're an on-demand request, so we don't need to pass in the\n                            // fallbackRouteParams.\n                            fallbackRouteParams: null,\n                            pagesFallback: undefined,\n                            postponed: undefined\n                        }), {\n                        routeKind: RouteKind.APP_PAGE,\n                        incrementalCache,\n                        isOnDemandRevalidate: true,\n                        isPrefetch: false,\n                        isRoutePPREnabled: true\n                    });\n                } catch (err) {\n                    console.error('Error occurred while rendering dynamic shell', err);\n                }\n            });\n        }\n        const didPostpone = ((_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind) === CachedRouteKind.APP_PAGE && typeof cacheEntry.value.postponed === 'string';\n        if (isSSG && // We don't want to send a cache header for requests that contain dynamic\n        // data. If this is a Dynamic RSC request or wasn't a Prefetch RSC\n        // request, then we should set the cache header.\n        !isDynamicRSCRequest && (!didPostpone || isPrefetchRSCRequest)) {\n            if (!this.minimalMode) {\n                // set x-nextjs-cache header to match the header\n                // we set for the image-optimizer\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Set a header used by the client router to signal the response is static\n            // and should respect the `static` cache staleTime value.\n            res.setHeader(NEXT_IS_PRERENDER_HEADER, '1');\n        }\n        const { value: cachedData } = cacheEntry;\n        // If the cache value is an image, we should error early.\n        if ((cachedData == null ? void 0 : cachedData.kind) === CachedRouteKind.IMAGE) {\n            throw Object.defineProperty(new InvariantError('SSG should not return an image cache value'), \"__NEXT_ERROR_CODE\", {\n                value: \"E659\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        // Coerce the cache control parameter from the render.\n        let cacheControl;\n        // If this is a resume request in minimal mode it is streamed with dynamic\n        // content and should not be cached.\n        if (minimalPostponed) {\n            cacheControl = {\n                revalidate: 0,\n                expire: undefined\n            };\n        } else if (this.minimalMode && isRSCRequest && !isPrefetchRSCRequest && isRoutePPREnabled) {\n            cacheControl = {\n                revalidate: 0,\n                expire: undefined\n            };\n        } else if (!this.renderOpts.dev || hasServerProps && !isNextDataRequest) {\n            // If this is a preview mode request, we shouldn't cache it\n            if (isPreviewMode) {\n                cacheControl = {\n                    revalidate: 0,\n                    expire: undefined\n                };\n            } else if (!isSSG) {\n                if (!res.getHeader('Cache-Control')) {\n                    cacheControl = {\n                        revalidate: 0,\n                        expire: undefined\n                    };\n                }\n            } else if (is404Page) {\n                const notFoundRevalidate = getRequestMeta(req, 'notFoundRevalidate');\n                cacheControl = {\n                    revalidate: typeof notFoundRevalidate === 'undefined' ? 0 : notFoundRevalidate,\n                    expire: undefined\n                };\n            } else if (is500Page) {\n                cacheControl = {\n                    revalidate: 0,\n                    expire: undefined\n                };\n            } else if (cacheEntry.cacheControl) {\n                // If the cache entry has a cache control with a revalidate value that's\n                // a number, use it.\n                if (typeof cacheEntry.cacheControl.revalidate === 'number') {\n                    var _cacheEntry_cacheControl;\n                    if (cacheEntry.cacheControl.revalidate < 1) {\n                        throw Object.defineProperty(new Error(`Invalid revalidate configuration provided: ${cacheEntry.cacheControl.revalidate} < 1`), \"__NEXT_ERROR_CODE\", {\n                            value: \"E22\",\n                            enumerable: false,\n                            configurable: true\n                        });\n                    }\n                    cacheControl = {\n                        revalidate: cacheEntry.cacheControl.revalidate,\n                        expire: ((_cacheEntry_cacheControl = cacheEntry.cacheControl) == null ? void 0 : _cacheEntry_cacheControl.expire) ?? this.nextConfig.expireTime\n                    };\n                } else {\n                    cacheControl = {\n                        revalidate: CACHE_ONE_YEAR,\n                        expire: undefined\n                    };\n                }\n            }\n        }\n        cacheEntry.cacheControl = cacheControl;\n        if (typeof segmentPrefetchHeader === 'string' && (cachedData == null ? void 0 : cachedData.kind) === CachedRouteKind.APP_PAGE && cachedData.segmentData) {\n            var _cachedData_headers;\n            // This is a prefetch request issued by the client Segment Cache. These\n            // should never reach the application layer (lambda). We should either\n            // respond from the cache (HIT) or respond with 204 No Content (MISS).\n            // Set a header to indicate that PPR is enabled for this route. This\n            // lets the client distinguish between a regular cache miss and a cache\n            // miss due to PPR being disabled. In other contexts this header is used\n            // to indicate that the response contains dynamic data, but here we're\n            // only using it to indicate that the feature is enabled — the segment\n            // response itself contains whether the data is dynamic.\n            res.setHeader(NEXT_DID_POSTPONE_HEADER, '2');\n            // Add the cache tags header to the response if it exists and we're in\n            // minimal mode while rendering a static page.\n            const tags = (_cachedData_headers = cachedData.headers) == null ? void 0 : _cachedData_headers[NEXT_CACHE_TAGS_HEADER];\n            if (this.minimalMode && isSSG && tags && typeof tags === 'string') {\n                res.setHeader(NEXT_CACHE_TAGS_HEADER, tags);\n            }\n            const matchedSegment = cachedData.segmentData.get(segmentPrefetchHeader);\n            if (matchedSegment !== undefined) {\n                // Cache hit\n                return {\n                    type: 'rsc',\n                    body: RenderResult.fromStatic(matchedSegment),\n                    // TODO: Eventually this should use cache control of the individual\n                    // segment, not the whole page.\n                    cacheControl: cacheEntry.cacheControl\n                };\n            }\n            // Cache miss. Either a cache entry for this route has not been generated\n            // (which technically should not be possible when PPR is enabled, because\n            // at a minimum there should always be a fallback entry) or there's no\n            // match for the requested segment. Respond with a 204 No Content. We\n            // don't bother to respond with 404, because these requests are only\n            // issued as part of a prefetch.\n            res.statusCode = 204;\n            return {\n                type: 'rsc',\n                body: RenderResult.fromStatic(''),\n                cacheControl: cacheEntry == null ? void 0 : cacheEntry.cacheControl\n            };\n        }\n        // If there's a callback for `onCacheEntry`, call it with the cache entry\n        // and the revalidate options.\n        const onCacheEntry = getRequestMeta(req, 'onCacheEntry');\n        if (onCacheEntry) {\n            var _cacheEntry_value2, _cacheEntry_value3;\n            const finished = await onCacheEntry({\n                ...cacheEntry,\n                // TODO: remove this when upstream doesn't\n                // always expect this value to be \"PAGE\"\n                value: {\n                    ...cacheEntry.value,\n                    kind: ((_cacheEntry_value2 = cacheEntry.value) == null ? void 0 : _cacheEntry_value2.kind) === CachedRouteKind.APP_PAGE ? 'PAGE' : (_cacheEntry_value3 = cacheEntry.value) == null ? void 0 : _cacheEntry_value3.kind\n                }\n            }, {\n                url: getRequestMeta(req, 'initURL')\n            });\n            if (finished) {\n                // TODO: maybe we have to end the request?\n                return null;\n            }\n        }\n        if (!cachedData) {\n            var _cacheEntry_cacheControl1;\n            // add revalidate metadata before rendering 404 page\n            // so that we can use this as source of truth for the\n            // cache-control header instead of what the 404 page returns\n            // for the revalidate value\n            addRequestMeta(req, 'notFoundRevalidate', (_cacheEntry_cacheControl1 = cacheEntry.cacheControl) == null ? void 0 : _cacheEntry_cacheControl1.revalidate);\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control')) {\n                res.setHeader('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            if (isNextDataRequest) {\n                res.statusCode = 404;\n                res.body('{\"notFound\":true}').send();\n                return null;\n            }\n            if (this.renderOpts.dev) {\n                addRequestMeta(req, 'developmentNotFoundSourcePage', pathname);\n            }\n            await this.render404(req, res, {\n                pathname,\n                query\n            }, false);\n            return null;\n        } else if (cachedData.kind === CachedRouteKind.REDIRECT) {\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control')) {\n                res.setHeader('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            if (isNextDataRequest) {\n                return {\n                    type: 'json',\n                    body: RenderResult.fromStatic(// @TODO: Handle flight data.\n                    JSON.stringify(cachedData.props)),\n                    cacheControl: cacheEntry.cacheControl\n                };\n            } else {\n                await handleRedirect(cachedData.props);\n                return null;\n            }\n        } else if (cachedData.kind === CachedRouteKind.APP_ROUTE) {\n            const headers = fromNodeOutgoingHttpHeaders(cachedData.headers);\n            if (!(this.minimalMode && isSSG)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(req, res, new Response(cachedData.body, {\n                headers,\n                status: cachedData.status || 200\n            }));\n            return null;\n        } else if (cachedData.kind === CachedRouteKind.APP_PAGE) {\n            var _cachedData_headers1;\n            // If the request has a postponed state and it's a resume request we\n            // should error.\n            if (didPostpone && minimalPostponed) {\n                throw Object.defineProperty(new Error('Invariant: postponed state should not be present on a resume request'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E396\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (cachedData.headers) {\n                const headers = {\n                    ...cachedData.headers\n                };\n                if (!this.minimalMode || !isSSG) {\n                    delete headers[NEXT_CACHE_TAGS_HEADER];\n                }\n                for (let [key, value] of Object.entries(headers)){\n                    if (typeof value === 'undefined') continue;\n                    if (Array.isArray(value)) {\n                        for (const v of value){\n                            res.appendHeader(key, v);\n                        }\n                    } else if (typeof value === 'number') {\n                        value = value.toString();\n                        res.appendHeader(key, value);\n                    } else {\n                        res.appendHeader(key, value);\n                    }\n                }\n            }\n            // Add the cache tags header to the response if it exists and we're in\n            // minimal mode while rendering a static page.\n            const tags = (_cachedData_headers1 = cachedData.headers) == null ? void 0 : _cachedData_headers1[NEXT_CACHE_TAGS_HEADER];\n            if (this.minimalMode && isSSG && tags && typeof tags === 'string') {\n                res.setHeader(NEXT_CACHE_TAGS_HEADER, tags);\n            }\n            // If the request is a data request, then we shouldn't set the status code\n            // from the response because it should always be 200. This should be gated\n            // behind the experimental PPR flag.\n            if (cachedData.status && (!isRSCRequest || !isRoutePPREnabled)) {\n                res.statusCode = cachedData.status;\n            }\n            // Mark that the request did postpone.\n            if (didPostpone) {\n                res.setHeader(NEXT_DID_POSTPONE_HEADER, '1');\n            }\n            // we don't go through this block when preview mode is true\n            // as preview mode is a dynamic request (bypasses cache) and doesn't\n            // generate both HTML and payloads in the same request so continue to just\n            // return the generated payload\n            if (isRSCRequest && !isPreviewMode) {\n                // If this is a dynamic RSC request, then stream the response.\n                if (typeof cachedData.rscData === 'undefined') {\n                    if (cachedData.postponed) {\n                        throw Object.defineProperty(new Error('Invariant: Expected postponed to be undefined'), \"__NEXT_ERROR_CODE\", {\n                            value: \"E372\",\n                            enumerable: false,\n                            configurable: true\n                        });\n                    }\n                    return {\n                        type: 'rsc',\n                        body: cachedData.html,\n                        // Dynamic RSC responses cannot be cached, even if they're\n                        // configured with `force-static` because we have no way of\n                        // distinguishing between `force-static` and pages that have no\n                        // postponed state.\n                        // TODO: distinguish `force-static` from pages with no postponed state (static)\n                        cacheControl: isDynamicRSCRequest ? {\n                            revalidate: 0,\n                            expire: undefined\n                        } : cacheEntry.cacheControl\n                    };\n                }\n                // As this isn't a prefetch request, we should serve the static flight\n                // data.\n                return {\n                    type: 'rsc',\n                    body: RenderResult.fromStatic(cachedData.rscData),\n                    cacheControl: cacheEntry.cacheControl\n                };\n            }\n            // This is a request for HTML data.\n            let body = cachedData.html;\n            // If there's no postponed state, we should just serve the HTML. This\n            // should also be the case for a resume request because it's completed\n            // as a server render (rather than a static render).\n            if (!didPostpone || this.minimalMode) {\n                return {\n                    type: 'html',\n                    body,\n                    cacheControl: cacheEntry.cacheControl\n                };\n            }\n            // If we're debugging the static shell or the dynamic API accesses, we\n            // should just serve the HTML without resuming the render. The returned\n            // HTML will be the static shell so all the Dynamic API's will be used\n            // during static generation.\n            if (isDebugStaticShell || isDebugDynamicAccesses) {\n                // Since we're not resuming the render, we need to at least add the\n                // closing body and html tags to create valid HTML.\n                body.chain(new ReadableStream({\n                    start (controller) {\n                        controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n                        controller.close();\n                    }\n                }));\n                return {\n                    type: 'html',\n                    body,\n                    cacheControl: {\n                        revalidate: 0,\n                        expire: undefined\n                    }\n                };\n            }\n            // This request has postponed, so let's create a new transformer that the\n            // dynamic data can pipe to that will attach the dynamic data to the end\n            // of the response.\n            const transformer = new TransformStream();\n            body.chain(transformer.readable);\n            // Perform the render again, but this time, provide the postponed state.\n            // We don't await because we want the result to start streaming now, and\n            // we've already chained the transformer's readable to the render result.\n            doRender({\n                postponed: cachedData.postponed,\n                pagesFallback: undefined,\n                // This is a resume render, not a fallback render, so we don't need to\n                // set this.\n                fallbackRouteParams: null\n            }).then(async (result)=>{\n                var _result_value;\n                if (!result) {\n                    throw Object.defineProperty(new Error('Invariant: expected a result to be returned'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E463\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                if (((_result_value = result.value) == null ? void 0 : _result_value.kind) !== CachedRouteKind.APP_PAGE) {\n                    var _result_value1;\n                    throw Object.defineProperty(new Error(`Invariant: expected a page response, got ${(_result_value1 = result.value) == null ? void 0 : _result_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                        value: \"E305\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                // Pipe the resume result to the transformer.\n                await result.value.html.pipeTo(transformer.writable);\n            }).catch((err)=>{\n                // An error occurred during piping or preparing the render, abort\n                // the transformers writer so we can terminate the stream.\n                transformer.writable.abort(err).catch((e)=>{\n                    console.error(\"couldn't abort transformer\", e);\n                });\n            });\n            return {\n                type: 'html',\n                body,\n                // We don't want to cache the response if it has postponed data because\n                // the response being sent to the client it's dynamic parts are streamed\n                // to the client on the same request.\n                cacheControl: {\n                    revalidate: 0,\n                    expire: undefined\n                }\n            };\n        } else if (isNextDataRequest) {\n            return {\n                type: 'json',\n                body: RenderResult.fromStatic(JSON.stringify(cachedData.pageData)),\n                cacheControl: cacheEntry.cacheControl\n            };\n        } else {\n            return {\n                type: 'html',\n                body: cachedData.html,\n                cacheControl: cacheEntry.cacheControl\n            };\n        }\n    }\n    stripNextDataPath(path, stripLocale = true) {\n        if (path.includes(this.buildId)) {\n            const splitPath = path.substring(path.indexOf(this.buildId) + this.buildId.length);\n            path = denormalizePagePath(splitPath.replace(/\\.json$/, ''));\n        }\n        if (this.localeNormalizer && stripLocale) {\n            return this.localeNormalizer.normalize(path);\n        }\n        return path;\n    }\n    // map the route to the actual bundle name\n    getOriginalAppPaths(route) {\n        if (this.enabledDirectories.app) {\n            var _this_appPathRoutes;\n            const originalAppPath = (_this_appPathRoutes = this.appPathRoutes) == null ? void 0 : _this_appPathRoutes[route];\n            if (!originalAppPath) {\n                return null;\n            }\n            return originalAppPath;\n        }\n        return null;\n    }\n    async renderPageComponent(ctx, bubbleNoFallback) {\n        var _this_nextConfig_experimental_sri;\n        const { query, pathname } = ctx;\n        const appPaths = this.getOriginalAppPaths(pathname);\n        const isAppPath = Array.isArray(appPaths);\n        let page = pathname;\n        if (isAppPath) {\n            // the last item in the array is the root page, if there are parallel routes\n            page = appPaths[appPaths.length - 1];\n        }\n        const result = await this.findPageComponents({\n            locale: getRequestMeta(ctx.req, 'locale'),\n            page,\n            query,\n            params: ctx.renderOpts.params || {},\n            isAppPath,\n            sriEnabled: !!((_this_nextConfig_experimental_sri = this.nextConfig.experimental.sri) == null ? void 0 : _this_nextConfig_experimental_sri.algorithm),\n            appPaths,\n            // Ensuring for loading page component routes is done via the matcher.\n            shouldEnsure: false\n        });\n        if (result) {\n            getTracer().setRootSpanAttribute('next.route', pathname);\n            try {\n                return await this.renderToResponseWithComponents(ctx, result);\n            } catch (err) {\n                const isNoFallbackError = err instanceof NoFallbackError;\n                if (!isNoFallbackError || isNoFallbackError && bubbleNoFallback) {\n                    throw err;\n                }\n            }\n        }\n        return false;\n    }\n    async renderToResponse(ctx) {\n        return getTracer().trace(BaseServerSpan.renderToResponse, {\n            spanName: `rendering page`,\n            attributes: {\n                'next.route': ctx.pathname\n            }\n        }, async ()=>{\n            return this.renderToResponseImpl(ctx);\n        });\n    }\n    async renderToResponseImpl(ctx) {\n        var _this_i18nProvider;\n        const { req, res, query, pathname } = ctx;\n        let page = pathname;\n        const bubbleNoFallback = getRequestMeta(ctx.req, 'bubbleNoFallback') ?? false;\n        delete query[NEXT_RSC_UNION_QUERY];\n        const options = {\n            i18n: (_this_i18nProvider = this.i18nProvider) == null ? void 0 : _this_i18nProvider.fromRequest(req, pathname)\n        };\n        try {\n            for await (const match of this.matchers.matchAll(pathname, options)){\n                // when a specific invoke-output is meant to be matched\n                // ensure a prior dynamic route/page doesn't take priority\n                const invokeOutput = getRequestMeta(ctx.req, 'invokeOutput');\n                if (!this.minimalMode && typeof invokeOutput === 'string' && isDynamicRoute(invokeOutput || '') && invokeOutput !== match.definition.pathname) {\n                    continue;\n                }\n                const result = await this.renderPageComponent({\n                    ...ctx,\n                    pathname: match.definition.pathname,\n                    renderOpts: {\n                        ...ctx.renderOpts,\n                        params: match.params\n                    }\n                }, bubbleNoFallback);\n                if (result !== false) return result;\n            }\n            // currently edge functions aren't receiving the x-matched-path\n            // header so we need to fallback to matching the current page\n            // when we weren't able to match via dynamic route to handle\n            // the rewrite case\n            // @ts-expect-error extended in child class web-server\n            if (this.serverOptions.webServerConfig) {\n                // @ts-expect-error extended in child class web-server\n                ctx.pathname = this.serverOptions.webServerConfig.page;\n                const result = await this.renderPageComponent(ctx, bubbleNoFallback);\n                if (result !== false) return result;\n            }\n        } catch (error) {\n            const err = getProperError(error);\n            if (error instanceof MissingStaticPage) {\n                console.error('Invariant: failed to load static page', JSON.stringify({\n                    page,\n                    url: ctx.req.url,\n                    matchedPath: ctx.req.headers[MATCHED_PATH_HEADER],\n                    initUrl: getRequestMeta(ctx.req, 'initURL'),\n                    didRewrite: !!getRequestMeta(ctx.req, 'rewroteURL'),\n                    rewroteUrl: getRequestMeta(ctx.req, 'rewroteURL')\n                }, null, 2));\n                throw err;\n            }\n            if (err instanceof NoFallbackError && bubbleNoFallback) {\n                throw err;\n            }\n            if (err instanceof DecodeError || err instanceof NormalizeError) {\n                res.statusCode = 400;\n                return await this.renderErrorToResponse(ctx, err);\n            }\n            res.statusCode = 500;\n            // if pages/500 is present we still need to trigger\n            // /_error `getInitialProps` to allow reporting error\n            if (await this.hasPage('/500')) {\n                addRequestMeta(ctx.req, 'customErrorRender', true);\n                await this.renderErrorToResponse(ctx, err);\n                removeRequestMeta(ctx.req, 'customErrorRender');\n            }\n            const isWrappedError = err instanceof WrappedBuildError;\n            if (!isWrappedError) {\n                if (this.minimalMode && process.env.NEXT_RUNTIME !== 'edge' || this.renderOpts.dev) {\n                    if (isError(err)) err.page = page;\n                    throw err;\n                }\n                this.logError(getProperError(err));\n            }\n            const response = await this.renderErrorToResponse(ctx, isWrappedError ? err.innerError : err);\n            return response;\n        }\n        const middleware = await this.getMiddleware();\n        if (middleware && !!ctx.req.headers['x-nextjs-data'] && (!res.statusCode || res.statusCode === 200 || res.statusCode === 404)) {\n            const locale = getRequestMeta(req, 'locale');\n            res.setHeader('x-nextjs-matched-path', `${locale ? `/${locale}` : ''}${pathname}`);\n            res.statusCode = 200;\n            res.setHeader('content-type', 'application/json');\n            res.body('{}');\n            res.send();\n            return null;\n        }\n        res.statusCode = 404;\n        return this.renderErrorToResponse(ctx, null);\n    }\n    async renderToHTML(req, res, pathname, query = {}) {\n        return getTracer().trace(BaseServerSpan.renderToHTML, async ()=>{\n            return this.renderToHTMLImpl(req, res, pathname, query);\n        });\n    }\n    async renderToHTMLImpl(req, res, pathname, query = {}) {\n        return this.getStaticHTML((ctx)=>this.renderToResponse(ctx), {\n            req,\n            res,\n            pathname,\n            query\n        });\n    }\n    async renderError(err, req, res, pathname, query = {}, setHeaders = true) {\n        return getTracer().trace(BaseServerSpan.renderError, async ()=>{\n            return this.renderErrorImpl(err, req, res, pathname, query, setHeaders);\n        });\n    }\n    async renderErrorImpl(err, req, res, pathname, query = {}, setHeaders = true) {\n        if (setHeaders) {\n            res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n        }\n        return this.pipe(async (ctx)=>{\n            const response = await this.renderErrorToResponse(ctx, err);\n            if (this.minimalMode && res.statusCode === 500) {\n                throw err;\n            }\n            return response;\n        }, {\n            req,\n            res,\n            pathname,\n            query\n        });\n    }\n    async renderErrorToResponse(ctx, err) {\n        return getTracer().trace(BaseServerSpan.renderErrorToResponse, async ()=>{\n            return this.renderErrorToResponseImpl(ctx, err);\n        });\n    }\n    async renderErrorToResponseImpl(ctx, err) {\n        // Short-circuit favicon.ico in development to avoid compiling 404 page when the app has no favicon.ico.\n        // Since favicon.ico is automatically requested by the browser.\n        if (this.renderOpts.dev && ctx.pathname === '/favicon.ico') {\n            return {\n                type: 'html',\n                body: RenderResult.fromStatic('')\n            };\n        }\n        const { res, query } = ctx;\n        try {\n            let result = null;\n            const is404 = res.statusCode === 404;\n            let using404Page = false;\n            if (is404) {\n                if (this.enabledDirectories.app) {\n                    // Use the not-found entry in app directory\n                    result = await this.findPageComponents({\n                        locale: getRequestMeta(ctx.req, 'locale'),\n                        page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n                        query,\n                        params: {},\n                        isAppPath: true,\n                        shouldEnsure: true,\n                        url: ctx.req.url\n                    });\n                    using404Page = result !== null;\n                }\n                if (!result && await this.hasPage('/404')) {\n                    result = await this.findPageComponents({\n                        locale: getRequestMeta(ctx.req, 'locale'),\n                        page: '/404',\n                        query,\n                        params: {},\n                        isAppPath: false,\n                        // Ensuring can't be done here because you never \"match\" a 404 route.\n                        shouldEnsure: true,\n                        url: ctx.req.url\n                    });\n                    using404Page = result !== null;\n                }\n            }\n            let statusPage = `/${res.statusCode}`;\n            if (!getRequestMeta(ctx.req, 'customErrorRender') && !result && STATIC_STATUS_PAGES.includes(statusPage)) {\n                // skip ensuring /500 in dev mode as it isn't used and the\n                // dev overlay is used instead\n                if (statusPage !== '/500' || !this.renderOpts.dev) {\n                    result = await this.findPageComponents({\n                        locale: getRequestMeta(ctx.req, 'locale'),\n                        page: statusPage,\n                        query,\n                        params: {},\n                        isAppPath: false,\n                        // Ensuring can't be done here because you never \"match\" a 500\n                        // route.\n                        shouldEnsure: true,\n                        url: ctx.req.url\n                    });\n                }\n            }\n            if (!result) {\n                result = await this.findPageComponents({\n                    locale: getRequestMeta(ctx.req, 'locale'),\n                    page: '/_error',\n                    query,\n                    params: {},\n                    isAppPath: false,\n                    // Ensuring can't be done here because you never \"match\" an error\n                    // route.\n                    shouldEnsure: true,\n                    url: ctx.req.url\n                });\n                statusPage = '/_error';\n            }\n            if (process.env.NODE_ENV !== 'production' && !using404Page && await this.hasPage('/_error') && !await this.hasPage('/404')) {\n                this.customErrorNo404Warn();\n            }\n            if (!result) {\n                // this can occur when a project directory has been moved/deleted\n                // which is handled in the parent process in development\n                if (this.renderOpts.dev) {\n                    return {\n                        type: 'html',\n                        // wait for dev-server to restart before refreshing\n                        body: RenderResult.fromStatic(`\n              <pre>missing required error components, refreshing...</pre>\n              <script>\n                async function check() {\n                  const res = await fetch(location.href).catch(() => ({}))\n\n                  if (res.status === 200) {\n                    location.reload()\n                  } else {\n                    setTimeout(check, 1000)\n                  }\n                }\n                check()\n              </script>`)\n                    };\n                }\n                throw new WrappedBuildError(Object.defineProperty(new Error('missing required error components'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E60\",\n                    enumerable: false,\n                    configurable: true\n                }));\n            }\n            // If the page has a route module, use it for the new match. If it doesn't\n            // have a route module, remove the match.\n            if (result.components.routeModule) {\n                addRequestMeta(ctx.req, 'match', {\n                    definition: result.components.routeModule.definition,\n                    params: undefined\n                });\n            } else {\n                removeRequestMeta(ctx.req, 'match');\n            }\n            try {\n                return await this.renderToResponseWithComponents({\n                    ...ctx,\n                    pathname: statusPage,\n                    renderOpts: {\n                        ...ctx.renderOpts,\n                        err\n                    }\n                }, result);\n            } catch (maybeFallbackError) {\n                if (maybeFallbackError instanceof NoFallbackError) {\n                    throw Object.defineProperty(new Error('invariant: failed to render error page'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E55\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                throw maybeFallbackError;\n            }\n        } catch (error) {\n            const renderToHtmlError = getProperError(error);\n            const isWrappedError = renderToHtmlError instanceof WrappedBuildError;\n            if (!isWrappedError) {\n                this.logError(renderToHtmlError);\n            }\n            res.statusCode = 500;\n            const fallbackComponents = await this.getFallbackErrorComponents(ctx.req.url);\n            if (fallbackComponents) {\n                // There was an error, so use it's definition from the route module\n                // to add the match to the request.\n                addRequestMeta(ctx.req, 'match', {\n                    definition: fallbackComponents.routeModule.definition,\n                    params: undefined\n                });\n                return this.renderToResponseWithComponents({\n                    ...ctx,\n                    pathname: '/_error',\n                    renderOpts: {\n                        ...ctx.renderOpts,\n                        // We render `renderToHtmlError` here because `err` is\n                        // already captured in the stacktrace.\n                        err: isWrappedError ? renderToHtmlError.innerError : renderToHtmlError\n                    }\n                }, {\n                    query,\n                    components: fallbackComponents\n                });\n            }\n            return {\n                type: 'html',\n                body: RenderResult.fromStatic('Internal Server Error')\n            };\n        }\n    }\n    async renderErrorToHTML(err, req, res, pathname, query = {}) {\n        return this.getStaticHTML((ctx)=>this.renderErrorToResponse(ctx, err), {\n            req,\n            res,\n            pathname,\n            query\n        });\n    }\n    async render404(req, res, parsedUrl, setHeaders = true) {\n        const { pathname, query } = parsedUrl ? parsedUrl : parseUrl(req.url, true);\n        // Ensure the locales are provided on the request meta.\n        if (this.nextConfig.i18n) {\n            if (!getRequestMeta(req, 'locale')) {\n                addRequestMeta(req, 'locale', this.nextConfig.i18n.defaultLocale);\n            }\n            addRequestMeta(req, 'defaultLocale', this.nextConfig.i18n.defaultLocale);\n        }\n        res.statusCode = 404;\n        return this.renderError(null, req, res, pathname, query, setHeaders);\n    }\n}\n\n//# sourceMappingURL=base-server.js.map","/**\n * FNV-1a Hash implementation\n * @author Travis Webb (tjwebb) <me@traviswebb.com>\n *\n * Ported from https://github.com/tjwebb/fnv-plus/blob/master/index.js\n *\n * Simplified, optimized and add modified for 52 bit, which provides a larger hash space\n * and still making use of Javascript's 53-bit integer space.\n */ export const fnv1a52 = (str)=>{\n    const len = str.length;\n    let i = 0, t0 = 0, v0 = 0x2325, t1 = 0, v1 = 0x8422, t2 = 0, v2 = 0x9ce4, t3 = 0, v3 = 0xcbf2;\n    while(i < len){\n        v0 ^= str.charCodeAt(i++);\n        t0 = v0 * 435;\n        t1 = v1 * 435;\n        t2 = v2 * 435;\n        t3 = v3 * 435;\n        t2 += v0 << 8;\n        t3 += v1 << 8;\n        t1 += t0 >>> 16;\n        v0 = t0 & 65535;\n        t2 += t1 >>> 16;\n        v1 = t1 & 65535;\n        v3 = t3 + (t2 >>> 16) & 65535;\n        v2 = t2 & 65535;\n    }\n    return (v3 & 15) * 281474976710656 + v2 * 4294967296 + v1 * 65536 + (v0 ^ v3 >> 4);\n};\nexport const generateETag = (payload, weak = false)=>{\n    const prefix = weak ? 'W/\"' : '\"';\n    return prefix + fnv1a52(payload).toString(36) + payload.length.toString(36) + '\"';\n};\n\n//# sourceMappingURL=etag.js.map","import { DetachedPromise } from '../../lib/detached-promise';\n/**\n * In the web server, there is currently no incremental cache provided and we\n * always SSR the page.\n */ export default class WebResponseCache {\n    constructor(minimalMode){\n        this.pendingResponses = new Map();\n        // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n        // because we replace this.minimalMode to true in production bundles.\n        Object.assign(this, {\n            minimalMode\n        });\n    }\n    get(key, responseGenerator, context) {\n        var _this_previousCacheItem;\n        // ensure on-demand revalidate doesn't block normal requests\n        const pendingResponseKey = key ? `${key}-${context.isOnDemandRevalidate ? '1' : '0'}` : null;\n        const pendingResponse = pendingResponseKey ? this.pendingResponses.get(pendingResponseKey) : null;\n        if (pendingResponse) {\n            return pendingResponse;\n        }\n        const { promise, resolve: resolver, reject: rejecter } = new DetachedPromise();\n        if (pendingResponseKey) {\n            this.pendingResponses.set(pendingResponseKey, promise);\n        }\n        let hasResolved = false;\n        const resolve = (cacheEntry)=>{\n            if (pendingResponseKey) {\n                // Ensure all reads from the cache get the latest value.\n                this.pendingResponses.set(pendingResponseKey, Promise.resolve(cacheEntry));\n            }\n            if (!hasResolved) {\n                hasResolved = true;\n                resolver(cacheEntry);\n            }\n        };\n        // we keep the previous cache entry around to leverage\n        // when the incremental cache is disabled in minimal mode\n        if (pendingResponseKey && this.minimalMode && ((_this_previousCacheItem = this.previousCacheItem) == null ? void 0 : _this_previousCacheItem.key) === pendingResponseKey && this.previousCacheItem.expiresAt > Date.now()) {\n            resolve(this.previousCacheItem.entry);\n            this.pendingResponses.delete(pendingResponseKey);\n            return promise;\n        }\n        // We wait to do any async work until after we've added our promise to\n        // `pendingResponses` to ensure that any any other calls will reuse the\n        // same promise until we've fully finished our work.\n        ;\n        (async ()=>{\n            try {\n                const cacheEntry = await responseGenerator({\n                    hasResolved\n                });\n                const resolveValue = cacheEntry === null ? null : {\n                    ...cacheEntry,\n                    isMiss: true\n                };\n                // for on-demand revalidate wait to resolve until cache is set\n                if (!context.isOnDemandRevalidate) {\n                    resolve(resolveValue);\n                }\n                if (key && cacheEntry && cacheEntry.cacheControl) {\n                    this.previousCacheItem = {\n                        key: pendingResponseKey || key,\n                        entry: cacheEntry,\n                        expiresAt: Date.now() + 1000\n                    };\n                } else {\n                    this.previousCacheItem = undefined;\n                }\n                if (context.isOnDemandRevalidate) {\n                    resolve(resolveValue);\n                }\n            } catch (err) {\n                // while revalidating in the background we can't reject as\n                // we already resolved the cache entry so log the error here\n                if (hasResolved) {\n                    console.error(err);\n                } else {\n                    rejecter(err);\n                }\n            } finally{\n                if (pendingResponseKey) {\n                    this.pendingResponses.delete(pendingResponseKey);\n                }\n            }\n        })();\n        return promise;\n    }\n}\n\n//# sourceMappingURL=web.js.map","import { parse, tokensToRegexp } from 'next/dist/compiled/path-to-regexp';\nimport { parse as parseURL } from 'url';\nimport isError from './is-error';\n/**\n * If there is an error show our error link but still show original error or\n * a formatted one if we can\n */ function reportError({ route, parsedPath }, err) {\n    let errMatches;\n    if (isError(err) && (errMatches = err.message.match(/at (\\d{0,})/))) {\n        const position = parseInt(errMatches[1], 10);\n        console.error(`\\nError parsing \\`${route}\\` ` + `https://nextjs.org/docs/messages/invalid-route-source\\n` + `Reason: ${err.message}\\n\\n` + `  ${parsedPath}\\n` + `  ${new Array(position).fill(' ').join('')}^\\n`);\n    } else {\n        console.error(`\\nError parsing ${route} https://nextjs.org/docs/messages/invalid-route-source`, err);\n    }\n}\n/**\n * Attempts to parse a given route with `path-to-regexp` and returns an object\n * with the result. Whenever an error happens on parse, it will print an error\n * attempting to find the error position and showing a link to the docs. When\n * `handleUrl` is set to `true` it will also attempt to parse the route\n * and use the resulting pathname to parse with `path-to-regexp`.\n */ export function tryToParsePath(route, options) {\n    const result = {\n        route,\n        parsedPath: route\n    };\n    try {\n        if (options == null ? void 0 : options.handleUrl) {\n            const parsed = parseURL(route, true);\n            result.parsedPath = `${parsed.pathname}${parsed.hash || ''}`;\n        }\n        result.tokens = parse(result.parsedPath);\n        result.regexStr = tokensToRegexp(result.tokens).source;\n    } catch (err) {\n        reportError(result, err);\n        result.error = err;\n    }\n    return result;\n}\n\n//# sourceMappingURL=try-to-parse-path.js.map","import { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers';\nconst DUMMY_ORIGIN = 'http://n';\nexport function isFullStringUrl(url) {\n    return /https?:\\/\\//.test(url);\n}\nexport function parseUrl(url) {\n    let parsed = undefined;\n    try {\n        parsed = new URL(url, DUMMY_ORIGIN);\n    } catch  {}\n    return parsed;\n}\nexport function stripNextRscUnionQuery(relativeUrl) {\n    const urlInstance = new URL(relativeUrl, DUMMY_ORIGIN);\n    urlInstance.searchParams.delete(NEXT_RSC_UNION_QUERY);\n    return urlInstance.pathname + urlInstance.search;\n}\n\n//# sourceMappingURL=url.js.map","import { bold, yellow } from './picocolors';\nimport { escapeStringRegexp } from '../shared/lib/escape-regexp';\nimport { tryToParsePath } from './try-to-parse-path';\nimport { allowedStatusCodes } from './redirect-status';\nimport { isFullStringUrl } from './url';\nconst allowedHasTypes = new Set([\n    'header',\n    'cookie',\n    'query',\n    'host'\n]);\nconst namedGroupsRegex = /\\(\\?<([a-zA-Z][a-zA-Z0-9]*)>/g;\nexport function normalizeRouteRegex(regex) {\n    // clean up un-necessary escaping from regex.source which turns / into \\\\/\n    return regex.replace(/\\\\\\//g, '/');\n}\nfunction checkRedirect(route) {\n    const invalidParts = [];\n    let hadInvalidStatus = false;\n    if (route.statusCode && !allowedStatusCodes.has(route['statusCode'])) {\n        hadInvalidStatus = true;\n        invalidParts.push(`\\`statusCode\\` is not undefined or valid statusCode`);\n    }\n    if (typeof route.permanent !== 'boolean' && !route['statusCode']) {\n        invalidParts.push(`\\`permanent\\` is not set to \\`true\\` or \\`false\\``);\n    }\n    return {\n        invalidParts,\n        hadInvalidStatus\n    };\n}\nfunction checkHeader(route) {\n    const invalidParts = [];\n    if (!Array.isArray(route.headers)) {\n        invalidParts.push('`headers` field must be an array');\n    } else if (route.headers.length === 0) {\n        invalidParts.push('`headers` field cannot be empty');\n    } else {\n        for (const header of route.headers){\n            if (!header || typeof header !== 'object') {\n                invalidParts.push(\"`headers` items must be object with { key: '', value: '' }\");\n                break;\n            }\n            if (typeof header.key !== 'string') {\n                invalidParts.push('`key` in header item must be string');\n                break;\n            }\n            if (typeof header.value !== 'string') {\n                invalidParts.push('`value` in header item must be string');\n                break;\n            }\n        }\n    }\n    return invalidParts;\n}\nexport function checkCustomRoutes(routes, type) {\n    if (!Array.isArray(routes)) {\n        console.error(`Error: ${type}s must return an array, received ${typeof routes}.\\n` + `See here for more info: https://nextjs.org/docs/messages/routes-must-be-array`);\n        process.exit(1);\n    }\n    let numInvalidRoutes = 0;\n    let hadInvalidStatus = false;\n    let hadInvalidHas = false;\n    let hadInvalidMissing = false;\n    const allowedKeys = new Set([\n        'source',\n        'locale',\n        'has',\n        'missing'\n    ]);\n    if (type === 'rewrite') {\n        allowedKeys.add('basePath');\n        allowedKeys.add('destination');\n    }\n    if (type === 'redirect') {\n        allowedKeys.add('basePath');\n        allowedKeys.add('statusCode');\n        allowedKeys.add('permanent');\n        allowedKeys.add('destination');\n    }\n    if (type === 'header') {\n        allowedKeys.add('basePath');\n        allowedKeys.add('headers');\n    }\n    for (const route of routes){\n        if (!route || typeof route !== 'object') {\n            console.error(`The route ${JSON.stringify(route)} is not a valid object with \\`source\\`${type !== 'middleware' ? ` and \\`${type === 'header' ? 'headers' : 'destination'}\\`` : ''}`);\n            numInvalidRoutes++;\n            continue;\n        }\n        if (type === 'rewrite' && route.basePath === false && !(route.destination.startsWith('http://') || route.destination.startsWith('https://'))) {\n            console.error(`The route ${route.source} rewrites urls outside of the basePath. Please use a destination that starts with \\`http://\\` or \\`https://\\` https://nextjs.org/docs/messages/invalid-external-rewrite`);\n            numInvalidRoutes++;\n            continue;\n        }\n        const keys = Object.keys(route);\n        const invalidKeys = keys.filter((key)=>!allowedKeys.has(key));\n        const invalidParts = [];\n        if ('basePath' in route && typeof route.basePath !== 'undefined' && route.basePath !== false) {\n            invalidParts.push('`basePath` must be undefined or false');\n        }\n        if (typeof route.locale !== 'undefined' && route.locale !== false) {\n            invalidParts.push('`locale` must be undefined or false');\n        }\n        const checkInvalidHasMissing = (items, fieldName)=>{\n            let hadInvalidItem = false;\n            if (typeof items !== 'undefined' && !Array.isArray(items)) {\n                invalidParts.push(`\\`${fieldName}\\` must be undefined or valid has object`);\n                hadInvalidItem = true;\n            } else if (items) {\n                const invalidHasItems = [];\n                for (const hasItem of items){\n                    let invalidHasParts = [];\n                    if (!allowedHasTypes.has(hasItem.type)) {\n                        invalidHasParts.push(`invalid type \"${hasItem.type}\"`);\n                    }\n                    if (typeof hasItem.key !== 'string' && hasItem.type !== 'host') {\n                        invalidHasParts.push(`invalid key \"${hasItem.key}\"`);\n                    }\n                    if (typeof hasItem.value !== 'undefined' && typeof hasItem.value !== 'string') {\n                        invalidHasParts.push(`invalid value \"${hasItem.value}\"`);\n                    }\n                    if (typeof hasItem.value === 'undefined' && hasItem.type === 'host') {\n                        invalidHasParts.push(`value is required for \"host\" type`);\n                    }\n                    if (invalidHasParts.length > 0) {\n                        invalidHasItems.push(`${invalidHasParts.join(', ')} for ${JSON.stringify(hasItem)}`);\n                    }\n                }\n                if (invalidHasItems.length > 0) {\n                    hadInvalidItem = true;\n                    const itemStr = `item${invalidHasItems.length === 1 ? '' : 's'}`;\n                    console.error(`Invalid \\`${fieldName}\\` ${itemStr}:\\n` + invalidHasItems.join('\\n'));\n                    console.error();\n                    invalidParts.push(`invalid \\`${fieldName}\\` ${itemStr} found`);\n                }\n            }\n            return hadInvalidItem;\n        };\n        if (checkInvalidHasMissing(route.has, 'has')) {\n            hadInvalidHas = true;\n        }\n        if (checkInvalidHasMissing(route.missing, 'missing')) {\n            hadInvalidMissing = true;\n        }\n        if (!route.source) {\n            invalidParts.push('`source` is missing');\n        } else if (typeof route.source !== 'string') {\n            invalidParts.push('`source` is not a string');\n        } else if (!route.source.startsWith('/')) {\n            invalidParts.push('`source` does not start with /');\n        }\n        if (type === 'header') {\n            invalidParts.push(...checkHeader(route));\n        } else if (type !== 'middleware') {\n            let _route = route;\n            if (!_route.destination) {\n                invalidParts.push('`destination` is missing');\n            } else if (typeof _route.destination !== 'string') {\n                invalidParts.push('`destination` is not a string');\n            } else if (type === 'rewrite' && !_route.destination.match(/^(\\/|https:\\/\\/|http:\\/\\/)/)) {\n                invalidParts.push('`destination` does not start with `/`, `http://`, or `https://`');\n            }\n        }\n        if (type === 'redirect') {\n            const result = checkRedirect(route);\n            hadInvalidStatus = hadInvalidStatus || result.hadInvalidStatus;\n            invalidParts.push(...result.invalidParts);\n        }\n        let sourceTokens;\n        if (typeof route.source === 'string' && route.source.startsWith('/')) {\n            // only show parse error if we didn't already show error\n            // for not being a string\n            const { tokens, error, regexStr } = tryToParsePath(route.source);\n            if (error) {\n                invalidParts.push('`source` parse failed');\n            }\n            if (regexStr && regexStr.length > 4096) {\n                invalidParts.push('`source` exceeds max built length of 4096');\n            }\n            sourceTokens = tokens;\n        }\n        const hasSegments = new Set();\n        if (route.has) {\n            for (const hasItem of route.has){\n                if (!hasItem.value && hasItem.key) {\n                    hasSegments.add(hasItem.key);\n                }\n                if (hasItem.value) {\n                    for (const match of hasItem.value.matchAll(namedGroupsRegex)){\n                        if (match[1]) {\n                            hasSegments.add(match[1]);\n                        }\n                    }\n                    if (hasItem.type === 'host') {\n                        hasSegments.add('host');\n                    }\n                }\n            }\n        }\n        // make sure no unnamed patterns are attempted to be used in the\n        // destination as this can cause confusion and is not allowed\n        if (typeof route.destination === 'string') {\n            if (route.destination.startsWith('/') && Array.isArray(sourceTokens)) {\n                const unnamedInDest = new Set();\n                for (const token of sourceTokens){\n                    if (typeof token === 'object' && typeof token.name === 'number') {\n                        const unnamedIndex = new RegExp(`:${token.name}(?!\\\\d)`);\n                        if (route.destination.match(unnamedIndex)) {\n                            unnamedInDest.add(`:${token.name}`);\n                        }\n                    }\n                }\n                if (unnamedInDest.size > 0) {\n                    invalidParts.push(`\\`destination\\` has unnamed params ${[\n                        ...unnamedInDest\n                    ].join(', ')}`);\n                } else {\n                    const { tokens: destTokens, regexStr: destRegexStr, error: destinationParseFailed } = tryToParsePath(route.destination, {\n                        handleUrl: true\n                    });\n                    if (destRegexStr && destRegexStr.length > 4096) {\n                        invalidParts.push('`destination` exceeds max built length of 4096');\n                    }\n                    if (destinationParseFailed) {\n                        invalidParts.push('`destination` parse failed');\n                    } else {\n                        const sourceSegments = new Set(sourceTokens.map((item)=>typeof item === 'object' && item.name).filter(Boolean));\n                        const invalidDestSegments = new Set();\n                        for (const token of destTokens){\n                            if (typeof token === 'object' && !sourceSegments.has(token.name) && !hasSegments.has(token.name)) {\n                                invalidDestSegments.add(token.name);\n                            }\n                        }\n                        if (invalidDestSegments.size) {\n                            invalidParts.push(`\\`destination\\` has segments not in \\`source\\` or \\`has\\` (${[\n                                ...invalidDestSegments\n                            ].join(', ')})`);\n                        }\n                    }\n                }\n            }\n        }\n        const hasInvalidKeys = invalidKeys.length > 0;\n        const hasInvalidParts = invalidParts.length > 0;\n        if (hasInvalidKeys || hasInvalidParts) {\n            console.error(`${invalidParts.join(', ')}${invalidKeys.length ? (hasInvalidParts ? ',' : '') + ` invalid field${invalidKeys.length === 1 ? '' : 's'}: ` + invalidKeys.join(',') : ''} for route ${JSON.stringify(route)}`);\n            console.error();\n            numInvalidRoutes++;\n        }\n    }\n    if (numInvalidRoutes > 0) {\n        if (hadInvalidStatus) {\n            console.error(`\\nValid redirect statusCode values are ${[\n                ...allowedStatusCodes\n            ].join(', ')}`);\n        }\n        if (hadInvalidHas) {\n            console.error(`\\nValid \\`has\\` object shape is ${JSON.stringify({\n                type: [\n                    ...allowedHasTypes\n                ].join(', '),\n                key: 'the key to check for',\n                value: 'undefined or a value string to match against'\n            }, null, 2)}`);\n        }\n        if (hadInvalidMissing) {\n            console.error(`\\nValid \\`missing\\` object shape is ${JSON.stringify({\n                type: [\n                    ...allowedHasTypes\n                ].join(', '),\n                key: 'the key to check for',\n                value: 'undefined or a value string to match against'\n            }, null, 2)}`);\n        }\n        console.error();\n        console.error(`Error: Invalid ${type}${numInvalidRoutes === 1 ? '' : 's'} found`);\n        process.exit(1);\n    }\n}\nfunction processRoutes(routes, config, type) {\n    const _routes = routes;\n    const newRoutes = [];\n    const defaultLocales = [];\n    if (config.i18n && type === 'redirect') {\n        var _config_i18n;\n        for (const item of ((_config_i18n = config.i18n) == null ? void 0 : _config_i18n.domains) || []){\n            defaultLocales.push({\n                locale: item.defaultLocale,\n                base: `http${item.http ? '' : 's'}://${item.domain}`\n            });\n        }\n        defaultLocales.push({\n            locale: config.i18n.defaultLocale,\n            base: ''\n        });\n    }\n    for (const r of _routes){\n        var _r_destination;\n        const srcBasePath = config.basePath && r.basePath !== false ? config.basePath : '';\n        const isExternal = !((_r_destination = r.destination) == null ? void 0 : _r_destination.startsWith('/'));\n        const destBasePath = srcBasePath && !isExternal ? srcBasePath : '';\n        if (config.i18n && r.locale !== false) {\n            var _r_destination1;\n            if (!isExternal) {\n                defaultLocales.forEach((item)=>{\n                    let destination;\n                    if (r.destination) {\n                        destination = item.base ? `${item.base}${destBasePath}${r.destination}` : `${destBasePath}${r.destination}`;\n                    }\n                    newRoutes.push({\n                        ...r,\n                        destination,\n                        source: `${srcBasePath}/${item.locale}${r.source === '/' && !config.trailingSlash ? '' : r.source}`\n                    });\n                });\n            }\n            r.source = `/:nextInternalLocale(${config.i18n.locales.map((locale)=>escapeStringRegexp(locale)).join('|')})${r.source === '/' && !config.trailingSlash ? '' : r.source}`;\n            if (r.destination && ((_r_destination1 = r.destination) == null ? void 0 : _r_destination1.startsWith('/'))) {\n                r.destination = `/:nextInternalLocale${r.destination === '/' && !config.trailingSlash ? '' : r.destination}`;\n            }\n        }\n        r.source = `${srcBasePath}${r.source === '/' && srcBasePath ? '' : r.source}`;\n        if (r.destination) {\n            r.destination = `${destBasePath}${r.destination === '/' && destBasePath ? '' : r.destination}`;\n        }\n        newRoutes.push(r);\n    }\n    return newRoutes;\n}\nasync function loadRedirects(config) {\n    if (typeof config.redirects !== 'function') {\n        return [];\n    }\n    let redirects = await config.redirects();\n    // check before we process the routes and after to ensure\n    // they are still valid\n    checkCustomRoutes(redirects, 'redirect');\n    // save original redirects before transforms\n    if (Array.isArray(redirects)) {\n        config._originalRedirects = redirects.map((r)=>({\n                ...r\n            }));\n    }\n    redirects = processRoutes(redirects, config, 'redirect');\n    checkCustomRoutes(redirects, 'redirect');\n    return redirects;\n}\nasync function loadRewrites(config) {\n    // If assetPrefix is set, add a rewrite for `/${assetPrefix}/_next/*`\n    // requests so that they are handled in any of dev, start, or deploy\n    // automatically without the user having to configure this.\n    // If the assetPrefix is an absolute URL, we still consider the path for automatic rewrite.\n    // but hostname routing must be handled by the user\n    let maybeAssetPrefixRewrite = [];\n    if (config.assetPrefix) {\n        let prefix = config.assetPrefix;\n        if (isFullStringUrl(config.assetPrefix) && URL.canParse(config.assetPrefix)) {\n            prefix = new URL(config.assetPrefix).pathname;\n        }\n        if (prefix && prefix !== '/') {\n            const assetPrefix = prefix.startsWith('/') ? prefix : `/${prefix}`;\n            const basePath = config.basePath || '';\n            // If these are the same, then this would result in an infinite rewrite.\n            if (assetPrefix !== basePath) {\n                maybeAssetPrefixRewrite.push({\n                    source: `${assetPrefix}/_next/:path+`,\n                    destination: `${basePath}/_next/:path+`\n                });\n            }\n        }\n    }\n    if (typeof config.rewrites !== 'function') {\n        return {\n            beforeFiles: [\n                ...maybeAssetPrefixRewrite\n            ],\n            afterFiles: [],\n            fallback: []\n        };\n    }\n    const _rewrites = await config.rewrites();\n    let beforeFiles = [];\n    let afterFiles = [];\n    let fallback = [];\n    if (!Array.isArray(_rewrites) && typeof _rewrites === 'object' && Object.keys(_rewrites).every((key)=>key === 'beforeFiles' || key === 'afterFiles' || key === 'fallback')) {\n        beforeFiles = _rewrites.beforeFiles || [];\n        afterFiles = _rewrites.afterFiles || [];\n        fallback = _rewrites.fallback || [];\n    } else {\n        afterFiles = _rewrites;\n    }\n    // check before we process the routes and after to ensure\n    // they are still valid\n    checkCustomRoutes(beforeFiles, 'rewrite');\n    checkCustomRoutes(afterFiles, 'rewrite');\n    checkCustomRoutes(fallback, 'rewrite');\n    // save original rewrites before transforms\n    config._originalRewrites = {\n        beforeFiles: beforeFiles.map((r)=>({\n                ...r\n            })),\n        afterFiles: afterFiles.map((r)=>({\n                ...r\n            })),\n        fallback: fallback.map((r)=>({\n                ...r\n            }))\n    };\n    beforeFiles = [\n        ...maybeAssetPrefixRewrite,\n        ...processRoutes(beforeFiles, config, 'rewrite')\n    ];\n    afterFiles = processRoutes(afterFiles, config, 'rewrite');\n    fallback = processRoutes(fallback, config, 'rewrite');\n    checkCustomRoutes(beforeFiles, 'rewrite');\n    checkCustomRoutes(afterFiles, 'rewrite');\n    checkCustomRoutes(fallback, 'rewrite');\n    return {\n        beforeFiles,\n        afterFiles,\n        fallback\n    };\n}\nasync function loadHeaders(config) {\n    if (typeof config.headers !== 'function') {\n        return [];\n    }\n    let headers = await config.headers();\n    // check before we process the routes and after to ensure\n    // they are still valid\n    checkCustomRoutes(headers, 'header');\n    headers = processRoutes(headers, config, 'header');\n    checkCustomRoutes(headers, 'header');\n    return headers;\n}\nexport default async function loadCustomRoutes(config) {\n    const [headers, rewrites, redirects] = await Promise.all([\n        loadHeaders(config),\n        loadRewrites(config),\n        loadRedirects(config)\n    ]);\n    const totalRewrites = rewrites.beforeFiles.length + rewrites.afterFiles.length + rewrites.fallback.length;\n    const totalRoutes = headers.length + redirects.length + totalRewrites;\n    if (totalRoutes > 1000) {\n        console.warn(bold(yellow(`Warning: `)) + `total number of custom routes exceeds 1000, this can reduce performance. Route counts:\\n` + `headers: ${headers.length}\\n` + `rewrites: ${totalRewrites}\\n` + `redirects: ${redirects.length}\\n` + `See more info: https://nextjs.org/docs/messages/max-custom-routes-reached`);\n    }\n    if (!config.skipTrailingSlashRedirect) {\n        if (config.trailingSlash) {\n            redirects.unshift({\n                source: '/:file((?!\\\\.well-known(?:/.*)?)(?:[^/]+/)*[^/]+\\\\.\\\\w+)/',\n                destination: '/:file',\n                permanent: true,\n                locale: config.i18n ? false : undefined,\n                internal: true,\n                // don't run this redirect for _next/data requests\n                missing: [\n                    {\n                        type: 'header',\n                        key: 'x-nextjs-data'\n                    }\n                ]\n            }, {\n                source: '/:notfile((?!\\\\.well-known(?:/.*)?)(?:[^/]+/)*[^/\\\\.]+)',\n                destination: '/:notfile/',\n                permanent: true,\n                locale: config.i18n ? false : undefined,\n                internal: true\n            });\n            if (config.basePath) {\n                redirects.unshift({\n                    source: config.basePath,\n                    destination: config.basePath + '/',\n                    permanent: true,\n                    basePath: false,\n                    locale: config.i18n ? false : undefined,\n                    internal: true\n                });\n            }\n        } else {\n            redirects.unshift({\n                source: '/:path+/',\n                destination: '/:path+',\n                permanent: true,\n                locale: config.i18n ? false : undefined,\n                internal: true\n            });\n            if (config.basePath) {\n                redirects.unshift({\n                    source: config.basePath + '/',\n                    destination: config.basePath,\n                    permanent: true,\n                    basePath: false,\n                    locale: config.i18n ? false : undefined,\n                    internal: true\n                });\n            }\n        }\n    }\n    return {\n        headers,\n        rewrites,\n        redirects\n    };\n}\n\n//# sourceMappingURL=load-custom-routes.js.map","import { pathToRegexp } from 'next/dist/compiled/path-to-regexp';\nimport { normalizeRouteRegex } from './load-custom-routes';\nimport { getRedirectStatus, modifyRouteRegex } from './redirect-status';\nexport function buildCustomRoute(type, route, restrictedRedirectPaths) {\n    const compiled = pathToRegexp(route.source, [], {\n        strict: true,\n        sensitive: false,\n        delimiter: '/'\n    });\n    let source = compiled.source;\n    if (!route.internal) {\n        source = modifyRouteRegex(source, type === 'redirect' ? restrictedRedirectPaths : undefined);\n    }\n    const regex = normalizeRouteRegex(source);\n    if (type !== 'redirect') {\n        return {\n            ...route,\n            regex\n        };\n    }\n    return {\n        ...route,\n        statusCode: getRedirectStatus(route),\n        permanent: undefined,\n        regex\n    };\n}\n\n//# sourceMappingURL=build-custom-route.js.map","export * from '../shared/lib/constants';\n\n//# sourceMappingURL=constants.js.map","import { byteLength } from './api-utils/web';\nimport BaseServer, { NoFallbackError } from './base-server';\nimport { generateETag } from './lib/etag';\nimport { addRequestMeta, getRequestMeta } from './request-meta';\nimport WebResponseCache from './response-cache/web';\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash';\nimport { isDynamicRoute } from '../shared/lib/router/utils';\nimport { interpolateDynamicPath, normalizeVercelUrl, normalizeDynamicRouteParams } from './server-utils';\nimport { getNamedRouteRegex } from '../shared/lib/router/utils/route-regex';\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher';\nimport { IncrementalCache } from './lib/incremental-cache';\nimport { buildCustomRoute } from '../lib/build-custom-route';\nimport { UNDERSCORE_NOT_FOUND_ROUTE } from '../api/constants';\nimport { getEdgeInstrumentationModule } from './web/globals';\nimport { getEdgePreviewProps } from './web/get-edge-preview-props';\nexport default class NextWebServer extends BaseServer {\n    constructor(options){\n        super(options), this.handleCatchallRenderRequest = async (req, res, parsedUrl)=>{\n            let { pathname, query } = parsedUrl;\n            if (!pathname) {\n                throw Object.defineProperty(new Error('pathname is undefined'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E408\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            // interpolate query information into page for dynamic route\n            // so that rewritten paths are handled properly\n            const normalizedPage = this.serverOptions.webServerConfig.pathname;\n            if (pathname !== normalizedPage) {\n                pathname = normalizedPage;\n                if (isDynamicRoute(pathname)) {\n                    const routeRegex = getNamedRouteRegex(pathname, {\n                        prefixRouteKeys: false\n                    });\n                    const dynamicRouteMatcher = getRouteMatcher(routeRegex);\n                    const defaultRouteMatches = dynamicRouteMatcher(pathname);\n                    const paramsResult = normalizeDynamicRouteParams(query, routeRegex, defaultRouteMatches, false);\n                    const normalizedParams = paramsResult.hasValidParams ? paramsResult.params : query;\n                    pathname = interpolateDynamicPath(pathname, normalizedParams, routeRegex);\n                    normalizeVercelUrl(req, Object.keys(routeRegex.routeKeys), routeRegex);\n                }\n            }\n            // next.js core assumes page path without trailing slash\n            pathname = removeTrailingSlash(pathname);\n            if (this.i18nProvider) {\n                const { detectedLocale } = await this.i18nProvider.analyze(pathname);\n                if (detectedLocale) {\n                    addRequestMeta(req, 'locale', detectedLocale);\n                }\n            }\n            const bubbleNoFallback = getRequestMeta(req, 'bubbleNoFallback');\n            try {\n                await this.render(req, res, pathname, query, parsedUrl, true);\n                return true;\n            } catch (err) {\n                if (err instanceof NoFallbackError && bubbleNoFallback) {\n                    return false;\n                }\n                throw err;\n            }\n        };\n        // Extend `renderOpts`.\n        Object.assign(this.renderOpts, options.webServerConfig.extendRenderOpts);\n    }\n    async getIncrementalCache({ requestHeaders }) {\n        const dev = !!this.renderOpts.dev;\n        // incremental-cache is request specific\n        // although can have shared caches in module scope\n        // per-cache handler\n        return new IncrementalCache({\n            dev,\n            requestHeaders,\n            requestProtocol: 'https',\n            allowedRevalidateHeaderKeys: this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n            minimalMode: this.minimalMode,\n            fetchCacheKeyPrefix: this.nextConfig.experimental.fetchCacheKeyPrefix,\n            maxMemoryCacheSize: this.nextConfig.cacheMaxMemorySize,\n            flushToDisk: false,\n            CurCacheHandler: this.serverOptions.webServerConfig.incrementalCacheHandler,\n            getPrerenderManifest: ()=>this.getPrerenderManifest()\n        });\n    }\n    getResponseCache() {\n        return new WebResponseCache(this.minimalMode);\n    }\n    async hasPage(page) {\n        return page === this.serverOptions.webServerConfig.page;\n    }\n    getBuildId() {\n        return this.serverOptions.buildId;\n    }\n    getEnabledDirectories() {\n        return {\n            app: this.serverOptions.webServerConfig.pagesType === 'app',\n            pages: this.serverOptions.webServerConfig.pagesType === 'pages'\n        };\n    }\n    getPagesManifest() {\n        return {\n            // keep same theme but server path doesn't need to be accurate\n            [this.serverOptions.webServerConfig.pathname]: `server${this.serverOptions.webServerConfig.page}.js`\n        };\n    }\n    getAppPathsManifest() {\n        const page = this.serverOptions.webServerConfig.page;\n        return {\n            [this.serverOptions.webServerConfig.page]: `app${page}.js`\n        };\n    }\n    attachRequestMeta(req, parsedUrl) {\n        addRequestMeta(req, 'initQuery', {\n            ...parsedUrl.query\n        });\n    }\n    getPrerenderManifest() {\n        return {\n            version: -1,\n            routes: {},\n            dynamicRoutes: {},\n            notFoundRoutes: [],\n            preview: getEdgePreviewProps()\n        };\n    }\n    getNextFontManifest() {\n        return this.serverOptions.webServerConfig.extendRenderOpts.nextFontManifest;\n    }\n    renderHTML(req, res, pathname, query, renderOpts) {\n        const { renderToHTML } = this.serverOptions.webServerConfig;\n        if (!renderToHTML) {\n            throw Object.defineProperty(new Error('Invariant: routeModule should be configured when rendering pages'), \"__NEXT_ERROR_CODE\", {\n                value: \"E4\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        // For edge runtime if the pathname hit as /_not-found entrypoint,\n        // override the pathname to /404 for rendering\n        if (pathname === UNDERSCORE_NOT_FOUND_ROUTE) {\n            pathname = '/404';\n        }\n        return renderToHTML(req, res, pathname, query, // Edge runtime does not support ISR/PPR, so we don't need to pass in\n        // the unknown params.\n        null, Object.assign(renderOpts, {\n            disableOptimizedLoading: true,\n            runtime: 'experimental-edge'\n        }), undefined, false, {\n            buildId: this.serverOptions.buildId\n        });\n    }\n    async sendRenderResult(_req, res, options) {\n        res.setHeader('X-Edge-Runtime', '1');\n        // Add necessary headers.\n        // @TODO: Share the isomorphic logic with server/send-payload.ts.\n        if (options.poweredByHeader && options.type === 'html') {\n            res.setHeader('X-Powered-By', 'Next.js');\n        }\n        if (!res.getHeader('Content-Type')) {\n            res.setHeader('Content-Type', options.result.contentType ? options.result.contentType : options.type === 'json' ? 'application/json' : 'text/html; charset=utf-8');\n        }\n        let promise;\n        if (options.result.isDynamic) {\n            promise = options.result.pipeTo(res.transformStream.writable);\n        } else {\n            const payload = options.result.toUnchunkedString();\n            res.setHeader('Content-Length', String(byteLength(payload)));\n            if (options.generateEtags) {\n                res.setHeader('ETag', generateETag(payload));\n            }\n            res.body(payload);\n        }\n        res.send();\n        // If we have a promise, wait for it to resolve.\n        if (promise) await promise;\n    }\n    async findPageComponents({ page, query, params, url: _url }) {\n        const result = await this.serverOptions.webServerConfig.loadComponent(page);\n        if (!result) return null;\n        return {\n            query: {\n                ...query || {},\n                ...params || {}\n            },\n            components: result\n        };\n    }\n    // Below are methods that are not implemented by the web server as they are\n    // handled by the upstream proxy (edge runtime or node server).\n    async runApi() {\n        // This web server does not need to handle API requests.\n        return true;\n    }\n    async handleApiRequest() {\n        // Edge API requests are handled separately in minimal mode.\n        return false;\n    }\n    loadEnvConfig() {\n    // The web server does not need to load the env config. This is done by the\n    // runtime already.\n    }\n    getPublicDir() {\n        // Public files are not handled by the web server.\n        return '';\n    }\n    getHasStaticDir() {\n        return false;\n    }\n    getFontManifest() {\n        return undefined;\n    }\n    handleCompression() {\n    // For the web server layer, compression is automatically handled by the\n    // upstream proxy (edge runtime or node server) and we can simply skip here.\n    }\n    async handleUpgrade() {\n    // The web server does not support web sockets.\n    }\n    async getFallbackErrorComponents(_url) {\n        // The web server does not need to handle fallback errors in production.\n        return null;\n    }\n    getRoutesManifest() {\n        // The web server does not need to handle rewrite rules. This is done by the\n        // upstream proxy (edge runtime or node server).\n        return undefined;\n    }\n    getMiddleware() {\n        // The web server does not need to handle middleware. This is done by the\n        // upstream proxy (edge runtime or node server).\n        return Promise.resolve(undefined);\n    }\n    getFilesystemPaths() {\n        return new Set();\n    }\n    getinterceptionRoutePatterns() {\n        var _this_serverOptions_webServerConfig_interceptionRouteRewrites;\n        return ((_this_serverOptions_webServerConfig_interceptionRouteRewrites = this.serverOptions.webServerConfig.interceptionRouteRewrites) == null ? void 0 : _this_serverOptions_webServerConfig_interceptionRouteRewrites.map((rewrite)=>new RegExp(buildCustomRoute('rewrite', rewrite).regex))) ?? [];\n    }\n    async loadInstrumentationModule() {\n        return await getEdgeInstrumentationModule();\n    }\n    async instrumentationOnRequestError(...args) {\n        await super.instrumentationOnRequestError(...args);\n        const err = args[0];\n        if (process.env.NODE_ENV !== 'production' && typeof __next_log_error__ === 'function') {\n            __next_log_error__(err);\n        } else {\n            console.error(err);\n        }\n    }\n}\n\n//# sourceMappingURL=web-server.js.map","import { RedirectStatusCode } from '../../client/components/redirect-status-code';\nimport { getCookieParser } from '../api-utils/get-cookie-parser';\nexport class BaseNextRequest {\n    constructor(method, url, body){\n        this.method = method;\n        this.url = url;\n        this.body = body;\n    }\n    // Utils implemented using the abstract methods above\n    get cookies() {\n        if (this._cookies) return this._cookies;\n        return this._cookies = getCookieParser(this.headers)();\n    }\n}\nexport class BaseNextResponse {\n    constructor(destination){\n        this.destination = destination;\n    }\n    // Utils implemented using the abstract methods above\n    redirect(destination, statusCode) {\n        this.setHeader('Location', destination);\n        this.statusCode = statusCode;\n        // Since IE11 doesn't support the 308 header add backwards\n        // compatibility using refresh header\n        if (statusCode === RedirectStatusCode.PermanentRedirect) {\n            this.setHeader('Refresh', `0;url=${destination}`);\n        }\n        return this;\n    }\n}\n\n//# sourceMappingURL=index.js.map","import { toNodeOutgoingHttpHeaders } from '../web/utils';\nimport { BaseNextRequest, BaseNextResponse } from './index';\nimport { DetachedPromise } from '../../lib/detached-promise';\nimport { CloseController, trackBodyConsumed } from '../web/web-on-close';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nexport class WebNextRequest extends BaseNextRequest {\n    constructor(request){\n        const url = new URL(request.url);\n        super(request.method, url.href.slice(url.origin.length), request.clone().body);\n        this.request = request;\n        this.fetchMetrics = request.fetchMetrics;\n        this.headers = {};\n        for (const [name, value] of request.headers.entries()){\n            this.headers[name] = value;\n        }\n    }\n    async parseBody(_limit) {\n        throw Object.defineProperty(new Error('parseBody is not implemented in the web runtime'), \"__NEXT_ERROR_CODE\", {\n            value: \"E213\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\nexport class WebNextResponse extends BaseNextResponse {\n    constructor(transformStream = new TransformStream()){\n        super(transformStream.writable), this.transformStream = transformStream, this.headers = new Headers(), this.textBody = undefined, this.closeController = new CloseController(), this.sendPromise = new DetachedPromise(), this._sent = false;\n    }\n    setHeader(name, value) {\n        this.headers.delete(name);\n        for (const val of Array.isArray(value) ? value : [\n            value\n        ]){\n            this.headers.append(name, val);\n        }\n        return this;\n    }\n    removeHeader(name) {\n        this.headers.delete(name);\n        return this;\n    }\n    getHeaderValues(name) {\n        var _this_getHeader;\n        // https://developer.mozilla.org/docs/Web/API/Headers/get#example\n        return (_this_getHeader = this.getHeader(name)) == null ? void 0 : _this_getHeader.split(',').map((v)=>v.trimStart());\n    }\n    getHeader(name) {\n        return this.headers.get(name) ?? undefined;\n    }\n    getHeaders() {\n        return toNodeOutgoingHttpHeaders(this.headers);\n    }\n    hasHeader(name) {\n        return this.headers.has(name);\n    }\n    appendHeader(name, value) {\n        this.headers.append(name, value);\n        return this;\n    }\n    body(value) {\n        this.textBody = value;\n        return this;\n    }\n    send() {\n        this.sendPromise.resolve();\n        this._sent = true;\n    }\n    get sent() {\n        return this._sent;\n    }\n    async toResponse() {\n        // If we haven't called `send` yet, wait for it to be called.\n        if (!this.sent) await this.sendPromise.promise;\n        const body = this.textBody ?? this.transformStream.readable;\n        let bodyInit = body;\n        // if the response is streaming, onClose() can still be called after this point.\n        const canAddListenersLater = typeof bodyInit !== 'string';\n        const shouldTrackBody = canAddListenersLater ? true : this.closeController.listeners > 0;\n        if (shouldTrackBody) {\n            bodyInit = trackBodyConsumed(body, ()=>{\n                this.closeController.dispatchClose();\n            });\n        }\n        return new Response(bodyInit, {\n            headers: this.headers,\n            status: this.statusCode,\n            statusText: this.statusMessage\n        });\n    }\n    onClose(callback) {\n        if (this.closeController.isClosed) {\n            throw Object.defineProperty(new InvariantError('Cannot call onClose on a WebNextResponse that is already closed'), \"__NEXT_ERROR_CODE\", {\n                value: \"E599\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        return this.closeController.onClose(callback);\n    }\n}\n\n//# sourceMappingURL=web.js.map","// An internal module to expose the \"waitUntil\" API to Edge SSR and Edge Route Handler functions.\n// This is highly experimental and subject to change.\n// We still need a global key to bypass Webpack's layering of modules.\nconst GLOBAL_KEY = Symbol.for('__next_internal_waitUntil__');\nconst state = // @ts-ignore\nglobalThis[GLOBAL_KEY] || // @ts-ignore\n(globalThis[GLOBAL_KEY] = {\n    waitUntilCounter: 0,\n    waitUntilResolve: undefined,\n    waitUntilPromise: null\n});\n// No matter how many concurrent requests are being handled, we want to make sure\n// that the final promise is only resolved once all of the waitUntil promises have\n// settled.\nfunction resolveOnePromise() {\n    state.waitUntilCounter--;\n    if (state.waitUntilCounter === 0) {\n        state.waitUntilResolve();\n        state.waitUntilPromise = null;\n    }\n}\nexport function internal_getCurrentFunctionWaitUntil() {\n    return state.waitUntilPromise;\n}\nexport function internal_runWithWaitUntil(fn) {\n    const result = fn();\n    if (result && typeof result === 'object' && 'then' in result && 'finally' in result && typeof result.then === 'function' && typeof result.finally === 'function') {\n        if (!state.waitUntilCounter) {\n            // Create the promise for the next batch of waitUntil calls.\n            state.waitUntilPromise = new Promise((resolve)=>{\n                state.waitUntilResolve = resolve;\n            });\n        }\n        state.waitUntilCounter++;\n        return result.finally(()=>{\n            resolveOnePromise();\n        });\n    }\n    return result;\n}\n\n//# sourceMappingURL=internal-edge-wait-until.js.map","import WebServer from '../../../../server/web-server';\nimport { WebNextRequest, WebNextResponse } from '../../../../server/base-http/web';\nimport { SERVER_RUNTIME } from '../../../../lib/constants';\nimport { normalizeAppPath } from '../../../../shared/lib/router/utils/app-paths';\nimport { internal_getCurrentFunctionWaitUntil } from '../../../../server/web/internal-edge-wait-until';\nexport function getRender({ dev, page, appMod, pageMod, errorMod, error500Mod, pagesType, Document, buildManifest, reactLoadableManifest, dynamicCssManifest, interceptionRouteRewrites, renderToHTML, clientReferenceManifest, subresourceIntegrityManifest, serverActionsManifest, serverActions, config, buildId, nextFontManifest, incrementalCacheHandler }) {\n    const isAppPath = pagesType === 'app';\n    const baseLoadComponentResult = {\n        dev,\n        buildManifest,\n        reactLoadableManifest,\n        dynamicCssManifest,\n        subresourceIntegrityManifest,\n        Document,\n        App: appMod == null ? void 0 : appMod.default,\n        clientReferenceManifest\n    };\n    const server = new WebServer({\n        dev,\n        buildId,\n        conf: config,\n        minimalMode: true,\n        webServerConfig: {\n            page,\n            pathname: isAppPath ? normalizeAppPath(page) : page,\n            pagesType,\n            interceptionRouteRewrites,\n            extendRenderOpts: {\n                runtime: SERVER_RUNTIME.experimentalEdge,\n                supportsDynamicResponse: true,\n                disableOptimizedLoading: true,\n                serverActionsManifest,\n                serverActions,\n                nextFontManifest\n            },\n            renderToHTML,\n            incrementalCacheHandler,\n            loadComponent: async (inputPage)=>{\n                if (inputPage === page) {\n                    return {\n                        ...baseLoadComponentResult,\n                        Component: pageMod.default,\n                        pageConfig: pageMod.config || {},\n                        getStaticProps: pageMod.getStaticProps,\n                        getServerSideProps: pageMod.getServerSideProps,\n                        getStaticPaths: pageMod.getStaticPaths,\n                        ComponentMod: pageMod,\n                        isAppPath: !!pageMod.__next_app__,\n                        page: inputPage,\n                        routeModule: pageMod.routeModule\n                    };\n                }\n                // If there is a custom 500 page, we need to handle it separately.\n                if (inputPage === '/500' && error500Mod) {\n                    return {\n                        ...baseLoadComponentResult,\n                        Component: error500Mod.default,\n                        pageConfig: error500Mod.config || {},\n                        getStaticProps: error500Mod.getStaticProps,\n                        getServerSideProps: error500Mod.getServerSideProps,\n                        getStaticPaths: error500Mod.getStaticPaths,\n                        ComponentMod: error500Mod,\n                        page: inputPage,\n                        routeModule: error500Mod.routeModule\n                    };\n                }\n                if (inputPage === '/_error') {\n                    return {\n                        ...baseLoadComponentResult,\n                        Component: errorMod.default,\n                        pageConfig: errorMod.config || {},\n                        getStaticProps: errorMod.getStaticProps,\n                        getServerSideProps: errorMod.getServerSideProps,\n                        getStaticPaths: errorMod.getStaticPaths,\n                        ComponentMod: errorMod,\n                        page: inputPage,\n                        routeModule: errorMod.routeModule\n                    };\n                }\n                return null;\n            }\n        }\n    });\n    const handler = server.getRequestHandler();\n    return async function render(request, event) {\n        const extendedReq = new WebNextRequest(request);\n        const extendedRes = new WebNextResponse(undefined);\n        handler(extendedReq, extendedRes);\n        const result = await extendedRes.toResponse();\n        request.fetchMetrics = extendedReq.fetchMetrics;\n        if (event == null ? void 0 : event.waitUntil) {\n            // TODO(after):\n            // remove `internal_runWithWaitUntil` and the `internal-edge-wait-until` module\n            // when consumers switch to `after`.\n            const waitUntilPromise = internal_getCurrentFunctionWaitUntil();\n            if (waitUntilPromise) {\n                event.waitUntil(waitUntilPromise);\n            }\n        }\n        return result;\n    };\n}\n\n//# sourceMappingURL=render.js.map","/**\n * Find the starting index of Uint8Array `b` within Uint8Array `a`.\n */ export function indexOfUint8Array(a, b) {\n    if (b.length === 0) return 0;\n    if (a.length === 0 || b.length > a.length) return -1;\n    // start iterating through `a`\n    for(let i = 0; i <= a.length - b.length; i++){\n        let completeMatch = true;\n        // from index `i`, iterate through `b` and check for mismatch\n        for(let j = 0; j < b.length; j++){\n            // if the values do not match, then this isn't a complete match, exit `b` iteration early and iterate to next index of `a`.\n            if (a[i + j] !== b[j]) {\n                completeMatch = false;\n                break;\n            }\n        }\n        if (completeMatch) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Check if two Uint8Arrays are strictly equivalent.\n */ export function isEquivalentUint8Arrays(a, b) {\n    if (a.length !== b.length) return false;\n    for(let i = 0; i < a.length; i++){\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n/**\n * Remove Uint8Array `b` from Uint8Array `a`.\n *\n * If `b` is not in `a`, `a` is returned unchanged.\n *\n * Otherwise, the function returns a new Uint8Array instance with size `a.length - b.length`\n */ export function removeFromUint8Array(a, b) {\n    const tagIndex = indexOfUint8Array(a, b);\n    if (tagIndex === 0) return a.subarray(b.length);\n    if (tagIndex > -1) {\n        const removed = new Uint8Array(a.length - b.length);\n        removed.set(a.slice(0, tagIndex));\n        removed.set(a.slice(tagIndex + b.length), tagIndex);\n        return removed;\n    } else {\n        return a;\n    }\n}\n\n//# sourceMappingURL=uint8array-helpers.js.map","export const MISSING_ROOT_TAGS_ERROR = 'NEXT_MISSING_ROOT_TAGS'\n","import { getTracer } from '../lib/trace/tracer';\nimport { AppRenderSpan } from '../lib/trace/constants';\nimport { DetachedPromise } from '../../lib/detached-promise';\nimport { scheduleImmediate, atLeastOneTask } from '../../lib/scheduler';\nimport { ENCODED_TAGS } from './encodedTags';\nimport { indexOfUint8Array, isEquivalentUint8Arrays, removeFromUint8Array } from './uint8array-helpers';\nimport { MISSING_ROOT_TAGS_ERROR } from '../../shared/lib/errors/constants';\nfunction voidCatch() {\n// this catcher is designed to be used with pipeTo where we expect the underlying\n// pipe implementation to forward errors but we don't want the pipeTo promise to reject\n// and be unhandled\n}\n// We can share the same encoder instance everywhere\n// Notably we cannot do the same for TextDecoder because it is stateful\n// when handling streaming data\nconst encoder = new TextEncoder();\nexport function chainStreams(...streams) {\n    // We could encode this invariant in the arguments but current uses of this function pass\n    // use spread so it would be missed by\n    if (streams.length === 0) {\n        throw Object.defineProperty(new Error('Invariant: chainStreams requires at least one stream'), \"__NEXT_ERROR_CODE\", {\n            value: \"E437\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    // If we only have 1 stream we fast path it by returning just this stream\n    if (streams.length === 1) {\n        return streams[0];\n    }\n    const { readable, writable } = new TransformStream();\n    // We always initiate pipeTo immediately. We know we have at least 2 streams\n    // so we need to avoid closing the writable when this one finishes.\n    let promise = streams[0].pipeTo(writable, {\n        preventClose: true\n    });\n    let i = 1;\n    for(; i < streams.length - 1; i++){\n        const nextStream = streams[i];\n        promise = promise.then(()=>nextStream.pipeTo(writable, {\n                preventClose: true\n            }));\n    }\n    // We can omit the length check because we halted before the last stream and there\n    // is at least two streams so the lastStream here will always be defined\n    const lastStream = streams[i];\n    promise = promise.then(()=>lastStream.pipeTo(writable));\n    // Catch any errors from the streams and ignore them, they will be handled\n    // by whatever is consuming the readable stream.\n    promise.catch(voidCatch);\n    return readable;\n}\nexport function streamFromString(str) {\n    return new ReadableStream({\n        start (controller) {\n            controller.enqueue(encoder.encode(str));\n            controller.close();\n        }\n    });\n}\nexport function streamFromBuffer(chunk) {\n    return new ReadableStream({\n        start (controller) {\n            controller.enqueue(chunk);\n            controller.close();\n        }\n    });\n}\nexport async function streamToBuffer(stream) {\n    const reader = stream.getReader();\n    const chunks = [];\n    while(true){\n        const { done, value } = await reader.read();\n        if (done) {\n            break;\n        }\n        chunks.push(value);\n    }\n    return Buffer.concat(chunks);\n}\nexport async function streamToString(stream, signal) {\n    const decoder = new TextDecoder('utf-8', {\n        fatal: true\n    });\n    let string = '';\n    for await (const chunk of stream){\n        if (signal == null ? void 0 : signal.aborted) {\n            return string;\n        }\n        string += decoder.decode(chunk, {\n            stream: true\n        });\n    }\n    string += decoder.decode();\n    return string;\n}\nexport function createBufferedTransformStream() {\n    let bufferedChunks = [];\n    let bufferByteLength = 0;\n    let pending;\n    const flush = (controller)=>{\n        // If we already have a pending flush, then return early.\n        if (pending) return;\n        const detached = new DetachedPromise();\n        pending = detached;\n        scheduleImmediate(()=>{\n            try {\n                const chunk = new Uint8Array(bufferByteLength);\n                let copiedBytes = 0;\n                for(let i = 0; i < bufferedChunks.length; i++){\n                    const bufferedChunk = bufferedChunks[i];\n                    chunk.set(bufferedChunk, copiedBytes);\n                    copiedBytes += bufferedChunk.byteLength;\n                }\n                // We just wrote all the buffered chunks so we need to reset the bufferedChunks array\n                // and our bufferByteLength to prepare for the next round of buffered chunks\n                bufferedChunks.length = 0;\n                bufferByteLength = 0;\n                controller.enqueue(chunk);\n            } catch  {\n            // If an error occurs while enqueuing it can't be due to this\n            // transformers fault. It's likely due to the controller being\n            // errored due to the stream being cancelled.\n            } finally{\n                pending = undefined;\n                detached.resolve();\n            }\n        });\n    };\n    return new TransformStream({\n        transform (chunk, controller) {\n            // Combine the previous buffer with the new chunk.\n            bufferedChunks.push(chunk);\n            bufferByteLength += chunk.byteLength;\n            // Flush the buffer to the controller.\n            flush(controller);\n        },\n        flush () {\n            if (!pending) return;\n            return pending.promise;\n        }\n    });\n}\nexport function renderToInitialFizzStream({ ReactDOMServer, element, streamOptions }) {\n    return getTracer().trace(AppRenderSpan.renderToReadableStream, async ()=>ReactDOMServer.renderToReadableStream(element, streamOptions));\n}\nfunction createHeadInsertionTransformStream(insert) {\n    let inserted = false;\n    // We need to track if this transform saw any bytes because if it didn't\n    // we won't want to insert any server HTML at all\n    let hasBytes = false;\n    return new TransformStream({\n        async transform (chunk, controller) {\n            hasBytes = true;\n            const insertion = await insert();\n            if (inserted) {\n                if (insertion) {\n                    const encodedInsertion = encoder.encode(insertion);\n                    controller.enqueue(encodedInsertion);\n                }\n                controller.enqueue(chunk);\n            } else {\n                // TODO (@Ethan-Arrowood): Replace the generic `indexOfUint8Array` method with something finely tuned for the subset of things actually being checked for.\n                const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD);\n                // In fully static rendering or non PPR rendering cases:\n                // `/head>` will always be found in the chunk in first chunk rendering.\n                if (index !== -1) {\n                    if (insertion) {\n                        const encodedInsertion = encoder.encode(insertion);\n                        // Get the total count of the bytes in the chunk and the insertion\n                        // e.g.\n                        // chunk = <head><meta charset=\"utf-8\"></head>\n                        // insertion = <script>...</script>\n                        // output = <head><meta charset=\"utf-8\"> [ <script>...</script> ] </head>\n                        const insertedHeadContent = new Uint8Array(chunk.length + encodedInsertion.length);\n                        // Append the first part of the chunk, before the head tag\n                        insertedHeadContent.set(chunk.slice(0, index));\n                        // Append the server inserted content\n                        insertedHeadContent.set(encodedInsertion, index);\n                        // Append the rest of the chunk\n                        insertedHeadContent.set(chunk.slice(index), index + encodedInsertion.length);\n                        controller.enqueue(insertedHeadContent);\n                    } else {\n                        controller.enqueue(chunk);\n                    }\n                    inserted = true;\n                } else {\n                    // This will happens in PPR rendering during next start, when the page is partially rendered.\n                    // When the page resumes, the head tag will be found in the middle of the chunk.\n                    // Where we just need to append the insertion and chunk to the current stream.\n                    // e.g.\n                    // PPR-static: <head>...</head><body> [ resume content ] </body>\n                    // PPR-resume: [ insertion ] [ rest content ]\n                    if (insertion) {\n                        controller.enqueue(encoder.encode(insertion));\n                    }\n                    controller.enqueue(chunk);\n                    inserted = true;\n                }\n            }\n        },\n        async flush (controller) {\n            // Check before closing if there's anything remaining to insert.\n            if (hasBytes) {\n                const insertion = await insert();\n                if (insertion) {\n                    controller.enqueue(encoder.encode(insertion));\n                }\n            }\n        }\n    });\n}\n// Suffix after main body content - scripts before </body>,\n// but wait for the major chunks to be enqueued.\nfunction createDeferredSuffixStream(suffix) {\n    let flushed = false;\n    let pending;\n    const flush = (controller)=>{\n        const detached = new DetachedPromise();\n        pending = detached;\n        scheduleImmediate(()=>{\n            try {\n                controller.enqueue(encoder.encode(suffix));\n            } catch  {\n            // If an error occurs while enqueuing it can't be due to this\n            // transformers fault. It's likely due to the controller being\n            // errored due to the stream being cancelled.\n            } finally{\n                pending = undefined;\n                detached.resolve();\n            }\n        });\n    };\n    return new TransformStream({\n        transform (chunk, controller) {\n            controller.enqueue(chunk);\n            // If we've already flushed, we're done.\n            if (flushed) return;\n            // Schedule the flush to happen.\n            flushed = true;\n            flush(controller);\n        },\n        flush (controller) {\n            if (pending) return pending.promise;\n            if (flushed) return;\n            // Flush now.\n            controller.enqueue(encoder.encode(suffix));\n        }\n    });\n}\n// Merge two streams into one. Ensure the final transform stream is closed\n// when both are finished.\nfunction createMergedTransformStream(stream) {\n    let pull = null;\n    let donePulling = false;\n    async function startPulling(controller) {\n        if (pull) {\n            return;\n        }\n        const reader = stream.getReader();\n        // NOTE: streaming flush\n        // We are buffering here for the inlined data stream because the\n        // \"shell\" stream might be chunkenized again by the underlying stream\n        // implementation, e.g. with a specific high-water mark. To ensure it's\n        // the safe timing to pipe the data stream, this extra tick is\n        // necessary.\n        // We don't start reading until we've left the current Task to ensure\n        // that it's inserted after flushing the shell. Note that this implementation\n        // might get stale if impl details of Fizz change in the future.\n        await atLeastOneTask();\n        try {\n            while(true){\n                const { done, value } = await reader.read();\n                if (done) {\n                    donePulling = true;\n                    return;\n                }\n                controller.enqueue(value);\n            }\n        } catch (err) {\n            controller.error(err);\n        }\n    }\n    return new TransformStream({\n        transform (chunk, controller) {\n            controller.enqueue(chunk);\n            // Start the streaming if it hasn't already been started yet.\n            if (!pull) {\n                pull = startPulling(controller);\n            }\n        },\n        flush (controller) {\n            if (donePulling) {\n                return;\n            }\n            return pull || startPulling(controller);\n        }\n    });\n}\nconst CLOSE_TAG = '</body></html>';\n/**\n * This transform stream moves the suffix to the end of the stream, so results\n * like `</body></html><script>...</script>` will be transformed to\n * `<script>...</script></body></html>`.\n */ function createMoveSuffixStream() {\n    let foundSuffix = false;\n    return new TransformStream({\n        transform (chunk, controller) {\n            if (foundSuffix) {\n                return controller.enqueue(chunk);\n            }\n            const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n            if (index > -1) {\n                foundSuffix = true;\n                // If the whole chunk is the suffix, then don't write anything, it will\n                // be written in the flush.\n                if (chunk.length === ENCODED_TAGS.CLOSED.BODY_AND_HTML.length) {\n                    return;\n                }\n                // Write out the part before the suffix.\n                const before = chunk.slice(0, index);\n                controller.enqueue(before);\n                // In the case where the suffix is in the middle of the chunk, we need\n                // to split the chunk into two parts.\n                if (chunk.length > ENCODED_TAGS.CLOSED.BODY_AND_HTML.length + index) {\n                    // Write out the part after the suffix.\n                    const after = chunk.slice(index + ENCODED_TAGS.CLOSED.BODY_AND_HTML.length);\n                    controller.enqueue(after);\n                }\n            } else {\n                controller.enqueue(chunk);\n            }\n        },\n        flush (controller) {\n            // Even if we didn't find the suffix, the HTML is not valid if we don't\n            // add it, so insert it at the end.\n            controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n        }\n    });\n}\nfunction createStripDocumentClosingTagsTransform() {\n    return new TransformStream({\n        transform (chunk, controller) {\n            // We rely on the assumption that chunks will never break across a code unit.\n            // This is reasonable because we currently concat all of React's output from a single\n            // flush into one chunk before streaming it forward which means the chunk will represent\n            // a single coherent utf-8 string. This is not safe to use if we change our streaming to no\n            // longer do this large buffered chunk\n            if (isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML) || isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY) || isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.HTML)) {\n                // the entire chunk is the closing tags; return without enqueueing anything.\n                return;\n            }\n            // We assume these tags will go at together at the end of the document and that\n            // they won't appear anywhere else in the document. This is not really a safe assumption\n            // but until we revamp our streaming infra this is a performant way to string the tags\n            chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY);\n            chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.HTML);\n            controller.enqueue(chunk);\n        }\n    });\n}\n/*\n * Checks if the root layout is missing the html or body tags\n * and if so, it will inject a script tag to throw an error in the browser, showing the user\n * the error message in the error overlay.\n */ export function createRootLayoutValidatorStream() {\n    let foundHtml = false;\n    let foundBody = false;\n    return new TransformStream({\n        async transform (chunk, controller) {\n            // Peek into the streamed chunk to see if the tags are present.\n            if (!foundHtml && indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.HTML) > -1) {\n                foundHtml = true;\n            }\n            if (!foundBody && indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.BODY) > -1) {\n                foundBody = true;\n            }\n            controller.enqueue(chunk);\n        },\n        flush (controller) {\n            const missingTags = [];\n            if (!foundHtml) missingTags.push('html');\n            if (!foundBody) missingTags.push('body');\n            if (!missingTags.length) return;\n            controller.enqueue(encoder.encode(`<html id=\"__next_error__\">\n            <template\n              data-next-error-message=\"Missing ${missingTags.map((c)=>`<${c}>`).join(missingTags.length > 1 ? ' and ' : '')} tags in the root layout.\\nRead more at https://nextjs.org/docs/messages/missing-root-layout-tags\"\"\n              data-next-error-digest=\"${MISSING_ROOT_TAGS_ERROR}\"\n              data-next-error-stack=\"\"\n            ></template>\n          `));\n        }\n    });\n}\nfunction chainTransformers(readable, transformers) {\n    let stream = readable;\n    for (const transformer of transformers){\n        if (!transformer) continue;\n        stream = stream.pipeThrough(transformer);\n    }\n    return stream;\n}\nexport async function continueFizzStream(renderStream, { suffix, inlinedDataStream, isStaticGeneration, getServerInsertedHTML, getServerInsertedMetadata, validateRootLayout }) {\n    // Suffix itself might contain close tags at the end, so we need to split it.\n    const suffixUnclosed = suffix ? suffix.split(CLOSE_TAG, 1)[0] : null;\n    // If we're generating static HTML and there's an `allReady` promise on the\n    // stream, we need to wait for it to resolve before continuing.\n    if (isStaticGeneration && 'allReady' in renderStream) {\n        await renderStream.allReady;\n    }\n    return chainTransformers(renderStream, [\n        // Buffer everything to avoid flushing too frequently\n        createBufferedTransformStream(),\n        // Insert generated metadata\n        createHeadInsertionTransformStream(getServerInsertedMetadata),\n        // Insert suffix content\n        suffixUnclosed != null && suffixUnclosed.length > 0 ? createDeferredSuffixStream(suffixUnclosed) : null,\n        // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n        inlinedDataStream ? createMergedTransformStream(inlinedDataStream) : null,\n        // Validate the root layout for missing html or body tags\n        validateRootLayout ? createRootLayoutValidatorStream() : null,\n        // Close tags should always be deferred to the end\n        createMoveSuffixStream(),\n        // Special head insertions\n        // TODO-APP: Insert server side html to end of head in app layout rendering, to avoid\n        // hydration errors. Remove this once it's ready to be handled by react itself.\n        createHeadInsertionTransformStream(getServerInsertedHTML)\n    ]);\n}\nexport async function continueDynamicPrerender(prerenderStream, { getServerInsertedHTML, getServerInsertedMetadata }) {\n    return prerenderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream()).pipeThrough(createStripDocumentClosingTagsTransform())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))// Insert generated metadata\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedMetadata));\n}\nexport async function continueStaticPrerender(prerenderStream, { inlinedDataStream, getServerInsertedHTML, getServerInsertedMetadata }) {\n    return prerenderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))// Insert generated metadata to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedMetadata))// Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    .pipeThrough(createMergedTransformStream(inlinedDataStream))// Close tags should always be deferred to the end\n    .pipeThrough(createMoveSuffixStream());\n}\nexport async function continueDynamicHTMLResume(renderStream, { inlinedDataStream, getServerInsertedHTML, getServerInsertedMetadata }) {\n    return renderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))// Insert generated metadata to body\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedMetadata))// Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    .pipeThrough(createMergedTransformStream(inlinedDataStream))// Close tags should always be deferred to the end\n    .pipeThrough(createMoveSuffixStream());\n}\nexport function createDocumentClosingStream() {\n    return streamFromString(CLOSE_TAG);\n}\n\n//# sourceMappingURL=node-web-streams-helper.js.map","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */r.parse=parse;r.serialize=serialize;var i=decodeURIComponent;var t=encodeURIComponent;var a=/; */;var n=/^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;function parse(e,r){if(typeof e!==\"string\"){throw new TypeError(\"argument str must be a string\")}var t={};var n=r||{};var o=e.split(a);var s=n.decode||i;for(var p=0;p<o.length;p++){var f=o[p];var u=f.indexOf(\"=\");if(u<0){continue}var v=f.substr(0,u).trim();var c=f.substr(++u,f.length).trim();if('\"'==c[0]){c=c.slice(1,-1)}if(undefined==t[v]){t[v]=tryDecode(c,s)}}return t}function serialize(e,r,i){var a=i||{};var o=a.encode||t;if(typeof o!==\"function\"){throw new TypeError(\"option encode is invalid\")}if(!n.test(e)){throw new TypeError(\"argument name is invalid\")}var s=o(r);if(s&&!n.test(s)){throw new TypeError(\"argument val is invalid\")}var p=e+\"=\"+s;if(null!=a.maxAge){var f=a.maxAge-0;if(isNaN(f)||!isFinite(f)){throw new TypeError(\"option maxAge is invalid\")}p+=\"; Max-Age=\"+Math.floor(f)}if(a.domain){if(!n.test(a.domain)){throw new TypeError(\"option domain is invalid\")}p+=\"; Domain=\"+a.domain}if(a.path){if(!n.test(a.path)){throw new TypeError(\"option path is invalid\")}p+=\"; Path=\"+a.path}if(a.expires){if(typeof a.expires.toUTCString!==\"function\"){throw new TypeError(\"option expires is invalid\")}p+=\"; Expires=\"+a.expires.toUTCString()}if(a.httpOnly){p+=\"; HttpOnly\"}if(a.secure){p+=\"; Secure\"}if(a.sameSite){var u=typeof a.sameSite===\"string\"?a.sameSite.toLowerCase():a.sameSite;switch(u){case true:p+=\"; SameSite=Strict\";break;case\"lax\":p+=\"; SameSite=Lax\";break;case\"strict\":p+=\"; SameSite=Strict\";break;case\"none\":p+=\"; SameSite=None\";break;default:throw new TypeError(\"option sameSite is invalid\")}}return p}function tryDecode(e,r){try{return r(e)}catch(r){return e}}})();module.exports=e})();","import { BailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { workAsyncStorage } from '../../server/app-render/work-async-storage.external'\n\nexport function bailoutToClientRendering(reason: string): void | never {\n  const workStore = workAsyncStorage.getStore()\n\n  if (workStore?.forceStatic) return\n\n  if (workStore?.isStaticGeneration) throw new BailoutToCSRError(reason)\n}\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","import { use, useContext } from 'react'\nimport {\n  type MetadataResolver,\n  ServerInsertedMetadataContext,\n} from '../../../shared/lib/server-inserted-metadata.shared-runtime'\nimport type { StreamingMetadataResolvedState } from './types'\n\n// Receives a metadata resolver setter from the context, and will pass the metadata resolving promise to\n// the context where we gonna use it to resolve the metadata, and render as string to append in <body>.\nconst useServerInsertedMetadata = (metadataResolver: MetadataResolver) => {\n  const setMetadataResolver = useContext(ServerInsertedMetadataContext)\n\n  if (setMetadataResolver) {\n    setMetadataResolver(metadataResolver)\n  }\n}\n\nexport function ServerInsertMetadata({\n  promise,\n}: {\n  promise: Promise<StreamingMetadataResolvedState>\n}) {\n  // Apply use() to the metadata promise to suspend the rendering in SSR.\n  const { metadata } = use(promise)\n  // Insert metadata into the HTML stream through the `useServerInsertedMetadata`\n  useServerInsertedMetadata(() => metadata)\n\n  return null\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-server-dom-webpack-client.edge.production.js');\n} else {\n  module.exports = require('./cjs/react-server-dom-webpack-client.edge.development.js');\n}\n","import path from '../shared/lib/isomorphic/path';\n/**\n * MultiFileWriter is a utility for writing multiple files in parallel that\n * guarantees that all files will be written after their containing directory\n * is created, and that the directory will only be created once.\n */ export class MultiFileWriter {\n    constructor(/**\n     * The file system methods to use.\n     */ fs){\n        this.fs = fs;\n        this.tasks = [];\n    }\n    /**\n   * Finds or creates a task for a directory.\n   *\n   * @param directory - The directory to find or create a task for.\n   * @returns The task for the directory.\n   */ findOrCreateTask(directory) {\n        // See if this directory already has a task to create it.\n        for (const task of this.tasks){\n            if (task[0] === directory) {\n                return task;\n            }\n        }\n        const promise = this.fs.mkdir(directory);\n        // Attach a catch handler so that it doesn't throw an unhandled promise\n        // rejection warning.\n        promise.catch(()=>{});\n        // Otherwise, create a new task for this directory.\n        const task = [\n            directory,\n            promise,\n            []\n        ];\n        this.tasks.push(task);\n        return task;\n    }\n    /**\n   * Appends a file to the writer to be written after its containing directory\n   * is created. The file writer should be awaited after all the files have been\n   * appended. Any async operation that occurs between appending and awaiting\n   * may cause an unhandled promise rejection warning and potentially crash the\n   * process.\n   *\n   * @param filePath - The path to the file to write.\n   * @param data - The data to write to the file.\n   */ append(filePath, data) {\n        // Find or create a task for the directory that contains the file.\n        const task = this.findOrCreateTask(path.dirname(filePath));\n        const promise = task[1].then(()=>this.fs.writeFile(filePath, data));\n        // Attach a catch handler so that it doesn't throw an unhandled promise\n        // rejection warning.\n        promise.catch(()=>{});\n        // Add the file write to the task AFTER the directory promise has resolved.\n        task[2].push(promise);\n    }\n    /**\n   * Returns a promise that resolves when all the files have been written.\n   */ wait() {\n        return Promise.all(this.tasks.flatMap((task)=>task[2]));\n    }\n}\n\n//# sourceMappingURL=multi-file-writer.js.map","import { CachedRouteKind, IncrementalCacheKind } from '../../response-cache';\nimport { LRUCache } from '../lru-cache';\nimport path from '../../../shared/lib/isomorphic/path';\nimport { NEXT_CACHE_TAGS_HEADER, NEXT_DATA_SUFFIX, NEXT_META_SUFFIX, RSC_PREFETCH_SUFFIX, RSC_SEGMENT_SUFFIX, RSC_SEGMENTS_DIR_SUFFIX, RSC_SUFFIX } from '../../../lib/constants';\nimport { isStale, tagsManifest } from './tags-manifest.external';\nimport { MultiFileWriter } from '../../../lib/multi-file-writer';\nlet memoryCache;\nexport default class FileSystemCache {\n    constructor(ctx){\n        this.fs = ctx.fs;\n        this.flushToDisk = ctx.flushToDisk;\n        this.serverDistDir = ctx.serverDistDir;\n        this.revalidatedTags = ctx.revalidatedTags;\n        this.debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE;\n        if (ctx.maxMemoryCacheSize) {\n            if (!memoryCache) {\n                if (this.debug) {\n                    console.log('using memory store for fetch cache');\n                }\n                memoryCache = new LRUCache(ctx.maxMemoryCacheSize, function length({ value }) {\n                    var _JSON_stringify;\n                    if (!value) {\n                        return 25;\n                    } else if (value.kind === CachedRouteKind.REDIRECT) {\n                        return JSON.stringify(value.props).length;\n                    } else if (value.kind === CachedRouteKind.IMAGE) {\n                        throw Object.defineProperty(new Error('invariant image should not be incremental-cache'), \"__NEXT_ERROR_CODE\", {\n                            value: \"E501\",\n                            enumerable: false,\n                            configurable: true\n                        });\n                    } else if (value.kind === CachedRouteKind.FETCH) {\n                        return JSON.stringify(value.data || '').length;\n                    } else if (value.kind === CachedRouteKind.APP_ROUTE) {\n                        return value.body.length;\n                    }\n                    // rough estimate of size of cache value\n                    return value.html.length + (((_JSON_stringify = JSON.stringify(value.kind === CachedRouteKind.APP_PAGE ? value.rscData : value.pageData)) == null ? void 0 : _JSON_stringify.length) || 0);\n                });\n            }\n        } else if (this.debug) {\n            console.log('not using memory store for fetch cache');\n        }\n    }\n    resetRequestCache() {}\n    async revalidateTag(...args) {\n        let [tags] = args;\n        tags = typeof tags === 'string' ? [\n            tags\n        ] : tags;\n        if (this.debug) {\n            console.log('revalidateTag', tags);\n        }\n        if (tags.length === 0) {\n            return;\n        }\n        for (const tag of tags){\n            if (!tagsManifest.has(tag)) {\n                tagsManifest.set(tag, Date.now());\n            }\n        }\n    }\n    async get(...args) {\n        var _data_value, _data_value1, _data_value2;\n        const [key, ctx] = args;\n        const { kind } = ctx;\n        let data = memoryCache == null ? void 0 : memoryCache.get(key);\n        if (this.debug) {\n            if (kind === IncrementalCacheKind.FETCH) {\n                console.log('get', key, ctx.tags, kind, !!data);\n            } else {\n                console.log('get', key, kind, !!data);\n            }\n        }\n        // let's check the disk for seed data\n        if (!data && process.env.NEXT_RUNTIME !== 'edge') {\n            if (kind === IncrementalCacheKind.APP_ROUTE) {\n                try {\n                    const filePath = this.getFilePath(`${key}.body`, IncrementalCacheKind.APP_ROUTE);\n                    const fileData = await this.fs.readFile(filePath);\n                    const { mtime } = await this.fs.stat(filePath);\n                    const meta = JSON.parse(await this.fs.readFile(filePath.replace(/\\.body$/, NEXT_META_SUFFIX), 'utf8'));\n                    const cacheEntry = {\n                        lastModified: mtime.getTime(),\n                        value: {\n                            kind: CachedRouteKind.APP_ROUTE,\n                            body: fileData,\n                            headers: meta.headers,\n                            status: meta.status\n                        }\n                    };\n                    return cacheEntry;\n                } catch  {\n                    return null;\n                }\n            }\n            try {\n                const filePath = this.getFilePath(kind === IncrementalCacheKind.FETCH ? key : `${key}.html`, kind);\n                const fileData = await this.fs.readFile(filePath, 'utf8');\n                const { mtime } = await this.fs.stat(filePath);\n                if (kind === IncrementalCacheKind.FETCH) {\n                    var _data_value3;\n                    const { tags, fetchIdx, fetchUrl } = ctx;\n                    if (!this.flushToDisk) return null;\n                    const lastModified = mtime.getTime();\n                    const parsedData = JSON.parse(fileData);\n                    data = {\n                        lastModified,\n                        value: parsedData\n                    };\n                    if (((_data_value3 = data.value) == null ? void 0 : _data_value3.kind) === CachedRouteKind.FETCH) {\n                        var _data_value4;\n                        const storedTags = (_data_value4 = data.value) == null ? void 0 : _data_value4.tags;\n                        // update stored tags if a new one is being added\n                        // TODO: remove this when we can send the tags\n                        // via header on GET same as SET\n                        if (!(tags == null ? void 0 : tags.every((tag)=>storedTags == null ? void 0 : storedTags.includes(tag)))) {\n                            if (this.debug) {\n                                console.log('tags vs storedTags mismatch', tags, storedTags);\n                            }\n                            await this.set(key, data.value, {\n                                fetchCache: true,\n                                tags,\n                                fetchIdx,\n                                fetchUrl\n                            });\n                        }\n                    }\n                } else if (kind === IncrementalCacheKind.APP_PAGE) {\n                    // We try to load the metadata file, but if it fails, we don't\n                    // error. We also don't load it if this is a fallback.\n                    let meta;\n                    try {\n                        meta = JSON.parse(await this.fs.readFile(filePath.replace(/\\.html$/, NEXT_META_SUFFIX), 'utf8'));\n                    } catch  {}\n                    let maybeSegmentData;\n                    if (meta == null ? void 0 : meta.segmentPaths) {\n                        // Collect all the segment data for this page.\n                        // TODO: To optimize file system reads, we should consider creating\n                        // separate cache entries for each segment, rather than storing them\n                        // all on the page's entry. Though the behavior is\n                        // identical regardless.\n                        const segmentData = new Map();\n                        maybeSegmentData = segmentData;\n                        const segmentsDir = key + RSC_SEGMENTS_DIR_SUFFIX;\n                        await Promise.all(meta.segmentPaths.map(async (segmentPath)=>{\n                            const segmentDataFilePath = this.getFilePath(segmentsDir + segmentPath + RSC_SEGMENT_SUFFIX, IncrementalCacheKind.APP_PAGE);\n                            try {\n                                segmentData.set(segmentPath, await this.fs.readFile(segmentDataFilePath));\n                            } catch  {\n                            // This shouldn't happen, but if for some reason we fail to\n                            // load a segment from the filesystem, treat it the same as if\n                            // the segment is dynamic and does not have a prefetch.\n                            }\n                        }));\n                    }\n                    let rscData;\n                    if (!ctx.isFallback) {\n                        rscData = await this.fs.readFile(this.getFilePath(`${key}${ctx.isRoutePPREnabled ? RSC_PREFETCH_SUFFIX : RSC_SUFFIX}`, IncrementalCacheKind.APP_PAGE));\n                    }\n                    data = {\n                        lastModified: mtime.getTime(),\n                        value: {\n                            kind: CachedRouteKind.APP_PAGE,\n                            html: fileData,\n                            rscData,\n                            postponed: meta == null ? void 0 : meta.postponed,\n                            headers: meta == null ? void 0 : meta.headers,\n                            status: meta == null ? void 0 : meta.status,\n                            segmentData: maybeSegmentData\n                        }\n                    };\n                } else if (kind === IncrementalCacheKind.PAGES) {\n                    let meta;\n                    let pageData = {};\n                    if (!ctx.isFallback) {\n                        pageData = JSON.parse(await this.fs.readFile(this.getFilePath(`${key}${NEXT_DATA_SUFFIX}`, IncrementalCacheKind.PAGES), 'utf8'));\n                    }\n                    data = {\n                        lastModified: mtime.getTime(),\n                        value: {\n                            kind: CachedRouteKind.PAGES,\n                            html: fileData,\n                            pageData,\n                            headers: meta == null ? void 0 : meta.headers,\n                            status: meta == null ? void 0 : meta.status\n                        }\n                    };\n                } else {\n                    throw Object.defineProperty(new Error(`Invariant: Unexpected route kind ${kind} in file system cache.`), \"__NEXT_ERROR_CODE\", {\n                        value: \"E445\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                if (data) {\n                    memoryCache == null ? void 0 : memoryCache.set(key, data);\n                }\n            } catch  {\n                return null;\n            }\n        }\n        if ((data == null ? void 0 : (_data_value = data.value) == null ? void 0 : _data_value.kind) === CachedRouteKind.APP_PAGE || (data == null ? void 0 : (_data_value1 = data.value) == null ? void 0 : _data_value1.kind) === CachedRouteKind.PAGES) {\n            var _data_value_headers;\n            let cacheTags;\n            const tagsHeader = (_data_value_headers = data.value.headers) == null ? void 0 : _data_value_headers[NEXT_CACHE_TAGS_HEADER];\n            if (typeof tagsHeader === 'string') {\n                cacheTags = tagsHeader.split(',');\n            }\n            if (cacheTags == null ? void 0 : cacheTags.length) {\n                // we trigger a blocking validation if an ISR page\n                // had a tag revalidated, if we want to be a background\n                // revalidation instead we return data.lastModified = -1\n                if (isStale(cacheTags, (data == null ? void 0 : data.lastModified) || Date.now())) {\n                    return null;\n                }\n            }\n        } else if ((data == null ? void 0 : (_data_value2 = data.value) == null ? void 0 : _data_value2.kind) === CachedRouteKind.FETCH) {\n            const combinedTags = ctx.kind === IncrementalCacheKind.FETCH ? [\n                ...ctx.tags || [],\n                ...ctx.softTags || []\n            ] : [];\n            const wasRevalidated = combinedTags.some((tag)=>{\n                if (this.revalidatedTags.includes(tag)) {\n                    return true;\n                }\n                return isStale([\n                    tag\n                ], (data == null ? void 0 : data.lastModified) || Date.now());\n            });\n            // When revalidate tag is called we don't return\n            // stale data so it's updated right away\n            if (wasRevalidated) {\n                data = undefined;\n            }\n        }\n        return data ?? null;\n    }\n    async set(key, data, ctx) {\n        memoryCache == null ? void 0 : memoryCache.set(key, {\n            value: data,\n            lastModified: Date.now()\n        });\n        if (this.debug) {\n            console.log('set', key);\n        }\n        if (!this.flushToDisk || !data) return;\n        // Create a new writer that will prepare to write all the files to disk\n        // after their containing directory is created.\n        const writer = new MultiFileWriter(this.fs);\n        if (data.kind === CachedRouteKind.APP_ROUTE) {\n            const filePath = this.getFilePath(`${key}.body`, IncrementalCacheKind.APP_ROUTE);\n            writer.append(filePath, data.body);\n            const meta = {\n                headers: data.headers,\n                status: data.status,\n                postponed: undefined,\n                segmentPaths: undefined\n            };\n            writer.append(filePath.replace(/\\.body$/, NEXT_META_SUFFIX), JSON.stringify(meta, null, 2));\n        } else if (data.kind === CachedRouteKind.PAGES || data.kind === CachedRouteKind.APP_PAGE) {\n            const isAppPath = data.kind === CachedRouteKind.APP_PAGE;\n            const htmlPath = this.getFilePath(`${key}.html`, isAppPath ? IncrementalCacheKind.APP_PAGE : IncrementalCacheKind.PAGES);\n            writer.append(htmlPath, data.html);\n            // Fallbacks don't generate a data file.\n            if (!ctx.fetchCache && !ctx.isFallback) {\n                writer.append(this.getFilePath(`${key}${isAppPath ? ctx.isRoutePPREnabled ? RSC_PREFETCH_SUFFIX : RSC_SUFFIX : NEXT_DATA_SUFFIX}`, isAppPath ? IncrementalCacheKind.APP_PAGE : IncrementalCacheKind.PAGES), isAppPath ? data.rscData : JSON.stringify(data.pageData));\n            }\n            if ((data == null ? void 0 : data.kind) === CachedRouteKind.APP_PAGE) {\n                let segmentPaths;\n                if (data.segmentData) {\n                    segmentPaths = [];\n                    const segmentsDir = htmlPath.replace(/\\.html$/, RSC_SEGMENTS_DIR_SUFFIX);\n                    for (const [segmentPath, buffer] of data.segmentData){\n                        segmentPaths.push(segmentPath);\n                        const segmentDataFilePath = segmentsDir + segmentPath + RSC_SEGMENT_SUFFIX;\n                        writer.append(segmentDataFilePath, buffer);\n                    }\n                }\n                const meta = {\n                    headers: data.headers,\n                    status: data.status,\n                    postponed: data.postponed,\n                    segmentPaths\n                };\n                writer.append(htmlPath.replace(/\\.html$/, NEXT_META_SUFFIX), JSON.stringify(meta));\n            }\n        } else if (data.kind === CachedRouteKind.FETCH) {\n            const filePath = this.getFilePath(key, IncrementalCacheKind.FETCH);\n            writer.append(filePath, JSON.stringify({\n                ...data,\n                tags: ctx.fetchCache ? ctx.tags : []\n            }));\n        }\n        // Wait for all FS operations to complete.\n        await writer.wait();\n    }\n    getFilePath(pathname, kind) {\n        switch(kind){\n            case IncrementalCacheKind.FETCH:\n                // we store in .next/cache/fetch-cache so it can be persisted\n                // across deploys\n                return path.join(this.serverDistDir, '..', 'cache', 'fetch-cache', pathname);\n            case IncrementalCacheKind.PAGES:\n                return path.join(this.serverDistDir, 'pages', pathname);\n            case IncrementalCacheKind.IMAGE:\n            case IncrementalCacheKind.APP_PAGE:\n            case IncrementalCacheKind.APP_ROUTE:\n                return path.join(this.serverDistDir, 'app', pathname);\n            default:\n                throw Object.defineProperty(new Error(`Unexpected file path kind: ${kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E479\",\n                    enumerable: false,\n                    configurable: true\n                });\n        }\n    }\n}\n\n//# sourceMappingURL=file-system-cache.js.map","/**\n * A shared cache of cache controls for routes. This cache is used so we don't\n * have to modify the prerender manifest when we want to update the cache\n * control for a route.\n */ export class SharedCacheControls {\n    static #_ = /**\n   * The in-memory cache of cache lives for routes. This cache is populated when\n   * the cache is updated with new cache lives.\n   */ this.cacheControls = new Map();\n    constructor(/**\n     * The prerender manifest that contains the initial cache controls for\n     * routes.\n     */ prerenderManifest){\n        this.prerenderManifest = prerenderManifest;\n    }\n    /**\n   * Try to get the cache control value for a route. This will first try to get\n   * the value from the in-memory cache. If the value is not present in the\n   * in-memory cache, it will be sourced from the prerender manifest.\n   *\n   * @param route the route to get the cache control for\n   * @returns the cache control for the route, or undefined if the values\n   *          are not present in the in-memory cache or the prerender manifest\n   */ get(route) {\n        // This is a copy on write cache that is updated when the cache is updated.\n        // If the cache is never written to, then the values will be sourced from\n        // the prerender manifest.\n        let cacheControl = SharedCacheControls.cacheControls.get(route);\n        if (cacheControl) return cacheControl;\n        let prerenderData = this.prerenderManifest.routes[route];\n        if (prerenderData) {\n            const { initialRevalidateSeconds, initialExpireSeconds } = prerenderData;\n            if (typeof initialRevalidateSeconds !== 'undefined') {\n                return {\n                    revalidate: initialRevalidateSeconds,\n                    expire: initialExpireSeconds\n                };\n            }\n        }\n        const dynamicPrerenderData = this.prerenderManifest.dynamicRoutes[route];\n        if (dynamicPrerenderData) {\n            const { fallbackRevalidate, fallbackExpire } = dynamicPrerenderData;\n            if (typeof fallbackRevalidate !== 'undefined') {\n                return {\n                    revalidate: fallbackRevalidate,\n                    expire: fallbackExpire\n                };\n            }\n        }\n        return undefined;\n    }\n    /**\n   * Set the cache control for a route.\n   *\n   * @param route the route to set the cache control for\n   * @param cacheControl the cache control for the route\n   */ set(route, cacheControl) {\n        SharedCacheControls.cacheControls.set(route, cacheControl);\n    }\n    /**\n   * Clear the in-memory cache of cache controls for routes.\n   */ clear() {\n        SharedCacheControls.cacheControls.clear();\n    }\n}\n\n//# sourceMappingURL=shared-cache-controls.js.map","import { IncrementalCacheKind, CachedRouteKind } from '../../response-cache';\nimport FileSystemCache from './file-system-cache';\nimport { normalizePagePath } from '../../../shared/lib/page-path/normalize-page-path';\nimport { CACHE_ONE_YEAR, PRERENDER_REVALIDATE_HEADER } from '../../../lib/constants';\nimport { toRoute } from '../to-route';\nimport { SharedCacheControls } from './shared-cache-controls';\nimport { getPrerenderResumeDataCache, getRenderResumeDataCache, workUnitAsyncStorage } from '../../app-render/work-unit-async-storage.external';\nimport { InvariantError } from '../../../shared/lib/invariant-error';\nimport { getPreviouslyRevalidatedTags } from '../../server-utils';\nimport { workAsyncStorage } from '../../app-render/work-async-storage.external';\nexport class CacheHandler {\n    // eslint-disable-next-line\n    constructor(_ctx){}\n    async get(_cacheKey, _ctx) {\n        return {};\n    }\n    async set(_cacheKey, _data, _ctx) {}\n    async revalidateTag(..._args) {}\n    resetRequestCache() {}\n}\nexport class IncrementalCache {\n    constructor({ fs, dev, flushToDisk, minimalMode, serverDistDir, requestHeaders, requestProtocol, maxMemoryCacheSize, getPrerenderManifest, fetchCacheKeyPrefix, CurCacheHandler, allowedRevalidateHeaderKeys }){\n        var _this_prerenderManifest_preview, _this_prerenderManifest;\n        this.locks = new Map();\n        const debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE;\n        this.hasCustomCacheHandler = Boolean(CurCacheHandler);\n        const cacheHandlersSymbol = Symbol.for('@next/cache-handlers');\n        const _globalThis = globalThis;\n        if (!CurCacheHandler) {\n            // if we have a global cache handler available leverage it\n            const globalCacheHandler = _globalThis[cacheHandlersSymbol];\n            if (globalCacheHandler == null ? void 0 : globalCacheHandler.FetchCache) {\n                CurCacheHandler = globalCacheHandler.FetchCache;\n            } else {\n                if (fs && serverDistDir) {\n                    if (debug) {\n                        console.log('using filesystem cache handler');\n                    }\n                    CurCacheHandler = FileSystemCache;\n                }\n            }\n        } else if (debug) {\n            console.log('using custom cache handler', CurCacheHandler.name);\n        }\n        if (process.env.__NEXT_TEST_MAX_ISR_CACHE) {\n            // Allow cache size to be overridden for testing purposes\n            maxMemoryCacheSize = parseInt(process.env.__NEXT_TEST_MAX_ISR_CACHE, 10);\n        }\n        this.dev = dev;\n        this.disableForTestmode = process.env.NEXT_PRIVATE_TEST_PROXY === 'true';\n        // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n        // because we replace this.minimalMode to true in production bundles.\n        const minimalModeKey = 'minimalMode';\n        this[minimalModeKey] = minimalMode;\n        this.requestHeaders = requestHeaders;\n        this.requestProtocol = requestProtocol;\n        this.allowedRevalidateHeaderKeys = allowedRevalidateHeaderKeys;\n        this.prerenderManifest = getPrerenderManifest();\n        this.cacheControls = new SharedCacheControls(this.prerenderManifest);\n        this.fetchCacheKeyPrefix = fetchCacheKeyPrefix;\n        let revalidatedTags = [];\n        if (requestHeaders[PRERENDER_REVALIDATE_HEADER] === ((_this_prerenderManifest = this.prerenderManifest) == null ? void 0 : (_this_prerenderManifest_preview = _this_prerenderManifest.preview) == null ? void 0 : _this_prerenderManifest_preview.previewModeId)) {\n            this.isOnDemandRevalidate = true;\n        }\n        if (minimalMode) {\n            var _this_prerenderManifest_preview1, _this_prerenderManifest1;\n            revalidatedTags = getPreviouslyRevalidatedTags(requestHeaders, (_this_prerenderManifest1 = this.prerenderManifest) == null ? void 0 : (_this_prerenderManifest_preview1 = _this_prerenderManifest1.preview) == null ? void 0 : _this_prerenderManifest_preview1.previewModeId);\n        }\n        if (CurCacheHandler) {\n            this.cacheHandler = new CurCacheHandler({\n                dev,\n                fs,\n                flushToDisk,\n                serverDistDir,\n                revalidatedTags,\n                maxMemoryCacheSize,\n                _requestHeaders: requestHeaders,\n                fetchCacheKeyPrefix\n            });\n        }\n    }\n    calculateRevalidate(pathname, fromTime, dev, isFallback) {\n        // in development we don't have a prerender-manifest\n        // and default to always revalidating to allow easier debugging\n        if (dev) return Math.floor(performance.timeOrigin + performance.now() - 1000);\n        const cacheControl = this.cacheControls.get(toRoute(pathname));\n        // if an entry isn't present in routes we fallback to a default\n        // of revalidating after 1 second unless it's a fallback request.\n        const initialRevalidateSeconds = cacheControl ? cacheControl.revalidate : isFallback ? false : 1;\n        const revalidateAfter = typeof initialRevalidateSeconds === 'number' ? initialRevalidateSeconds * 1000 + fromTime : initialRevalidateSeconds;\n        return revalidateAfter;\n    }\n    _getPathname(pathname, fetchCache) {\n        return fetchCache ? pathname : normalizePagePath(pathname);\n    }\n    resetRequestCache() {\n        var _this_cacheHandler_resetRequestCache, _this_cacheHandler;\n        (_this_cacheHandler = this.cacheHandler) == null ? void 0 : (_this_cacheHandler_resetRequestCache = _this_cacheHandler.resetRequestCache) == null ? void 0 : _this_cacheHandler_resetRequestCache.call(_this_cacheHandler);\n    }\n    async lock(cacheKey) {\n        let unlockNext = ()=>Promise.resolve();\n        const existingLock = this.locks.get(cacheKey);\n        if (existingLock) {\n            await existingLock;\n        }\n        const newLock = new Promise((resolve)=>{\n            unlockNext = async ()=>{\n                resolve();\n                this.locks.delete(cacheKey) // Remove the lock upon release\n                ;\n            };\n        });\n        this.locks.set(cacheKey, newLock);\n        return unlockNext;\n    }\n    async revalidateTag(tags) {\n        var _this_cacheHandler;\n        return (_this_cacheHandler = this.cacheHandler) == null ? void 0 : _this_cacheHandler.revalidateTag(tags);\n    }\n    // x-ref: https://github.com/facebook/react/blob/2655c9354d8e1c54ba888444220f63e836925caa/packages/react/src/ReactFetch.js#L23\n    async generateCacheKey(url, init = {}) {\n        // this should be bumped anytime a fix is made to cache entries\n        // that should bust the cache\n        const MAIN_KEY_PREFIX = 'v3';\n        const bodyChunks = [];\n        const encoder = new TextEncoder();\n        const decoder = new TextDecoder();\n        if (init.body) {\n            // handle ReadableStream body\n            if (typeof init.body.getReader === 'function') {\n                const readableBody = init.body;\n                const chunks = [];\n                try {\n                    await readableBody.pipeTo(new WritableStream({\n                        write (chunk) {\n                            if (typeof chunk === 'string') {\n                                chunks.push(encoder.encode(chunk));\n                                bodyChunks.push(chunk);\n                            } else {\n                                chunks.push(chunk);\n                                bodyChunks.push(decoder.decode(chunk, {\n                                    stream: true\n                                }));\n                            }\n                        }\n                    }));\n                    // Flush the decoder.\n                    bodyChunks.push(decoder.decode());\n                    // Create a new buffer with all the chunks.\n                    const length = chunks.reduce((total, arr)=>total + arr.length, 0);\n                    const arrayBuffer = new Uint8Array(length);\n                    // Push each of the chunks into the new array buffer.\n                    let offset = 0;\n                    for (const chunk of chunks){\n                        arrayBuffer.set(chunk, offset);\n                        offset += chunk.length;\n                    }\n                    ;\n                    init._ogBody = arrayBuffer;\n                } catch (err) {\n                    console.error('Problem reading body', err);\n                }\n            } else if (typeof init.body.keys === 'function') {\n                const formData = init.body;\n                init._ogBody = init.body;\n                for (const key of new Set([\n                    ...formData.keys()\n                ])){\n                    const values = formData.getAll(key);\n                    bodyChunks.push(`${key}=${(await Promise.all(values.map(async (val)=>{\n                        if (typeof val === 'string') {\n                            return val;\n                        } else {\n                            return await val.text();\n                        }\n                    }))).join(',')}`);\n                }\n            // handle blob body\n            } else if (typeof init.body.arrayBuffer === 'function') {\n                const blob = init.body;\n                const arrayBuffer = await blob.arrayBuffer();\n                bodyChunks.push(await blob.text());\n                init._ogBody = new Blob([\n                    arrayBuffer\n                ], {\n                    type: blob.type\n                });\n            } else if (typeof init.body === 'string') {\n                bodyChunks.push(init.body);\n                init._ogBody = init.body;\n            }\n        }\n        const headers = typeof (init.headers || {}).keys === 'function' ? Object.fromEntries(init.headers) : Object.assign({}, init.headers);\n        // w3c trace context headers can break request caching and deduplication\n        // so we remove them from the cache key\n        if ('traceparent' in headers) delete headers['traceparent'];\n        if ('tracestate' in headers) delete headers['tracestate'];\n        const cacheString = JSON.stringify([\n            MAIN_KEY_PREFIX,\n            this.fetchCacheKeyPrefix || '',\n            url,\n            init.method,\n            headers,\n            init.mode,\n            init.redirect,\n            init.credentials,\n            init.referrer,\n            init.referrerPolicy,\n            init.integrity,\n            init.cache,\n            bodyChunks\n        ]);\n        if (process.env.NEXT_RUNTIME === 'edge') {\n            function bufferToHex(buffer) {\n                return Array.prototype.map.call(new Uint8Array(buffer), (b)=>b.toString(16).padStart(2, '0')).join('');\n            }\n            const buffer = encoder.encode(cacheString);\n            return bufferToHex(await crypto.subtle.digest('SHA-256', buffer));\n        } else {\n            const crypto1 = require('crypto');\n            return crypto1.createHash('sha256').update(cacheString).digest('hex');\n        }\n    }\n    async get(cacheKey, ctx) {\n        var _this_cacheHandler, _cacheData_value;\n        // Unlike other caches if we have a resume data cache, we use it even if\n        // testmode would normally disable it or if requestHeaders say 'no-cache'.\n        if (ctx.kind === IncrementalCacheKind.FETCH) {\n            const workUnitStore = workUnitAsyncStorage.getStore();\n            const resumeDataCache = workUnitStore ? getRenderResumeDataCache(workUnitStore) : null;\n            if (resumeDataCache) {\n                const memoryCacheData = resumeDataCache.fetch.get(cacheKey);\n                if ((memoryCacheData == null ? void 0 : memoryCacheData.kind) === CachedRouteKind.FETCH) {\n                    return {\n                        isStale: false,\n                        value: memoryCacheData\n                    };\n                }\n            }\n        }\n        // we don't leverage the prerender cache in dev mode\n        // so that getStaticProps is always called for easier debugging\n        if (this.disableForTestmode || this.dev && (ctx.kind !== IncrementalCacheKind.FETCH || this.requestHeaders['cache-control'] === 'no-cache')) {\n            return null;\n        }\n        cacheKey = this._getPathname(cacheKey, ctx.kind === IncrementalCacheKind.FETCH);\n        const cacheData = await ((_this_cacheHandler = this.cacheHandler) == null ? void 0 : _this_cacheHandler.get(cacheKey, ctx));\n        if (ctx.kind === IncrementalCacheKind.FETCH) {\n            var _cacheData_value1;\n            if (!cacheData) {\n                return null;\n            }\n            if (((_cacheData_value1 = cacheData.value) == null ? void 0 : _cacheData_value1.kind) !== CachedRouteKind.FETCH) {\n                var _cacheData_value2;\n                throw Object.defineProperty(new InvariantError(`Expected cached value for cache key ${JSON.stringify(cacheKey)} to be a \"FETCH\" kind, got ${JSON.stringify((_cacheData_value2 = cacheData.value) == null ? void 0 : _cacheData_value2.kind)} instead.`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E653\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            const workStore = workAsyncStorage.getStore();\n            const combinedTags = [\n                ...ctx.tags || [],\n                ...ctx.softTags || []\n            ];\n            // if a tag was revalidated we don't return stale data\n            if (combinedTags.some((tag)=>{\n                var _this_revalidatedTags, _workStore_pendingRevalidatedTags;\n                return ((_this_revalidatedTags = this.revalidatedTags) == null ? void 0 : _this_revalidatedTags.includes(tag)) || (workStore == null ? void 0 : (_workStore_pendingRevalidatedTags = workStore.pendingRevalidatedTags) == null ? void 0 : _workStore_pendingRevalidatedTags.includes(tag));\n            })) {\n                return null;\n            }\n            const revalidate = ctx.revalidate || cacheData.value.revalidate;\n            const age = (performance.timeOrigin + performance.now() - (cacheData.lastModified || 0)) / 1000;\n            const isStale = age > revalidate;\n            const data = cacheData.value.data;\n            return {\n                isStale,\n                value: {\n                    kind: CachedRouteKind.FETCH,\n                    data,\n                    revalidate\n                }\n            };\n        } else if ((cacheData == null ? void 0 : (_cacheData_value = cacheData.value) == null ? void 0 : _cacheData_value.kind) === CachedRouteKind.FETCH) {\n            throw Object.defineProperty(new InvariantError(`Expected cached value for cache key ${JSON.stringify(cacheKey)} not to be a ${JSON.stringify(ctx.kind)} kind, got \"FETCH\" instead.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E652\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        let entry = null;\n        const { isFallback } = ctx;\n        const cacheControl = this.cacheControls.get(toRoute(cacheKey));\n        let isStale;\n        let revalidateAfter;\n        if ((cacheData == null ? void 0 : cacheData.lastModified) === -1) {\n            isStale = -1;\n            revalidateAfter = -1 * CACHE_ONE_YEAR;\n        } else {\n            revalidateAfter = this.calculateRevalidate(cacheKey, (cacheData == null ? void 0 : cacheData.lastModified) || performance.timeOrigin + performance.now(), this.dev ?? false, ctx.isFallback);\n            isStale = revalidateAfter !== false && revalidateAfter < performance.timeOrigin + performance.now() ? true : undefined;\n        }\n        if (cacheData) {\n            entry = {\n                isStale,\n                cacheControl,\n                revalidateAfter,\n                value: cacheData.value,\n                isFallback\n            };\n        }\n        if (!cacheData && this.prerenderManifest.notFoundRoutes.includes(cacheKey)) {\n            // for the first hit after starting the server the cache\n            // may not have a way to save notFound: true so if\n            // the prerender-manifest marks this as notFound then we\n            // return that entry and trigger a cache set to give it a\n            // chance to update in-memory entries\n            entry = {\n                isStale,\n                value: null,\n                cacheControl,\n                revalidateAfter,\n                isFallback\n            };\n            this.set(cacheKey, entry.value, {\n                ...ctx,\n                cacheControl\n            });\n        }\n        return entry;\n    }\n    async set(pathname, data, ctx) {\n        // Even if we otherwise disable caching for testMode or if no fetchCache is\n        // configured we still always stash results in the resume data cache if one\n        // exists. This is because this is a transient in memory cache that\n        // populates caches ahead of a dynamic render in dev mode to allow the RSC\n        // debug info to have the right environment associated to it.\n        if ((data == null ? void 0 : data.kind) === CachedRouteKind.FETCH) {\n            const workUnitStore = workUnitAsyncStorage.getStore();\n            const prerenderResumeDataCache = workUnitStore ? getPrerenderResumeDataCache(workUnitStore) : null;\n            if (prerenderResumeDataCache) {\n                prerenderResumeDataCache.fetch.set(pathname, data);\n            }\n        }\n        if (this.disableForTestmode || this.dev && !ctx.fetchCache) return;\n        pathname = this._getPathname(pathname, ctx.fetchCache);\n        // FetchCache has upper limit of 2MB per-entry currently\n        const itemSize = JSON.stringify(data).length;\n        if (ctx.fetchCache && // we don't show this error/warning when a custom cache handler is being used\n        // as it might not have this limit\n        !this.hasCustomCacheHandler && itemSize > 2 * 1024 * 1024) {\n            if (this.dev) {\n                throw Object.defineProperty(new Error(`Failed to set Next.js data cache, items over 2MB can not be cached (${itemSize} bytes)`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E86\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            return;\n        }\n        try {\n            var _this_cacheHandler;\n            if (!ctx.fetchCache && ctx.cacheControl) {\n                this.cacheControls.set(toRoute(pathname), ctx.cacheControl);\n            }\n            await ((_this_cacheHandler = this.cacheHandler) == null ? void 0 : _this_cacheHandler.set(pathname, data, ctx));\n        } catch (error) {\n            console.warn('Failed to update prerender cache for', pathname, error);\n        }\n    }\n}\n\n//# sourceMappingURL=index.js.map","'use client'\n\nimport React, { useContext, type JSX } from 'react'\nimport { TemplateContext } from '../../shared/lib/app-router-context.shared-runtime'\n\nexport default function RenderFromTemplateContext(): JSX.Element {\n  const children = useContext(TemplateContext)\n  return <>{children}</>\n}\n","(()=>{\"use strict\";var e={491:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ContextAPI=void 0;const n=r(223);const a=r(172);const o=r(930);const i=\"context\";const c=new n.NoopContextManager;class ContextAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new ContextAPI}return this._instance}setGlobalContextManager(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}active(){return this._getContextManager().active()}with(e,t,r,...n){return this._getContextManager().with(e,t,r,...n)}bind(e,t){return this._getContextManager().bind(e,t)}_getContextManager(){return(0,a.getGlobal)(i)||c}disable(){this._getContextManager().disable();(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.ContextAPI=ContextAPI},930:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagAPI=void 0;const n=r(56);const a=r(912);const o=r(957);const i=r(172);const c=\"diag\";class DiagAPI{constructor(){function _logProxy(e){return function(...t){const r=(0,i.getGlobal)(\"diag\");if(!r)return;return r[e](...t)}}const e=this;const setLogger=(t,r={logLevel:o.DiagLogLevel.INFO})=>{var n,c,s;if(t===e){const t=new Error(\"Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation\");e.error((n=t.stack)!==null&&n!==void 0?n:t.message);return false}if(typeof r===\"number\"){r={logLevel:r}}const u=(0,i.getGlobal)(\"diag\");const l=(0,a.createLogLevelDiagLogger)((c=r.logLevel)!==null&&c!==void 0?c:o.DiagLogLevel.INFO,t);if(u&&!r.suppressOverrideMessage){const e=(s=(new Error).stack)!==null&&s!==void 0?s:\"<failed to generate stacktrace>\";u.warn(`Current logger will be overwritten from ${e}`);l.warn(`Current logger will overwrite one already registered from ${e}`)}return(0,i.registerGlobal)(\"diag\",l,e,true)};e.setLogger=setLogger;e.disable=()=>{(0,i.unregisterGlobal)(c,e)};e.createComponentLogger=e=>new n.DiagComponentLogger(e);e.verbose=_logProxy(\"verbose\");e.debug=_logProxy(\"debug\");e.info=_logProxy(\"info\");e.warn=_logProxy(\"warn\");e.error=_logProxy(\"error\")}static instance(){if(!this._instance){this._instance=new DiagAPI}return this._instance}}t.DiagAPI=DiagAPI},653:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.MetricsAPI=void 0;const n=r(660);const a=r(172);const o=r(930);const i=\"metrics\";class MetricsAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new MetricsAPI}return this._instance}setGlobalMeterProvider(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}getMeterProvider(){return(0,a.getGlobal)(i)||n.NOOP_METER_PROVIDER}getMeter(e,t,r){return this.getMeterProvider().getMeter(e,t,r)}disable(){(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.MetricsAPI=MetricsAPI},181:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.PropagationAPI=void 0;const n=r(172);const a=r(874);const o=r(194);const i=r(277);const c=r(369);const s=r(930);const u=\"propagation\";const l=new a.NoopTextMapPropagator;class PropagationAPI{constructor(){this.createBaggage=c.createBaggage;this.getBaggage=i.getBaggage;this.getActiveBaggage=i.getActiveBaggage;this.setBaggage=i.setBaggage;this.deleteBaggage=i.deleteBaggage}static getInstance(){if(!this._instance){this._instance=new PropagationAPI}return this._instance}setGlobalPropagator(e){return(0,n.registerGlobal)(u,e,s.DiagAPI.instance())}inject(e,t,r=o.defaultTextMapSetter){return this._getGlobalPropagator().inject(e,t,r)}extract(e,t,r=o.defaultTextMapGetter){return this._getGlobalPropagator().extract(e,t,r)}fields(){return this._getGlobalPropagator().fields()}disable(){(0,n.unregisterGlobal)(u,s.DiagAPI.instance())}_getGlobalPropagator(){return(0,n.getGlobal)(u)||l}}t.PropagationAPI=PropagationAPI},997:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceAPI=void 0;const n=r(172);const a=r(846);const o=r(139);const i=r(607);const c=r(930);const s=\"trace\";class TraceAPI{constructor(){this._proxyTracerProvider=new a.ProxyTracerProvider;this.wrapSpanContext=o.wrapSpanContext;this.isSpanContextValid=o.isSpanContextValid;this.deleteSpan=i.deleteSpan;this.getSpan=i.getSpan;this.getActiveSpan=i.getActiveSpan;this.getSpanContext=i.getSpanContext;this.setSpan=i.setSpan;this.setSpanContext=i.setSpanContext}static getInstance(){if(!this._instance){this._instance=new TraceAPI}return this._instance}setGlobalTracerProvider(e){const t=(0,n.registerGlobal)(s,this._proxyTracerProvider,c.DiagAPI.instance());if(t){this._proxyTracerProvider.setDelegate(e)}return t}getTracerProvider(){return(0,n.getGlobal)(s)||this._proxyTracerProvider}getTracer(e,t){return this.getTracerProvider().getTracer(e,t)}disable(){(0,n.unregisterGlobal)(s,c.DiagAPI.instance());this._proxyTracerProvider=new a.ProxyTracerProvider}}t.TraceAPI=TraceAPI},277:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.deleteBaggage=t.setBaggage=t.getActiveBaggage=t.getBaggage=void 0;const n=r(491);const a=r(780);const o=(0,a.createContextKey)(\"OpenTelemetry Baggage Key\");function getBaggage(e){return e.getValue(o)||undefined}t.getBaggage=getBaggage;function getActiveBaggage(){return getBaggage(n.ContextAPI.getInstance().active())}t.getActiveBaggage=getActiveBaggage;function setBaggage(e,t){return e.setValue(o,t)}t.setBaggage=setBaggage;function deleteBaggage(e){return e.deleteValue(o)}t.deleteBaggage=deleteBaggage},993:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.BaggageImpl=void 0;class BaggageImpl{constructor(e){this._entries=e?new Map(e):new Map}getEntry(e){const t=this._entries.get(e);if(!t){return undefined}return Object.assign({},t)}getAllEntries(){return Array.from(this._entries.entries()).map((([e,t])=>[e,t]))}setEntry(e,t){const r=new BaggageImpl(this._entries);r._entries.set(e,t);return r}removeEntry(e){const t=new BaggageImpl(this._entries);t._entries.delete(e);return t}removeEntries(...e){const t=new BaggageImpl(this._entries);for(const r of e){t._entries.delete(r)}return t}clear(){return new BaggageImpl}}t.BaggageImpl=BaggageImpl},830:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataSymbol=void 0;t.baggageEntryMetadataSymbol=Symbol(\"BaggageEntryMetadata\")},369:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataFromString=t.createBaggage=void 0;const n=r(930);const a=r(993);const o=r(830);const i=n.DiagAPI.instance();function createBaggage(e={}){return new a.BaggageImpl(new Map(Object.entries(e)))}t.createBaggage=createBaggage;function baggageEntryMetadataFromString(e){if(typeof e!==\"string\"){i.error(`Cannot create baggage metadata from unknown type: ${typeof e}`);e=\"\"}return{__TYPE__:o.baggageEntryMetadataSymbol,toString(){return e}}}t.baggageEntryMetadataFromString=baggageEntryMetadataFromString},67:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.context=void 0;const n=r(491);t.context=n.ContextAPI.getInstance()},223:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopContextManager=void 0;const n=r(780);class NoopContextManager{active(){return n.ROOT_CONTEXT}with(e,t,r,...n){return t.call(r,...n)}bind(e,t){return t}enable(){return this}disable(){return this}}t.NoopContextManager=NoopContextManager},780:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ROOT_CONTEXT=t.createContextKey=void 0;function createContextKey(e){return Symbol.for(e)}t.createContextKey=createContextKey;class BaseContext{constructor(e){const t=this;t._currentContext=e?new Map(e):new Map;t.getValue=e=>t._currentContext.get(e);t.setValue=(e,r)=>{const n=new BaseContext(t._currentContext);n._currentContext.set(e,r);return n};t.deleteValue=e=>{const r=new BaseContext(t._currentContext);r._currentContext.delete(e);return r}}}t.ROOT_CONTEXT=new BaseContext},506:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.diag=void 0;const n=r(930);t.diag=n.DiagAPI.instance()},56:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagComponentLogger=void 0;const n=r(172);class DiagComponentLogger{constructor(e){this._namespace=e.namespace||\"DiagComponentLogger\"}debug(...e){return logProxy(\"debug\",this._namespace,e)}error(...e){return logProxy(\"error\",this._namespace,e)}info(...e){return logProxy(\"info\",this._namespace,e)}warn(...e){return logProxy(\"warn\",this._namespace,e)}verbose(...e){return logProxy(\"verbose\",this._namespace,e)}}t.DiagComponentLogger=DiagComponentLogger;function logProxy(e,t,r){const a=(0,n.getGlobal)(\"diag\");if(!a){return}r.unshift(t);return a[e](...r)}},972:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagConsoleLogger=void 0;const r=[{n:\"error\",c:\"error\"},{n:\"warn\",c:\"warn\"},{n:\"info\",c:\"info\"},{n:\"debug\",c:\"debug\"},{n:\"verbose\",c:\"trace\"}];class DiagConsoleLogger{constructor(){function _consoleFunc(e){return function(...t){if(console){let r=console[e];if(typeof r!==\"function\"){r=console.log}if(typeof r===\"function\"){return r.apply(console,t)}}}}for(let e=0;e<r.length;e++){this[r[e].n]=_consoleFunc(r[e].c)}}}t.DiagConsoleLogger=DiagConsoleLogger},912:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createLogLevelDiagLogger=void 0;const n=r(957);function createLogLevelDiagLogger(e,t){if(e<n.DiagLogLevel.NONE){e=n.DiagLogLevel.NONE}else if(e>n.DiagLogLevel.ALL){e=n.DiagLogLevel.ALL}t=t||{};function _filterFunc(r,n){const a=t[r];if(typeof a===\"function\"&&e>=n){return a.bind(t)}return function(){}}return{error:_filterFunc(\"error\",n.DiagLogLevel.ERROR),warn:_filterFunc(\"warn\",n.DiagLogLevel.WARN),info:_filterFunc(\"info\",n.DiagLogLevel.INFO),debug:_filterFunc(\"debug\",n.DiagLogLevel.DEBUG),verbose:_filterFunc(\"verbose\",n.DiagLogLevel.VERBOSE)}}t.createLogLevelDiagLogger=createLogLevelDiagLogger},957:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagLogLevel=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"ERROR\"]=30]=\"ERROR\";e[e[\"WARN\"]=50]=\"WARN\";e[e[\"INFO\"]=60]=\"INFO\";e[e[\"DEBUG\"]=70]=\"DEBUG\";e[e[\"VERBOSE\"]=80]=\"VERBOSE\";e[e[\"ALL\"]=9999]=\"ALL\"})(r=t.DiagLogLevel||(t.DiagLogLevel={}))},172:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.unregisterGlobal=t.getGlobal=t.registerGlobal=void 0;const n=r(200);const a=r(521);const o=r(130);const i=a.VERSION.split(\".\")[0];const c=Symbol.for(`opentelemetry.js.api.${i}`);const s=n._globalThis;function registerGlobal(e,t,r,n=false){var o;const i=s[c]=(o=s[c])!==null&&o!==void 0?o:{version:a.VERSION};if(!n&&i[e]){const t=new Error(`@opentelemetry/api: Attempted duplicate registration of API: ${e}`);r.error(t.stack||t.message);return false}if(i.version!==a.VERSION){const t=new Error(`@opentelemetry/api: Registration of version v${i.version} for ${e} does not match previously registered API v${a.VERSION}`);r.error(t.stack||t.message);return false}i[e]=t;r.debug(`@opentelemetry/api: Registered a global for ${e} v${a.VERSION}.`);return true}t.registerGlobal=registerGlobal;function getGlobal(e){var t,r;const n=(t=s[c])===null||t===void 0?void 0:t.version;if(!n||!(0,o.isCompatible)(n)){return}return(r=s[c])===null||r===void 0?void 0:r[e]}t.getGlobal=getGlobal;function unregisterGlobal(e,t){t.debug(`@opentelemetry/api: Unregistering a global for ${e} v${a.VERSION}.`);const r=s[c];if(r){delete r[e]}}t.unregisterGlobal=unregisterGlobal},130:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.isCompatible=t._makeCompatibilityCheck=void 0;const n=r(521);const a=/^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;function _makeCompatibilityCheck(e){const t=new Set([e]);const r=new Set;const n=e.match(a);if(!n){return()=>false}const o={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(o.prerelease!=null){return function isExactmatch(t){return t===e}}function _reject(e){r.add(e);return false}function _accept(e){t.add(e);return true}return function isCompatible(e){if(t.has(e)){return true}if(r.has(e)){return false}const n=e.match(a);if(!n){return _reject(e)}const i={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(i.prerelease!=null){return _reject(e)}if(o.major!==i.major){return _reject(e)}if(o.major===0){if(o.minor===i.minor&&o.patch<=i.patch){return _accept(e)}return _reject(e)}if(o.minor<=i.minor){return _accept(e)}return _reject(e)}}t._makeCompatibilityCheck=_makeCompatibilityCheck;t.isCompatible=_makeCompatibilityCheck(n.VERSION)},886:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.metrics=void 0;const n=r(653);t.metrics=n.MetricsAPI.getInstance()},901:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ValueType=void 0;var r;(function(e){e[e[\"INT\"]=0]=\"INT\";e[e[\"DOUBLE\"]=1]=\"DOUBLE\"})(r=t.ValueType||(t.ValueType={}))},102:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createNoopMeter=t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=t.NOOP_OBSERVABLE_GAUGE_METRIC=t.NOOP_OBSERVABLE_COUNTER_METRIC=t.NOOP_UP_DOWN_COUNTER_METRIC=t.NOOP_HISTOGRAM_METRIC=t.NOOP_COUNTER_METRIC=t.NOOP_METER=t.NoopObservableUpDownCounterMetric=t.NoopObservableGaugeMetric=t.NoopObservableCounterMetric=t.NoopObservableMetric=t.NoopHistogramMetric=t.NoopUpDownCounterMetric=t.NoopCounterMetric=t.NoopMetric=t.NoopMeter=void 0;class NoopMeter{constructor(){}createHistogram(e,r){return t.NOOP_HISTOGRAM_METRIC}createCounter(e,r){return t.NOOP_COUNTER_METRIC}createUpDownCounter(e,r){return t.NOOP_UP_DOWN_COUNTER_METRIC}createObservableGauge(e,r){return t.NOOP_OBSERVABLE_GAUGE_METRIC}createObservableCounter(e,r){return t.NOOP_OBSERVABLE_COUNTER_METRIC}createObservableUpDownCounter(e,r){return t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC}addBatchObservableCallback(e,t){}removeBatchObservableCallback(e){}}t.NoopMeter=NoopMeter;class NoopMetric{}t.NoopMetric=NoopMetric;class NoopCounterMetric extends NoopMetric{add(e,t){}}t.NoopCounterMetric=NoopCounterMetric;class NoopUpDownCounterMetric extends NoopMetric{add(e,t){}}t.NoopUpDownCounterMetric=NoopUpDownCounterMetric;class NoopHistogramMetric extends NoopMetric{record(e,t){}}t.NoopHistogramMetric=NoopHistogramMetric;class NoopObservableMetric{addCallback(e){}removeCallback(e){}}t.NoopObservableMetric=NoopObservableMetric;class NoopObservableCounterMetric extends NoopObservableMetric{}t.NoopObservableCounterMetric=NoopObservableCounterMetric;class NoopObservableGaugeMetric extends NoopObservableMetric{}t.NoopObservableGaugeMetric=NoopObservableGaugeMetric;class NoopObservableUpDownCounterMetric extends NoopObservableMetric{}t.NoopObservableUpDownCounterMetric=NoopObservableUpDownCounterMetric;t.NOOP_METER=new NoopMeter;t.NOOP_COUNTER_METRIC=new NoopCounterMetric;t.NOOP_HISTOGRAM_METRIC=new NoopHistogramMetric;t.NOOP_UP_DOWN_COUNTER_METRIC=new NoopUpDownCounterMetric;t.NOOP_OBSERVABLE_COUNTER_METRIC=new NoopObservableCounterMetric;t.NOOP_OBSERVABLE_GAUGE_METRIC=new NoopObservableGaugeMetric;t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=new NoopObservableUpDownCounterMetric;function createNoopMeter(){return t.NOOP_METER}t.createNoopMeter=createNoopMeter},660:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NOOP_METER_PROVIDER=t.NoopMeterProvider=void 0;const n=r(102);class NoopMeterProvider{getMeter(e,t,r){return n.NOOP_METER}}t.NoopMeterProvider=NoopMeterProvider;t.NOOP_METER_PROVIDER=new NoopMeterProvider},200:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(46),t)},651:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t._globalThis=void 0;t._globalThis=typeof globalThis===\"object\"?globalThis:global},46:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(651),t)},939:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.propagation=void 0;const n=r(181);t.propagation=n.PropagationAPI.getInstance()},874:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTextMapPropagator=void 0;class NoopTextMapPropagator{inject(e,t){}extract(e,t){return e}fields(){return[]}}t.NoopTextMapPropagator=NoopTextMapPropagator},194:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.defaultTextMapSetter=t.defaultTextMapGetter=void 0;t.defaultTextMapGetter={get(e,t){if(e==null){return undefined}return e[t]},keys(e){if(e==null){return[]}return Object.keys(e)}};t.defaultTextMapSetter={set(e,t,r){if(e==null){return}e[t]=r}}},845:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.trace=void 0;const n=r(997);t.trace=n.TraceAPI.getInstance()},403:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NonRecordingSpan=void 0;const n=r(476);class NonRecordingSpan{constructor(e=n.INVALID_SPAN_CONTEXT){this._spanContext=e}spanContext(){return this._spanContext}setAttribute(e,t){return this}setAttributes(e){return this}addEvent(e,t){return this}setStatus(e){return this}updateName(e){return this}end(e){}isRecording(){return false}recordException(e,t){}}t.NonRecordingSpan=NonRecordingSpan},614:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracer=void 0;const n=r(491);const a=r(607);const o=r(403);const i=r(139);const c=n.ContextAPI.getInstance();class NoopTracer{startSpan(e,t,r=c.active()){const n=Boolean(t===null||t===void 0?void 0:t.root);if(n){return new o.NonRecordingSpan}const s=r&&(0,a.getSpanContext)(r);if(isSpanContext(s)&&(0,i.isSpanContextValid)(s)){return new o.NonRecordingSpan(s)}else{return new o.NonRecordingSpan}}startActiveSpan(e,t,r,n){let o;let i;let s;if(arguments.length<2){return}else if(arguments.length===2){s=t}else if(arguments.length===3){o=t;s=r}else{o=t;i=r;s=n}const u=i!==null&&i!==void 0?i:c.active();const l=this.startSpan(e,o,u);const g=(0,a.setSpan)(u,l);return c.with(g,s,undefined,l)}}t.NoopTracer=NoopTracer;function isSpanContext(e){return typeof e===\"object\"&&typeof e[\"spanId\"]===\"string\"&&typeof e[\"traceId\"]===\"string\"&&typeof e[\"traceFlags\"]===\"number\"}},124:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracerProvider=void 0;const n=r(614);class NoopTracerProvider{getTracer(e,t,r){return new n.NoopTracer}}t.NoopTracerProvider=NoopTracerProvider},125:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracer=void 0;const n=r(614);const a=new n.NoopTracer;class ProxyTracer{constructor(e,t,r,n){this._provider=e;this.name=t;this.version=r;this.options=n}startSpan(e,t,r){return this._getTracer().startSpan(e,t,r)}startActiveSpan(e,t,r,n){const a=this._getTracer();return Reflect.apply(a.startActiveSpan,a,arguments)}_getTracer(){if(this._delegate){return this._delegate}const e=this._provider.getDelegateTracer(this.name,this.version,this.options);if(!e){return a}this._delegate=e;return this._delegate}}t.ProxyTracer=ProxyTracer},846:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracerProvider=void 0;const n=r(125);const a=r(124);const o=new a.NoopTracerProvider;class ProxyTracerProvider{getTracer(e,t,r){var a;return(a=this.getDelegateTracer(e,t,r))!==null&&a!==void 0?a:new n.ProxyTracer(this,e,t,r)}getDelegate(){var e;return(e=this._delegate)!==null&&e!==void 0?e:o}setDelegate(e){this._delegate=e}getDelegateTracer(e,t,r){var n;return(n=this._delegate)===null||n===void 0?void 0:n.getTracer(e,t,r)}}t.ProxyTracerProvider=ProxyTracerProvider},996:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SamplingDecision=void 0;var r;(function(e){e[e[\"NOT_RECORD\"]=0]=\"NOT_RECORD\";e[e[\"RECORD\"]=1]=\"RECORD\";e[e[\"RECORD_AND_SAMPLED\"]=2]=\"RECORD_AND_SAMPLED\"})(r=t.SamplingDecision||(t.SamplingDecision={}))},607:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.getSpanContext=t.setSpanContext=t.deleteSpan=t.setSpan=t.getActiveSpan=t.getSpan=void 0;const n=r(780);const a=r(403);const o=r(491);const i=(0,n.createContextKey)(\"OpenTelemetry Context Key SPAN\");function getSpan(e){return e.getValue(i)||undefined}t.getSpan=getSpan;function getActiveSpan(){return getSpan(o.ContextAPI.getInstance().active())}t.getActiveSpan=getActiveSpan;function setSpan(e,t){return e.setValue(i,t)}t.setSpan=setSpan;function deleteSpan(e){return e.deleteValue(i)}t.deleteSpan=deleteSpan;function setSpanContext(e,t){return setSpan(e,new a.NonRecordingSpan(t))}t.setSpanContext=setSpanContext;function getSpanContext(e){var t;return(t=getSpan(e))===null||t===void 0?void 0:t.spanContext()}t.getSpanContext=getSpanContext},325:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceStateImpl=void 0;const n=r(564);const a=32;const o=512;const i=\",\";const c=\"=\";class TraceStateImpl{constructor(e){this._internalState=new Map;if(e)this._parse(e)}set(e,t){const r=this._clone();if(r._internalState.has(e)){r._internalState.delete(e)}r._internalState.set(e,t);return r}unset(e){const t=this._clone();t._internalState.delete(e);return t}get(e){return this._internalState.get(e)}serialize(){return this._keys().reduce(((e,t)=>{e.push(t+c+this.get(t));return e}),[]).join(i)}_parse(e){if(e.length>o)return;this._internalState=e.split(i).reverse().reduce(((e,t)=>{const r=t.trim();const a=r.indexOf(c);if(a!==-1){const o=r.slice(0,a);const i=r.slice(a+1,t.length);if((0,n.validateKey)(o)&&(0,n.validateValue)(i)){e.set(o,i)}else{}}return e}),new Map);if(this._internalState.size>a){this._internalState=new Map(Array.from(this._internalState.entries()).reverse().slice(0,a))}}_keys(){return Array.from(this._internalState.keys()).reverse()}_clone(){const e=new TraceStateImpl;e._internalState=new Map(this._internalState);return e}}t.TraceStateImpl=TraceStateImpl},564:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.validateValue=t.validateKey=void 0;const r=\"[_0-9a-z-*/]\";const n=`[a-z]${r}{0,255}`;const a=`[a-z0-9]${r}{0,240}@[a-z]${r}{0,13}`;const o=new RegExp(`^(?:${n}|${a})$`);const i=/^[ -~]{0,255}[!-~]$/;const c=/,|=/;function validateKey(e){return o.test(e)}t.validateKey=validateKey;function validateValue(e){return i.test(e)&&!c.test(e)}t.validateValue=validateValue},98:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createTraceState=void 0;const n=r(325);function createTraceState(e){return new n.TraceStateImpl(e)}t.createTraceState=createTraceState},476:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.INVALID_SPAN_CONTEXT=t.INVALID_TRACEID=t.INVALID_SPANID=void 0;const n=r(475);t.INVALID_SPANID=\"0000000000000000\";t.INVALID_TRACEID=\"00000000000000000000000000000000\";t.INVALID_SPAN_CONTEXT={traceId:t.INVALID_TRACEID,spanId:t.INVALID_SPANID,traceFlags:n.TraceFlags.NONE}},357:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanKind=void 0;var r;(function(e){e[e[\"INTERNAL\"]=0]=\"INTERNAL\";e[e[\"SERVER\"]=1]=\"SERVER\";e[e[\"CLIENT\"]=2]=\"CLIENT\";e[e[\"PRODUCER\"]=3]=\"PRODUCER\";e[e[\"CONSUMER\"]=4]=\"CONSUMER\"})(r=t.SpanKind||(t.SpanKind={}))},139:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.wrapSpanContext=t.isSpanContextValid=t.isValidSpanId=t.isValidTraceId=void 0;const n=r(476);const a=r(403);const o=/^([0-9a-f]{32})$/i;const i=/^[0-9a-f]{16}$/i;function isValidTraceId(e){return o.test(e)&&e!==n.INVALID_TRACEID}t.isValidTraceId=isValidTraceId;function isValidSpanId(e){return i.test(e)&&e!==n.INVALID_SPANID}t.isValidSpanId=isValidSpanId;function isSpanContextValid(e){return isValidTraceId(e.traceId)&&isValidSpanId(e.spanId)}t.isSpanContextValid=isSpanContextValid;function wrapSpanContext(e){return new a.NonRecordingSpan(e)}t.wrapSpanContext=wrapSpanContext},847:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanStatusCode=void 0;var r;(function(e){e[e[\"UNSET\"]=0]=\"UNSET\";e[e[\"OK\"]=1]=\"OK\";e[e[\"ERROR\"]=2]=\"ERROR\"})(r=t.SpanStatusCode||(t.SpanStatusCode={}))},475:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceFlags=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"SAMPLED\"]=1]=\"SAMPLED\"})(r=t.TraceFlags||(t.TraceFlags={}))},521:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.VERSION=void 0;t.VERSION=\"1.6.0\"}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var a=t[r]={exports:{}};var o=true;try{e[r].call(a.exports,a,a.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return a.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r={};(()=>{var e=r;Object.defineProperty(e,\"__esModule\",{value:true});e.trace=e.propagation=e.metrics=e.diag=e.context=e.INVALID_SPAN_CONTEXT=e.INVALID_TRACEID=e.INVALID_SPANID=e.isValidSpanId=e.isValidTraceId=e.isSpanContextValid=e.createTraceState=e.TraceFlags=e.SpanStatusCode=e.SpanKind=e.SamplingDecision=e.ProxyTracerProvider=e.ProxyTracer=e.defaultTextMapSetter=e.defaultTextMapGetter=e.ValueType=e.createNoopMeter=e.DiagLogLevel=e.DiagConsoleLogger=e.ROOT_CONTEXT=e.createContextKey=e.baggageEntryMetadataFromString=void 0;var t=__nccwpck_require__(369);Object.defineProperty(e,\"baggageEntryMetadataFromString\",{enumerable:true,get:function(){return t.baggageEntryMetadataFromString}});var n=__nccwpck_require__(780);Object.defineProperty(e,\"createContextKey\",{enumerable:true,get:function(){return n.createContextKey}});Object.defineProperty(e,\"ROOT_CONTEXT\",{enumerable:true,get:function(){return n.ROOT_CONTEXT}});var a=__nccwpck_require__(972);Object.defineProperty(e,\"DiagConsoleLogger\",{enumerable:true,get:function(){return a.DiagConsoleLogger}});var o=__nccwpck_require__(957);Object.defineProperty(e,\"DiagLogLevel\",{enumerable:true,get:function(){return o.DiagLogLevel}});var i=__nccwpck_require__(102);Object.defineProperty(e,\"createNoopMeter\",{enumerable:true,get:function(){return i.createNoopMeter}});var c=__nccwpck_require__(901);Object.defineProperty(e,\"ValueType\",{enumerable:true,get:function(){return c.ValueType}});var s=__nccwpck_require__(194);Object.defineProperty(e,\"defaultTextMapGetter\",{enumerable:true,get:function(){return s.defaultTextMapGetter}});Object.defineProperty(e,\"defaultTextMapSetter\",{enumerable:true,get:function(){return s.defaultTextMapSetter}});var u=__nccwpck_require__(125);Object.defineProperty(e,\"ProxyTracer\",{enumerable:true,get:function(){return u.ProxyTracer}});var l=__nccwpck_require__(846);Object.defineProperty(e,\"ProxyTracerProvider\",{enumerable:true,get:function(){return l.ProxyTracerProvider}});var g=__nccwpck_require__(996);Object.defineProperty(e,\"SamplingDecision\",{enumerable:true,get:function(){return g.SamplingDecision}});var p=__nccwpck_require__(357);Object.defineProperty(e,\"SpanKind\",{enumerable:true,get:function(){return p.SpanKind}});var d=__nccwpck_require__(847);Object.defineProperty(e,\"SpanStatusCode\",{enumerable:true,get:function(){return d.SpanStatusCode}});var _=__nccwpck_require__(475);Object.defineProperty(e,\"TraceFlags\",{enumerable:true,get:function(){return _.TraceFlags}});var f=__nccwpck_require__(98);Object.defineProperty(e,\"createTraceState\",{enumerable:true,get:function(){return f.createTraceState}});var b=__nccwpck_require__(139);Object.defineProperty(e,\"isSpanContextValid\",{enumerable:true,get:function(){return b.isSpanContextValid}});Object.defineProperty(e,\"isValidTraceId\",{enumerable:true,get:function(){return b.isValidTraceId}});Object.defineProperty(e,\"isValidSpanId\",{enumerable:true,get:function(){return b.isValidSpanId}});var v=__nccwpck_require__(476);Object.defineProperty(e,\"INVALID_SPANID\",{enumerable:true,get:function(){return v.INVALID_SPANID}});Object.defineProperty(e,\"INVALID_TRACEID\",{enumerable:true,get:function(){return v.INVALID_TRACEID}});Object.defineProperty(e,\"INVALID_SPAN_CONTEXT\",{enumerable:true,get:function(){return v.INVALID_SPAN_CONTEXT}});const O=__nccwpck_require__(67);Object.defineProperty(e,\"context\",{enumerable:true,get:function(){return O.context}});const P=__nccwpck_require__(506);Object.defineProperty(e,\"diag\",{enumerable:true,get:function(){return P.diag}});const N=__nccwpck_require__(886);Object.defineProperty(e,\"metrics\",{enumerable:true,get:function(){return N.metrics}});const S=__nccwpck_require__(939);Object.defineProperty(e,\"propagation\",{enumerable:true,get:function(){return S.propagation}});const C=__nccwpck_require__(845);Object.defineProperty(e,\"trace\",{enumerable:true,get:function(){return C.trace}});e[\"default\"]={context:O.context,diag:P.diag,metrics:N.metrics,propagation:S.propagation,trace:C.trace}})();module.exports=r})();","import { StaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { afterTaskAsyncStorage } from '../app-render/after-task-async-storage.external';\nexport function throwWithStaticGenerationBailoutError(route, expression) {\n    throw Object.defineProperty(new StaticGenBailoutError(`Route ${route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n        value: \"E576\",\n        enumerable: false,\n        configurable: true\n    });\n}\nexport function throwWithStaticGenerationBailoutErrorWithDynamicError(route, expression) {\n    throw Object.defineProperty(new StaticGenBailoutError(`Route ${route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n        value: \"E543\",\n        enumerable: false,\n        configurable: true\n    });\n}\nexport function throwForSearchParamsAccessInUseCache(workStore) {\n    const error = Object.defineProperty(new Error(`Route ${workStore.route} used \"searchParams\" inside \"use cache\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"searchParams\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`), \"__NEXT_ERROR_CODE\", {\n        value: \"E634\",\n        enumerable: false,\n        configurable: true\n    });\n    workStore.invalidUsageError ??= error;\n    throw error;\n}\nexport function isRequestAPICallableInsideAfter() {\n    const afterTaskStore = afterTaskAsyncStorage.getStore();\n    return (afterTaskStore == null ? void 0 : afterTaskStore.rootTaskSpawnPhase) === 'action';\n}\n\n//# sourceMappingURL=utils.js.map","import { ReflectAdapter } from '../web/spec-extension/adapters/reflect';\nimport { abortAndThrowOnSynchronousRequestDataAccess, throwToInterruptStaticGeneration, postponeWithTracking, trackDynamicDataInDynamicRender, annotateDynamicAccess, trackSynchronousRequestDataAccessInDev } from '../app-render/dynamic-rendering';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger';\nimport { describeStringPropertyAccess, describeHasCheckingStringProperty, wellKnownProperties } from '../../shared/lib/utils/reflect-utils';\nimport { throwWithStaticGenerationBailoutErrorWithDynamicError, throwForSearchParamsAccessInUseCache } from './utils';\nimport { scheduleImmediate } from '../../lib/scheduler';\nexport function createSearchParamsFromClient(underlyingSearchParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderSearchParams(workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderSearchParams(underlyingSearchParams, workStore);\n}\n// generateMetadata always runs in RSC context so it is equivalent to a Server Page Component\nexport const createServerSearchParamsForMetadata = createServerSearchParamsForServerPage;\nexport function createServerSearchParamsForServerPage(underlyingSearchParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createPrerenderSearchParams(workStore, workUnitStore);\n            default:\n        }\n    }\n    return createRenderSearchParams(underlyingSearchParams, workStore);\n}\nexport function createPrerenderSearchParamsForClientPage(workStore) {\n    if (workStore.forceStatic) {\n        // When using forceStatic we override all other logic and always just return an empty\n        // dictionary object.\n        return Promise.resolve({});\n    }\n    const prerenderStore = workUnitAsyncStorage.getStore();\n    if (prerenderStore && prerenderStore.type === 'prerender') {\n        // dynamicIO Prerender\n        // We're prerendering in a mode that aborts (dynamicIO) and should stall\n        // the promise to ensure the RSC side is considered dynamic\n        return makeHangingPromise(prerenderStore.renderSignal, '`searchParams`');\n    }\n    // We're prerendering in a mode that does not aborts. We resolve the promise without\n    // any tracking because we're just transporting a value from server to client where the tracking\n    // will be applied.\n    return Promise.resolve({});\n}\nfunction createPrerenderSearchParams(workStore, prerenderStore) {\n    if (workStore.forceStatic) {\n        // When using forceStatic we override all other logic and always just return an empty\n        // dictionary object.\n        return Promise.resolve({});\n    }\n    if (prerenderStore.type === 'prerender') {\n        // We are in a dynamicIO (PPR or otherwise) prerender\n        return makeAbortingExoticSearchParams(workStore.route, prerenderStore);\n    }\n    // The remaining cases are prerender-ppr and prerender-legacy\n    // We are in a legacy static generation and need to interrupt the prerender\n    // when search params are accessed.\n    return makeErroringExoticSearchParams(workStore, prerenderStore);\n}\nfunction createRenderSearchParams(underlyingSearchParams, workStore) {\n    if (workStore.forceStatic) {\n        // When using forceStatic we override all other logic and always just return an empty\n        // dictionary object.\n        return Promise.resolve({});\n    } else {\n        if (process.env.NODE_ENV === 'development' && !workStore.isPrefetchRequest) {\n            return makeDynamicallyTrackedExoticSearchParamsWithDevWarnings(underlyingSearchParams, workStore);\n        } else {\n            return makeUntrackedExoticSearchParams(underlyingSearchParams, workStore);\n        }\n    }\n}\nconst CachedSearchParams = new WeakMap();\nconst CachedSearchParamsForUseCache = new WeakMap();\nfunction makeAbortingExoticSearchParams(route, prerenderStore) {\n    const cachedSearchParams = CachedSearchParams.get(prerenderStore);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const promise = makeHangingPromise(prerenderStore.renderSignal, '`searchParams`');\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (Object.hasOwn(promise, prop)) {\n                // The promise has this property directly. we must return it.\n                // We know it isn't a dynamic access because it can only be something\n                // that was previously written to the promise and thus not an underlying searchParam value\n                return ReflectAdapter.get(target, prop, receiver);\n            }\n            switch(prop){\n                case 'then':\n                    {\n                        const expression = '`await searchParams`, `searchParams.then`, or similar';\n                        annotateDynamicAccess(expression, prerenderStore);\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n                case 'status':\n                    {\n                        const expression = '`use(searchParams)`, `searchParams.status`, or similar';\n                        annotateDynamicAccess(expression, prerenderStore);\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n                default:\n                    {\n                        if (typeof prop === 'string' && !wellKnownProperties.has(prop)) {\n                            const expression = describeStringPropertyAccess('searchParams', prop);\n                            const error = createSearchAccessError(route, expression);\n                            abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n                        }\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n            }\n        },\n        has (target, prop) {\n            // We don't expect key checking to be used except for testing the existence of\n            // searchParams so we make all has tests trigger dynamic. this means that `promise.then`\n            // can resolve to the then function on the Promise prototype but 'then' in promise will assume\n            // you are testing whether the searchParams has a 'then' property.\n            if (typeof prop === 'string') {\n                const expression = describeHasCheckingStringProperty('searchParams', prop);\n                const error = createSearchAccessError(route, expression);\n                abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n            }\n            return ReflectAdapter.has(target, prop);\n        },\n        ownKeys () {\n            const expression = '`{...searchParams}`, `Object.keys(searchParams)`, or similar';\n            const error = createSearchAccessError(route, expression);\n            abortAndThrowOnSynchronousRequestDataAccess(route, expression, error, prerenderStore);\n        }\n    });\n    CachedSearchParams.set(prerenderStore, proxiedPromise);\n    return proxiedPromise;\n}\nfunction makeErroringExoticSearchParams(workStore, prerenderStore) {\n    const cachedSearchParams = CachedSearchParams.get(workStore);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const underlyingSearchParams = {};\n    // For search params we don't construct a ReactPromise because we want to interrupt\n    // rendering on any property access that was not set from outside and so we only want\n    // to have properties like value and status if React sets them.\n    const promise = Promise.resolve(underlyingSearchParams);\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (Object.hasOwn(promise, prop)) {\n                // The promise has this property directly. we must return it.\n                // We know it isn't a dynamic access because it can only be something\n                // that was previously written to the promise and thus not an underlying searchParam value\n                return ReflectAdapter.get(target, prop, receiver);\n            }\n            switch(prop){\n                case 'then':\n                    {\n                        const expression = '`await searchParams`, `searchParams.then`, or similar';\n                        if (workStore.dynamicShouldError) {\n                            throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                        } else if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no dynamicIO)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                        return;\n                    }\n                case 'status':\n                    {\n                        const expression = '`use(searchParams)`, `searchParams.status`, or similar';\n                        if (workStore.dynamicShouldError) {\n                            throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                        } else if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no dynamicIO)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                        return;\n                    }\n                default:\n                    {\n                        if (typeof prop === 'string' && !wellKnownProperties.has(prop)) {\n                            const expression = describeStringPropertyAccess('searchParams', prop);\n                            if (workStore.dynamicShouldError) {\n                                throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                            } else if (prerenderStore.type === 'prerender-ppr') {\n                                // PPR Prerender (no dynamicIO)\n                                postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                            } else {\n                                // Legacy Prerender\n                                throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                            }\n                        }\n                        return ReflectAdapter.get(target, prop, receiver);\n                    }\n            }\n        },\n        has (target, prop) {\n            // We don't expect key checking to be used except for testing the existence of\n            // searchParams so we make all has tests trigger dynamic. this means that `promise.then`\n            // can resolve to the then function on the Promise prototype but 'then' in promise will assume\n            // you are testing whether the searchParams has a 'then' property.\n            if (typeof prop === 'string') {\n                const expression = describeHasCheckingStringProperty('searchParams', prop);\n                if (workStore.dynamicShouldError) {\n                    throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n                } else if (prerenderStore.type === 'prerender-ppr') {\n                    // PPR Prerender (no dynamicIO)\n                    postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                } else {\n                    // Legacy Prerender\n                    throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                }\n                return false;\n            }\n            return ReflectAdapter.has(target, prop);\n        },\n        ownKeys () {\n            const expression = '`{...searchParams}`, `Object.keys(searchParams)`, or similar';\n            if (workStore.dynamicShouldError) {\n                throwWithStaticGenerationBailoutErrorWithDynamicError(workStore.route, expression);\n            } else if (prerenderStore.type === 'prerender-ppr') {\n                // PPR Prerender (no dynamicIO)\n                postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n            } else {\n                // Legacy Prerender\n                throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n            }\n        }\n    });\n    CachedSearchParams.set(workStore, proxiedPromise);\n    return proxiedPromise;\n}\n/**\n * This is a variation of `makeErroringExoticSearchParams` that always throws an\n * error on access, because accessing searchParams inside of `\"use cache\"` is\n * not allowed.\n */ export function makeErroringExoticSearchParamsForUseCache(workStore) {\n    const cachedSearchParams = CachedSearchParamsForUseCache.get(workStore);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const promise = Promise.resolve({});\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (Object.hasOwn(promise, prop)) {\n                // The promise has this property directly. we must return it. We know it\n                // isn't a dynamic access because it can only be something that was\n                // previously written to the promise and thus not an underlying\n                // searchParam value\n                return ReflectAdapter.get(target, prop, receiver);\n            }\n            if (typeof prop === 'string' && (prop === 'then' || !wellKnownProperties.has(prop))) {\n                throwForSearchParamsAccessInUseCache(workStore);\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        has (target, prop) {\n            // We don't expect key checking to be used except for testing the existence of\n            // searchParams so we make all has tests throw an error. this means that `promise.then`\n            // can resolve to the then function on the Promise prototype but 'then' in promise will assume\n            // you are testing whether the searchParams has a 'then' property.\n            if (typeof prop === 'string' && (prop === 'then' || !wellKnownProperties.has(prop))) {\n                throwForSearchParamsAccessInUseCache(workStore);\n            }\n            return ReflectAdapter.has(target, prop);\n        },\n        ownKeys () {\n            throwForSearchParamsAccessInUseCache(workStore);\n        }\n    });\n    CachedSearchParamsForUseCache.set(workStore, proxiedPromise);\n    return proxiedPromise;\n}\nfunction makeUntrackedExoticSearchParams(underlyingSearchParams, store) {\n    const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    // We don't use makeResolvedReactPromise here because searchParams\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(underlyingSearchParams);\n    CachedSearchParams.set(underlyingSearchParams, promise);\n    Object.keys(underlyingSearchParams).forEach((prop)=>{\n        if (!wellKnownProperties.has(prop)) {\n            Object.defineProperty(promise, prop, {\n                get () {\n                    const workUnitStore = workUnitAsyncStorage.getStore();\n                    trackDynamicDataInDynamicRender(store, workUnitStore);\n                    return underlyingSearchParams[prop];\n                },\n                set (value) {\n                    Object.defineProperty(promise, prop, {\n                        value,\n                        writable: true,\n                        enumerable: true\n                    });\n                },\n                enumerable: true,\n                configurable: true\n            });\n        }\n    });\n    return promise;\n}\nfunction makeDynamicallyTrackedExoticSearchParamsWithDevWarnings(underlyingSearchParams, store) {\n    const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams);\n    if (cachedSearchParams) {\n        return cachedSearchParams;\n    }\n    const proxiedProperties = new Set();\n    const unproxiedProperties = [];\n    // We have an unfortunate sequence of events that requires this initialization logic. We want to instrument the underlying\n    // searchParams object to detect if you are accessing values in dev. This is used for warnings and for things like the static prerender\n    // indicator. However when we pass this proxy to our Promise.resolve() below the VM checks if the resolved value is a promise by looking\n    // at the `.then` property. To our dynamic tracking logic this is indistinguishable from a `then` searchParam and so we would normally trigger\n    // dynamic tracking. However we know that this .then is not real dynamic access, it's just how thenables resolve in sequence. So we introduce\n    // this initialization concept so we omit the dynamic check until after we've constructed our resolved promise.\n    let promiseInitialized = false;\n    const proxiedUnderlying = new Proxy(underlyingSearchParams, {\n        get (target, prop, receiver) {\n            if (typeof prop === 'string' && promiseInitialized) {\n                if (store.dynamicShouldError) {\n                    const expression = describeStringPropertyAccess('searchParams', prop);\n                    throwWithStaticGenerationBailoutErrorWithDynamicError(store.route, expression);\n                }\n                const workUnitStore = workUnitAsyncStorage.getStore();\n                trackDynamicDataInDynamicRender(store, workUnitStore);\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        has (target, prop) {\n            if (typeof prop === 'string') {\n                if (store.dynamicShouldError) {\n                    const expression = describeHasCheckingStringProperty('searchParams', prop);\n                    throwWithStaticGenerationBailoutErrorWithDynamicError(store.route, expression);\n                }\n            }\n            return Reflect.has(target, prop);\n        },\n        ownKeys (target) {\n            if (store.dynamicShouldError) {\n                const expression = '`{...searchParams}`, `Object.keys(searchParams)`, or similar';\n                throwWithStaticGenerationBailoutErrorWithDynamicError(store.route, expression);\n            }\n            return Reflect.ownKeys(target);\n        }\n    });\n    // We don't use makeResolvedReactPromise here because searchParams\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = new Promise((resolve)=>scheduleImmediate(()=>resolve(underlyingSearchParams)));\n    promise.then(()=>{\n        promiseInitialized = true;\n    });\n    Object.keys(underlyingSearchParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n            // These properties cannot be shadowed because they need to be the\n            // true underlying value for Promises to work correctly at runtime\n            unproxiedProperties.push(prop);\n        } else {\n            proxiedProperties.add(prop);\n            Object.defineProperty(promise, prop, {\n                get () {\n                    return proxiedUnderlying[prop];\n                },\n                set (newValue) {\n                    Object.defineProperty(promise, prop, {\n                        value: newValue,\n                        writable: true,\n                        enumerable: true\n                    });\n                },\n                enumerable: true,\n                configurable: true\n            });\n        }\n    });\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (prop === 'then' && store.dynamicShouldError) {\n                const expression = '`searchParams.then`';\n                throwWithStaticGenerationBailoutErrorWithDynamicError(store.route, expression);\n            }\n            if (typeof prop === 'string') {\n                if (!wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor\n                // the underlying searchParams.\n                Reflect.has(target, prop) === false)) {\n                    const expression = describeStringPropertyAccess('searchParams', prop);\n                    syncIODev(store.route, expression);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        set (target, prop, value, receiver) {\n            if (typeof prop === 'string') {\n                proxiedProperties.delete(prop);\n            }\n            return Reflect.set(target, prop, value, receiver);\n        },\n        has (target, prop) {\n            if (typeof prop === 'string') {\n                if (!wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor\n                // the underlying searchParams.\n                Reflect.has(target, prop) === false)) {\n                    const expression = describeHasCheckingStringProperty('searchParams', prop);\n                    syncIODev(store.route, expression);\n                }\n            }\n            return Reflect.has(target, prop);\n        },\n        ownKeys (target) {\n            const expression = '`Object.keys(searchParams)` or similar';\n            syncIODev(store.route, expression, unproxiedProperties);\n            return Reflect.ownKeys(target);\n        }\n    });\n    CachedSearchParams.set(underlyingSearchParams, proxiedPromise);\n    return proxiedPromise;\n}\nfunction syncIODev(route, expression, missingProperties) {\n    // In all cases we warn normally\n    if (missingProperties && missingProperties.length > 0) {\n        warnForIncompleteEnumeration(route, expression, missingProperties);\n    } else {\n        warnForSyncAccess(route, expression);\n    }\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore && workUnitStore.type === 'request' && workUnitStore.prerenderPhase === true) {\n        // When we're rendering dynamically in dev we need to advance out of the\n        // Prerender environment when we read Request data synchronously\n        const requestStore = workUnitStore;\n        trackSynchronousRequestDataAccessInDev(requestStore);\n    }\n}\nconst warnForSyncAccess = createDedupedByCallsiteServerErrorLoggerDev(createSearchAccessError);\nconst warnForIncompleteEnumeration = createDedupedByCallsiteServerErrorLoggerDev(createIncompleteEnumerationError);\nfunction createSearchAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`searchParams\\` should be awaited before using its properties. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E249\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction createIncompleteEnumerationError(route, expression, missingProperties) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`searchParams\\` should be awaited before using its properties. ` + `The following properties were not available through enumeration ` + `because they conflict with builtin or well-known property names: ` + `${describeListOfPropertyNames(missingProperties)}. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E2\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction describeListOfPropertyNames(properties) {\n    switch(properties.length){\n        case 0:\n            throw Object.defineProperty(new InvariantError('Expected describeListOfPropertyNames to be called with a non-empty list of strings.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E531\",\n                enumerable: false,\n                configurable: true\n            });\n        case 1:\n            return `\\`${properties[0]}\\``;\n        case 2:\n            return `\\`${properties[0]}\\` and \\`${properties[1]}\\``;\n        default:\n            {\n                let description = '';\n                for(let i = 0; i < properties.length - 1; i++){\n                    description += `\\`${properties[i]}\\`, `;\n                }\n                description += `, and \\`${properties[properties.length - 1]}\\``;\n                return description;\n            }\n    }\n}\n\n//# sourceMappingURL=search-params.js.map","'use client'\n\nimport { Suspense, use } from 'react'\nimport type { StreamingMetadataResolvedState } from './types'\n\nexport const AsyncMetadata =\n  typeof window === 'undefined'\n    ? (\n        require('./server-inserted-metadata') as typeof import('./server-inserted-metadata')\n      ).ServerInsertMetadata\n    : (\n        require('./browser-resolved-metadata') as typeof import('./browser-resolved-metadata')\n      ).BrowserResolvedMetadata\n\nfunction MetadataOutlet({\n  promise,\n}: {\n  promise: Promise<StreamingMetadataResolvedState>\n}) {\n  const { error, digest } = use(promise)\n  if (error) {\n    if (digest) {\n      // The error will lose its original digest after passing from server layer to client layer；\n      // We recover the digest property here to override the React created one if original digest exists.\n      ;(error as any).digest = digest\n    }\n    throw error\n  }\n  return null\n}\n\nexport function AsyncMetadataOutlet({\n  promise,\n}: {\n  promise: Promise<StreamingMetadataResolvedState>\n}) {\n  return (\n    <Suspense fallback={null}>\n      <MetadataOutlet promise={promise} />\n    </Suspense>\n  )\n}\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies,\n  parseCookie: () => parseCookie,\n  parseSetCookie: () => parseSetCookie,\n  stringifyCookie: () => stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction stringifyCookie(c) {\n  var _a;\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n    \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n    \"partitioned\" in c && c.partitioned && \"Partitioned\",\n    \"priority\" in c && c.priority && `Priority=${c.priority}`\n  ].filter(Boolean);\n  const stringified = `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}`;\n  return attrs.length === 0 ? stringified : `${stringified}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    if (splitAt === -1) {\n      map.set(pair, \"true\");\n      continue;\n    }\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookie(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookie(setCookie);\n  const {\n    domain,\n    expires,\n    httponly,\n    maxage,\n    path,\n    samesite,\n    secure,\n    partitioned,\n    priority\n  } = Object.fromEntries(\n    attributes.map(([key, value2]) => [\n      key.toLowerCase().replace(/-/g, \"\"),\n      value2\n    ])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true },\n    ...priority && { priority: parsePriority(priority) },\n    ...partitioned && { partitioned: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\"low\", \"medium\", \"high\"];\nfunction parsePriority(string) {\n  string = string.toLowerCase();\n  return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookie(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  /**\n   * The amount of cookies received from the client\n   */\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => stringifyCookie(value2)).join(\"; \")\n    );\n    return this;\n  }\n  /**\n   * Delete the cookies matching the passed name or names in the request.\n   */\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => stringifyCookie(value)).join(\"; \")\n    );\n    return result;\n  }\n  /**\n   * Delete all the cookies in the cookies in the request.\n   */\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  /**\n   * Format the cookies in the request as a string for logging\n   */\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a, _b, _c;\n    this._headers = responseHeaders;\n    const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookie(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */\n  delete(...args) {\n    const [name, options] = typeof args[0] === \"string\" ? [args[0]] : [args[0].name, args[0]];\n    return this.set({ ...options, name, value: \"\", expires: /* @__PURE__ */ new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(stringifyCookie).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = stringifyCookie(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (typeof cookie.expires === \"number\") {\n    cookie.expires = new Date(cookie.expires);\n  }\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RequestCookies,\n  ResponseCookies,\n  parseCookie,\n  parseSetCookie,\n  stringifyCookie\n});\n","const REACT_POSTPONE_TYPE = Symbol.for('react.postpone');\nexport function isPostpone(error) {\n    return typeof error === 'object' && error !== null && error.$$typeof === REACT_POSTPONE_TYPE;\n}\n\n//# sourceMappingURL=is-postpone.js.map","import { isHangingPromiseRejectionError } from '../../server/dynamic-rendering-utils'\nimport { isPostpone } from '../../server/lib/router-utils/is-postpone'\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { isNextRouterError } from './is-next-router-error'\nimport { isDynamicPostpone } from '../../server/app-render/dynamic-rendering'\nimport { isDynamicServerError } from './hooks-server-context'\n\nexport function unstable_rethrow(error: unknown): void {\n  if (\n    isNextRouterError(error) ||\n    isBailoutToCSRError(error) ||\n    isDynamicServerError(error) ||\n    isDynamicPostpone(error) ||\n    isPostpone(error) ||\n    isHangingPromiseRejectionError(error)\n  ) {\n    throw error\n  }\n\n  if (error instanceof Error && 'cause' in error) {\n    unstable_rethrow(error.cause)\n  }\n}\n","import { getCacheHandlers } from './use-cache/handlers';\n/** Run a callback, and execute any *new* revalidations added during its runtime. */ export async function withExecuteRevalidates(store, callback) {\n    if (!store) {\n        return callback();\n    }\n    // If we executed any revalidates during the request, then we don't want to execute them again.\n    // save the state so we can check if anything changed after we're done running callbacks.\n    const savedRevalidationState = cloneRevalidationState(store);\n    try {\n        return await callback();\n    } finally{\n        // Check if we have any new revalidates, and if so, wait until they are all resolved.\n        const newRevalidates = diffRevalidationState(savedRevalidationState, cloneRevalidationState(store));\n        await executeRevalidates(store, newRevalidates);\n    }\n}\nfunction cloneRevalidationState(store) {\n    return {\n        pendingRevalidatedTags: store.pendingRevalidatedTags ? [\n            ...store.pendingRevalidatedTags\n        ] : [],\n        pendingRevalidates: {\n            ...store.pendingRevalidates\n        },\n        pendingRevalidateWrites: store.pendingRevalidateWrites ? [\n            ...store.pendingRevalidateWrites\n        ] : []\n    };\n}\nfunction diffRevalidationState(prev, curr) {\n    const prevTags = new Set(prev.pendingRevalidatedTags);\n    const prevRevalidateWrites = new Set(prev.pendingRevalidateWrites);\n    return {\n        pendingRevalidatedTags: curr.pendingRevalidatedTags.filter((tag)=>!prevTags.has(tag)),\n        pendingRevalidates: Object.fromEntries(Object.entries(curr.pendingRevalidates).filter(([key])=>!(key in prev.pendingRevalidates))),\n        pendingRevalidateWrites: curr.pendingRevalidateWrites.filter((promise)=>!prevRevalidateWrites.has(promise))\n    };\n}\nasync function revalidateTags(tags, incrementalCache) {\n    if (tags.length === 0) {\n        return;\n    }\n    const promises = [];\n    if (incrementalCache) {\n        promises.push(incrementalCache.revalidateTag(tags));\n    }\n    const handlers = getCacheHandlers();\n    if (handlers) {\n        for (const handler of handlers){\n            promises.push(handler.expireTags(...tags));\n        }\n    }\n    await Promise.all(promises);\n}\nexport async function executeRevalidates(workStore, state) {\n    const pendingRevalidatedTags = (state == null ? void 0 : state.pendingRevalidatedTags) ?? workStore.pendingRevalidatedTags ?? [];\n    const pendingRevalidates = (state == null ? void 0 : state.pendingRevalidates) ?? workStore.pendingRevalidates ?? {};\n    const pendingRevalidateWrites = (state == null ? void 0 : state.pendingRevalidateWrites) ?? workStore.pendingRevalidateWrites ?? [];\n    return Promise.all([\n        revalidateTags(pendingRevalidatedTags, workStore.incrementalCache),\n        ...Object.values(pendingRevalidates),\n        ...pendingRevalidateWrites\n    ]);\n}\n\n//# sourceMappingURL=revalidation-utils.js.map","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","'use client'\n\nimport type React from 'react'\nimport { createContext } from 'react'\n\nexport type MetadataResolver = () => React.ReactNode\ntype MetadataResolverSetter = (m: MetadataResolver) => void\n\nexport const ServerInsertedMetadataContext =\n  createContext<MetadataResolverSetter | null>(null)\n","import { HTTPAccessErrorFallback } from './http-access-fallback/error-fallback'\n\nexport default function NotFound() {\n  return (\n    <HTTPAccessErrorFallback\n      status={404}\n      message=\"This page could not be found.\"\n    />\n  )\n}\n","export class ReflectAdapter {\n    static get(target, prop, receiver) {\n        const value = Reflect.get(target, prop, receiver);\n        if (typeof value === 'function') {\n            return value.bind(target);\n        }\n        return value;\n    }\n    static set(target, prop, value, receiver) {\n        return Reflect.set(target, prop, value, receiver);\n    }\n    static has(target, prop) {\n        return Reflect.has(target, prop);\n    }\n    static deleteProperty(target, prop) {\n        return Reflect.deleteProperty(target, prop);\n    }\n}\n\n//# sourceMappingURL=reflect.js.map","/**\n * RouteModule is the base class for all route modules. This class should be\n * extended by all route modules.\n */ export class RouteModule {\n    constructor({ userland, definition }){\n        this.userland = userland;\n        this.definition = definition;\n    }\n}\n\n//# sourceMappingURL=route-module.js.map","import React from 'react'\nimport type { NextRouter } from './router/router'\n\nexport const RouterContext = React.createContext<NextRouter | null>(null)\n\nif (process.env.NODE_ENV !== 'production') {\n  RouterContext.displayName = 'RouterContext'\n}\n","import React from 'react'\n\nexport const AmpStateContext: React.Context<any> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  AmpStateContext.displayName = 'AmpStateContext'\n}\n","export const VALID_LOADERS = [\n  'default',\n  'imgix',\n  'cloudinary',\n  'akamai',\n  'custom',\n] as const\n\nexport type LoaderValue = (typeof VALID_LOADERS)[number]\n\nexport type ImageLoaderProps = {\n  src: string\n  width: number\n  quality?: number\n}\n\nexport type ImageLoaderPropsWithConfig = ImageLoaderProps & {\n  config: Readonly<ImageConfig>\n}\n\nexport type LocalPattern = {\n  /**\n   * Can be literal or wildcard.\n   * Single `*` matches a single path segment.\n   * Double `**` matches any number of path segments.\n   */\n  pathname?: string\n\n  /**\n   * Can be literal query string such as `?v=1` or\n   * empty string meaning no query string.\n   */\n  search?: string\n}\n\nexport type RemotePattern = {\n  /**\n   * Must be `http` or `https`.\n   */\n  protocol?: 'http' | 'https'\n\n  /**\n   * Can be literal or wildcard.\n   * Single `*` matches a single subdomain.\n   * Double `**` matches any number of subdomains.\n   */\n  hostname: string\n\n  /**\n   * Can be literal port such as `8080` or empty string\n   * meaning no port.\n   */\n  port?: string\n\n  /**\n   * Can be literal or wildcard.\n   * Single `*` matches a single path segment.\n   * Double `**` matches any number of path segments.\n   */\n  pathname?: string\n\n  /**\n   * Can be literal query string such as `?v=1` or\n   * empty string meaning no query string.\n   */\n  search?: string\n}\n\ntype ImageFormat = 'image/avif' | 'image/webp'\n\n/**\n * Image configurations\n *\n * @see [Image configuration options](https://nextjs.org/docs/api-reference/next/image#configuration-options)\n */\nexport type ImageConfigComplete = {\n  /** @see [Device sizes documentation](https://nextjs.org/docs/api-reference/next/image#device-sizes) */\n  deviceSizes: number[]\n\n  /** @see [Image sizing documentation](https://nextjs.org/docs/app/building-your-application/optimizing/images#image-sizing) */\n  imageSizes: number[]\n\n  /** @see [Image loaders configuration](https://nextjs.org/docs/api-reference/next/legacy/image#loader) */\n  loader: LoaderValue\n\n  /** @see [Image loader configuration](https://nextjs.org/docs/api-reference/next/legacy/image#loader-configuration) */\n  path: string\n\n  /** @see [Image loader configuration](https://nextjs.org/docs/api-reference/next/image#loader-configuration) */\n  loaderFile: string\n\n  /**\n   * @deprecated Use `remotePatterns` instead.\n   */\n  domains: string[]\n\n  /** @see [Disable static image import configuration](https://nextjs.org/docs/api-reference/next/image#disable-static-imports) */\n  disableStaticImages: boolean\n\n  /** @see [Cache behavior](https://nextjs.org/docs/api-reference/next/image#caching-behavior) */\n  minimumCacheTTL: number\n\n  /** @see [Acceptable formats](https://nextjs.org/docs/api-reference/next/image#acceptable-formats) */\n  formats: ImageFormat[]\n\n  /** @see [Dangerously Allow SVG](https://nextjs.org/docs/api-reference/next/image#dangerously-allow-svg) */\n  dangerouslyAllowSVG: boolean\n\n  /** @see [Dangerously Allow SVG](https://nextjs.org/docs/api-reference/next/image#dangerously-allow-svg) */\n  contentSecurityPolicy: string\n\n  /** @see [Dangerously Allow SVG](https://nextjs.org/docs/api-reference/next/image#dangerously-allow-svg) */\n  contentDispositionType: 'inline' | 'attachment'\n\n  /** @see [Remote Patterns](https://nextjs.org/docs/api-reference/next/image#remotepatterns) */\n  remotePatterns: Array<URL | RemotePattern>\n\n  /** @see [Remote Patterns](https://nextjs.org/docs/api-reference/next/image#localPatterns) */\n  localPatterns: LocalPattern[] | undefined\n\n  /** @see [Qualities](https://nextjs.org/docs/api-reference/next/image#qualities) */\n  qualities: number[] | undefined\n\n  /** @see [Unoptimized](https://nextjs.org/docs/api-reference/next/image#unoptimized) */\n  unoptimized: boolean\n}\n\nexport type ImageConfig = Partial<ImageConfigComplete>\n\nexport const imageConfigDefault: ImageConfigComplete = {\n  deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],\n  imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],\n  path: '/_next/image',\n  loader: 'default',\n  loaderFile: '',\n  domains: [],\n  disableStaticImages: false,\n  minimumCacheTTL: 60,\n  formats: ['image/webp'],\n  dangerouslyAllowSVG: false,\n  contentSecurityPolicy: `script-src 'none'; frame-src 'none'; sandbox;`,\n  contentDispositionType: 'attachment',\n  localPatterns: undefined, // default: allow all local images\n  remotePatterns: [], // default: allow no remote images\n  qualities: undefined, // default: allow all qualities\n  unoptimized: false,\n}\n","import React from 'react'\nimport type { ImageConfigComplete } from './image-config'\nimport { imageConfigDefault } from './image-config'\n\nexport const ImageConfigContext =\n  React.createContext<ImageConfigComplete>(imageConfigDefault)\n\nif (process.env.NODE_ENV !== 'production') {\n  ImageConfigContext.displayName = 'ImageConfigContext'\n}\n","export * as HeadManagerContext from '../../../../../shared/lib/head-manager-context.shared-runtime';\nexport * as ServerInsertedHtml from '../../../../../shared/lib/server-inserted-html.shared-runtime';\nexport * as ServerInsertedMetadata from '../../../../../shared/lib/server-inserted-metadata.shared-runtime';\nexport * as AppRouterContext from '../../../../../shared/lib/app-router-context.shared-runtime';\nexport * as HooksClientContext from '../../../../../shared/lib/hooks-client-context.shared-runtime';\nexport * as RouterContext from '../../../../../shared/lib/router-context.shared-runtime';\nexport * as AmpContext from '../../../../../shared/lib/amp-context.shared-runtime';\nexport * as ImageConfigContext from '../../../../../shared/lib/image-config-context.shared-runtime';\n\n//# sourceMappingURL=entrypoints.js.map","import { renderToHTMLOrFlight } from '../../app-render/app-render';\nimport { RouteModule } from '../route-module';\nimport * as vendoredContexts from './vendored/contexts/entrypoints';\nlet vendoredReactRSC;\nlet vendoredReactSSR;\n// the vendored Reacts are loaded from their original source in the edge runtime\nif (process.env.NEXT_RUNTIME !== 'edge') {\n    vendoredReactRSC = require('./vendored/rsc/entrypoints');\n    vendoredReactSSR = require('./vendored/ssr/entrypoints');\n}\nexport class AppPageRouteModule extends RouteModule {\n    render(req, res, context) {\n        return renderToHTMLOrFlight(req, res, context.page, context.query, context.fallbackRouteParams, context.renderOpts, context.serverComponentsHmrCache, false, context.sharedContext);\n    }\n    warmup(req, res, context) {\n        return renderToHTMLOrFlight(req, res, context.page, context.query, context.fallbackRouteParams, context.renderOpts, context.serverComponentsHmrCache, true, context.sharedContext);\n    }\n}\nconst vendored = {\n    'react-rsc': vendoredReactRSC,\n    'react-ssr': vendoredReactSSR,\n    contexts: vendoredContexts\n};\nexport { renderToHTMLOrFlight, vendored };\nexport default AppPageRouteModule;\n\n//# sourceMappingURL=module.js.map","/**\n * @license React\n * react-jsx-runtime.react-server.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"next/dist/compiled/react\"),\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nif (!React.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE)\n  throw Error(\n    'The \"react\" package in this environment is not configured correctly. The \"react-server\" condition must be enabled in any environment that runs React Server Components.'\n  );\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxDEV = void 0;\nexports.jsxs = jsxProd;\n","// http://www.cse.yorku.ca/~oz/hash.html\n// More specifically, 32-bit hash via djbxor\n// (ref: https://gist.github.com/eplawless/52813b1d8ad9af510d85?permalink_comment_id=3367765#gistcomment-3367765)\n// This is due to number type differences between rust for turbopack to js number types,\n// where rust does not have easy way to repreesnt js's 53-bit float number type for the matching\n// overflow behavior. This is more `correct` in terms of having canonical hash across different runtime / implementation\n// as can gaurantee determinstic output from 32bit hash.\nexport function djb2Hash(str: string) {\n  let hash = 5381\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i)\n    hash = ((hash << 5) + hash + char) & 0xffffffff\n  }\n  return hash >>> 0\n}\n\nexport function hexHash(str: string) {\n  return djb2Hash(str).toString(36).slice(0, 5)\n}\n","// Exports\nmodule.exports = {\n\t\"style\": {\"fontFamily\":\"'Inter', 'Inter Fallback'\",\"fontStyle\":\"normal\"},\n\t\"className\": \"__className_f367f3\"\n};\n","/**\n * This transforms a URL pathname into a route. It removes any trailing slashes\n * and the `/index` suffix.\n *\n * @param {string} pathname - The URL path that needs to be optimized.\n * @returns {string} - The route\n *\n * @example\n * // returns '/example'\n * toRoute('/example/index/');\n *\n * @example\n * // returns '/example'\n * toRoute('/example/');\n *\n * @example\n * // returns '/'\n * toRoute('/index/');\n *\n * @example\n * // returns '/'\n * toRoute('/');\n */ export function toRoute(pathname) {\n    return pathname.replace(/(?:\\/index)?\\/?$/, '') || '/';\n}\n\n//# sourceMappingURL=to-route.js.map","import * as React from 'react';\nconst errorRef = {\n    current: null\n};\n// React.cache is currently only available in canary/experimental React channels.\nconst cache = typeof React.cache === 'function' ? React.cache : (fn)=>fn;\n// When Dynamic IO is enabled, we record these as errors so that they\n// are captured by the dev overlay as it's more critical to fix these\n// when enabled.\nconst logErrorOrWarn = process.env.__NEXT_DYNAMIC_IO ? console.error : console.warn;\n// We don't want to dedupe across requests.\n// The developer might've just attempted to fix the warning so we should warn again if it still happens.\nconst flushCurrentErrorIfNew = cache(// eslint-disable-next-line @typescript-eslint/no-unused-vars -- cache key\n(key)=>{\n    try {\n        logErrorOrWarn(errorRef.current);\n    } finally{\n        errorRef.current = null;\n    }\n});\n/**\n * Creates a function that logs an error message that is deduped by the userland\n * callsite.\n * This requires no indirection between the call of this function and the userland\n * callsite i.e. there's only a single library frame above this.\n * Do not use on the Client where sourcemaps and ignore listing might be enabled.\n * Only use that for warnings need a fix independent of the callstack.\n *\n * @param getMessage\n * @returns\n */ export function createDedupedByCallsiteServerErrorLoggerDev(getMessage) {\n    return function logDedupedError(...args) {\n        const message = getMessage(...args);\n        if (process.env.NODE_ENV !== 'production') {\n            var _stack;\n            const callStackFrames = (_stack = new Error().stack) == null ? void 0 : _stack.split('\\n');\n            if (callStackFrames === undefined || callStackFrames.length < 4) {\n                logErrorOrWarn(message);\n            } else {\n                // Error:\n                //   logDedupedError\n                //   asyncApiBeingAccessedSynchronously\n                //   <userland callsite>\n                // TODO: This breaks if sourcemaps with ignore lists are enabled.\n                const key = callStackFrames[4];\n                errorRef.current = message;\n                flushCurrentErrorIfNew(key);\n            }\n        } else {\n            logErrorOrWarn(message);\n        }\n    };\n}\n\n//# sourceMappingURL=create-deduped-by-callsite-server-error-logger.js.map","import type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport type { Segment } from '../../../server/app-render/types'\nimport { invalidateCacheByRouterState } from './invalidate-cache-by-router-state'\nimport { fillLazyItemsTillLeafWithHead } from './fill-lazy-items-till-leaf-with-head'\nimport { createRouterCacheKey } from './create-router-cache-key'\nimport type { PrefetchCacheEntry } from './router-reducer-types'\nimport { PAGE_SEGMENT_KEY } from '../../../shared/lib/segment'\nimport type { NormalizedFlightData } from '../../flight-data-helpers'\n\n/**\n * Common logic for filling cache with new sub tree data.\n */\nfunction fillCacheHelper(\n  navigatedAt: number,\n  newCache: CacheNode,\n  existingCache: CacheNode,\n  flightData: NormalizedFlightData,\n  prefetchEntry: PrefetchCacheEntry | undefined,\n  fillLazyItems: boolean\n): void {\n  const {\n    segmentPath,\n    seedData: cacheNodeSeedData,\n    tree: treePatch,\n    head,\n  } = flightData\n  let newCacheNode = newCache\n  let existingCacheNode = existingCache\n\n  for (let i = 0; i < segmentPath.length; i += 2) {\n    const parallelRouteKey: string = segmentPath[i]\n    const segment: Segment = segmentPath[i + 1]\n\n    // segmentPath is a repeating tuple of parallelRouteKey and segment\n    // we know we've hit the last entry we've reached our final pair\n    const isLastEntry = i === segmentPath.length - 2\n    const cacheKey = createRouterCacheKey(segment)\n\n    const existingChildSegmentMap =\n      existingCacheNode.parallelRoutes.get(parallelRouteKey)\n\n    if (!existingChildSegmentMap) {\n      // Bailout because the existing cache does not have the path to the leaf node\n      // Will trigger lazy fetch in layout-router because of missing segment\n      continue\n    }\n\n    let childSegmentMap = newCacheNode.parallelRoutes.get(parallelRouteKey)\n    if (!childSegmentMap || childSegmentMap === existingChildSegmentMap) {\n      childSegmentMap = new Map(existingChildSegmentMap)\n      newCacheNode.parallelRoutes.set(parallelRouteKey, childSegmentMap)\n    }\n\n    const existingChildCacheNode = existingChildSegmentMap.get(cacheKey)\n    let childCacheNode = childSegmentMap.get(cacheKey)\n\n    if (isLastEntry) {\n      if (\n        cacheNodeSeedData &&\n        (!childCacheNode ||\n          !childCacheNode.lazyData ||\n          childCacheNode === existingChildCacheNode)\n      ) {\n        const incomingSegment = cacheNodeSeedData[0]\n        const rsc = cacheNodeSeedData[1]\n        const loading = cacheNodeSeedData[3]\n\n        childCacheNode = {\n          lazyData: null,\n          // When `fillLazyItems` is false, we only want to fill the RSC data for the layout,\n          // not the page segment.\n          rsc:\n            fillLazyItems || incomingSegment !== PAGE_SEGMENT_KEY ? rsc : null,\n          prefetchRsc: null,\n          head: null,\n          prefetchHead: null,\n          loading,\n          parallelRoutes:\n            fillLazyItems && existingChildCacheNode\n              ? new Map(existingChildCacheNode.parallelRoutes)\n              : new Map(),\n          navigatedAt,\n        }\n\n        if (existingChildCacheNode && fillLazyItems) {\n          invalidateCacheByRouterState(\n            childCacheNode,\n            existingChildCacheNode,\n            treePatch\n          )\n        }\n        if (fillLazyItems) {\n          fillLazyItemsTillLeafWithHead(\n            navigatedAt,\n            childCacheNode,\n            existingChildCacheNode,\n            treePatch,\n            cacheNodeSeedData,\n            head,\n            prefetchEntry\n          )\n        }\n\n        childSegmentMap.set(cacheKey, childCacheNode)\n      }\n      continue\n    }\n\n    if (!childCacheNode || !existingChildCacheNode) {\n      // Bailout because the existing cache does not have the path to the leaf node\n      // Will trigger lazy fetch in layout-router because of missing segment\n      continue\n    }\n\n    if (childCacheNode === existingChildCacheNode) {\n      childCacheNode = {\n        lazyData: childCacheNode.lazyData,\n        rsc: childCacheNode.rsc,\n        prefetchRsc: childCacheNode.prefetchRsc,\n        head: childCacheNode.head,\n        prefetchHead: childCacheNode.prefetchHead,\n        parallelRoutes: new Map(childCacheNode.parallelRoutes),\n        loading: childCacheNode.loading,\n      } as CacheNode\n      childSegmentMap.set(cacheKey, childCacheNode)\n    }\n\n    // Move deeper into the cache nodes\n    newCacheNode = childCacheNode\n    existingCacheNode = existingChildCacheNode\n  }\n}\n\n/**\n * Fill cache with rsc based on flightDataPath\n */\nexport function fillCacheWithNewSubTreeData(\n  navigatedAt: number,\n  newCache: CacheNode,\n  existingCache: CacheNode,\n  flightData: NormalizedFlightData,\n  prefetchEntry?: PrefetchCacheEntry\n): void {\n  fillCacheHelper(\n    navigatedAt,\n    newCache,\n    existingCache,\n    flightData,\n    prefetchEntry,\n    true\n  )\n}\n\nexport function fillCacheWithNewSubTreeDataButOnlyLoading(\n  navigatedAt: number,\n  newCache: CacheNode,\n  existingCache: CacheNode,\n  flightData: NormalizedFlightData,\n  prefetchEntry?: PrefetchCacheEntry\n): void {\n  fillCacheHelper(\n    navigatedAt,\n    newCache,\n    existingCache,\n    flightData,\n    prefetchEntry,\n    false\n  )\n}\n","import type { Segment } from '../../server/app-render/types'\n\nexport const matchSegment = (\n  existingSegment: Segment,\n  segment: Segment\n): boolean => {\n  // segment is either Array or string\n  if (typeof existingSegment === 'string') {\n    if (typeof segment === 'string') {\n      // Common case: segment is just a string\n      return existingSegment === segment\n    }\n    return false\n  }\n\n  if (typeof segment === 'string') {\n    return false\n  }\n  return existingSegment[0] === segment[0] && existingSegment[1] === segment[1]\n}\n","export const METADATA_BOUNDARY_NAME = '__next_metadata_boundary__';\nexport const VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__';\nexport const OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__';\n\n//# sourceMappingURL=metadata-constants.js.map","'use client'\n\nimport React, {\n  use,\n  useEffect,\n  useMemo,\n  startTransition,\n  useInsertionEffect,\n  useDeferredValue,\n} from 'react'\nimport {\n  AppRouterContext,\n  LayoutRouterContext,\n  GlobalLayoutRouterContext,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport type { CacheNode } from '../../shared/lib/app-router-context.shared-runtime'\nimport { ACTION_RESTORE } from './router-reducer/router-reducer-types'\nimport type { AppRouterState } from './router-reducer/router-reducer-types'\nimport { createHrefFromUrl } from './router-reducer/create-href-from-url'\nimport {\n  SearchParamsContext,\n  PathnameContext,\n  PathParamsContext,\n} from '../../shared/lib/hooks-client-context.shared-runtime'\nimport { dispatchAppRouterAction, useActionQueue } from './use-action-queue'\nimport {\n  default as DefaultGlobalError,\n  ErrorBoundary,\n  type GlobalErrorComponent,\n} from './error-boundary'\nimport { isBot } from '../../shared/lib/router/utils/is-bot'\nimport { addBasePath } from '../add-base-path'\nimport { AppRouterAnnouncer } from './app-router-announcer'\nimport { RedirectBoundary } from './redirect-boundary'\nimport { findHeadInCache } from './router-reducer/reducers/find-head-in-cache'\nimport { unresolvedThenable } from './unresolved-thenable'\nimport { removeBasePath } from '../remove-base-path'\nimport { hasBasePath } from '../has-base-path'\nimport { getSelectedParams } from './router-reducer/compute-changed-path'\nimport type { FlightRouterState } from '../../server/app-render/types'\nimport { useNavFailureHandler } from './nav-failure-handler'\nimport {\n  dispatchTraverseAction,\n  publicAppRouterInstance,\n  type AppRouterActionQueue,\n} from './app-router-instance'\nimport { getRedirectTypeFromError, getURLFromRedirectError } from './redirect'\nimport { isRedirectError, RedirectType } from './redirect-error'\nimport { pingVisibleLinks } from './links'\n\nconst globalMutable: {\n  pendingMpaPath?: string\n} = {}\n\nexport function isExternalURL(url: URL) {\n  return url.origin !== window.location.origin\n}\n\n/**\n * Given a link href, constructs the URL that should be prefetched. Returns null\n * in cases where prefetching should be disabled, like external URLs, or\n * during development.\n * @param href The href passed to <Link>, router.prefetch(), or similar\n * @returns A URL object to prefetch, or null if prefetching should be disabled\n */\nexport function createPrefetchURL(href: string): URL | null {\n  // Don't prefetch for bots as they don't navigate.\n  if (isBot(window.navigator.userAgent)) {\n    return null\n  }\n\n  let url: URL\n  try {\n    url = new URL(addBasePath(href), window.location.href)\n  } catch (_) {\n    // TODO: Does this need to throw or can we just console.error instead? Does\n    // anyone rely on this throwing? (Seems unlikely.)\n    throw new Error(\n      `Cannot prefetch '${href}' because it cannot be converted to a URL.`\n    )\n  }\n\n  // Don't prefetch during development (improves compilation performance)\n  if (process.env.NODE_ENV === 'development') {\n    return null\n  }\n\n  // External urls can't be prefetched in the same way.\n  if (isExternalURL(url)) {\n    return null\n  }\n\n  return url\n}\n\nfunction HistoryUpdater({\n  appRouterState,\n}: {\n  appRouterState: AppRouterState\n}) {\n  useInsertionEffect(() => {\n    if (process.env.__NEXT_APP_NAV_FAIL_HANDLING) {\n      // clear pending URL as navigation is no longer\n      // in flight\n      window.next.__pendingUrl = undefined\n    }\n\n    const { tree, pushRef, canonicalUrl } = appRouterState\n    const historyState = {\n      ...(pushRef.preserveCustomHistoryState ? window.history.state : {}),\n      // Identifier is shortened intentionally.\n      // __NA is used to identify if the history entry can be handled by the app-router.\n      // __N is used to identify if the history entry can be handled by the old router.\n      __NA: true,\n      __PRIVATE_NEXTJS_INTERNALS_TREE: tree,\n    }\n    if (\n      pushRef.pendingPush &&\n      // Skip pushing an additional history entry if the canonicalUrl is the same as the current url.\n      // This mirrors the browser behavior for normal navigation.\n      createHrefFromUrl(new URL(window.location.href)) !== canonicalUrl\n    ) {\n      // This intentionally mutates React state, pushRef is overwritten to ensure additional push/replace calls do not trigger an additional history entry.\n      pushRef.pendingPush = false\n      window.history.pushState(historyState, '', canonicalUrl)\n    } else {\n      window.history.replaceState(historyState, '', canonicalUrl)\n    }\n  }, [appRouterState])\n\n  useEffect(() => {\n    // The Next-Url and the base tree may affect the result of a prefetch\n    // task. Re-prefetch all visible links with the updated values. In most\n    // cases, this will not result in any new network requests, only if\n    // the prefetch result actually varies on one of these inputs.\n    if (process.env.__NEXT_CLIENT_SEGMENT_CACHE) {\n      pingVisibleLinks(appRouterState.nextUrl, appRouterState.tree)\n    }\n  }, [appRouterState.nextUrl, appRouterState.tree])\n\n  return null\n}\n\nexport function createEmptyCacheNode(): CacheNode {\n  return {\n    lazyData: null,\n    rsc: null,\n    prefetchRsc: null,\n    head: null,\n    prefetchHead: null,\n    parallelRoutes: new Map(),\n    loading: null,\n    navigatedAt: -1,\n  }\n}\n\nfunction copyNextJsInternalHistoryState(data: any) {\n  if (data == null) data = {}\n  const currentState = window.history.state\n  const __NA = currentState?.__NA\n  if (__NA) {\n    data.__NA = __NA\n  }\n  const __PRIVATE_NEXTJS_INTERNALS_TREE =\n    currentState?.__PRIVATE_NEXTJS_INTERNALS_TREE\n  if (__PRIVATE_NEXTJS_INTERNALS_TREE) {\n    data.__PRIVATE_NEXTJS_INTERNALS_TREE = __PRIVATE_NEXTJS_INTERNALS_TREE\n  }\n\n  return data\n}\n\nfunction Head({\n  headCacheNode,\n}: {\n  headCacheNode: CacheNode | null\n}): React.ReactNode {\n  // If this segment has a `prefetchHead`, it's the statically prefetched data.\n  // We should use that on initial render instead of `head`. Then we'll switch\n  // to `head` when the dynamic response streams in.\n  const head = headCacheNode !== null ? headCacheNode.head : null\n  const prefetchHead =\n    headCacheNode !== null ? headCacheNode.prefetchHead : null\n\n  // If no prefetch data is available, then we go straight to rendering `head`.\n  const resolvedPrefetchRsc = prefetchHead !== null ? prefetchHead : head\n\n  // We use `useDeferredValue` to handle switching between the prefetched and\n  // final values. The second argument is returned on initial render, then it\n  // re-renders with the first argument.\n  return useDeferredValue(head, resolvedPrefetchRsc)\n}\n\n/**\n * The global router that wraps the application components.\n */\nfunction Router({\n  actionQueue,\n  assetPrefix,\n  globalError,\n}: {\n  actionQueue: AppRouterActionQueue\n  assetPrefix: string\n  globalError: [GlobalErrorComponent, React.ReactNode]\n}) {\n  const state = useActionQueue(actionQueue)\n  const { canonicalUrl } = state\n  // Add memoized pathname/query for useSearchParams and usePathname.\n  const { searchParams, pathname } = useMemo(() => {\n    const url = new URL(\n      canonicalUrl,\n      typeof window === 'undefined' ? 'http://n' : window.location.href\n    )\n\n    return {\n      // This is turned into a readonly class in `useSearchParams`\n      searchParams: url.searchParams,\n      pathname: hasBasePath(url.pathname)\n        ? removeBasePath(url.pathname)\n        : url.pathname,\n    }\n  }, [canonicalUrl])\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const { cache, prefetchCache, tree } = state\n\n    // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      // Add `window.nd` for debugging purposes.\n      // This is not meant for use in applications as concurrent rendering will affect the cache/tree/router.\n      // @ts-ignore this is for debugging\n      window.nd = {\n        router: publicAppRouterInstance,\n        cache,\n        prefetchCache,\n        tree,\n      }\n    }, [cache, prefetchCache, tree])\n  }\n\n  useEffect(() => {\n    // If the app is restored from bfcache, it's possible that\n    // pushRef.mpaNavigation is true, which would mean that any re-render of this component\n    // would trigger the mpa navigation logic again from the lines below.\n    // This will restore the router to the initial state in the event that the app is restored from bfcache.\n    function handlePageShow(event: PageTransitionEvent) {\n      if (\n        !event.persisted ||\n        !window.history.state?.__PRIVATE_NEXTJS_INTERNALS_TREE\n      ) {\n        return\n      }\n\n      // Clear the pendingMpaPath value so that a subsequent MPA navigation to the same URL can be triggered.\n      // This is necessary because if the browser restored from bfcache, the pendingMpaPath would still be set to the value\n      // of the last MPA navigation.\n      globalMutable.pendingMpaPath = undefined\n\n      dispatchAppRouterAction({\n        type: ACTION_RESTORE,\n        url: new URL(window.location.href),\n        tree: window.history.state.__PRIVATE_NEXTJS_INTERNALS_TREE,\n      })\n    }\n\n    window.addEventListener('pageshow', handlePageShow)\n\n    return () => {\n      window.removeEventListener('pageshow', handlePageShow)\n    }\n  }, [])\n\n  useEffect(() => {\n    // Ensure that any redirect errors that bubble up outside of the RedirectBoundary\n    // are caught and handled by the router.\n    function handleUnhandledRedirect(\n      event: ErrorEvent | PromiseRejectionEvent\n    ) {\n      const error = 'reason' in event ? event.reason : event.error\n      if (isRedirectError(error)) {\n        event.preventDefault()\n        const url = getURLFromRedirectError(error)\n        const redirectType = getRedirectTypeFromError(error)\n        // TODO: This should access the router methods directly, rather than\n        // go through the public interface.\n        if (redirectType === RedirectType.push) {\n          publicAppRouterInstance.push(url, {})\n        } else {\n          publicAppRouterInstance.replace(url, {})\n        }\n      }\n    }\n    window.addEventListener('error', handleUnhandledRedirect)\n    window.addEventListener('unhandledrejection', handleUnhandledRedirect)\n\n    return () => {\n      window.removeEventListener('error', handleUnhandledRedirect)\n      window.removeEventListener('unhandledrejection', handleUnhandledRedirect)\n    }\n  }, [])\n\n  // When mpaNavigation flag is set do a hard navigation to the new url.\n  // Infinitely suspend because we don't actually want to rerender any child\n  // components with the new URL and any entangled state updates shouldn't\n  // commit either (eg: useTransition isPending should stay true until the page\n  // unloads).\n  //\n  // This is a side effect in render. Don't try this at home, kids. It's\n  // probably safe because we know this is a singleton component and it's never\n  // in <Offscreen>. At least I hope so. (It will run twice in dev strict mode,\n  // but that's... fine?)\n  const { pushRef } = state\n  if (pushRef.mpaNavigation) {\n    // if there's a re-render, we don't want to trigger another redirect if one is already in flight to the same URL\n    if (globalMutable.pendingMpaPath !== canonicalUrl) {\n      const location = window.location\n      if (pushRef.pendingPush) {\n        location.assign(canonicalUrl)\n      } else {\n        location.replace(canonicalUrl)\n      }\n\n      globalMutable.pendingMpaPath = canonicalUrl\n    }\n    // TODO-APP: Should we listen to navigateerror here to catch failed\n    // navigations somehow? And should we call window.stop() if a SPA navigation\n    // should interrupt an MPA one?\n    use(unresolvedThenable)\n  }\n\n  useEffect(() => {\n    const originalPushState = window.history.pushState.bind(window.history)\n    const originalReplaceState = window.history.replaceState.bind(\n      window.history\n    )\n\n    // Ensure the canonical URL in the Next.js Router is updated when the URL is changed so that `usePathname` and `useSearchParams` hold the pushed values.\n    const applyUrlFromHistoryPushReplace = (\n      url: string | URL | null | undefined\n    ) => {\n      const href = window.location.href\n      const tree: FlightRouterState | undefined =\n        window.history.state?.__PRIVATE_NEXTJS_INTERNALS_TREE\n\n      startTransition(() => {\n        dispatchAppRouterAction({\n          type: ACTION_RESTORE,\n          url: new URL(url ?? href, href),\n          tree,\n        })\n      })\n    }\n\n    /**\n     * Patch pushState to ensure external changes to the history are reflected in the Next.js Router.\n     * Ensures Next.js internal history state is copied to the new history entry.\n     * Ensures usePathname and useSearchParams hold the newly provided url.\n     */\n    window.history.pushState = function pushState(\n      data: any,\n      _unused: string,\n      url?: string | URL | null\n    ): void {\n      // Avoid a loop when Next.js internals trigger pushState/replaceState\n      if (data?.__NA || data?._N) {\n        return originalPushState(data, _unused, url)\n      }\n\n      data = copyNextJsInternalHistoryState(data)\n\n      if (url) {\n        applyUrlFromHistoryPushReplace(url)\n      }\n\n      return originalPushState(data, _unused, url)\n    }\n\n    /**\n     * Patch replaceState to ensure external changes to the history are reflected in the Next.js Router.\n     * Ensures Next.js internal history state is copied to the new history entry.\n     * Ensures usePathname and useSearchParams hold the newly provided url.\n     */\n    window.history.replaceState = function replaceState(\n      data: any,\n      _unused: string,\n      url?: string | URL | null\n    ): void {\n      // Avoid a loop when Next.js internals trigger pushState/replaceState\n      if (data?.__NA || data?._N) {\n        return originalReplaceState(data, _unused, url)\n      }\n      data = copyNextJsInternalHistoryState(data)\n\n      if (url) {\n        applyUrlFromHistoryPushReplace(url)\n      }\n      return originalReplaceState(data, _unused, url)\n    }\n\n    /**\n     * Handle popstate event, this is used to handle back/forward in the browser.\n     * By default dispatches ACTION_RESTORE, however if the history entry was not pushed/replaced by app-router it will reload the page.\n     * That case can happen when the old router injected the history entry.\n     */\n    const onPopState = (event: PopStateEvent) => {\n      if (!event.state) {\n        // TODO-APP: this case only happens when pushState/replaceState was called outside of Next.js. It should probably reload the page in this case.\n        return\n      }\n\n      // This case happens when the history entry was pushed by the `pages` router.\n      if (!event.state.__NA) {\n        window.location.reload()\n        return\n      }\n\n      // TODO-APP: Ideally the back button should not use startTransition as it should apply the updates synchronously\n      // Without startTransition works if the cache is there for this path\n      startTransition(() => {\n        dispatchTraverseAction(\n          window.location.href,\n          event.state.__PRIVATE_NEXTJS_INTERNALS_TREE\n        )\n      })\n    }\n\n    // Register popstate event to call onPopstate.\n    window.addEventListener('popstate', onPopState)\n    return () => {\n      window.history.pushState = originalPushState\n      window.history.replaceState = originalReplaceState\n      window.removeEventListener('popstate', onPopState)\n    }\n  }, [])\n\n  const { cache, tree, nextUrl, focusAndScrollRef } = state\n\n  const matchingHead = useMemo(() => {\n    return findHeadInCache(cache, tree[1])\n  }, [cache, tree])\n\n  // Add memoized pathParams for useParams.\n  const pathParams = useMemo(() => {\n    return getSelectedParams(tree)\n  }, [tree])\n\n  const layoutRouterContext = useMemo(() => {\n    return {\n      parentTree: tree,\n      parentCacheNode: cache,\n      parentSegmentPath: null,\n      // Root node always has `url`\n      // Provided in AppTreeContext to ensure it can be overwritten in layout-router\n      url: canonicalUrl,\n    }\n  }, [tree, cache, canonicalUrl])\n\n  const globalLayoutRouterContext = useMemo(() => {\n    return {\n      tree,\n      focusAndScrollRef,\n      nextUrl,\n    }\n  }, [tree, focusAndScrollRef, nextUrl])\n\n  let head\n  if (matchingHead !== null) {\n    // The head is wrapped in an extra component so we can use\n    // `useDeferredValue` to swap between the prefetched and final versions of\n    // the head. (This is what LayoutRouter does for segment data, too.)\n    //\n    // The `key` is used to remount the component whenever the head moves to\n    // a different segment.\n    const [headCacheNode, headKey] = matchingHead\n    head = <Head key={headKey} headCacheNode={headCacheNode} />\n  } else {\n    head = null\n  }\n\n  let content = (\n    <RedirectBoundary>\n      {head}\n      {cache.rsc}\n      <AppRouterAnnouncer tree={tree} />\n    </RedirectBoundary>\n  )\n\n  if (process.env.NODE_ENV !== 'production') {\n    // In development, we apply few error boundaries and hot-reloader:\n    // - DevRootHTTPAccessFallbackBoundary: avoid using navigation API like notFound() in root layout\n    // - HotReloader:\n    //  - hot-reload the app when the code changes\n    //  - render dev overlay\n    //  - catch runtime errors and display global-error when necessary\n    if (typeof window !== 'undefined') {\n      const { DevRootHTTPAccessFallbackBoundary } =\n        require('./dev-root-http-access-fallback-boundary') as typeof import('./dev-root-http-access-fallback-boundary')\n      content = (\n        <DevRootHTTPAccessFallbackBoundary>\n          {content}\n        </DevRootHTTPAccessFallbackBoundary>\n      )\n    }\n    const HotReloader: typeof import('./react-dev-overlay/app/hot-reloader-client').default =\n      require('./react-dev-overlay/app/hot-reloader-client').default\n\n    content = (\n      <HotReloader assetPrefix={assetPrefix} globalError={globalError}>\n        {content}\n      </HotReloader>\n    )\n  } else {\n    // In production, we only apply the user-customized global error boundary.\n    content = (\n      <ErrorBoundary\n        errorComponent={globalError[0]}\n        errorStyles={globalError[1]}\n      >\n        {content}\n      </ErrorBoundary>\n    )\n  }\n\n  return (\n    <>\n      <HistoryUpdater appRouterState={state} />\n      <RuntimeStyles />\n      <PathParamsContext.Provider value={pathParams}>\n        <PathnameContext.Provider value={pathname}>\n          <SearchParamsContext.Provider value={searchParams}>\n            <GlobalLayoutRouterContext.Provider\n              value={globalLayoutRouterContext}\n            >\n              {/* TODO: We should be able to remove this context. useRouter\n                  should import from app-router-instance instead. It's only\n                  necessary because useRouter is shared between Pages and\n                  App Router. We should fork that module, then remove this\n                  context provider. */}\n              <AppRouterContext.Provider value={publicAppRouterInstance}>\n                <LayoutRouterContext.Provider value={layoutRouterContext}>\n                  {content}\n                </LayoutRouterContext.Provider>\n              </AppRouterContext.Provider>\n            </GlobalLayoutRouterContext.Provider>\n          </SearchParamsContext.Provider>\n        </PathnameContext.Provider>\n      </PathParamsContext.Provider>\n    </>\n  )\n}\n\nexport default function AppRouter({\n  actionQueue,\n  globalErrorComponentAndStyles: [globalErrorComponent, globalErrorStyles],\n  assetPrefix,\n}: {\n  actionQueue: AppRouterActionQueue\n  globalErrorComponentAndStyles: [GlobalErrorComponent, React.ReactNode]\n  assetPrefix: string\n}) {\n  useNavFailureHandler()\n\n  return (\n    <ErrorBoundary\n      // At the very top level, use the default GlobalError component as the final fallback.\n      // When the app router itself fails, which means the framework itself fails, we show the default error.\n      errorComponent={DefaultGlobalError}\n    >\n      <Router\n        actionQueue={actionQueue}\n        assetPrefix={assetPrefix}\n        globalError={[globalErrorComponent, globalErrorStyles]}\n      />\n    </ErrorBoundary>\n  )\n}\n\nconst runtimeStyles = new Set<string>()\nlet runtimeStyleChanged = new Set<() => void>()\n\nglobalThis._N_E_STYLE_LOAD = function (href: string) {\n  let len = runtimeStyles.size\n  runtimeStyles.add(href)\n  if (runtimeStyles.size !== len) {\n    runtimeStyleChanged.forEach((cb) => cb())\n  }\n  // TODO figure out how to get a promise here\n  // But maybe it's not necessary as react would block rendering until it's loaded\n  return Promise.resolve()\n}\n\nfunction RuntimeStyles() {\n  const [, forceUpdate] = React.useState(0)\n  const renderedStylesSize = runtimeStyles.size\n  useEffect(() => {\n    const changed = () => forceUpdate((c) => c + 1)\n    runtimeStyleChanged.add(changed)\n    if (renderedStylesSize !== runtimeStyles.size) {\n      changed()\n    }\n    return () => {\n      runtimeStyleChanged.delete(changed)\n    }\n  }, [renderedStylesSize, forceUpdate])\n\n  const dplId = process.env.NEXT_DEPLOYMENT_ID\n    ? `?dpl=${process.env.NEXT_DEPLOYMENT_ID}`\n    : ''\n  return [...runtimeStyles].map((href, i) => (\n    <link\n      key={i}\n      rel=\"stylesheet\"\n      href={`${href}${dplId}`}\n      // @ts-ignore\n      precedence=\"next\"\n      // TODO figure out crossOrigin and nonce\n      // crossOrigin={TODO}\n      // nonce={TODO}\n    />\n  ))\n}\n","import type { FlightRouterState } from '../../server/app-render/types'\nimport type { AppRouterInstance } from '../../shared/lib/app-router-context.shared-runtime'\nimport { getCurrentAppRouterState } from './app-router-instance'\nimport { createPrefetchURL } from './app-router'\nimport { PrefetchKind } from './router-reducer/router-reducer-types'\nimport { getCurrentCacheVersion } from './segment-cache'\nimport { createCacheKey } from './segment-cache'\nimport {\n  type PrefetchTask,\n  PrefetchPriority,\n  schedulePrefetchTask as scheduleSegmentPrefetchTask,\n  cancelPrefetchTask,\n  reschedulePrefetchTask,\n} from './segment-cache'\nimport { startTransition } from 'react'\n\ntype LinkElement = HTMLAnchorElement | SVGAElement\n\ntype Element = LinkElement | HTMLFormElement\n\n// Properties that are shared between Link and Form instances. We use the same\n// shape for both to prevent a polymorphic de-opt in the VM.\ntype LinkOrFormInstanceShared = {\n  router: AppRouterInstance\n  kind: PrefetchKind.AUTO | PrefetchKind.FULL\n\n  isVisible: boolean\n  wasHoveredOrTouched: boolean\n\n  // The most recently initiated prefetch task. It may or may not have\n  // already completed.  The same prefetch task object can be reused across\n  // multiple prefetches of the same link.\n  prefetchTask: PrefetchTask | null\n\n  // The cache version at the time the task was initiated. This is used to\n  // determine if the cache was invalidated since the task was initiated.\n  cacheVersion: number\n}\n\nexport type FormInstance = LinkOrFormInstanceShared & {\n  prefetchHref: string\n  setOptimisticLinkStatus: null\n}\n\ntype PrefetchableLinkInstance = LinkOrFormInstanceShared & {\n  prefetchHref: string\n  setOptimisticLinkStatus: (status: { pending: boolean }) => void\n}\n\ntype NonPrefetchableLinkInstance = LinkOrFormInstanceShared & {\n  prefetchHref: null\n  setOptimisticLinkStatus: (status: { pending: boolean }) => void\n}\n\ntype PrefetchableInstance = PrefetchableLinkInstance | FormInstance\n\nexport type LinkInstance =\n  | PrefetchableLinkInstance\n  | NonPrefetchableLinkInstance\n\n// Tracks the most recently navigated link instance. When null, indicates\n// the current navigation was not initiated by a link click.\nlet linkForMostRecentNavigation: LinkInstance | null = null\n\n// Status object indicating link is pending\nexport const PENDING_LINK_STATUS = { pending: true }\n\n// Status object indicating link is idle\nexport const IDLE_LINK_STATUS = { pending: false }\n\n// Updates the loading state when navigating between links\n// - Resets the previous link's loading state\n// - Sets the new link's loading state\n// - Updates tracking of current navigation\nexport function setLinkForCurrentNavigation(link: LinkInstance | null) {\n  startTransition(() => {\n    linkForMostRecentNavigation?.setOptimisticLinkStatus(IDLE_LINK_STATUS)\n    link?.setOptimisticLinkStatus(PENDING_LINK_STATUS)\n    linkForMostRecentNavigation = link\n  })\n}\n\n// Unmounts the current link instance from navigation tracking\nexport function unmountLinkForCurrentNavigation(link: LinkInstance) {\n  if (linkForMostRecentNavigation === link) {\n    linkForMostRecentNavigation = null\n  }\n}\n\n// Use a WeakMap to associate a Link instance with its DOM element. This is\n// used by the IntersectionObserver to track the link's visibility.\nconst prefetchable:\n  | WeakMap<Element, PrefetchableInstance>\n  | Map<Element, PrefetchableInstance> =\n  typeof WeakMap === 'function' ? new WeakMap() : new Map()\n\n// A Set of the currently visible links. We re-prefetch visible links after a\n// cache invalidation, or when the current URL changes. It's a separate data\n// structure from the WeakMap above because only the visible links need to\n// be enumerated.\nconst prefetchableAndVisible: Set<PrefetchableInstance> = new Set()\n\n// A single IntersectionObserver instance shared by all <Link> components.\nconst observer: IntersectionObserver | null =\n  typeof IntersectionObserver === 'function'\n    ? new IntersectionObserver(handleIntersect, {\n        rootMargin: '200px',\n      })\n    : null\n\nfunction observeVisibility(element: Element, instance: PrefetchableInstance) {\n  const existingInstance = prefetchable.get(element)\n  if (existingInstance !== undefined) {\n    // This shouldn't happen because each <Link> component should have its own\n    // anchor tag instance, but it's defensive coding to avoid a memory leak in\n    // case there's a logical error somewhere else.\n    unmountPrefetchableInstance(element)\n  }\n  // Only track prefetchable links that have a valid prefetch URL\n  prefetchable.set(element, instance)\n  if (observer !== null) {\n    observer.observe(element)\n  }\n}\n\nfunction coercePrefetchableUrl(href: string): URL | null {\n  try {\n    return createPrefetchURL(href)\n  } catch {\n    // createPrefetchURL sometimes throws an error if an invalid URL is\n    // provided, though I'm not sure if it's actually necessary.\n    // TODO: Consider removing the throw from the inner function, or change it\n    // to reportError. Or maybe the error isn't even necessary for automatic\n    // prefetches, just navigations.\n    const reportErrorFn =\n      typeof reportError === 'function' ? reportError : console.error\n    reportErrorFn(\n      `Cannot prefetch '${href}' because it cannot be converted to a URL.`\n    )\n    return null\n  }\n}\n\nexport function mountLinkInstance(\n  element: LinkElement,\n  href: string,\n  router: AppRouterInstance,\n  kind: PrefetchKind.AUTO | PrefetchKind.FULL,\n  prefetchEnabled: boolean,\n  setOptimisticLinkStatus: (status: { pending: boolean }) => void\n): LinkInstance {\n  if (prefetchEnabled) {\n    const prefetchURL = coercePrefetchableUrl(href)\n    if (prefetchURL !== null) {\n      const instance: PrefetchableLinkInstance = {\n        router,\n        kind,\n        isVisible: false,\n        wasHoveredOrTouched: false,\n        prefetchTask: null,\n        cacheVersion: -1,\n        prefetchHref: prefetchURL.href,\n        setOptimisticLinkStatus,\n      }\n      // We only observe the link's visibility if it's prefetchable. For\n      // example, this excludes links to external URLs.\n      observeVisibility(element, instance)\n      return instance\n    }\n  }\n  // If the link is not prefetchable, we still create an instance so we can\n  // track its optimistic state (i.e. useLinkStatus).\n  const instance: NonPrefetchableLinkInstance = {\n    router,\n    kind,\n    isVisible: false,\n    wasHoveredOrTouched: false,\n    prefetchTask: null,\n    cacheVersion: -1,\n    prefetchHref: null,\n    setOptimisticLinkStatus,\n  }\n  return instance\n}\n\nexport function mountFormInstance(\n  element: HTMLFormElement,\n  href: string,\n  router: AppRouterInstance,\n  kind: PrefetchKind.AUTO | PrefetchKind.FULL\n): void {\n  const prefetchURL = coercePrefetchableUrl(href)\n  if (prefetchURL === null) {\n    // This href is not prefetchable, so we don't track it.\n    // TODO: We currently observe/unobserve a form every time its href changes.\n    // For Links, this isn't a big deal because the href doesn't usually change,\n    // but for forms it's extremely common. We should optimize this.\n    return\n  }\n  const instance: FormInstance = {\n    router,\n    kind,\n    isVisible: false,\n    wasHoveredOrTouched: false,\n    prefetchTask: null,\n    cacheVersion: -1,\n    prefetchHref: prefetchURL.href,\n    setOptimisticLinkStatus: null,\n  }\n  observeVisibility(element, instance)\n}\n\nexport function unmountPrefetchableInstance(element: Element) {\n  const instance = prefetchable.get(element)\n  if (instance !== undefined) {\n    prefetchable.delete(element)\n    prefetchableAndVisible.delete(instance)\n    const prefetchTask = instance.prefetchTask\n    if (prefetchTask !== null) {\n      cancelPrefetchTask(prefetchTask)\n    }\n  }\n  if (observer !== null) {\n    observer.unobserve(element)\n  }\n}\n\nfunction handleIntersect(entries: Array<IntersectionObserverEntry>) {\n  for (const entry of entries) {\n    // Some extremely old browsers or polyfills don't reliably support\n    // isIntersecting so we check intersectionRatio instead. (Do we care? Not\n    // really. But whatever this is fine.)\n    const isVisible = entry.intersectionRatio > 0\n    onLinkVisibilityChanged(entry.target as HTMLAnchorElement, isVisible)\n  }\n}\n\nexport function onLinkVisibilityChanged(element: Element, isVisible: boolean) {\n  if (process.env.NODE_ENV !== 'production') {\n    // Prefetching on viewport is disabled in development for performance\n    // reasons, because it requires compiling the target page.\n    // TODO: Investigate re-enabling this.\n    return\n  }\n\n  const instance = prefetchable.get(element)\n  if (instance === undefined) {\n    return\n  }\n\n  instance.isVisible = isVisible\n  if (isVisible) {\n    prefetchableAndVisible.add(instance)\n  } else {\n    prefetchableAndVisible.delete(instance)\n  }\n  rescheduleLinkPrefetch(instance)\n}\n\nexport function onNavigationIntent(\n  element: HTMLAnchorElement | SVGAElement,\n  unstable_upgradeToDynamicPrefetch: boolean\n) {\n  const instance = prefetchable.get(element)\n  if (instance === undefined) {\n    return\n  }\n  // Prefetch the link on hover/touchstart.\n  if (instance !== undefined) {\n    instance.wasHoveredOrTouched = true\n    if (\n      process.env.__NEXT_DYNAMIC_ON_HOVER &&\n      unstable_upgradeToDynamicPrefetch\n    ) {\n      // Switch to a full, dynamic prefetch\n      instance.kind = PrefetchKind.FULL\n    }\n    rescheduleLinkPrefetch(instance)\n  }\n}\n\nfunction rescheduleLinkPrefetch(instance: PrefetchableInstance) {\n  const existingPrefetchTask = instance.prefetchTask\n\n  if (!instance.isVisible) {\n    // Cancel any in-progress prefetch task. (If it already finished then this\n    // is a no-op.)\n    if (existingPrefetchTask !== null) {\n      cancelPrefetchTask(existingPrefetchTask)\n    }\n    // We don't need to reset the prefetchTask to null upon cancellation; an\n    // old task object can be rescheduled with reschedulePrefetchTask. This is a\n    // micro-optimization but also makes the code simpler (don't need to\n    // worry about whether an old task object is stale).\n    return\n  }\n\n  if (!process.env.__NEXT_CLIENT_SEGMENT_CACHE) {\n    // The old prefetch implementation does not have different priority levels.\n    // Just schedule a new prefetch task.\n    prefetchWithOldCacheImplementation(instance)\n    return\n  }\n\n  // In the Segment Cache implementation, we assign a higher priority level to\n  // links that were at one point hovered or touched. Since the queue is last-\n  // in-first-out, the highest priority Link is whichever one was hovered last.\n  //\n  // We also increase the relative priority of links whenever they re-enter the\n  // viewport, as if they were being scheduled for the first time.\n  const priority = instance.wasHoveredOrTouched\n    ? PrefetchPriority.Intent\n    : PrefetchPriority.Default\n  const appRouterState = getCurrentAppRouterState()\n  if (appRouterState !== null) {\n    const treeAtTimeOfPrefetch = appRouterState.tree\n    if (existingPrefetchTask === null) {\n      // Initiate a prefetch task.\n      const nextUrl = appRouterState.nextUrl\n      const cacheKey = createCacheKey(instance.prefetchHref, nextUrl)\n      instance.prefetchTask = scheduleSegmentPrefetchTask(\n        cacheKey,\n        treeAtTimeOfPrefetch,\n        instance.kind === PrefetchKind.FULL,\n        priority\n      )\n    } else {\n      // We already have an old task object that we can reschedule. This is\n      // effectively the same as canceling the old task and creating a new one.\n      reschedulePrefetchTask(\n        existingPrefetchTask,\n        treeAtTimeOfPrefetch,\n        instance.kind === PrefetchKind.FULL,\n        priority\n      )\n    }\n\n    // Keep track of the cache version at the time the prefetch was requested.\n    // This is used to check if the prefetch is stale.\n    instance.cacheVersion = getCurrentCacheVersion()\n  }\n}\n\nexport function pingVisibleLinks(\n  nextUrl: string | null,\n  tree: FlightRouterState\n) {\n  // For each currently visible link, cancel the existing prefetch task (if it\n  // exists) and schedule a new one. This is effectively the same as if all the\n  // visible links left and then re-entered the viewport.\n  //\n  // This is called when the Next-Url or the base tree changes, since those\n  // may affect the result of a prefetch task. It's also called after a\n  // cache invalidation.\n  const currentCacheVersion = getCurrentCacheVersion()\n  for (const instance of prefetchableAndVisible) {\n    const task = instance.prefetchTask\n    if (\n      task !== null &&\n      instance.cacheVersion === currentCacheVersion &&\n      task.key.nextUrl === nextUrl &&\n      task.treeAtTimeOfPrefetch === tree\n    ) {\n      // The cache has not been invalidated, and none of the inputs have\n      // changed. Bail out.\n      continue\n    }\n    // Something changed. Cancel the existing prefetch task and schedule a\n    // new one.\n    if (task !== null) {\n      cancelPrefetchTask(task)\n    }\n    const cacheKey = createCacheKey(instance.prefetchHref, nextUrl)\n    const priority = instance.wasHoveredOrTouched\n      ? PrefetchPriority.Intent\n      : PrefetchPriority.Default\n    instance.prefetchTask = scheduleSegmentPrefetchTask(\n      cacheKey,\n      tree,\n      instance.kind === PrefetchKind.FULL,\n      priority\n    )\n    instance.cacheVersion = getCurrentCacheVersion()\n  }\n}\n\nfunction prefetchWithOldCacheImplementation(instance: PrefetchableInstance) {\n  // This is the path used when the Segment Cache is not enabled.\n  if (typeof window === 'undefined') {\n    return\n  }\n\n  const doPrefetch = async () => {\n    // note that `appRouter.prefetch()` is currently sync,\n    // so we have to wrap this call in an async function to be able to catch() errors below.\n    return instance.router.prefetch(instance.prefetchHref, {\n      kind: instance.kind,\n    })\n  }\n\n  // Prefetch the page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n  doPrefetch().catch((err) => {\n    if (process.env.NODE_ENV !== 'production') {\n      // rethrow to show invalid URL errors\n      throw err\n    }\n  })\n}\n","/**\n * @license React\n * react-dom.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"next/dist/compiled/react\");\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nfunction noop() {}\nvar Internals = {\n    d: {\n      f: noop,\n      r: function () {\n        throw Error(formatProdErrorMessage(522));\n      },\n      D: noop,\n      C: noop,\n      L: noop,\n      m: noop,\n      X: noop,\n      S: noop,\n      M: noop\n    },\n    p: 0,\n    findDOMNode: null\n  },\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\nfunction createPortal$1(children, containerInfo, implementation) {\n  var key =\n    3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: REACT_PORTAL_TYPE,\n    key: null == key ? null : \"\" + key,\n    children: children,\n    containerInfo: containerInfo,\n    implementation: implementation\n  };\n}\nvar ReactSharedInternals =\n  React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\nfunction getCrossOriginStringAs(as, input) {\n  if (\"font\" === as) return \"\";\n  if (\"string\" === typeof input)\n    return \"use-credentials\" === input ? input : \"\";\n}\nexports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  Internals;\nexports.createPortal = function (children, container) {\n  var key =\n    2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  if (\n    !container ||\n    (1 !== container.nodeType &&\n      9 !== container.nodeType &&\n      11 !== container.nodeType)\n  )\n    throw Error(formatProdErrorMessage(299));\n  return createPortal$1(children, container, null, key);\n};\nexports.flushSync = function (fn) {\n  var previousTransition = ReactSharedInternals.T,\n    previousUpdatePriority = Internals.p;\n  try {\n    if (((ReactSharedInternals.T = null), (Internals.p = 2), fn)) return fn();\n  } finally {\n    (ReactSharedInternals.T = previousTransition),\n      (Internals.p = previousUpdatePriority),\n      Internals.d.f();\n  }\n};\nexports.preconnect = function (href, options) {\n  \"string\" === typeof href &&\n    (options\n      ? ((options = options.crossOrigin),\n        (options =\n          \"string\" === typeof options\n            ? \"use-credentials\" === options\n              ? options\n              : \"\"\n            : void 0))\n      : (options = null),\n    Internals.d.C(href, options));\n};\nexports.prefetchDNS = function (href) {\n  \"string\" === typeof href && Internals.d.D(href);\n};\nexports.preinit = function (href, options) {\n  if (\"string\" === typeof href && options && \"string\" === typeof options.as) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),\n      integrity =\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      fetchPriority =\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0;\n    \"style\" === as\n      ? Internals.d.S(\n          href,\n          \"string\" === typeof options.precedence ? options.precedence : void 0,\n          {\n            crossOrigin: crossOrigin,\n            integrity: integrity,\n            fetchPriority: fetchPriority\n          }\n        )\n      : \"script\" === as &&\n        Internals.d.X(href, {\n          crossOrigin: crossOrigin,\n          integrity: integrity,\n          fetchPriority: fetchPriority,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n  }\n};\nexports.preinitModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (\"object\" === typeof options && null !== options) {\n      if (null == options.as || \"script\" === options.as) {\n        var crossOrigin = getCrossOriginStringAs(\n          options.as,\n          options.crossOrigin\n        );\n        Internals.d.M(href, {\n          crossOrigin: crossOrigin,\n          integrity:\n            \"string\" === typeof options.integrity ? options.integrity : void 0,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n      }\n    } else null == options && Internals.d.M(href);\n};\nexports.preload = function (href, options) {\n  if (\n    \"string\" === typeof href &&\n    \"object\" === typeof options &&\n    null !== options &&\n    \"string\" === typeof options.as\n  ) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin);\n    Internals.d.L(href, as, {\n      crossOrigin: crossOrigin,\n      integrity:\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      nonce: \"string\" === typeof options.nonce ? options.nonce : void 0,\n      type: \"string\" === typeof options.type ? options.type : void 0,\n      fetchPriority:\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0,\n      referrerPolicy:\n        \"string\" === typeof options.referrerPolicy\n          ? options.referrerPolicy\n          : void 0,\n      imageSrcSet:\n        \"string\" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,\n      imageSizes:\n        \"string\" === typeof options.imageSizes ? options.imageSizes : void 0,\n      media: \"string\" === typeof options.media ? options.media : void 0\n    });\n  }\n};\nexports.preloadModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (options) {\n      var crossOrigin = getCrossOriginStringAs(options.as, options.crossOrigin);\n      Internals.d.m(href, {\n        as:\n          \"string\" === typeof options.as && \"script\" !== options.as\n            ? options.as\n            : void 0,\n        crossOrigin: crossOrigin,\n        integrity:\n          \"string\" === typeof options.integrity ? options.integrity : void 0\n      });\n    } else Internals.d.m(href);\n};\nexports.requestFormReset = function (form) {\n  Internals.d.r(form);\n};\nexports.unstable_batchedUpdates = function (fn, a) {\n  return fn(a);\n};\nexports.useFormState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useFormState(action, initialState, permalink);\n};\nexports.useFormStatus = function () {\n  return ReactSharedInternals.H.useHostTransitionStatus();\n};\nexports.version = \"19.2.0-canary-3fbfb9ba-20250409\";\n","import { createAsyncLocalStorage } from './async-local-storage';\nexport const actionAsyncStorageInstance = createAsyncLocalStorage();\n\n//# sourceMappingURL=action-async-storage-instance.js.map","// Share the instance module in the next-shared layer\nimport { actionAsyncStorageInstance } from './action-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { actionAsyncStorageInstance as actionAsyncStorage };\n\n//# sourceMappingURL=action-async-storage.external.js.map","import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n/**\n * This function allows you to render the [not-found.js file](https://nextjs.org/docs/app/api-reference/file-conventions/not-found)\n * within a route segment as well as inject a tag.\n *\n * `notFound()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a `<meta name=\"robots\" content=\"noindex\" />` meta tag and set the status code to 404.\n * - In a Route Handler or Server Action, it will serve a 404 to the caller.\n *\n * Read more: [Next.js Docs: `notFound`](https://nextjs.org/docs/app/api-reference/functions/not-found)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};404`\n\nexport function notFound(): never {\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n\n  throw error\n}\n","import { NEXT_INTERCEPTION_MARKER_PREFIX, NEXT_QUERY_PARAM_PREFIX } from '../../lib/constants';\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */ export function fromNodeOutgoingHttpHeaders(nodeHeaders) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(nodeHeaders)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (typeof v === 'undefined') continue;\n            if (typeof v === 'number') {\n                v = v.toString();\n            }\n            headers.append(key, v);\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ export function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== '=' && ch !== ';' && ch !== ',';\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === ',') {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === '=') {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */ export function toNodeOutgoingHttpHeaders(headers) {\n    const nodeHeaders = {};\n    const cookies = [];\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            if (key.toLowerCase() === 'set-cookie') {\n                // We may have gotten a comma joined string of cookies, or multiple\n                // set-cookie headers. We need to merge them into one header array\n                // to represent all the cookies.\n                cookies.push(...splitCookiesString(value));\n                nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies;\n            } else {\n                nodeHeaders[key] = value;\n            }\n        }\n    }\n    return nodeHeaders;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ export function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw Object.defineProperty(new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E61\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\n/**\n * Normalizes `nxtP` and `nxtI` query param values to remove the prefix.\n * This function does not mutate the input key.\n */ export function normalizeNextQueryParam(key) {\n    const prefixes = [\n        NEXT_QUERY_PARAM_PREFIX,\n        NEXT_INTERCEPTION_MARKER_PREFIX\n    ];\n    for (const prefix of prefixes){\n        if (key !== prefix && key.startsWith(prefix)) {\n            return key.substring(prefix.length);\n        }\n    }\n    return null;\n}\n\n//# sourceMappingURL=utils.js.map","export class PageSignatureError extends Error {\n    constructor({ page }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nexport class RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nexport class RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n}\n\n//# sourceMappingURL=error.js.map","export var PAGE_TYPES = /*#__PURE__*/ function(PAGE_TYPES) {\n    PAGE_TYPES[\"PAGES\"] = \"pages\";\n    PAGE_TYPES[\"ROOT\"] = \"root\";\n    PAGE_TYPES[\"APP\"] = \"app\";\n    return PAGE_TYPES;\n}({});\n\n//# sourceMappingURL=page-types.js.map","/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */\nexport function ensureLeadingSlash(path: string) {\n  return path.startsWith('/') ? path : `/${path}`\n}\n","import { HeadersAdapter } from '../web/spec-extension/adapters/headers';\nimport { PRERENDER_REVALIDATE_HEADER, PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER } from '../../lib/constants';\nimport { getTracer } from '../lib/trace/tracer';\nimport { NodeSpan } from '../lib/trace/constants';\nexport function wrapApiHandler(page, handler) {\n    return (...args)=>{\n        getTracer().setRootSpanAttribute('next.route', page);\n        // Call API route method\n        return getTracer().trace(NodeSpan.runHandler, {\n            spanName: `executing api route (pages) ${page}`\n        }, ()=>handler(...args));\n    };\n}\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */ export function sendStatusCode(res, statusCode) {\n    res.statusCode = statusCode;\n    return res;\n}\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */ export function redirect(res, statusOrUrl, url) {\n    if (typeof statusOrUrl === 'string') {\n        url = statusOrUrl;\n        statusOrUrl = 307;\n    }\n    if (typeof statusOrUrl !== 'number' || typeof url !== 'string') {\n        throw Object.defineProperty(new Error(`Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`), \"__NEXT_ERROR_CODE\", {\n            value: \"E389\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    res.writeHead(statusOrUrl, {\n        Location: url\n    });\n    res.write(url);\n    res.end();\n    return res;\n}\nexport function checkIsOnDemandRevalidate(req, previewProps) {\n    const headers = HeadersAdapter.from(req.headers);\n    const previewModeId = headers.get(PRERENDER_REVALIDATE_HEADER);\n    const isOnDemandRevalidate = previewModeId === previewProps.previewModeId;\n    const revalidateOnlyGenerated = headers.has(PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER);\n    return {\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated\n    };\n}\nexport const COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`;\nexport const COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`;\nexport const RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024;\nexport const SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA);\nexport const SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS);\nexport function clearPreviewData(res, options = {}) {\n    if (SYMBOL_CLEARED_COOKIES in res) {\n        return res;\n    }\n    const { serialize } = require('next/dist/compiled/cookie');\n    const previous = res.getHeader('Set-Cookie');\n    res.setHeader(`Set-Cookie`, [\n        ...typeof previous === 'string' ? [\n            previous\n        ] : Array.isArray(previous) ? previous : [],\n        serialize(COOKIE_NAME_PRERENDER_BYPASS, '', {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/',\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        }),\n        serialize(COOKIE_NAME_PRERENDER_DATA, '', {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/',\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        })\n    ]);\n    Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n        value: true,\n        enumerable: false\n    });\n    return res;\n}\n/**\n * Custom error class\n */ export class ApiError extends Error {\n    constructor(statusCode, message){\n        super(message);\n        this.statusCode = statusCode;\n    }\n}\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */ export function sendError(res, statusCode, message) {\n    res.statusCode = statusCode;\n    res.statusMessage = message;\n    res.end(message);\n}\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */ export function setLazyProp({ req }, prop, getter) {\n    const opts = {\n        configurable: true,\n        enumerable: true\n    };\n    const optsReset = {\n        ...opts,\n        writable: true\n    };\n    Object.defineProperty(req, prop, {\n        ...opts,\n        get: ()=>{\n            const value = getter();\n            // we set the property on the object to avoid recalculating it\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n            return value;\n        },\n        set: (value)=>{\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n        }\n    });\n}\n\n//# sourceMappingURL=index.js.map","import { ResponseAbortedName, createAbortController } from './web/spec-extension/adapters/next-request';\nimport { DetachedPromise } from '../lib/detached-promise';\nimport { getTracer } from './lib/trace/tracer';\nimport { NextNodeServerSpan } from './lib/trace/constants';\nimport { getClientComponentLoaderMetrics } from './client-component-renderer-logger';\nexport function isAbortError(e) {\n    return (e == null ? void 0 : e.name) === 'AbortError' || (e == null ? void 0 : e.name) === ResponseAbortedName;\n}\nfunction createWriterFromResponse(res, waitUntilForEnd) {\n    let started = false;\n    // Create a promise that will resolve once the response has drained. See\n    // https://nodejs.org/api/stream.html#stream_event_drain\n    let drained = new DetachedPromise();\n    function onDrain() {\n        drained.resolve();\n    }\n    res.on('drain', onDrain);\n    // If the finish event fires, it means we shouldn't block and wait for the\n    // drain event.\n    res.once('close', ()=>{\n        res.off('drain', onDrain);\n        drained.resolve();\n    });\n    // Create a promise that will resolve once the response has finished. See\n    // https://nodejs.org/api/http.html#event-finish_1\n    const finished = new DetachedPromise();\n    res.once('finish', ()=>{\n        finished.resolve();\n    });\n    // Create a writable stream that will write to the response.\n    return new WritableStream({\n        write: async (chunk)=>{\n            // You'd think we'd want to use `start` instead of placing this in `write`\n            // but this ensures that we don't actually flush the headers until we've\n            // started writing chunks.\n            if (!started) {\n                started = true;\n                if ('performance' in globalThis && process.env.NEXT_OTEL_PERFORMANCE_PREFIX) {\n                    const metrics = getClientComponentLoaderMetrics();\n                    if (metrics) {\n                        performance.measure(`${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-client-component-loading`, {\n                            start: metrics.clientComponentLoadStart,\n                            end: metrics.clientComponentLoadStart + metrics.clientComponentLoadTimes\n                        });\n                    }\n                }\n                res.flushHeaders();\n                getTracer().trace(NextNodeServerSpan.startResponse, {\n                    spanName: 'start response'\n                }, ()=>undefined);\n            }\n            try {\n                const ok = res.write(chunk);\n                // Added by the `compression` middleware, this is a function that will\n                // flush the partially-compressed response to the client.\n                if ('flush' in res && typeof res.flush === 'function') {\n                    res.flush();\n                }\n                // If the write returns false, it means there's some backpressure, so\n                // wait until it's streamed before continuing.\n                if (!ok) {\n                    await drained.promise;\n                    // Reset the drained promise so that we can wait for the next drain event.\n                    drained = new DetachedPromise();\n                }\n            } catch (err) {\n                res.end();\n                throw Object.defineProperty(new Error('failed to write chunk to response', {\n                    cause: err\n                }), \"__NEXT_ERROR_CODE\", {\n                    value: \"E321\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        },\n        abort: (err)=>{\n            if (res.writableFinished) return;\n            res.destroy(err);\n        },\n        close: async ()=>{\n            // if a waitUntil promise was passed, wait for it to resolve before\n            // ending the response.\n            if (waitUntilForEnd) {\n                await waitUntilForEnd;\n            }\n            if (res.writableFinished) return;\n            res.end();\n            return finished.promise;\n        }\n    });\n}\nexport async function pipeToNodeResponse(readable, res, waitUntilForEnd) {\n    try {\n        // If the response has already errored, then just return now.\n        const { errored, destroyed } = res;\n        if (errored || destroyed) return;\n        // Create a new AbortController so that we can abort the readable if the\n        // client disconnects.\n        const controller = createAbortController(res);\n        const writer = createWriterFromResponse(res, waitUntilForEnd);\n        await readable.pipeTo(writer, {\n            signal: controller.signal\n        });\n    } catch (err) {\n        // If this isn't related to an abort error, re-throw it.\n        if (isAbortError(err)) return;\n        throw Object.defineProperty(new Error('failed to pipe response', {\n            cause: err\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E180\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\n\n//# sourceMappingURL=pipe-readable.js.map","import { CachedRouteKind, IncrementalCacheKind } from './types';\nimport RenderResult from '../render-result';\nimport { RouteKind } from '../route-kind';\nexport async function fromResponseCacheEntry(cacheEntry) {\n    var _cacheEntry_value, _cacheEntry_value1;\n    return {\n        ...cacheEntry,\n        value: ((_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) === CachedRouteKind.PAGES ? {\n            kind: CachedRouteKind.PAGES,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            pageData: cacheEntry.value.pageData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status\n        } : ((_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind) === CachedRouteKind.APP_PAGE ? {\n            kind: CachedRouteKind.APP_PAGE,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            postponed: cacheEntry.value.postponed,\n            rscData: cacheEntry.value.rscData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status,\n            segmentData: cacheEntry.value.segmentData\n        } : cacheEntry.value\n    };\n}\nexport async function toResponseCacheEntry(response) {\n    var _response_value, _response_value1;\n    if (!response) return null;\n    return {\n        isMiss: response.isMiss,\n        isStale: response.isStale,\n        cacheControl: response.cacheControl,\n        isFallback: response.isFallback,\n        value: ((_response_value = response.value) == null ? void 0 : _response_value.kind) === CachedRouteKind.PAGES ? {\n            kind: CachedRouteKind.PAGES,\n            html: RenderResult.fromStatic(response.value.html),\n            pageData: response.value.pageData,\n            headers: response.value.headers,\n            status: response.value.status\n        } : ((_response_value1 = response.value) == null ? void 0 : _response_value1.kind) === CachedRouteKind.APP_PAGE ? {\n            kind: CachedRouteKind.APP_PAGE,\n            html: RenderResult.fromStatic(response.value.html),\n            rscData: response.value.rscData,\n            headers: response.value.headers,\n            status: response.value.status,\n            postponed: response.value.postponed,\n            segmentData: response.value.segmentData\n        } : response.value\n    };\n}\nexport function routeKindToIncrementalCacheKind(routeKind) {\n    switch(routeKind){\n        case RouteKind.PAGES:\n            return IncrementalCacheKind.PAGES;\n        case RouteKind.APP_PAGE:\n            return IncrementalCacheKind.APP_PAGE;\n        case RouteKind.IMAGE:\n            return IncrementalCacheKind.IMAGE;\n        case RouteKind.APP_ROUTE:\n            return IncrementalCacheKind.APP_ROUTE;\n        default:\n            throw Object.defineProperty(new Error(`Unexpected route kind ${routeKind}`), \"__NEXT_ERROR_CODE\", {\n                value: \"E64\",\n                enumerable: false,\n                configurable: true\n            });\n    }\n}\n\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    getTestReqInfo: null,\n    withRequest: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    getTestReqInfo: function() {\n        return getTestReqInfo;\n    },\n    withRequest: function() {\n        return withRequest;\n    }\n});\nconst _nodeasync_hooks = require(\"node:async_hooks\");\nconst testStorage = new _nodeasync_hooks.AsyncLocalStorage();\nfunction extractTestInfoFromRequest(req, reader) {\n    const proxyPortHeader = reader.header(req, 'next-test-proxy-port');\n    if (!proxyPortHeader) {\n        return undefined;\n    }\n    const url = reader.url(req);\n    const proxyPort = Number(proxyPortHeader);\n    const testData = reader.header(req, 'next-test-data') || '';\n    return {\n        url,\n        proxyPort,\n        testData\n    };\n}\nfunction withRequest(req, reader, fn) {\n    const testReqInfo = extractTestInfoFromRequest(req, reader);\n    if (!testReqInfo) {\n        return fn();\n    }\n    return testStorage.run(testReqInfo, fn);\n}\nfunction getTestReqInfo(req, reader) {\n    const testReqInfo = testStorage.getStore();\n    if (testReqInfo) {\n        return testReqInfo;\n    }\n    if (req && reader) {\n        return extractTestInfoFromRequest(req, reader);\n    }\n    return undefined;\n}\n\n//# sourceMappingURL=context.js.map","// Note: This file is JS because it's used by the taskfile-swc.js file, which is JS.\n// Keep file changes in sync with the corresponding `.d.ts` files.\n/**\n * These are the browser versions that support all of the following:\n * static import: https://caniuse.com/es6-module\n * dynamic import: https://caniuse.com/es6-module-dynamic-import\n * import.meta: https://caniuse.com/mdn-javascript_operators_import_meta\n */\nconst MODERN_BROWSERSLIST_TARGET = [\n  'chrome 64',\n  'edge 79',\n  'firefox 67',\n  'opera 51',\n  'safari 12',\n]\n\nmodule.exports = MODERN_BROWSERSLIST_TARGET\n","// We share the tags manifest between the \"use cache\" handlers and the previous\n// file-system cache.\nexport const tagsManifest = new Map();\nexport const isStale = (tags, timestamp)=>{\n    for (const tag of tags){\n        const revalidatedAt = tagsManifest.get(tag);\n        if (typeof revalidatedAt === 'number' && revalidatedAt >= timestamp) {\n            return true;\n        }\n    }\n    return false;\n};\n\n//# sourceMappingURL=tags-manifest.external.js.map","const basePath = process.env.__NEXT_ROUTER_BASEPATH || ''\nconst pathname = `${basePath}/__nextjs_source-map`\n\nexport const findSourceMapURL =\n  process.env.NODE_ENV === 'development'\n    ? function findSourceMapURL(filename: string): string | null {\n        if (filename === '') {\n          return null\n        }\n\n        if (\n          filename.startsWith(document.location.origin) &&\n          filename.includes('/_next/static')\n        ) {\n          // This is a request for a client chunk. This can only happen when\n          // using Turbopack. In this case, since we control how those source\n          // maps are generated, we can safely assume that the sourceMappingURL\n          // is relative to the filename, with an added `.map` extension. The\n          // browser can just request this file, and it gets served through the\n          // normal dev server, without the need to route this through\n          // the `/__nextjs_source-map` dev middleware.\n          return `${filename}.map`\n        }\n\n        const url = new URL(pathname, document.location.origin)\n        url.searchParams.set('filename', filename)\n\n        return url.href\n      }\n    : undefined\n","import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n// TODO: Add `forbidden` docs\n/**\n * @experimental\n * This function allows you to render the [forbidden.js file](https://nextjs.org/docs/app/api-reference/file-conventions/forbidden)\n * within a route segment as well as inject a tag.\n *\n * `forbidden()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * Read more: [Next.js Docs: `forbidden`](https://nextjs.org/docs/app/api-reference/functions/forbidden)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};403`\n\nexport function forbidden(): never {\n  if (!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS) {\n    throw new Error(\n      `\\`forbidden()\\` is experimental and only allowed to be enabled when \\`experimental.authInterrupts\\` is enabled.`\n    )\n  }\n\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n  throw error\n}\n","import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n// TODO: Add `unauthorized` docs\n/**\n * @experimental\n * This function allows you to render the [unauthorized.js file](https://nextjs.org/docs/app/api-reference/file-conventions/unauthorized)\n * within a route segment as well as inject a tag.\n *\n * `unauthorized()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n *\n * Read more: [Next.js Docs: `unauthorized`](https://nextjs.org/docs/app/api-reference/functions/unauthorized)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};401`\n\nexport function unauthorized(): never {\n  if (!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS) {\n    throw new Error(\n      `\\`unauthorized()\\` is experimental and only allowed to be used when \\`experimental.authInterrupts\\` is enabled.`\n    )\n  }\n\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n  throw error\n}\n","/**\n * This function should be used to rethrow internal Next.js errors so that they can be handled by the framework.\n * When wrapping an API that uses errors to interrupt control flow, you should use this function before you do any error handling.\n * This function will rethrow the error if it is a Next.js error so it can be handled, otherwise it will do nothing.\n *\n * Read more: [Next.js Docs: `unstable_rethrow`](https://nextjs.org/docs/app/api-reference/functions/unstable_rethrow)\n */\nexport const unstable_rethrow =\n  typeof window === 'undefined'\n    ? (\n        require('./unstable-rethrow.server') as typeof import('./unstable-rethrow.server')\n      ).unstable_rethrow\n    : (\n        require('./unstable-rethrow.browser') as typeof import('./unstable-rethrow.browser')\n      ).unstable_rethrow\n","/** @internal */\nclass ReadonlyURLSearchParamsError extends Error {\n  constructor() {\n    super(\n      'Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams'\n    )\n  }\n}\n\nclass ReadonlyURLSearchParams extends URLSearchParams {\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  append() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  delete() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  set() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  sort() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n}\n\nexport { redirect, permanentRedirect } from './redirect'\nexport { RedirectType } from './redirect-error'\nexport { notFound } from './not-found'\nexport { forbidden } from './forbidden'\nexport { unauthorized } from './unauthorized'\nexport { unstable_rethrow } from './unstable-rethrow'\nexport { ReadonlyURLSearchParams }\n","import type { FlightRouterState } from '../../server/app-render/types'\nimport type { Params } from '../../server/request/params'\n\nimport { useContext, useMemo } from 'react'\nimport {\n  AppRouterContext,\n  LayoutRouterContext,\n  type AppRouterInstance,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport {\n  SearchParamsContext,\n  PathnameContext,\n  PathParamsContext,\n} from '../../shared/lib/hooks-client-context.shared-runtime'\nimport { getSegmentValue } from './router-reducer/reducers/get-segment-value'\nimport { PAGE_SEGMENT_KEY, DEFAULT_SEGMENT_KEY } from '../../shared/lib/segment'\nimport { ReadonlyURLSearchParams } from './navigation.react-server'\n\nconst useDynamicRouteParams =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/dynamic-rendering') as typeof import('../../server/app-render/dynamic-rendering')\n      ).useDynamicRouteParams\n    : undefined\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you *read* the current URL's search parameters.\n *\n * Learn more about [`URLSearchParams` on MDN](https://developer.mozilla.org/docs/Web/API/URLSearchParams)\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useSearchParams } from 'next/navigation'\n *\n * export default function Page() {\n *   const searchParams = useSearchParams()\n *   searchParams.get('foo') // returns 'bar' when ?foo=bar\n *   // ...\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSearchParams`](https://nextjs.org/docs/app/api-reference/functions/use-search-params)\n */\n// Client components API\nexport function useSearchParams(): ReadonlyURLSearchParams {\n  const searchParams = useContext(SearchParamsContext)\n\n  // In the case where this is `null`, the compat types added in\n  // `next-env.d.ts` will add a new overload that changes the return type to\n  // include `null`.\n  const readonlySearchParams = useMemo(() => {\n    if (!searchParams) {\n      // When the router is not ready in pages, we won't have the search params\n      // available.\n      return null\n    }\n\n    return new ReadonlyURLSearchParams(searchParams)\n  }, [searchParams]) as ReadonlyURLSearchParams\n\n  if (typeof window === 'undefined') {\n    // AsyncLocalStorage should not be included in the client bundle.\n    const { bailoutToClientRendering } =\n      require('./bailout-to-client-rendering') as typeof import('./bailout-to-client-rendering')\n    // TODO-APP: handle dynamic = 'force-static' here and on the client\n    bailoutToClientRendering('useSearchParams()')\n  }\n\n  return readonlySearchParams\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the current URL's pathname.\n *\n * @example\n * ```ts\n * \"use client\"\n * import { usePathname } from 'next/navigation'\n *\n * export default function Page() {\n *  const pathname = usePathname() // returns \"/dashboard\" on /dashboard?foo=bar\n *  // ...\n * }\n * ```\n *\n * Read more: [Next.js Docs: `usePathname`](https://nextjs.org/docs/app/api-reference/functions/use-pathname)\n */\n// Client components API\nexport function usePathname(): string {\n  useDynamicRouteParams?.('usePathname()')\n\n  // In the case where this is `null`, the compat types added in `next-env.d.ts`\n  // will add a new overload that changes the return type to include `null`.\n  return useContext(PathnameContext) as string\n}\n\n// Client components API\nexport {\n  ServerInsertedHTMLContext,\n  useServerInsertedHTML,\n} from '../../shared/lib/server-inserted-html.shared-runtime'\n\n/**\n *\n * This hook allows you to programmatically change routes inside [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components).\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useRouter } from 'next/navigation'\n *\n * export default function Page() {\n *  const router = useRouter()\n *  // ...\n *  router.push('/dashboard') // Navigate to /dashboard\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useRouter`](https://nextjs.org/docs/app/api-reference/functions/use-router)\n */\n// Client components API\nexport function useRouter(): AppRouterInstance {\n  const router = useContext(AppRouterContext)\n  if (router === null) {\n    throw new Error('invariant expected app router to be mounted')\n  }\n\n  return router\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read a route's dynamic params filled in by the current URL.\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useParams } from 'next/navigation'\n *\n * export default function Page() {\n *   // on /dashboard/[team] where pathname is /dashboard/nextjs\n *   const { team } = useParams() // team === \"nextjs\"\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useParams`](https://nextjs.org/docs/app/api-reference/functions/use-params)\n */\n// Client components API\nexport function useParams<T extends Params = Params>(): T {\n  useDynamicRouteParams?.('useParams()')\n\n  return useContext(PathParamsContext) as T\n}\n\n/** Get the canonical parameters from the current level to the leaf node. */\n// Client components API\nfunction getSelectedLayoutSegmentPath(\n  tree: FlightRouterState,\n  parallelRouteKey: string,\n  first = true,\n  segmentPath: string[] = []\n): string[] {\n  let node: FlightRouterState\n  if (first) {\n    // Use the provided parallel route key on the first parallel route\n    node = tree[1][parallelRouteKey]\n  } else {\n    // After first parallel route prefer children, if there's no children pick the first parallel route.\n    const parallelRoutes = tree[1]\n    node = parallelRoutes.children ?? Object.values(parallelRoutes)[0]\n  }\n\n  if (!node) return segmentPath\n  const segment = node[0]\n\n  let segmentValue = getSegmentValue(segment)\n\n  if (!segmentValue || segmentValue.startsWith(PAGE_SEGMENT_KEY)) {\n    return segmentPath\n  }\n\n  segmentPath.push(segmentValue)\n\n  return getSelectedLayoutSegmentPath(\n    node,\n    parallelRouteKey,\n    false,\n    segmentPath\n  )\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the active route segments **below** the Layout it is called from.\n *\n * @example\n * ```ts\n * 'use client'\n *\n * import { useSelectedLayoutSegments } from 'next/navigation'\n *\n * export default function ExampleClientComponent() {\n *   const segments = useSelectedLayoutSegments()\n *\n *   return (\n *     <ul>\n *       {segments.map((segment, index) => (\n *         <li key={index}>{segment}</li>\n *       ))}\n *     </ul>\n *   )\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSelectedLayoutSegments`](https://nextjs.org/docs/app/api-reference/functions/use-selected-layout-segments)\n */\n// Client components API\nexport function useSelectedLayoutSegments(\n  parallelRouteKey: string = 'children'\n): string[] {\n  useDynamicRouteParams?.('useSelectedLayoutSegments()')\n\n  const context = useContext(LayoutRouterContext)\n  // @ts-expect-error This only happens in `pages`. Type is overwritten in navigation.d.ts\n  if (!context) return null\n\n  return getSelectedLayoutSegmentPath(context.parentTree, parallelRouteKey)\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the active route segment **one level below** the Layout it is called from.\n *\n * @example\n * ```ts\n * 'use client'\n * import { useSelectedLayoutSegment } from 'next/navigation'\n *\n * export default function ExampleClientComponent() {\n *   const segment = useSelectedLayoutSegment()\n *\n *   return <p>Active segment: {segment}</p>\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSelectedLayoutSegment`](https://nextjs.org/docs/app/api-reference/functions/use-selected-layout-segment)\n */\n// Client components API\nexport function useSelectedLayoutSegment(\n  parallelRouteKey: string = 'children'\n): string | null {\n  useDynamicRouteParams?.('useSelectedLayoutSegment()')\n\n  const selectedLayoutSegments = useSelectedLayoutSegments(parallelRouteKey)\n\n  if (!selectedLayoutSegments || selectedLayoutSegments.length === 0) {\n    return null\n  }\n\n  const selectedLayoutSegment =\n    parallelRouteKey === 'children'\n      ? selectedLayoutSegments[0]\n      : selectedLayoutSegments[selectedLayoutSegments.length - 1]\n\n  // if the default slot is showing, we return null since it's not technically \"selected\" (it's a fallback)\n  // and returning an internal value like `__DEFAULT__` would be confusing.\n  return selectedLayoutSegment === DEFAULT_SEGMENT_KEY\n    ? null\n    : selectedLayoutSegment\n}\n\n// Shared components APIs\nexport {\n  notFound,\n  forbidden,\n  unauthorized,\n  redirect,\n  permanentRedirect,\n  RedirectType,\n  ReadonlyURLSearchParams,\n  unstable_rethrow,\n} from './navigation.react-server'\n","import { ReflectAdapter } from './reflect';\n/**\n * @internal\n */ export class ReadonlyHeadersError extends Error {\n    constructor(){\n        super('Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers');\n    }\n    static callable() {\n        throw new ReadonlyHeadersError();\n    }\n}\nexport class HeadersAdapter extends Headers {\n    constructor(headers){\n        // We've already overridden the methods that would be called, so we're just\n        // calling the super constructor to ensure that the instanceof check works.\n        super();\n        this.headers = new Proxy(headers, {\n            get (target, prop, receiver) {\n                // Because this is just an object, we expect that all \"get\" operations\n                // are for properties. If it's a \"get\" for a symbol, we'll just return\n                // the symbol.\n                if (typeof prop === 'symbol') {\n                    return ReflectAdapter.get(target, prop, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return undefined.\n                if (typeof original === 'undefined') return;\n                // If the original casing exists, return the value.\n                return ReflectAdapter.get(target, original, receiver);\n            },\n            set (target, prop, value, receiver) {\n                if (typeof prop === 'symbol') {\n                    return ReflectAdapter.set(target, prop, value, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, use the prop as the key.\n                return ReflectAdapter.set(target, original ?? prop, value, receiver);\n            },\n            has (target, prop) {\n                if (typeof prop === 'symbol') return ReflectAdapter.has(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return false.\n                if (typeof original === 'undefined') return false;\n                // If the original casing exists, return true.\n                return ReflectAdapter.has(target, original);\n            },\n            deleteProperty (target, prop) {\n                if (typeof prop === 'symbol') return ReflectAdapter.deleteProperty(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return true.\n                if (typeof original === 'undefined') return true;\n                // If the original casing exists, delete the property.\n                return ReflectAdapter.deleteProperty(target, original);\n            }\n        });\n    }\n    /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */ static seal(headers) {\n        return new Proxy(headers, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'append':\n                    case 'delete':\n                    case 'set':\n                        return ReadonlyHeadersError.callable;\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n    /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */ merge(value) {\n        if (Array.isArray(value)) return value.join(', ');\n        return value;\n    }\n    /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */ static from(headers) {\n        if (headers instanceof Headers) return headers;\n        return new HeadersAdapter(headers);\n    }\n    append(name, value) {\n        const existing = this.headers[name];\n        if (typeof existing === 'string') {\n            this.headers[name] = [\n                existing,\n                value\n            ];\n        } else if (Array.isArray(existing)) {\n            existing.push(value);\n        } else {\n            this.headers[name] = value;\n        }\n    }\n    delete(name) {\n        delete this.headers[name];\n    }\n    get(name) {\n        const value = this.headers[name];\n        if (typeof value !== 'undefined') return this.merge(value);\n        return null;\n    }\n    has(name) {\n        return typeof this.headers[name] !== 'undefined';\n    }\n    set(name, value) {\n        this.headers[name] = value;\n    }\n    forEach(callbackfn, thisArg) {\n        for (const [name, value] of this.entries()){\n            callbackfn.call(thisArg, value, name, this);\n        }\n    }\n    *entries() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(name);\n            yield [\n                name,\n                value\n            ];\n        }\n    }\n    *keys() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            yield name;\n        }\n    }\n    *values() {\n        for (const key of Object.keys(this.headers)){\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(key);\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n\n//# sourceMappingURL=headers.js.map","'use strict';\n\nvar s;\nif (process.env.NODE_ENV === 'production') {\n  s = require('./cjs/react-dom-server.edge.production.js');\n} else {\n  s = require('./cjs/react-dom-server.edge.development.js');\n}\n\nexports.version = s.version;\nexports.prerender = s.prerender;\nexports.resumeAndPrerender = s.resumeAndPrerender;\n","import {\n  fetchServerResponse,\n  type FetchServerResponseResult,\n} from './fetch-server-response'\nimport {\n  PrefetchCacheEntryStatus,\n  type PrefetchCacheEntry,\n  PrefetchKind,\n  type ReadonlyReducerState,\n} from './router-reducer-types'\nimport { prefetchQueue } from './reducers/prefetch-reducer'\n\nconst INTERCEPTION_CACHE_KEY_MARKER = '%'\n\nexport type AliasedPrefetchCacheEntry = PrefetchCacheEntry & {\n  /** This is a special property that indicates a prefetch entry associated with a different URL\n   * was returned rather than the requested URL. This signals to the router that it should only\n   * apply the part that doesn't depend on searchParams (specifically the loading state).\n   */\n  aliased?: boolean\n}\n\n/**\n * Creates a cache key for the router prefetch cache\n *\n * @param url - The URL being navigated to\n * @param nextUrl - an internal URL, primarily used for handling rewrites. Defaults to '/'.\n * @return The generated prefetch cache key.\n */\nfunction createPrefetchCacheKeyImpl(\n  url: URL,\n  includeSearchParams: boolean,\n  prefix?: string | null\n) {\n  // Initially we only use the pathname as the cache key. We don't want to include\n  // search params so that multiple URLs with the same search parameter can re-use\n  // loading states.\n  let pathnameFromUrl = url.pathname\n\n  // RSC responses can differ based on search params, specifically in the case where we aren't\n  // returning a partial response (ie with `PrefetchKind.AUTO`).\n  // In the auto case, since loading.js & layout.js won't have access to search params,\n  // we can safely re-use that cache entry. But for full prefetches, we should not\n  // re-use the cache entry as the response may differ.\n  if (includeSearchParams) {\n    // if we have a full prefetch, we can include the search param in the key,\n    // as we'll be getting back a full response. The server might have read the search\n    // params when generating the full response.\n    pathnameFromUrl += url.search\n  }\n\n  if (prefix) {\n    return `${prefix}${INTERCEPTION_CACHE_KEY_MARKER}${pathnameFromUrl}`\n  }\n\n  return pathnameFromUrl\n}\n\nfunction createPrefetchCacheKey(\n  url: URL,\n  kind: PrefetchKind | undefined,\n  nextUrl?: string | null\n) {\n  return createPrefetchCacheKeyImpl(url, kind === PrefetchKind.FULL, nextUrl)\n}\n\nfunction getExistingCacheEntry(\n  url: URL,\n  kind: PrefetchKind = PrefetchKind.TEMPORARY,\n  nextUrl: string | null,\n  prefetchCache: Map<string, PrefetchCacheEntry>,\n  allowAliasing: boolean\n): AliasedPrefetchCacheEntry | undefined {\n  // We first check if there's a more specific interception route prefetch entry\n  // This is because when we detect a prefetch that corresponds with an interception route, we prefix it with nextUrl (see `createPrefetchCacheKey`)\n  // to avoid conflicts with other pages that may have the same URL but render different things depending on the `Next-URL` header.\n  for (const maybeNextUrl of [nextUrl, null]) {\n    const cacheKeyWithParams = createPrefetchCacheKeyImpl(\n      url,\n      true,\n      maybeNextUrl\n    )\n    const cacheKeyWithoutParams = createPrefetchCacheKeyImpl(\n      url,\n      false,\n      maybeNextUrl\n    )\n\n    // First, we check if we have a cache entry that exactly matches the URL\n    const cacheKeyToUse = url.search\n      ? cacheKeyWithParams\n      : cacheKeyWithoutParams\n\n    const existingEntry = prefetchCache.get(cacheKeyToUse)\n    if (existingEntry && allowAliasing) {\n      // We know we're returning an aliased entry when the pathname matches but the search params don't,\n      const isAliased =\n        existingEntry.url.pathname === url.pathname &&\n        existingEntry.url.search !== url.search\n\n      if (isAliased) {\n        return {\n          ...existingEntry,\n          aliased: true,\n        }\n      }\n\n      return existingEntry\n    }\n\n    // If the request contains search params, and we're not doing a full prefetch, we can return the\n    // param-less entry if it exists.\n    // This is technically covered by the check at the bottom of this function, which iterates over cache entries,\n    // but lets us arrive there quicker in the param-full case.\n    const entryWithoutParams = prefetchCache.get(cacheKeyWithoutParams)\n    if (\n      process.env.NODE_ENV !== 'development' &&\n      allowAliasing &&\n      url.search &&\n      kind !== PrefetchKind.FULL &&\n      entryWithoutParams &&\n      // We shouldn't return the aliased entry if it was relocated to a new cache key.\n      // Since it's rewritten, it could respond with a completely different loading state.\n      !entryWithoutParams.key.includes(INTERCEPTION_CACHE_KEY_MARKER)\n    ) {\n      return { ...entryWithoutParams, aliased: true }\n    }\n  }\n\n  // If we've gotten to this point, we didn't find a specific cache entry that matched\n  // the request URL.\n  // We attempt a partial match by checking if there's a cache entry with the same pathname.\n  // Regardless of what we find, since it doesn't correspond with the requested URL, we'll mark it \"aliased\".\n  // This will signal to the router that it should only apply the loading state on the prefetched data.\n  if (\n    process.env.NODE_ENV !== 'development' &&\n    kind !== PrefetchKind.FULL &&\n    allowAliasing\n  ) {\n    for (const cacheEntry of prefetchCache.values()) {\n      if (\n        cacheEntry.url.pathname === url.pathname &&\n        // We shouldn't return the aliased entry if it was relocated to a new cache key.\n        // Since it's rewritten, it could respond with a completely different loading state.\n        !cacheEntry.key.includes(INTERCEPTION_CACHE_KEY_MARKER)\n      ) {\n        return { ...cacheEntry, aliased: true }\n      }\n    }\n  }\n\n  return undefined\n}\n\n/**\n * Returns a prefetch cache entry if one exists. Otherwise creates a new one and enqueues a fetch request\n * to retrieve the prefetch data from the server.\n */\nexport function getOrCreatePrefetchCacheEntry({\n  url,\n  nextUrl,\n  tree,\n  prefetchCache,\n  kind,\n  allowAliasing = true,\n}: Pick<ReadonlyReducerState, 'nextUrl' | 'prefetchCache' | 'tree'> & {\n  url: URL\n  kind?: PrefetchKind\n  allowAliasing: boolean\n}): AliasedPrefetchCacheEntry {\n  const existingCacheEntry = getExistingCacheEntry(\n    url,\n    kind,\n    nextUrl,\n    prefetchCache,\n    allowAliasing\n  )\n\n  if (existingCacheEntry) {\n    // Grab the latest status of the cache entry and update it\n    existingCacheEntry.status = getPrefetchEntryCacheStatus(existingCacheEntry)\n\n    // when `kind` is provided, an explicit prefetch was requested.\n    // if the requested prefetch is \"full\" and the current cache entry wasn't, we want to re-prefetch with the new intent\n    const switchedToFullPrefetch =\n      existingCacheEntry.kind !== PrefetchKind.FULL &&\n      kind === PrefetchKind.FULL\n\n    if (switchedToFullPrefetch) {\n      // If we switched to a full prefetch, validate that the existing cache entry contained partial data.\n      // It's possible that the cache entry was seeded with full data but has a cache type of \"auto\" (ie when cache entries\n      // are seeded but without a prefetch intent)\n      existingCacheEntry.data.then((prefetchResponse) => {\n        const isFullPrefetch =\n          Array.isArray(prefetchResponse.flightData) &&\n          prefetchResponse.flightData.some((flightData) => {\n            // If we started rendering from the root and we returned RSC data (seedData), we already had a full prefetch.\n            return flightData.isRootRender && flightData.seedData !== null\n          })\n\n        if (!isFullPrefetch) {\n          return createLazyPrefetchEntry({\n            tree,\n            url,\n            nextUrl,\n            prefetchCache,\n            // If we didn't get an explicit prefetch kind, we want to set a temporary kind\n            // rather than assuming the same intent as the previous entry, to be consistent with how we\n            // lazily create prefetch entries when intent is left unspecified.\n            kind: kind ?? PrefetchKind.TEMPORARY,\n          })\n        }\n      })\n    }\n\n    // If the existing cache entry was marked as temporary, it means it was lazily created when attempting to get an entry,\n    // where we didn't have the prefetch intent. Now that we have the intent (in `kind`), we want to update the entry to the more accurate kind.\n    if (kind && existingCacheEntry.kind === PrefetchKind.TEMPORARY) {\n      existingCacheEntry.kind = kind\n    }\n\n    // We've determined that the existing entry we found is still valid, so we return it.\n    return existingCacheEntry\n  }\n\n  // If we didn't return an entry, create a new one.\n  return createLazyPrefetchEntry({\n    tree,\n    url,\n    nextUrl,\n    prefetchCache,\n    kind: kind || PrefetchKind.TEMPORARY,\n  })\n}\n\n/*\n * Used to take an existing cache entry and prefix it with the nextUrl, if it exists.\n * This ensures that we don't have conflicting cache entries for the same URL (as is the case with route interception).\n */\nfunction prefixExistingPrefetchCacheEntry({\n  url,\n  nextUrl,\n  prefetchCache,\n  existingCacheKey,\n}: Pick<ReadonlyReducerState, 'nextUrl' | 'prefetchCache'> & {\n  url: URL\n  existingCacheKey: string\n}) {\n  const existingCacheEntry = prefetchCache.get(existingCacheKey)\n  if (!existingCacheEntry) {\n    // no-op -- there wasn't an entry to move\n    return\n  }\n\n  const newCacheKey = createPrefetchCacheKey(\n    url,\n    existingCacheEntry.kind,\n    nextUrl\n  )\n  prefetchCache.set(newCacheKey, { ...existingCacheEntry, key: newCacheKey })\n  prefetchCache.delete(existingCacheKey)\n\n  return newCacheKey\n}\n\n/**\n * Use to seed the prefetch cache with data that has already been fetched.\n */\nexport function createSeededPrefetchCacheEntry({\n  nextUrl,\n  tree,\n  prefetchCache,\n  url,\n  data,\n  kind,\n}: Pick<ReadonlyReducerState, 'nextUrl' | 'tree' | 'prefetchCache'> & {\n  url: URL\n  data: FetchServerResponseResult\n  kind: PrefetchKind\n}) {\n  // The initial cache entry technically includes full data, but it isn't explicitly prefetched -- we just seed the\n  // prefetch cache so that we can skip an extra prefetch request later, since we already have the data.\n  // if the prefetch corresponds with an interception route, we use the nextUrl to prefix the cache key\n  const prefetchCacheKey = data.couldBeIntercepted\n    ? createPrefetchCacheKey(url, kind, nextUrl)\n    : createPrefetchCacheKey(url, kind)\n\n  const prefetchEntry = {\n    treeAtTimeOfPrefetch: tree,\n    data: Promise.resolve(data),\n    kind,\n    prefetchTime: Date.now(),\n    lastUsedTime: Date.now(),\n    staleTime: data.staleTime,\n    key: prefetchCacheKey,\n    status: PrefetchCacheEntryStatus.fresh,\n    url,\n  } satisfies PrefetchCacheEntry\n\n  prefetchCache.set(prefetchCacheKey, prefetchEntry)\n\n  return prefetchEntry\n}\n\n/**\n * Creates a prefetch entry entry and enqueues a fetch request to retrieve the data.\n */\nfunction createLazyPrefetchEntry({\n  url,\n  kind,\n  tree,\n  nextUrl,\n  prefetchCache,\n}: Pick<ReadonlyReducerState, 'nextUrl' | 'tree' | 'prefetchCache'> & {\n  url: URL\n  kind: PrefetchKind\n}): PrefetchCacheEntry {\n  const prefetchCacheKey = createPrefetchCacheKey(url, kind)\n\n  // initiates the fetch request for the prefetch and attaches a listener\n  // to the promise to update the prefetch cache entry when the promise resolves (if necessary)\n  const data = prefetchQueue.enqueue(() =>\n    fetchServerResponse(url, {\n      flightRouterState: tree,\n      nextUrl,\n      prefetchKind: kind,\n    }).then((prefetchResponse) => {\n      // TODO: `fetchServerResponse` should be more tighly coupled to these prefetch cache operations\n      // to avoid drift between this cache key prefixing logic\n      // (which is currently directly influenced by the server response)\n      let newCacheKey\n\n      if (prefetchResponse.couldBeIntercepted) {\n        // Determine if we need to prefix the cache key with the nextUrl\n        newCacheKey = prefixExistingPrefetchCacheEntry({\n          url,\n          existingCacheKey: prefetchCacheKey,\n          nextUrl,\n          prefetchCache,\n        })\n      }\n\n      // If the prefetch was a cache hit, we want to update the existing cache entry to reflect that it was a full prefetch.\n      // This is because we know that a static response will contain the full RSC payload, and can be updated to respect the `static`\n      // staleTime.\n      if (prefetchResponse.prerendered) {\n        const existingCacheEntry = prefetchCache.get(\n          // if we prefixed the cache key due to route interception, we want to use the new key. Otherwise we use the original key\n          newCacheKey ?? prefetchCacheKey\n        )\n        if (existingCacheEntry) {\n          existingCacheEntry.kind = PrefetchKind.FULL\n          if (prefetchResponse.staleTime !== -1) {\n            // This is the stale time that was collected by the server during\n            // static generation. Use this in place of the default stale time.\n            existingCacheEntry.staleTime = prefetchResponse.staleTime\n          }\n        }\n      }\n\n      return prefetchResponse\n    })\n  )\n\n  const prefetchEntry = {\n    treeAtTimeOfPrefetch: tree,\n    data,\n    kind,\n    prefetchTime: Date.now(),\n    lastUsedTime: null,\n    staleTime: -1,\n    key: prefetchCacheKey,\n    status: PrefetchCacheEntryStatus.fresh,\n    url,\n  }\n\n  prefetchCache.set(prefetchCacheKey, prefetchEntry)\n\n  return prefetchEntry\n}\n\nexport function prunePrefetchCache(\n  prefetchCache: ReadonlyReducerState['prefetchCache']\n) {\n  for (const [href, prefetchCacheEntry] of prefetchCache) {\n    if (\n      getPrefetchEntryCacheStatus(prefetchCacheEntry) ===\n      PrefetchCacheEntryStatus.expired\n    ) {\n      prefetchCache.delete(href)\n    }\n  }\n}\n\n// These values are set by `define-env-plugin` (based on `nextConfig.experimental.staleTimes`)\n// and default to 5 minutes (static) / 0 seconds (dynamic)\nexport const DYNAMIC_STALETIME_MS =\n  Number(process.env.__NEXT_CLIENT_ROUTER_DYNAMIC_STALETIME) * 1000\n\nexport const STATIC_STALETIME_MS =\n  Number(process.env.__NEXT_CLIENT_ROUTER_STATIC_STALETIME) * 1000\n\nfunction getPrefetchEntryCacheStatus({\n  kind,\n  prefetchTime,\n  lastUsedTime,\n  staleTime,\n}: PrefetchCacheEntry): PrefetchCacheEntryStatus {\n  if (staleTime !== -1) {\n    // `staleTime` is the value sent by the server during static generation.\n    // When this is available, it takes precedence over any of the heuristics\n    // that follow.\n    //\n    // TODO: When PPR is enabled, the server will *always* return a stale time\n    // when prefetching. We should never use a prefetch entry that hasn't yet\n    // received data from the server. So the only two cases should be 1) we use\n    // the server-generated stale time 2) the unresolved entry is discarded.\n    return Date.now() < prefetchTime + staleTime\n      ? PrefetchCacheEntryStatus.fresh\n      : PrefetchCacheEntryStatus.stale\n  }\n\n  // We will re-use the cache entry data for up to the `dynamic` staletime window.\n  if (Date.now() < (lastUsedTime ?? prefetchTime) + DYNAMIC_STALETIME_MS) {\n    return lastUsedTime\n      ? PrefetchCacheEntryStatus.reusable\n      : PrefetchCacheEntryStatus.fresh\n  }\n\n  // For \"auto\" prefetching, we'll re-use only the loading boundary for up to `static` staletime window.\n  // A stale entry will only re-use the `loading` boundary, not the full data.\n  // This will trigger a \"lazy fetch\" for the full data.\n  if (kind === PrefetchKind.AUTO) {\n    if (Date.now() < prefetchTime + STATIC_STALETIME_MS) {\n      return PrefetchCacheEntryStatus.stale\n    }\n  }\n\n  // for \"full\" prefetching, we'll re-use the cache entry data for up to `static` staletime window.\n  if (kind === PrefetchKind.FULL) {\n    if (Date.now() < prefetchTime + STATIC_STALETIME_MS) {\n      return PrefetchCacheEntryStatus.reusable\n    }\n  }\n\n  return PrefetchCacheEntryStatus.expired\n}\n","// ISC License\n// Copyright (c) 2021 Alexey Raspopov, Kostiantyn Denysov, Anton Verinov\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n//\n// https://github.com/alexeyraspopov/picocolors/blob/b6261487e7b81aaab2440e397a356732cad9e342/picocolors.js#L1\nvar _globalThis;\nconst { env, stdout } = ((_globalThis = globalThis) == null ? void 0 : _globalThis.process) ?? {};\nconst enabled = env && !env.NO_COLOR && (env.FORCE_COLOR || (stdout == null ? void 0 : stdout.isTTY) && !env.CI && env.TERM !== 'dumb');\nconst replaceClose = (str, close, replace, index)=>{\n    const start = str.substring(0, index) + replace;\n    const end = str.substring(index + close.length);\n    const nextIndex = end.indexOf(close);\n    return ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end;\n};\nconst formatter = (open, close, replace = open)=>{\n    if (!enabled) return String;\n    return (input)=>{\n        const string = '' + input;\n        const index = string.indexOf(close, open.length);\n        return ~index ? open + replaceClose(string, close, replace, index) + close : open + string + close;\n    };\n};\nexport const reset = enabled ? (s)=>`\\x1b[0m${s}\\x1b[0m` : String;\nexport const bold = formatter('\\x1b[1m', '\\x1b[22m', '\\x1b[22m\\x1b[1m');\nexport const dim = formatter('\\x1b[2m', '\\x1b[22m', '\\x1b[22m\\x1b[2m');\nexport const italic = formatter('\\x1b[3m', '\\x1b[23m');\nexport const underline = formatter('\\x1b[4m', '\\x1b[24m');\nexport const inverse = formatter('\\x1b[7m', '\\x1b[27m');\nexport const hidden = formatter('\\x1b[8m', '\\x1b[28m');\nexport const strikethrough = formatter('\\x1b[9m', '\\x1b[29m');\nexport const black = formatter('\\x1b[30m', '\\x1b[39m');\nexport const red = formatter('\\x1b[31m', '\\x1b[39m');\nexport const green = formatter('\\x1b[32m', '\\x1b[39m');\nexport const yellow = formatter('\\x1b[33m', '\\x1b[39m');\nexport const blue = formatter('\\x1b[34m', '\\x1b[39m');\nexport const magenta = formatter('\\x1b[35m', '\\x1b[39m');\nexport const purple = formatter('\\x1b[38;2;173;127;168m', '\\x1b[39m');\nexport const cyan = formatter('\\x1b[36m', '\\x1b[39m');\nexport const white = formatter('\\x1b[37m', '\\x1b[39m');\nexport const gray = formatter('\\x1b[90m', '\\x1b[39m');\nexport const bgBlack = formatter('\\x1b[40m', '\\x1b[49m');\nexport const bgRed = formatter('\\x1b[41m', '\\x1b[49m');\nexport const bgGreen = formatter('\\x1b[42m', '\\x1b[49m');\nexport const bgYellow = formatter('\\x1b[43m', '\\x1b[49m');\nexport const bgBlue = formatter('\\x1b[44m', '\\x1b[49m');\nexport const bgMagenta = formatter('\\x1b[45m', '\\x1b[49m');\nexport const bgCyan = formatter('\\x1b[46m', '\\x1b[49m');\nexport const bgWhite = formatter('\\x1b[47m', '\\x1b[49m');\n\n//# sourceMappingURL=picocolors.js.map","import { createAsyncLocalStorage } from './async-local-storage';\nexport const afterTaskAsyncStorageInstance = createAsyncLocalStorage();\n\n//# sourceMappingURL=after-task-async-storage-instance.js.map","// Share the instance module in the next-shared layer\nimport { afterTaskAsyncStorageInstance as afterTaskAsyncStorage } from './after-task-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { afterTaskAsyncStorage };\n\n//# sourceMappingURL=after-task-async-storage.external.js.map","import { createAsyncLocalStorage } from './async-local-storage';\nexport const workAsyncStorageInstance = createAsyncLocalStorage();\n\n//# sourceMappingURL=work-async-storage-instance.js.map","// Share the instance module in the next-shared layer\nimport { workAsyncStorageInstance } from './work-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { workAsyncStorageInstance as workAsyncStorage };\n\n//# sourceMappingURL=work-async-storage.external.js.map","if (process.env.NEXT_RUNTIME === 'edge') {\n    module.exports = require('next/dist/server/route-modules/app-page/module.js');\n} else {\n    if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n        if (process.env.NODE_ENV === 'development') {\n            if (process.env.TURBOPACK) {\n                module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js');\n            } else {\n                module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js');\n            }\n        } else {\n            if (process.env.TURBOPACK) {\n                module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js');\n            } else {\n                module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js');\n            }\n        }\n    } else {\n        if (process.env.NODE_ENV === 'development') {\n            if (process.env.TURBOPACK) {\n                module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js');\n            } else {\n                module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js');\n            }\n        } else {\n            if (process.env.TURBOPACK) {\n                module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js');\n            } else {\n                module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js');\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=module.compiled.js.map","'use client'\n\nimport { createContext } from 'react'\nimport type { Params } from '../../server/request/params'\n\nexport const SearchParamsContext = createContext<URLSearchParams | null>(null)\nexport const PathnameContext = createContext<string | null>(null)\nexport const PathParamsContext = createContext<Params | null>(null)\n\nif (process.env.NODE_ENV !== 'production') {\n  SearchParamsContext.displayName = 'SearchParamsContext'\n  PathnameContext.displayName = 'PathnameContext'\n  PathParamsContext.displayName = 'PathParamsContext'\n}\n","import type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport type {\n  FlightRouterState,\n  CacheNodeSeedData,\n} from '../../../server/app-render/types'\nimport { createRouterCacheKey } from './create-router-cache-key'\nimport {\n  PrefetchCacheEntryStatus,\n  type PrefetchCacheEntry,\n} from './router-reducer-types'\n\nexport function fillLazyItemsTillLeafWithHead(\n  navigatedAt: number,\n  newCache: CacheNode,\n  existingCache: CacheNode | undefined,\n  routerState: FlightRouterState,\n  cacheNodeSeedData: CacheNodeSeedData | null,\n  head: React.ReactNode,\n  prefetchEntry: PrefetchCacheEntry | undefined\n): void {\n  const isLastSegment = Object.keys(routerState[1]).length === 0\n  if (isLastSegment) {\n    newCache.head = head\n    return\n  }\n  // Remove segment that we got data for so that it is filled in during rendering of rsc.\n  for (const key in routerState[1]) {\n    const parallelRouteState = routerState[1][key]\n    const segmentForParallelRoute = parallelRouteState[0]\n    const cacheKey = createRouterCacheKey(segmentForParallelRoute)\n\n    // TODO: We should traverse the cacheNodeSeedData tree instead of the router\n    // state tree. Ideally, they would always be the same shape, but because of\n    // the loading.js pattern, cacheNodeSeedData sometimes only represents a\n    // partial tree. That's why this node is sometimes null. Once PPR lands,\n    // loading.js will no longer have special behavior and we can traverse the\n    // data tree instead.\n    //\n    // We should also consider merging the router state tree and the data tree\n    // in the response format, so that we don't have to send the keys twice.\n    // Then the client can convert them into separate representations.\n    const parallelSeedData =\n      cacheNodeSeedData !== null && cacheNodeSeedData[2][key] !== undefined\n        ? cacheNodeSeedData[2][key]\n        : null\n    if (existingCache) {\n      const existingParallelRoutesCacheNode =\n        existingCache.parallelRoutes.get(key)\n      if (existingParallelRoutesCacheNode) {\n        const hasReusablePrefetch =\n          prefetchEntry?.kind === 'auto' &&\n          prefetchEntry.status === PrefetchCacheEntryStatus.reusable\n\n        let parallelRouteCacheNode = new Map(existingParallelRoutesCacheNode)\n        const existingCacheNode = parallelRouteCacheNode.get(cacheKey)\n        let newCacheNode: CacheNode\n        if (parallelSeedData !== null) {\n          // New data was sent from the server.\n          const seedNode = parallelSeedData[1]\n          const loading = parallelSeedData[3]\n          newCacheNode = {\n            lazyData: null,\n            rsc: seedNode,\n            // This is a PPR-only field. When PPR is enabled, we shouldn't hit\n            // this path during a navigation, but until PPR is fully implemented\n            // yet it's possible the existing node does have a non-null\n            // `prefetchRsc`. As an incremental step, we'll just de-opt to the\n            // old behavior — no PPR value.\n            prefetchRsc: null,\n            head: null,\n            prefetchHead: null,\n            loading,\n            parallelRoutes: new Map(existingCacheNode?.parallelRoutes),\n            navigatedAt,\n          }\n        } else if (hasReusablePrefetch && existingCacheNode) {\n          // No new data was sent from the server, but the existing cache node\n          // was prefetched, so we should reuse that.\n          newCacheNode = {\n            lazyData: existingCacheNode.lazyData,\n            rsc: existingCacheNode.rsc,\n            // This is a PPR-only field. Unlike the previous branch, since we're\n            // just cloning the existing cache node, we might as well keep the\n            // PPR value, if it exists.\n            prefetchRsc: existingCacheNode.prefetchRsc,\n            head: existingCacheNode.head,\n            prefetchHead: existingCacheNode.prefetchHead,\n            parallelRoutes: new Map(existingCacheNode.parallelRoutes),\n            loading: existingCacheNode.loading,\n          } as CacheNode\n        } else {\n          // No data available for this node. This will trigger a lazy fetch\n          // during render.\n          newCacheNode = {\n            lazyData: null,\n            rsc: null,\n            prefetchRsc: null,\n            head: null,\n            prefetchHead: null,\n            parallelRoutes: new Map(existingCacheNode?.parallelRoutes),\n            loading: null,\n            navigatedAt,\n          }\n        }\n\n        // Overrides the cache key with the new cache node.\n        parallelRouteCacheNode.set(cacheKey, newCacheNode)\n        // Traverse deeper to apply the head / fill lazy items till the head.\n        fillLazyItemsTillLeafWithHead(\n          navigatedAt,\n          newCacheNode,\n          existingCacheNode,\n          parallelRouteState,\n          parallelSeedData ? parallelSeedData : null,\n          head,\n          prefetchEntry\n        )\n\n        newCache.parallelRoutes.set(key, parallelRouteCacheNode)\n        continue\n      }\n    }\n\n    let newCacheNode: CacheNode\n    if (parallelSeedData !== null) {\n      // New data was sent from the server.\n      const seedNode = parallelSeedData[1]\n      const loading = parallelSeedData[3]\n      newCacheNode = {\n        lazyData: null,\n        rsc: seedNode,\n        prefetchRsc: null,\n        head: null,\n        prefetchHead: null,\n        parallelRoutes: new Map(),\n        loading,\n        navigatedAt,\n      }\n    } else {\n      // No data available for this node. This will trigger a lazy fetch\n      // during render.\n      newCacheNode = {\n        lazyData: null,\n        rsc: null,\n        prefetchRsc: null,\n        head: null,\n        prefetchHead: null,\n        parallelRoutes: new Map(),\n        loading: null,\n        navigatedAt,\n      }\n    }\n\n    const existingParallelRoutes = newCache.parallelRoutes.get(key)\n    if (existingParallelRoutes) {\n      existingParallelRoutes.set(cacheKey, newCacheNode)\n    } else {\n      newCache.parallelRoutes.set(key, new Map([[cacheKey, newCacheNode]]))\n    }\n\n    fillLazyItemsTillLeafWithHead(\n      navigatedAt,\n      newCacheNode,\n      undefined,\n      parallelRouteState,\n      parallelSeedData,\n      head,\n      prefetchEntry\n    )\n  }\n}\n","import { ACTION_HEADER } from '../../client/components/app-router-headers';\nexport function getServerActionRequestMetadata(req) {\n    let actionId;\n    let contentType;\n    if (req.headers instanceof Headers) {\n        actionId = req.headers.get(ACTION_HEADER.toLowerCase()) ?? null;\n        contentType = req.headers.get('content-type');\n    } else {\n        actionId = req.headers[ACTION_HEADER.toLowerCase()] ?? null;\n        contentType = req.headers['content-type'] ?? null;\n    }\n    const isURLEncodedAction = Boolean(req.method === 'POST' && contentType === 'application/x-www-form-urlencoded');\n    const isMultipartAction = Boolean(req.method === 'POST' && (contentType == null ? void 0 : contentType.startsWith('multipart/form-data')));\n    const isFetchAction = Boolean(actionId !== undefined && typeof actionId === 'string' && req.method === 'POST');\n    const isPossibleServerAction = Boolean(isFetchAction || isURLEncodedAction || isMultipartAction);\n    return {\n        actionId,\n        isURLEncodedAction,\n        isMultipartAction,\n        isFetchAction,\n        isPossibleServerAction\n    };\n}\nexport function getIsPossibleServerAction(req) {\n    return getServerActionRequestMetadata(req).isPossibleServerAction;\n}\n\n//# sourceMappingURL=server-action-request-meta.js.map","/**\n * @license React\n * react-server-dom-webpack-server.edge.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar ReactDOM = require(\"react-dom\"),\n  React = require(\"react\"),\n  REACT_LEGACY_ELEMENT_TYPE = Symbol.for(\"react.element\"),\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  REACT_MEMO_CACHE_SENTINEL = Symbol.for(\"react.memo_cache_sentinel\");\nSymbol.for(\"react.postpone\");\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ASYNC_ITERATOR = Symbol.asyncIterator;\nfunction handleErrorInNextTick(error) {\n  setTimeoutOrImmediate(function () {\n    throw error;\n  });\n}\nvar LocalPromise = Promise,\n  scheduleMicrotask =\n    \"function\" === typeof queueMicrotask\n      ? queueMicrotask\n      : function (callback) {\n          LocalPromise.resolve(null)\n            .then(callback)\n            .catch(handleErrorInNextTick);\n        },\n  currentView = null,\n  writtenBytes = 0;\nfunction writeChunkAndReturn(destination, chunk) {\n  if (0 !== chunk.byteLength)\n    if (2048 < chunk.byteLength)\n      0 < writtenBytes &&\n        (destination.enqueue(\n          new Uint8Array(currentView.buffer, 0, writtenBytes)\n        ),\n        (currentView = new Uint8Array(2048)),\n        (writtenBytes = 0)),\n        destination.enqueue(chunk);\n    else {\n      var allowableBytes = currentView.length - writtenBytes;\n      allowableBytes < chunk.byteLength &&\n        (0 === allowableBytes\n          ? destination.enqueue(currentView)\n          : (currentView.set(chunk.subarray(0, allowableBytes), writtenBytes),\n            destination.enqueue(currentView),\n            (chunk = chunk.subarray(allowableBytes))),\n        (currentView = new Uint8Array(2048)),\n        (writtenBytes = 0));\n      currentView.set(chunk, writtenBytes);\n      writtenBytes += chunk.byteLength;\n    }\n  return !0;\n}\nvar textEncoder = new TextEncoder();\nfunction stringToChunk(content) {\n  return textEncoder.encode(content);\n}\nfunction byteLengthOfChunk(chunk) {\n  return chunk.byteLength;\n}\nfunction closeWithError(destination, error) {\n  \"function\" === typeof destination.error\n    ? destination.error(error)\n    : destination.close();\n}\nvar CLIENT_REFERENCE_TAG$1 = Symbol.for(\"react.client.reference\"),\n  SERVER_REFERENCE_TAG = Symbol.for(\"react.server.reference\");\nfunction registerClientReferenceImpl(proxyImplementation, id, async) {\n  return Object.defineProperties(proxyImplementation, {\n    $$typeof: { value: CLIENT_REFERENCE_TAG$1 },\n    $$id: { value: id },\n    $$async: { value: async }\n  });\n}\nvar FunctionBind = Function.prototype.bind,\n  ArraySlice = Array.prototype.slice;\nfunction bind() {\n  var newFn = FunctionBind.apply(this, arguments);\n  if (this.$$typeof === SERVER_REFERENCE_TAG) {\n    var args = ArraySlice.call(arguments, 1),\n      $$typeof = { value: SERVER_REFERENCE_TAG },\n      $$id = { value: this.$$id };\n    args = { value: this.$$bound ? this.$$bound.concat(args) : args };\n    return Object.defineProperties(newFn, {\n      $$typeof: $$typeof,\n      $$id: $$id,\n      $$bound: args,\n      bind: { value: bind, configurable: !0 }\n    });\n  }\n  return newFn;\n}\nvar PROMISE_PROTOTYPE = Promise.prototype,\n  deepProxyHandlers = {\n    get: function (target, name) {\n      switch (name) {\n        case \"$$typeof\":\n          return target.$$typeof;\n        case \"$$id\":\n          return target.$$id;\n        case \"$$async\":\n          return target.$$async;\n        case \"name\":\n          return target.name;\n        case \"displayName\":\n          return;\n        case \"defaultProps\":\n          return;\n        case \"toJSON\":\n          return;\n        case Symbol.toPrimitive:\n          return Object.prototype[Symbol.toPrimitive];\n        case Symbol.toStringTag:\n          return Object.prototype[Symbol.toStringTag];\n        case \"Provider\":\n          throw Error(\n            \"Cannot render a Client Context Provider on the Server. Instead, you can export a Client Component wrapper that itself renders a Client Context Provider.\"\n          );\n        case \"then\":\n          throw Error(\n            \"Cannot await or return from a thenable. You cannot await a client module from a server component.\"\n          );\n      }\n      throw Error(\n        \"Cannot access \" +\n          (String(target.name) + \".\" + String(name)) +\n          \" on the server. You cannot dot into a client module from a server component. You can only pass the imported name through.\"\n      );\n    },\n    set: function () {\n      throw Error(\"Cannot assign to a client module from a server module.\");\n    }\n  };\nfunction getReference(target, name) {\n  switch (name) {\n    case \"$$typeof\":\n      return target.$$typeof;\n    case \"$$id\":\n      return target.$$id;\n    case \"$$async\":\n      return target.$$async;\n    case \"name\":\n      return target.name;\n    case \"defaultProps\":\n      return;\n    case \"toJSON\":\n      return;\n    case Symbol.toPrimitive:\n      return Object.prototype[Symbol.toPrimitive];\n    case Symbol.toStringTag:\n      return Object.prototype[Symbol.toStringTag];\n    case \"__esModule\":\n      var moduleId = target.$$id;\n      target.default = registerClientReferenceImpl(\n        function () {\n          throw Error(\n            \"Attempted to call the default export of \" +\n              moduleId +\n              \" from the server but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"\n          );\n        },\n        target.$$id + \"#\",\n        target.$$async\n      );\n      return !0;\n    case \"then\":\n      if (target.then) return target.then;\n      if (target.$$async) return;\n      var clientReference = registerClientReferenceImpl({}, target.$$id, !0),\n        proxy = new Proxy(clientReference, proxyHandlers$1);\n      target.status = \"fulfilled\";\n      target.value = proxy;\n      return (target.then = registerClientReferenceImpl(\n        function (resolve) {\n          return Promise.resolve(resolve(proxy));\n        },\n        target.$$id + \"#then\",\n        !1\n      ));\n  }\n  if (\"symbol\" === typeof name)\n    throw Error(\n      \"Cannot read Symbol exports. Only named exports are supported on a client module imported on the server.\"\n    );\n  clientReference = target[name];\n  clientReference ||\n    ((clientReference = registerClientReferenceImpl(\n      function () {\n        throw Error(\n          \"Attempted to call \" +\n            String(name) +\n            \"() from the server but \" +\n            String(name) +\n            \" is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"\n        );\n      },\n      target.$$id + \"#\" + name,\n      target.$$async\n    )),\n    Object.defineProperty(clientReference, \"name\", { value: name }),\n    (clientReference = target[name] =\n      new Proxy(clientReference, deepProxyHandlers)));\n  return clientReference;\n}\nvar proxyHandlers$1 = {\n    get: function (target, name) {\n      return getReference(target, name);\n    },\n    getOwnPropertyDescriptor: function (target, name) {\n      var descriptor = Object.getOwnPropertyDescriptor(target, name);\n      descriptor ||\n        ((descriptor = {\n          value: getReference(target, name),\n          writable: !1,\n          configurable: !1,\n          enumerable: !1\n        }),\n        Object.defineProperty(target, name, descriptor));\n      return descriptor;\n    },\n    getPrototypeOf: function () {\n      return PROMISE_PROTOTYPE;\n    },\n    set: function () {\n      throw Error(\"Cannot assign to a client module from a server module.\");\n    }\n  },\n  ReactDOMSharedInternals =\n    ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  previousDispatcher = ReactDOMSharedInternals.d;\nReactDOMSharedInternals.d = {\n  f: previousDispatcher.f,\n  r: previousDispatcher.r,\n  D: prefetchDNS,\n  C: preconnect,\n  L: preload,\n  m: preloadModule$1,\n  X: preinitScript,\n  S: preinitStyle,\n  M: preinitModuleScript\n};\nfunction prefetchDNS(href) {\n  if (\"string\" === typeof href && href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"D|\" + href;\n      hints.has(key) || (hints.add(key), emitHint(request, \"D\", href));\n    } else previousDispatcher.D(href);\n  }\n}\nfunction preconnect(href, crossOrigin) {\n  if (\"string\" === typeof href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"C|\" + (null == crossOrigin ? \"null\" : crossOrigin) + \"|\" + href;\n      hints.has(key) ||\n        (hints.add(key),\n        \"string\" === typeof crossOrigin\n          ? emitHint(request, \"C\", [href, crossOrigin])\n          : emitHint(request, \"C\", href));\n    } else previousDispatcher.C(href, crossOrigin);\n  }\n}\nfunction preload(href, as, options) {\n  if (\"string\" === typeof href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"L\";\n      if (\"image\" === as && options) {\n        var imageSrcSet = options.imageSrcSet,\n          imageSizes = options.imageSizes,\n          uniquePart = \"\";\n        \"string\" === typeof imageSrcSet && \"\" !== imageSrcSet\n          ? ((uniquePart += \"[\" + imageSrcSet + \"]\"),\n            \"string\" === typeof imageSizes &&\n              (uniquePart += \"[\" + imageSizes + \"]\"))\n          : (uniquePart += \"[][]\" + href);\n        key += \"[image]\" + uniquePart;\n      } else key += \"[\" + as + \"]\" + href;\n      hints.has(key) ||\n        (hints.add(key),\n        (options = trimOptions(options))\n          ? emitHint(request, \"L\", [href, as, options])\n          : emitHint(request, \"L\", [href, as]));\n    } else previousDispatcher.L(href, as, options);\n  }\n}\nfunction preloadModule$1(href, options) {\n  if (\"string\" === typeof href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"m|\" + href;\n      if (hints.has(key)) return;\n      hints.add(key);\n      return (options = trimOptions(options))\n        ? emitHint(request, \"m\", [href, options])\n        : emitHint(request, \"m\", href);\n    }\n    previousDispatcher.m(href, options);\n  }\n}\nfunction preinitStyle(href, precedence, options) {\n  if (\"string\" === typeof href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"S|\" + href;\n      if (hints.has(key)) return;\n      hints.add(key);\n      return (options = trimOptions(options))\n        ? emitHint(request, \"S\", [\n            href,\n            \"string\" === typeof precedence ? precedence : 0,\n            options\n          ])\n        : \"string\" === typeof precedence\n          ? emitHint(request, \"S\", [href, precedence])\n          : emitHint(request, \"S\", href);\n    }\n    previousDispatcher.S(href, precedence, options);\n  }\n}\nfunction preinitScript(src, options) {\n  if (\"string\" === typeof src) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"X|\" + src;\n      if (hints.has(key)) return;\n      hints.add(key);\n      return (options = trimOptions(options))\n        ? emitHint(request, \"X\", [src, options])\n        : emitHint(request, \"X\", src);\n    }\n    previousDispatcher.X(src, options);\n  }\n}\nfunction preinitModuleScript(src, options) {\n  if (\"string\" === typeof src) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"M|\" + src;\n      if (hints.has(key)) return;\n      hints.add(key);\n      return (options = trimOptions(options))\n        ? emitHint(request, \"M\", [src, options])\n        : emitHint(request, \"M\", src);\n    }\n    previousDispatcher.M(src, options);\n  }\n}\nfunction trimOptions(options) {\n  if (null == options) return null;\n  var hasProperties = !1,\n    trimmed = {},\n    key;\n  for (key in options)\n    null != options[key] &&\n      ((hasProperties = !0), (trimmed[key] = options[key]));\n  return hasProperties ? trimmed : null;\n}\nvar supportsRequestStorage = \"function\" === typeof AsyncLocalStorage,\n  requestStorage = supportsRequestStorage ? new AsyncLocalStorage() : null;\n\"object\" === typeof async_hooks\n  ? async_hooks.createHook\n  : function () {\n      return { enable: function () {}, disable: function () {} };\n    };\n\"object\" === typeof async_hooks ? async_hooks.executionAsyncId : null;\nvar TEMPORARY_REFERENCE_TAG = Symbol.for(\"react.temporary.reference\"),\n  proxyHandlers = {\n    get: function (target, name) {\n      switch (name) {\n        case \"$$typeof\":\n          return target.$$typeof;\n        case \"name\":\n          return;\n        case \"displayName\":\n          return;\n        case \"defaultProps\":\n          return;\n        case \"toJSON\":\n          return;\n        case Symbol.toPrimitive:\n          return Object.prototype[Symbol.toPrimitive];\n        case Symbol.toStringTag:\n          return Object.prototype[Symbol.toStringTag];\n        case \"Provider\":\n          throw Error(\n            \"Cannot render a Client Context Provider on the Server. Instead, you can export a Client Component wrapper that itself renders a Client Context Provider.\"\n          );\n      }\n      throw Error(\n        \"Cannot access \" +\n          String(name) +\n          \" on the server. You cannot dot into a temporary client reference from a server component. You can only pass the value through to the client.\"\n      );\n    },\n    set: function () {\n      throw Error(\n        \"Cannot assign to a temporary client reference from a server module.\"\n      );\n    }\n  };\nfunction createTemporaryReference(temporaryReferences, id) {\n  var reference = Object.defineProperties(\n    function () {\n      throw Error(\n        \"Attempted to call a temporary Client Reference from the server but it is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"\n      );\n    },\n    { $$typeof: { value: TEMPORARY_REFERENCE_TAG } }\n  );\n  reference = new Proxy(reference, proxyHandlers);\n  temporaryReferences.set(reference, id);\n  return reference;\n}\nvar SuspenseException = Error(\n  \"Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\\n\\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`.\"\n);\nfunction noop$1() {}\nfunction trackUsedThenable(thenableState, thenable, index) {\n  index = thenableState[index];\n  void 0 === index\n    ? thenableState.push(thenable)\n    : index !== thenable && (thenable.then(noop$1, noop$1), (thenable = index));\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      \"string\" === typeof thenable.status\n        ? thenable.then(noop$1, noop$1)\n        : ((thenableState = thenable),\n          (thenableState.status = \"pending\"),\n          thenableState.then(\n            function (fulfilledValue) {\n              if (\"pending\" === thenable.status) {\n                var fulfilledThenable = thenable;\n                fulfilledThenable.status = \"fulfilled\";\n                fulfilledThenable.value = fulfilledValue;\n              }\n            },\n            function (error) {\n              if (\"pending\" === thenable.status) {\n                var rejectedThenable = thenable;\n                rejectedThenable.status = \"rejected\";\n                rejectedThenable.reason = error;\n              }\n            }\n          ));\n      switch (thenable.status) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n      suspendedThenable = thenable;\n      throw SuspenseException;\n  }\n}\nvar suspendedThenable = null;\nfunction getSuspendedThenable() {\n  if (null === suspendedThenable)\n    throw Error(\n      \"Expected a suspended thenable. This is a bug in React. Please file an issue.\"\n    );\n  var thenable = suspendedThenable;\n  suspendedThenable = null;\n  return thenable;\n}\nvar currentRequest$1 = null,\n  thenableIndexCounter = 0,\n  thenableState = null;\nfunction getThenableStateAfterSuspending() {\n  var state = thenableState || [];\n  thenableState = null;\n  return state;\n}\nvar HooksDispatcher = {\n  readContext: unsupportedContext,\n  use: use,\n  useCallback: function (callback) {\n    return callback;\n  },\n  useContext: unsupportedContext,\n  useEffect: unsupportedHook,\n  useImperativeHandle: unsupportedHook,\n  useLayoutEffect: unsupportedHook,\n  useInsertionEffect: unsupportedHook,\n  useMemo: function (nextCreate) {\n    return nextCreate();\n  },\n  useReducer: unsupportedHook,\n  useRef: unsupportedHook,\n  useState: unsupportedHook,\n  useDebugValue: function () {},\n  useDeferredValue: unsupportedHook,\n  useTransition: unsupportedHook,\n  useSyncExternalStore: unsupportedHook,\n  useId: useId,\n  useHostTransitionStatus: unsupportedHook,\n  useFormState: unsupportedHook,\n  useActionState: unsupportedHook,\n  useOptimistic: unsupportedHook,\n  useMemoCache: function (size) {\n    for (var data = Array(size), i = 0; i < size; i++)\n      data[i] = REACT_MEMO_CACHE_SENTINEL;\n    return data;\n  },\n  useCacheRefresh: function () {\n    return unsupportedRefresh;\n  }\n};\nfunction unsupportedHook() {\n  throw Error(\"This Hook is not supported in Server Components.\");\n}\nfunction unsupportedRefresh() {\n  throw Error(\"Refreshing the cache is not supported in Server Components.\");\n}\nfunction unsupportedContext() {\n  throw Error(\"Cannot read a Client Context from a Server Component.\");\n}\nfunction useId() {\n  if (null === currentRequest$1)\n    throw Error(\"useId can only be used while React is rendering\");\n  var id = currentRequest$1.identifierCount++;\n  return \":\" + currentRequest$1.identifierPrefix + \"S\" + id.toString(32) + \":\";\n}\nfunction use(usable) {\n  if (\n    (null !== usable && \"object\" === typeof usable) ||\n    \"function\" === typeof usable\n  ) {\n    if (\"function\" === typeof usable.then) {\n      var index = thenableIndexCounter;\n      thenableIndexCounter += 1;\n      null === thenableState && (thenableState = []);\n      return trackUsedThenable(thenableState, usable, index);\n    }\n    usable.$$typeof === REACT_CONTEXT_TYPE && unsupportedContext();\n  }\n  if (usable.$$typeof === CLIENT_REFERENCE_TAG$1) {\n    if (null != usable.value && usable.value.$$typeof === REACT_CONTEXT_TYPE)\n      throw Error(\"Cannot read a Client Context from a Server Component.\");\n    throw Error(\"Cannot use() an already resolved Client Reference.\");\n  }\n  throw Error(\"An unsupported type was passed to use(): \" + String(usable));\n}\nvar DefaultAsyncDispatcher = {\n    getCacheForType: function (resourceType) {\n      var JSCompiler_inline_result = (JSCompiler_inline_result =\n        resolveRequest())\n        ? JSCompiler_inline_result.cache\n        : new Map();\n      var entry = JSCompiler_inline_result.get(resourceType);\n      void 0 === entry &&\n        ((entry = resourceType()),\n        JSCompiler_inline_result.set(resourceType, entry));\n      return entry;\n    }\n  },\n  ReactSharedInternalsServer =\n    React.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\nif (!ReactSharedInternalsServer)\n  throw Error(\n    'The \"react\" package in this environment is not configured correctly. The \"react-server\" condition must be enabled in any environment that runs React Server Components.'\n  );\nvar isArrayImpl = Array.isArray,\n  getPrototypeOf = Object.getPrototypeOf;\nfunction objectName(object) {\n  return Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object (.*)\\]$/, function (m, p0) {\n      return p0;\n    });\n}\nfunction describeValueForErrorMessage(value) {\n  switch (typeof value) {\n    case \"string\":\n      return JSON.stringify(\n        10 >= value.length ? value : value.slice(0, 10) + \"...\"\n      );\n    case \"object\":\n      if (isArrayImpl(value)) return \"[...]\";\n      if (null !== value && value.$$typeof === CLIENT_REFERENCE_TAG)\n        return \"client\";\n      value = objectName(value);\n      return \"Object\" === value ? \"{...}\" : value;\n    case \"function\":\n      return value.$$typeof === CLIENT_REFERENCE_TAG\n        ? \"client\"\n        : (value = value.displayName || value.name)\n          ? \"function \" + value\n          : \"function\";\n    default:\n      return String(value);\n  }\n}\nfunction describeElementType(type) {\n  if (\"string\" === typeof type) return type;\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return \"Suspense\";\n    case REACT_SUSPENSE_LIST_TYPE:\n      return \"SuspenseList\";\n  }\n  if (\"object\" === typeof type)\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeElementType(type.render);\n      case REACT_MEMO_TYPE:\n        return describeElementType(type.type);\n      case REACT_LAZY_TYPE:\n        var payload = type._payload;\n        type = type._init;\n        try {\n          return describeElementType(type(payload));\n        } catch (x) {}\n    }\n  return \"\";\n}\nvar CLIENT_REFERENCE_TAG = Symbol.for(\"react.client.reference\");\nfunction describeObjectForErrorMessage(objectOrArray, expandedName) {\n  var objKind = objectName(objectOrArray);\n  if (\"Object\" !== objKind && \"Array\" !== objKind) return objKind;\n  objKind = -1;\n  var length = 0;\n  if (isArrayImpl(objectOrArray)) {\n    var str = \"[\";\n    for (var i = 0; i < objectOrArray.length; i++) {\n      0 < i && (str += \", \");\n      var value = objectOrArray[i];\n      value =\n        \"object\" === typeof value && null !== value\n          ? describeObjectForErrorMessage(value)\n          : describeValueForErrorMessage(value);\n      \"\" + i === expandedName\n        ? ((objKind = str.length), (length = value.length), (str += value))\n        : (str =\n            10 > value.length && 40 > str.length + value.length\n              ? str + value\n              : str + \"...\");\n    }\n    str += \"]\";\n  } else if (objectOrArray.$$typeof === REACT_ELEMENT_TYPE)\n    str = \"<\" + describeElementType(objectOrArray.type) + \"/>\";\n  else {\n    if (objectOrArray.$$typeof === CLIENT_REFERENCE_TAG) return \"client\";\n    str = \"{\";\n    i = Object.keys(objectOrArray);\n    for (value = 0; value < i.length; value++) {\n      0 < value && (str += \", \");\n      var name = i[value],\n        encodedKey = JSON.stringify(name);\n      str += ('\"' + name + '\"' === encodedKey ? name : encodedKey) + \": \";\n      encodedKey = objectOrArray[name];\n      encodedKey =\n        \"object\" === typeof encodedKey && null !== encodedKey\n          ? describeObjectForErrorMessage(encodedKey)\n          : describeValueForErrorMessage(encodedKey);\n      name === expandedName\n        ? ((objKind = str.length),\n          (length = encodedKey.length),\n          (str += encodedKey))\n        : (str =\n            10 > encodedKey.length && 40 > str.length + encodedKey.length\n              ? str + encodedKey\n              : str + \"...\");\n    }\n    str += \"}\";\n  }\n  return void 0 === expandedName\n    ? str\n    : -1 < objKind && 0 < length\n      ? ((objectOrArray = \" \".repeat(objKind) + \"^\".repeat(length)),\n        \"\\n  \" + str + \"\\n  \" + objectOrArray)\n      : \"\\n  \" + str;\n}\nvar ObjectPrototype = Object.prototype,\n  stringify = JSON.stringify;\nfunction defaultErrorHandler(error) {\n  console.error(error);\n}\nfunction defaultPostponeHandler() {}\nfunction RequestInstance(\n  type,\n  model,\n  bundlerConfig,\n  onError,\n  identifierPrefix,\n  onPostpone,\n  temporaryReferences,\n  environmentName,\n  filterStackFrame,\n  onAllReady,\n  onFatalError\n) {\n  if (\n    null !== ReactSharedInternalsServer.A &&\n    ReactSharedInternalsServer.A !== DefaultAsyncDispatcher\n  )\n    throw Error(\"Currently React only supports one RSC renderer at a time.\");\n  ReactSharedInternalsServer.A = DefaultAsyncDispatcher;\n  filterStackFrame = new Set();\n  environmentName = [];\n  var hints = new Set();\n  this.type = type;\n  this.status = 10;\n  this.flushScheduled = !1;\n  this.destination = this.fatalError = null;\n  this.bundlerConfig = bundlerConfig;\n  this.cache = new Map();\n  this.pendingChunks = this.nextChunkId = 0;\n  this.hints = hints;\n  this.abortListeners = new Set();\n  this.abortableTasks = filterStackFrame;\n  this.pingedTasks = environmentName;\n  this.completedImportChunks = [];\n  this.completedHintChunks = [];\n  this.completedRegularChunks = [];\n  this.completedErrorChunks = [];\n  this.writtenSymbols = new Map();\n  this.writtenClientReferences = new Map();\n  this.writtenServerReferences = new Map();\n  this.writtenObjects = new WeakMap();\n  this.temporaryReferences = temporaryReferences;\n  this.identifierPrefix = identifierPrefix || \"\";\n  this.identifierCount = 1;\n  this.taintCleanupQueue = [];\n  this.onError = void 0 === onError ? defaultErrorHandler : onError;\n  this.onPostpone = void 0 === onPostpone ? defaultPostponeHandler : onPostpone;\n  this.onAllReady = onAllReady;\n  this.onFatalError = onFatalError;\n  type = createTask(this, model, null, !1, filterStackFrame);\n  environmentName.push(type);\n}\nfunction noop() {}\nvar currentRequest = null;\nfunction resolveRequest() {\n  if (currentRequest) return currentRequest;\n  if (supportsRequestStorage) {\n    var store = requestStorage.getStore();\n    if (store) return store;\n  }\n  return null;\n}\nfunction serializeThenable(request, task, thenable) {\n  var newTask = createTask(\n    request,\n    null,\n    task.keyPath,\n    task.implicitSlot,\n    request.abortableTasks\n  );\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return (\n        (newTask.model = thenable.value), pingTask(request, newTask), newTask.id\n      );\n    case \"rejected\":\n      return erroredTask(request, newTask, thenable.reason), newTask.id;\n    default:\n      if (12 === request.status)\n        return (\n          request.abortableTasks.delete(newTask),\n          (newTask.status = 3),\n          (task = stringify(serializeByValueID(request.fatalError))),\n          emitModelChunk(request, newTask.id, task),\n          newTask.id\n        );\n      \"string\" !== typeof thenable.status &&\n        ((thenable.status = \"pending\"),\n        thenable.then(\n          function (fulfilledValue) {\n            \"pending\" === thenable.status &&\n              ((thenable.status = \"fulfilled\"),\n              (thenable.value = fulfilledValue));\n          },\n          function (error) {\n            \"pending\" === thenable.status &&\n              ((thenable.status = \"rejected\"), (thenable.reason = error));\n          }\n        ));\n  }\n  thenable.then(\n    function (value) {\n      newTask.model = value;\n      pingTask(request, newTask);\n    },\n    function (reason) {\n      0 === newTask.status &&\n        (erroredTask(request, newTask, reason), enqueueFlush(request));\n    }\n  );\n  return newTask.id;\n}\nfunction serializeReadableStream(request, task, stream) {\n  function progress(entry) {\n    if (!aborted)\n      if (entry.done)\n        request.abortListeners.delete(abortStream),\n          (entry = streamTask.id.toString(16) + \":C\\n\"),\n          request.completedRegularChunks.push(stringToChunk(entry)),\n          enqueueFlush(request),\n          (aborted = !0);\n      else\n        try {\n          (streamTask.model = entry.value),\n            request.pendingChunks++,\n            emitChunk(request, streamTask, streamTask.model),\n            enqueueFlush(request),\n            reader.read().then(progress, error);\n        } catch (x$7) {\n          error(x$7);\n        }\n  }\n  function error(reason) {\n    aborted ||\n      ((aborted = !0),\n      request.abortListeners.delete(abortStream),\n      erroredTask(request, streamTask, reason),\n      enqueueFlush(request),\n      reader.cancel(reason).then(error, error));\n  }\n  function abortStream(reason) {\n    aborted ||\n      ((aborted = !0),\n      request.abortListeners.delete(abortStream),\n      erroredTask(request, streamTask, reason),\n      enqueueFlush(request),\n      reader.cancel(reason).then(error, error));\n  }\n  var supportsBYOB = stream.supportsBYOB;\n  if (void 0 === supportsBYOB)\n    try {\n      stream.getReader({ mode: \"byob\" }).releaseLock(), (supportsBYOB = !0);\n    } catch (x) {\n      supportsBYOB = !1;\n    }\n  var reader = stream.getReader(),\n    streamTask = createTask(\n      request,\n      task.model,\n      task.keyPath,\n      task.implicitSlot,\n      request.abortableTasks\n    );\n  request.abortableTasks.delete(streamTask);\n  request.pendingChunks++;\n  task = streamTask.id.toString(16) + \":\" + (supportsBYOB ? \"r\" : \"R\") + \"\\n\";\n  request.completedRegularChunks.push(stringToChunk(task));\n  var aborted = !1;\n  request.abortListeners.add(abortStream);\n  reader.read().then(progress, error);\n  return serializeByValueID(streamTask.id);\n}\nfunction serializeAsyncIterable(request, task, iterable, iterator) {\n  function progress(entry) {\n    if (!aborted)\n      if (entry.done) {\n        request.abortListeners.delete(abortIterable);\n        if (void 0 === entry.value)\n          var endStreamRow = streamTask.id.toString(16) + \":C\\n\";\n        else\n          try {\n            var chunkId = outlineModel(request, entry.value);\n            endStreamRow =\n              streamTask.id.toString(16) +\n              \":C\" +\n              stringify(serializeByValueID(chunkId)) +\n              \"\\n\";\n          } catch (x) {\n            error(x);\n            return;\n          }\n        request.completedRegularChunks.push(stringToChunk(endStreamRow));\n        enqueueFlush(request);\n        aborted = !0;\n      } else\n        try {\n          (streamTask.model = entry.value),\n            request.pendingChunks++,\n            emitChunk(request, streamTask, streamTask.model),\n            enqueueFlush(request),\n            iterator.next().then(progress, error);\n        } catch (x$8) {\n          error(x$8);\n        }\n  }\n  function error(reason) {\n    aborted ||\n      ((aborted = !0),\n      request.abortListeners.delete(abortIterable),\n      erroredTask(request, streamTask, reason),\n      enqueueFlush(request),\n      \"function\" === typeof iterator.throw &&\n        iterator.throw(reason).then(error, error));\n  }\n  function abortIterable(reason) {\n    aborted ||\n      ((aborted = !0),\n      request.abortListeners.delete(abortIterable),\n      erroredTask(request, streamTask, reason),\n      enqueueFlush(request),\n      \"function\" === typeof iterator.throw &&\n        iterator.throw(reason).then(error, error));\n  }\n  iterable = iterable === iterator;\n  var streamTask = createTask(\n    request,\n    task.model,\n    task.keyPath,\n    task.implicitSlot,\n    request.abortableTasks\n  );\n  request.abortableTasks.delete(streamTask);\n  request.pendingChunks++;\n  task = streamTask.id.toString(16) + \":\" + (iterable ? \"x\" : \"X\") + \"\\n\";\n  request.completedRegularChunks.push(stringToChunk(task));\n  var aborted = !1;\n  request.abortListeners.add(abortIterable);\n  iterator.next().then(progress, error);\n  return serializeByValueID(streamTask.id);\n}\nfunction emitHint(request, code, model) {\n  model = stringify(model);\n  code = stringToChunk(\":H\" + code + model + \"\\n\");\n  request.completedHintChunks.push(code);\n  enqueueFlush(request);\n}\nfunction readThenable(thenable) {\n  if (\"fulfilled\" === thenable.status) return thenable.value;\n  if (\"rejected\" === thenable.status) throw thenable.reason;\n  throw thenable;\n}\nfunction createLazyWrapperAroundWakeable(wakeable) {\n  switch (wakeable.status) {\n    case \"fulfilled\":\n    case \"rejected\":\n      break;\n    default:\n      \"string\" !== typeof wakeable.status &&\n        ((wakeable.status = \"pending\"),\n        wakeable.then(\n          function (fulfilledValue) {\n            \"pending\" === wakeable.status &&\n              ((wakeable.status = \"fulfilled\"),\n              (wakeable.value = fulfilledValue));\n          },\n          function (error) {\n            \"pending\" === wakeable.status &&\n              ((wakeable.status = \"rejected\"), (wakeable.reason = error));\n          }\n        ));\n  }\n  return { $$typeof: REACT_LAZY_TYPE, _payload: wakeable, _init: readThenable };\n}\nfunction voidHandler() {}\nfunction processServerComponentReturnValue(request, task, Component, result) {\n  if (\n    \"object\" !== typeof result ||\n    null === result ||\n    result.$$typeof === CLIENT_REFERENCE_TAG$1\n  )\n    return result;\n  if (\"function\" === typeof result.then)\n    return \"fulfilled\" === result.status\n      ? result.value\n      : createLazyWrapperAroundWakeable(result);\n  var iteratorFn = getIteratorFn(result);\n  return iteratorFn\n    ? ((request = {}),\n      (request[Symbol.iterator] = function () {\n        return iteratorFn.call(result);\n      }),\n      request)\n    : \"function\" !== typeof result[ASYNC_ITERATOR] ||\n        (\"function\" === typeof ReadableStream &&\n          result instanceof ReadableStream)\n      ? result\n      : ((request = {}),\n        (request[ASYNC_ITERATOR] = function () {\n          return result[ASYNC_ITERATOR]();\n        }),\n        request);\n}\nfunction renderFunctionComponent(request, task, key, Component, props) {\n  var prevThenableState = task.thenableState;\n  task.thenableState = null;\n  thenableIndexCounter = 0;\n  thenableState = prevThenableState;\n  props = Component(props, void 0);\n  if (12 === request.status)\n    throw (\n      (\"object\" === typeof props &&\n        null !== props &&\n        \"function\" === typeof props.then &&\n        props.$$typeof !== CLIENT_REFERENCE_TAG$1 &&\n        props.then(voidHandler, voidHandler),\n      null)\n    );\n  props = processServerComponentReturnValue(request, task, Component, props);\n  Component = task.keyPath;\n  prevThenableState = task.implicitSlot;\n  null !== key\n    ? (task.keyPath = null === Component ? key : Component + \",\" + key)\n    : null === Component && (task.implicitSlot = !0);\n  request = renderModelDestructive(request, task, emptyRoot, \"\", props);\n  task.keyPath = Component;\n  task.implicitSlot = prevThenableState;\n  return request;\n}\nfunction renderFragment(request, task, children) {\n  return null !== task.keyPath\n    ? ((request = [\n        REACT_ELEMENT_TYPE,\n        REACT_FRAGMENT_TYPE,\n        task.keyPath,\n        { children: children }\n      ]),\n      task.implicitSlot ? [request] : request)\n    : children;\n}\nfunction renderElement(request, task, type, key, ref, props) {\n  if (null !== ref && void 0 !== ref)\n    throw Error(\n      \"Refs cannot be used in Server Components, nor passed to Client Components.\"\n    );\n  if (\n    \"function\" === typeof type &&\n    type.$$typeof !== CLIENT_REFERENCE_TAG$1 &&\n    type.$$typeof !== TEMPORARY_REFERENCE_TAG\n  )\n    return renderFunctionComponent(request, task, key, type, props);\n  if (type === REACT_FRAGMENT_TYPE && null === key)\n    return (\n      (type = task.implicitSlot),\n      null === task.keyPath && (task.implicitSlot = !0),\n      (props = renderModelDestructive(\n        request,\n        task,\n        emptyRoot,\n        \"\",\n        props.children\n      )),\n      (task.implicitSlot = type),\n      props\n    );\n  if (\n    null != type &&\n    \"object\" === typeof type &&\n    type.$$typeof !== CLIENT_REFERENCE_TAG$1\n  )\n    switch (type.$$typeof) {\n      case REACT_LAZY_TYPE:\n        var init = type._init;\n        type = init(type._payload);\n        if (12 === request.status) throw null;\n        return renderElement(request, task, type, key, ref, props);\n      case REACT_FORWARD_REF_TYPE:\n        return renderFunctionComponent(request, task, key, type.render, props);\n      case REACT_MEMO_TYPE:\n        return renderElement(request, task, type.type, key, ref, props);\n    }\n  request = key;\n  key = task.keyPath;\n  null === request\n    ? (request = key)\n    : null !== key && (request = key + \",\" + request);\n  props = [REACT_ELEMENT_TYPE, type, request, props];\n  task = task.implicitSlot && null !== request ? [props] : props;\n  return task;\n}\nfunction pingTask(request, task) {\n  var pingedTasks = request.pingedTasks;\n  pingedTasks.push(task);\n  1 === pingedTasks.length &&\n    ((request.flushScheduled = null !== request.destination),\n    21 === request.type || 10 === request.status\n      ? scheduleMicrotask(function () {\n          return performWork(request);\n        })\n      : setTimeoutOrImmediate(function () {\n          return performWork(request);\n        }, 0));\n}\nfunction createTask(request, model, keyPath, implicitSlot, abortSet) {\n  request.pendingChunks++;\n  var id = request.nextChunkId++;\n  \"object\" !== typeof model ||\n    null === model ||\n    null !== keyPath ||\n    implicitSlot ||\n    request.writtenObjects.set(model, serializeByValueID(id));\n  var task = {\n    id: id,\n    status: 0,\n    model: model,\n    keyPath: keyPath,\n    implicitSlot: implicitSlot,\n    ping: function () {\n      return pingTask(request, task);\n    },\n    toJSON: function (parentPropertyName, value) {\n      var prevKeyPath = task.keyPath,\n        prevImplicitSlot = task.implicitSlot;\n      try {\n        var JSCompiler_inline_result = renderModelDestructive(\n          request,\n          task,\n          this,\n          parentPropertyName,\n          value\n        );\n      } catch (thrownValue) {\n        if (\n          ((parentPropertyName = task.model),\n          (parentPropertyName =\n            \"object\" === typeof parentPropertyName &&\n            null !== parentPropertyName &&\n            (parentPropertyName.$$typeof === REACT_ELEMENT_TYPE ||\n              parentPropertyName.$$typeof === REACT_LAZY_TYPE)),\n          12 === request.status)\n        )\n          (task.status = 3),\n            (prevKeyPath = request.fatalError),\n            (JSCompiler_inline_result = parentPropertyName\n              ? \"$L\" + prevKeyPath.toString(16)\n              : serializeByValueID(prevKeyPath));\n        else if (\n          ((value =\n            thrownValue === SuspenseException\n              ? getSuspendedThenable()\n              : thrownValue),\n          \"object\" === typeof value &&\n            null !== value &&\n            \"function\" === typeof value.then)\n        ) {\n          JSCompiler_inline_result = createTask(\n            request,\n            task.model,\n            task.keyPath,\n            task.implicitSlot,\n            request.abortableTasks\n          );\n          var ping = JSCompiler_inline_result.ping;\n          value.then(ping, ping);\n          JSCompiler_inline_result.thenableState =\n            getThenableStateAfterSuspending();\n          task.keyPath = prevKeyPath;\n          task.implicitSlot = prevImplicitSlot;\n          JSCompiler_inline_result = parentPropertyName\n            ? \"$L\" + JSCompiler_inline_result.id.toString(16)\n            : serializeByValueID(JSCompiler_inline_result.id);\n        } else\n          (task.keyPath = prevKeyPath),\n            (task.implicitSlot = prevImplicitSlot),\n            request.pendingChunks++,\n            (prevKeyPath = request.nextChunkId++),\n            (prevImplicitSlot = logRecoverableError(request, value, task)),\n            emitErrorChunk(request, prevKeyPath, prevImplicitSlot),\n            (JSCompiler_inline_result = parentPropertyName\n              ? \"$L\" + prevKeyPath.toString(16)\n              : serializeByValueID(prevKeyPath));\n      }\n      return JSCompiler_inline_result;\n    },\n    thenableState: null\n  };\n  abortSet.add(task);\n  return task;\n}\nfunction serializeByValueID(id) {\n  return \"$\" + id.toString(16);\n}\nfunction encodeReferenceChunk(request, id, reference) {\n  request = stringify(reference);\n  id = id.toString(16) + \":\" + request + \"\\n\";\n  return stringToChunk(id);\n}\nfunction serializeClientReference(\n  request,\n  parent,\n  parentPropertyName,\n  clientReference\n) {\n  var clientReferenceKey = clientReference.$$async\n      ? clientReference.$$id + \"#async\"\n      : clientReference.$$id,\n    writtenClientReferences = request.writtenClientReferences,\n    existingId = writtenClientReferences.get(clientReferenceKey);\n  if (void 0 !== existingId)\n    return parent[0] === REACT_ELEMENT_TYPE && \"1\" === parentPropertyName\n      ? \"$L\" + existingId.toString(16)\n      : serializeByValueID(existingId);\n  try {\n    var config = request.bundlerConfig,\n      modulePath = clientReference.$$id;\n    existingId = \"\";\n    var resolvedModuleData = config[modulePath];\n    if (resolvedModuleData) existingId = resolvedModuleData.name;\n    else {\n      var idx = modulePath.lastIndexOf(\"#\");\n      -1 !== idx &&\n        ((existingId = modulePath.slice(idx + 1)),\n        (resolvedModuleData = config[modulePath.slice(0, idx)]));\n      if (!resolvedModuleData)\n        throw Error(\n          'Could not find the module \"' +\n            modulePath +\n            '\" in the React Client Manifest. This is probably a bug in the React Server Components bundler.'\n        );\n    }\n    if (!0 === resolvedModuleData.async && !0 === clientReference.$$async)\n      throw Error(\n        'The module \"' +\n          modulePath +\n          '\" is marked as an async ESM module but was loaded as a CJS proxy. This is probably a bug in the React Server Components bundler.'\n      );\n    var JSCompiler_inline_result =\n      !0 === resolvedModuleData.async || !0 === clientReference.$$async\n        ? [resolvedModuleData.id, resolvedModuleData.chunks, existingId, 1]\n        : [resolvedModuleData.id, resolvedModuleData.chunks, existingId];\n    request.pendingChunks++;\n    var importId = request.nextChunkId++,\n      json = stringify(JSCompiler_inline_result),\n      row = importId.toString(16) + \":I\" + json + \"\\n\",\n      processedChunk = stringToChunk(row);\n    request.completedImportChunks.push(processedChunk);\n    writtenClientReferences.set(clientReferenceKey, importId);\n    return parent[0] === REACT_ELEMENT_TYPE && \"1\" === parentPropertyName\n      ? \"$L\" + importId.toString(16)\n      : serializeByValueID(importId);\n  } catch (x) {\n    return (\n      request.pendingChunks++,\n      (parent = request.nextChunkId++),\n      (parentPropertyName = logRecoverableError(request, x, null)),\n      emitErrorChunk(request, parent, parentPropertyName),\n      serializeByValueID(parent)\n    );\n  }\n}\nfunction outlineModel(request, value) {\n  value = createTask(request, value, null, !1, request.abortableTasks);\n  retryTask(request, value);\n  return value.id;\n}\nfunction serializeTypedArray(request, tag, typedArray) {\n  request.pendingChunks++;\n  var bufferId = request.nextChunkId++;\n  emitTypedArrayChunk(request, bufferId, tag, typedArray);\n  return serializeByValueID(bufferId);\n}\nfunction serializeBlob(request, blob) {\n  function progress(entry) {\n    if (!aborted)\n      if (entry.done)\n        request.abortListeners.delete(abortBlob),\n          (aborted = !0),\n          pingTask(request, newTask);\n      else\n        return (\n          model.push(entry.value), reader.read().then(progress).catch(error)\n        );\n  }\n  function error(reason) {\n    aborted ||\n      ((aborted = !0),\n      request.abortListeners.delete(abortBlob),\n      erroredTask(request, newTask, reason),\n      enqueueFlush(request),\n      reader.cancel(reason).then(error, error));\n  }\n  function abortBlob(reason) {\n    aborted ||\n      ((aborted = !0),\n      request.abortListeners.delete(abortBlob),\n      erroredTask(request, newTask, reason),\n      enqueueFlush(request),\n      reader.cancel(reason).then(error, error));\n  }\n  var model = [blob.type],\n    newTask = createTask(request, model, null, !1, request.abortableTasks),\n    reader = blob.stream().getReader(),\n    aborted = !1;\n  request.abortListeners.add(abortBlob);\n  reader.read().then(progress).catch(error);\n  return \"$B\" + newTask.id.toString(16);\n}\nvar modelRoot = !1;\nfunction renderModelDestructive(\n  request,\n  task,\n  parent,\n  parentPropertyName,\n  value\n) {\n  task.model = value;\n  if (value === REACT_ELEMENT_TYPE) return \"$\";\n  if (null === value) return null;\n  if (\"object\" === typeof value) {\n    switch (value.$$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var elementReference = null,\n          writtenObjects = request.writtenObjects;\n        if (null === task.keyPath && !task.implicitSlot) {\n          var existingReference = writtenObjects.get(value);\n          if (void 0 !== existingReference)\n            if (modelRoot === value) modelRoot = null;\n            else return existingReference;\n          else\n            -1 === parentPropertyName.indexOf(\":\") &&\n              ((parent = writtenObjects.get(parent)),\n              void 0 !== parent &&\n                ((elementReference = parent + \":\" + parentPropertyName),\n                writtenObjects.set(value, elementReference)));\n        }\n        parentPropertyName = value.props;\n        parent = parentPropertyName.ref;\n        request = renderElement(\n          request,\n          task,\n          value.type,\n          value.key,\n          void 0 !== parent ? parent : null,\n          parentPropertyName\n        );\n        \"object\" === typeof request &&\n          null !== request &&\n          null !== elementReference &&\n          (writtenObjects.has(request) ||\n            writtenObjects.set(request, elementReference));\n        return request;\n      case REACT_LAZY_TYPE:\n        task.thenableState = null;\n        parentPropertyName = value._init;\n        value = parentPropertyName(value._payload);\n        if (12 === request.status) throw null;\n        return renderModelDestructive(request, task, emptyRoot, \"\", value);\n      case REACT_LEGACY_ELEMENT_TYPE:\n        throw Error(\n          'A React Element from an older version of React was rendered. This is not supported. It can happen if:\\n- Multiple copies of the \"react\" package is used.\\n- A library pre-bundled an old copy of \"react\" or \"react/jsx-runtime\".\\n- A compiler tries to \"inline\" JSX instead of using the runtime.'\n        );\n    }\n    if (value.$$typeof === CLIENT_REFERENCE_TAG$1)\n      return serializeClientReference(\n        request,\n        parent,\n        parentPropertyName,\n        value\n      );\n    if (\n      void 0 !== request.temporaryReferences &&\n      ((elementReference = request.temporaryReferences.get(value)),\n      void 0 !== elementReference)\n    )\n      return \"$T\" + elementReference;\n    elementReference = request.writtenObjects;\n    writtenObjects = elementReference.get(value);\n    if (\"function\" === typeof value.then) {\n      if (void 0 !== writtenObjects) {\n        if (null !== task.keyPath || task.implicitSlot)\n          return \"$@\" + serializeThenable(request, task, value).toString(16);\n        if (modelRoot === value) modelRoot = null;\n        else return writtenObjects;\n      }\n      request = \"$@\" + serializeThenable(request, task, value).toString(16);\n      elementReference.set(value, request);\n      return request;\n    }\n    if (void 0 !== writtenObjects)\n      if (modelRoot === value) modelRoot = null;\n      else return writtenObjects;\n    else if (\n      -1 === parentPropertyName.indexOf(\":\") &&\n      ((writtenObjects = elementReference.get(parent)),\n      void 0 !== writtenObjects)\n    ) {\n      existingReference = parentPropertyName;\n      if (isArrayImpl(parent) && parent[0] === REACT_ELEMENT_TYPE)\n        switch (parentPropertyName) {\n          case \"1\":\n            existingReference = \"type\";\n            break;\n          case \"2\":\n            existingReference = \"key\";\n            break;\n          case \"3\":\n            existingReference = \"props\";\n            break;\n          case \"4\":\n            existingReference = \"_owner\";\n        }\n      elementReference.set(value, writtenObjects + \":\" + existingReference);\n    }\n    if (isArrayImpl(value)) return renderFragment(request, task, value);\n    if (value instanceof Map)\n      return (\n        (value = Array.from(value)),\n        \"$Q\" + outlineModel(request, value).toString(16)\n      );\n    if (value instanceof Set)\n      return (\n        (value = Array.from(value)),\n        \"$W\" + outlineModel(request, value).toString(16)\n      );\n    if (\"function\" === typeof FormData && value instanceof FormData)\n      return (\n        (value = Array.from(value.entries())),\n        \"$K\" + outlineModel(request, value).toString(16)\n      );\n    if (value instanceof Error) return \"$Z\";\n    if (value instanceof ArrayBuffer)\n      return serializeTypedArray(request, \"A\", new Uint8Array(value));\n    if (value instanceof Int8Array)\n      return serializeTypedArray(request, \"O\", value);\n    if (value instanceof Uint8Array)\n      return serializeTypedArray(request, \"o\", value);\n    if (value instanceof Uint8ClampedArray)\n      return serializeTypedArray(request, \"U\", value);\n    if (value instanceof Int16Array)\n      return serializeTypedArray(request, \"S\", value);\n    if (value instanceof Uint16Array)\n      return serializeTypedArray(request, \"s\", value);\n    if (value instanceof Int32Array)\n      return serializeTypedArray(request, \"L\", value);\n    if (value instanceof Uint32Array)\n      return serializeTypedArray(request, \"l\", value);\n    if (value instanceof Float32Array)\n      return serializeTypedArray(request, \"G\", value);\n    if (value instanceof Float64Array)\n      return serializeTypedArray(request, \"g\", value);\n    if (value instanceof BigInt64Array)\n      return serializeTypedArray(request, \"M\", value);\n    if (value instanceof BigUint64Array)\n      return serializeTypedArray(request, \"m\", value);\n    if (value instanceof DataView)\n      return serializeTypedArray(request, \"V\", value);\n    if (\"function\" === typeof Blob && value instanceof Blob)\n      return serializeBlob(request, value);\n    if ((elementReference = getIteratorFn(value)))\n      return (\n        (parentPropertyName = elementReference.call(value)),\n        parentPropertyName === value\n          ? \"$i\" +\n            outlineModel(request, Array.from(parentPropertyName)).toString(16)\n          : renderFragment(request, task, Array.from(parentPropertyName))\n      );\n    if (\"function\" === typeof ReadableStream && value instanceof ReadableStream)\n      return serializeReadableStream(request, task, value);\n    elementReference = value[ASYNC_ITERATOR];\n    if (\"function\" === typeof elementReference)\n      return (\n        null !== task.keyPath\n          ? ((request = [\n              REACT_ELEMENT_TYPE,\n              REACT_FRAGMENT_TYPE,\n              task.keyPath,\n              { children: value }\n            ]),\n            (request = task.implicitSlot ? [request] : request))\n          : ((parentPropertyName = elementReference.call(value)),\n            (request = serializeAsyncIterable(\n              request,\n              task,\n              value,\n              parentPropertyName\n            ))),\n        request\n      );\n    if (value instanceof Date) return \"$D\" + value.toJSON();\n    request = getPrototypeOf(value);\n    if (\n      request !== ObjectPrototype &&\n      (null === request || null !== getPrototypeOf(request))\n    )\n      throw Error(\n        \"Only plain objects, and a few built-ins, can be passed to Client Components from Server Components. Classes or null prototypes are not supported.\" +\n          describeObjectForErrorMessage(parent, parentPropertyName)\n      );\n    return value;\n  }\n  if (\"string\" === typeof value) {\n    if (\n      \"Z\" === value[value.length - 1] &&\n      parent[parentPropertyName] instanceof Date\n    )\n      return \"$D\" + value;\n    if (1024 <= value.length && null !== byteLengthOfChunk)\n      return (\n        request.pendingChunks++,\n        (task = request.nextChunkId++),\n        emitTextChunk(request, task, value),\n        serializeByValueID(task)\n      );\n    request = \"$\" === value[0] ? \"$\" + value : value;\n    return request;\n  }\n  if (\"boolean\" === typeof value) return value;\n  if (\"number\" === typeof value)\n    return Number.isFinite(value)\n      ? 0 === value && -Infinity === 1 / value\n        ? \"$-0\"\n        : value\n      : Infinity === value\n        ? \"$Infinity\"\n        : -Infinity === value\n          ? \"$-Infinity\"\n          : \"$NaN\";\n  if (\"undefined\" === typeof value) return \"$undefined\";\n  if (\"function\" === typeof value) {\n    if (value.$$typeof === CLIENT_REFERENCE_TAG$1)\n      return serializeClientReference(\n        request,\n        parent,\n        parentPropertyName,\n        value\n      );\n    if (value.$$typeof === SERVER_REFERENCE_TAG)\n      return (\n        (task = request.writtenServerReferences),\n        (parentPropertyName = task.get(value)),\n        void 0 !== parentPropertyName\n          ? (request = \"$F\" + parentPropertyName.toString(16))\n          : ((parentPropertyName = value.$$bound),\n            (parentPropertyName =\n              null === parentPropertyName\n                ? null\n                : Promise.resolve(parentPropertyName)),\n            (request = outlineModel(request, {\n              id: value.$$id,\n              bound: parentPropertyName\n            })),\n            task.set(value, request),\n            (request = \"$F\" + request.toString(16))),\n        request\n      );\n    if (\n      void 0 !== request.temporaryReferences &&\n      ((request = request.temporaryReferences.get(value)), void 0 !== request)\n    )\n      return \"$T\" + request;\n    if (value.$$typeof === TEMPORARY_REFERENCE_TAG)\n      throw Error(\n        \"Could not reference an opaque temporary reference. This is likely due to misconfiguring the temporaryReferences options on the server.\"\n      );\n    if (/^on[A-Z]/.test(parentPropertyName))\n      throw Error(\n        \"Event handlers cannot be passed to Client Component props.\" +\n          describeObjectForErrorMessage(parent, parentPropertyName) +\n          \"\\nIf you need interactivity, consider converting part of this to a Client Component.\"\n      );\n    throw Error(\n      'Functions cannot be passed directly to Client Components unless you explicitly expose it by marking it with \"use server\". Or maybe you meant to call this function rather than return it.' +\n        describeObjectForErrorMessage(parent, parentPropertyName)\n    );\n  }\n  if (\"symbol\" === typeof value) {\n    task = request.writtenSymbols;\n    elementReference = task.get(value);\n    if (void 0 !== elementReference)\n      return serializeByValueID(elementReference);\n    elementReference = value.description;\n    if (Symbol.for(elementReference) !== value)\n      throw Error(\n        \"Only global symbols received from Symbol.for(...) can be passed to Client Components. The symbol Symbol.for(\" +\n          (value.description + \") cannot be found among global symbols.\") +\n          describeObjectForErrorMessage(parent, parentPropertyName)\n      );\n    request.pendingChunks++;\n    parentPropertyName = request.nextChunkId++;\n    parent = encodeReferenceChunk(\n      request,\n      parentPropertyName,\n      \"$S\" + elementReference\n    );\n    request.completedImportChunks.push(parent);\n    task.set(value, parentPropertyName);\n    return serializeByValueID(parentPropertyName);\n  }\n  if (\"bigint\" === typeof value) return \"$n\" + value.toString(10);\n  throw Error(\n    \"Type \" +\n      typeof value +\n      \" is not supported in Client Component props.\" +\n      describeObjectForErrorMessage(parent, parentPropertyName)\n  );\n}\nfunction logRecoverableError(request, error) {\n  var prevRequest = currentRequest;\n  currentRequest = null;\n  try {\n    var onError = request.onError;\n    var errorDigest = supportsRequestStorage\n      ? requestStorage.run(void 0, onError, error)\n      : onError(error);\n  } finally {\n    currentRequest = prevRequest;\n  }\n  if (null != errorDigest && \"string\" !== typeof errorDigest)\n    throw Error(\n      'onError returned something with a type other than \"string\". onError should return a string and may return null or undefined but must not return anything else. It received something of type \"' +\n        typeof errorDigest +\n        '\" instead'\n    );\n  return errorDigest || \"\";\n}\nfunction fatalError(request, error) {\n  var onFatalError = request.onFatalError;\n  onFatalError(error);\n  null !== request.destination\n    ? ((request.status = 14), closeWithError(request.destination, error))\n    : ((request.status = 13), (request.fatalError = error));\n}\nfunction emitErrorChunk(request, id, digest) {\n  digest = { digest: digest };\n  id = id.toString(16) + \":E\" + stringify(digest) + \"\\n\";\n  id = stringToChunk(id);\n  request.completedErrorChunks.push(id);\n}\nfunction emitModelChunk(request, id, json) {\n  id = id.toString(16) + \":\" + json + \"\\n\";\n  id = stringToChunk(id);\n  request.completedRegularChunks.push(id);\n}\nfunction emitTypedArrayChunk(request, id, tag, typedArray) {\n  request.pendingChunks++;\n  var buffer = new Uint8Array(\n    typedArray.buffer,\n    typedArray.byteOffset,\n    typedArray.byteLength\n  );\n  typedArray = 2048 < typedArray.byteLength ? buffer.slice() : buffer;\n  buffer = typedArray.byteLength;\n  id = id.toString(16) + \":\" + tag + buffer.toString(16) + \",\";\n  id = stringToChunk(id);\n  request.completedRegularChunks.push(id, typedArray);\n}\nfunction emitTextChunk(request, id, text) {\n  if (null === byteLengthOfChunk)\n    throw Error(\n      \"Existence of byteLengthOfChunk should have already been checked. This is a bug in React.\"\n    );\n  request.pendingChunks++;\n  text = stringToChunk(text);\n  var binaryLength = text.byteLength;\n  id = id.toString(16) + \":T\" + binaryLength.toString(16) + \",\";\n  id = stringToChunk(id);\n  request.completedRegularChunks.push(id, text);\n}\nfunction emitChunk(request, task, value) {\n  var id = task.id;\n  \"string\" === typeof value && null !== byteLengthOfChunk\n    ? emitTextChunk(request, id, value)\n    : value instanceof ArrayBuffer\n      ? emitTypedArrayChunk(request, id, \"A\", new Uint8Array(value))\n      : value instanceof Int8Array\n        ? emitTypedArrayChunk(request, id, \"O\", value)\n        : value instanceof Uint8Array\n          ? emitTypedArrayChunk(request, id, \"o\", value)\n          : value instanceof Uint8ClampedArray\n            ? emitTypedArrayChunk(request, id, \"U\", value)\n            : value instanceof Int16Array\n              ? emitTypedArrayChunk(request, id, \"S\", value)\n              : value instanceof Uint16Array\n                ? emitTypedArrayChunk(request, id, \"s\", value)\n                : value instanceof Int32Array\n                  ? emitTypedArrayChunk(request, id, \"L\", value)\n                  : value instanceof Uint32Array\n                    ? emitTypedArrayChunk(request, id, \"l\", value)\n                    : value instanceof Float32Array\n                      ? emitTypedArrayChunk(request, id, \"G\", value)\n                      : value instanceof Float64Array\n                        ? emitTypedArrayChunk(request, id, \"g\", value)\n                        : value instanceof BigInt64Array\n                          ? emitTypedArrayChunk(request, id, \"M\", value)\n                          : value instanceof BigUint64Array\n                            ? emitTypedArrayChunk(request, id, \"m\", value)\n                            : value instanceof DataView\n                              ? emitTypedArrayChunk(request, id, \"V\", value)\n                              : ((value = stringify(value, task.toJSON)),\n                                emitModelChunk(request, task.id, value));\n}\nfunction erroredTask(request, task, error) {\n  request.abortableTasks.delete(task);\n  task.status = 4;\n  error = logRecoverableError(request, error, task);\n  emitErrorChunk(request, task.id, error);\n}\nvar emptyRoot = {};\nfunction retryTask(request, task) {\n  if (0 === task.status) {\n    task.status = 5;\n    try {\n      modelRoot = task.model;\n      var resolvedModel = renderModelDestructive(\n        request,\n        task,\n        emptyRoot,\n        \"\",\n        task.model\n      );\n      modelRoot = resolvedModel;\n      task.keyPath = null;\n      task.implicitSlot = !1;\n      if (\"object\" === typeof resolvedModel && null !== resolvedModel)\n        request.writtenObjects.set(resolvedModel, serializeByValueID(task.id)),\n          emitChunk(request, task, resolvedModel);\n      else {\n        var json = stringify(resolvedModel);\n        emitModelChunk(request, task.id, json);\n      }\n      request.abortableTasks.delete(task);\n      task.status = 1;\n    } catch (thrownValue) {\n      if (12 === request.status) {\n        request.abortableTasks.delete(task);\n        task.status = 3;\n        var model = stringify(serializeByValueID(request.fatalError));\n        emitModelChunk(request, task.id, model);\n      } else {\n        var x =\n          thrownValue === SuspenseException\n            ? getSuspendedThenable()\n            : thrownValue;\n        if (\n          \"object\" === typeof x &&\n          null !== x &&\n          \"function\" === typeof x.then\n        ) {\n          task.status = 0;\n          task.thenableState = getThenableStateAfterSuspending();\n          var ping = task.ping;\n          x.then(ping, ping);\n        } else erroredTask(request, task, x);\n      }\n    } finally {\n    }\n  }\n}\nfunction performWork(request) {\n  var prevDispatcher = ReactSharedInternalsServer.H;\n  ReactSharedInternalsServer.H = HooksDispatcher;\n  var prevRequest = currentRequest;\n  currentRequest$1 = currentRequest = request;\n  var hadAbortableTasks = 0 < request.abortableTasks.size;\n  try {\n    var pingedTasks = request.pingedTasks;\n    request.pingedTasks = [];\n    for (var i = 0; i < pingedTasks.length; i++)\n      retryTask(request, pingedTasks[i]);\n    null !== request.destination &&\n      flushCompletedChunks(request, request.destination);\n    if (hadAbortableTasks && 0 === request.abortableTasks.size) {\n      var onAllReady = request.onAllReady;\n      onAllReady();\n    }\n  } catch (error) {\n    logRecoverableError(request, error, null), fatalError(request, error);\n  } finally {\n    (ReactSharedInternalsServer.H = prevDispatcher),\n      (currentRequest$1 = null),\n      (currentRequest = prevRequest);\n  }\n}\nfunction flushCompletedChunks(request, destination) {\n  currentView = new Uint8Array(2048);\n  writtenBytes = 0;\n  try {\n    for (\n      var importsChunks = request.completedImportChunks, i = 0;\n      i < importsChunks.length;\n      i++\n    )\n      request.pendingChunks--,\n        writeChunkAndReturn(destination, importsChunks[i]);\n    importsChunks.splice(0, i);\n    var hintChunks = request.completedHintChunks;\n    for (i = 0; i < hintChunks.length; i++)\n      writeChunkAndReturn(destination, hintChunks[i]);\n    hintChunks.splice(0, i);\n    var regularChunks = request.completedRegularChunks;\n    for (i = 0; i < regularChunks.length; i++)\n      request.pendingChunks--,\n        writeChunkAndReturn(destination, regularChunks[i]);\n    regularChunks.splice(0, i);\n    var errorChunks = request.completedErrorChunks;\n    for (i = 0; i < errorChunks.length; i++)\n      request.pendingChunks--, writeChunkAndReturn(destination, errorChunks[i]);\n    errorChunks.splice(0, i);\n  } finally {\n    (request.flushScheduled = !1),\n      currentView &&\n        0 < writtenBytes &&\n        (destination.enqueue(\n          new Uint8Array(currentView.buffer, 0, writtenBytes)\n        ),\n        (currentView = null),\n        (writtenBytes = 0));\n  }\n  0 === request.pendingChunks &&\n    ((request.status = 14), destination.close(), (request.destination = null));\n}\nfunction startWork(request) {\n  request.flushScheduled = null !== request.destination;\n  supportsRequestStorage\n    ? scheduleMicrotask(function () {\n        requestStorage.run(request, performWork, request);\n      })\n    : scheduleMicrotask(function () {\n        return performWork(request);\n      });\n  setTimeoutOrImmediate(function () {\n    10 === request.status && (request.status = 11);\n  }, 0);\n}\nfunction enqueueFlush(request) {\n  !1 === request.flushScheduled &&\n    0 === request.pingedTasks.length &&\n    null !== request.destination &&\n    ((request.flushScheduled = !0),\n    setTimeoutOrImmediate(function () {\n      request.flushScheduled = !1;\n      var destination = request.destination;\n      destination && flushCompletedChunks(request, destination);\n    }, 0));\n}\nfunction startFlowing(request, destination) {\n  if (13 === request.status)\n    (request.status = 14), closeWithError(destination, request.fatalError);\n  else if (14 !== request.status && null === request.destination) {\n    request.destination = destination;\n    try {\n      flushCompletedChunks(request, destination);\n    } catch (error) {\n      logRecoverableError(request, error, null), fatalError(request, error);\n    }\n  }\n}\nfunction abort(request, reason) {\n  try {\n    11 >= request.status && (request.status = 12);\n    var abortableTasks = request.abortableTasks;\n    if (0 < abortableTasks.size) {\n      var error =\n          void 0 === reason\n            ? Error(\"The render was aborted by the server without a reason.\")\n            : \"object\" === typeof reason &&\n                null !== reason &&\n                \"function\" === typeof reason.then\n              ? Error(\"The render was aborted by the server with a promise.\")\n              : reason,\n        digest = logRecoverableError(request, error, null),\n        errorId = request.nextChunkId++;\n      request.fatalError = errorId;\n      request.pendingChunks++;\n      emitErrorChunk(request, errorId, digest, error);\n      abortableTasks.forEach(function (task) {\n        if (5 !== task.status) {\n          task.status = 3;\n          var ref = serializeByValueID(errorId);\n          task = encodeReferenceChunk(request, task.id, ref);\n          request.completedErrorChunks.push(task);\n        }\n      });\n      abortableTasks.clear();\n      var onAllReady = request.onAllReady;\n      onAllReady();\n    }\n    var abortListeners = request.abortListeners;\n    if (0 < abortListeners.size) {\n      var error$22 =\n        void 0 === reason\n          ? Error(\"The render was aborted by the server without a reason.\")\n          : \"object\" === typeof reason &&\n              null !== reason &&\n              \"function\" === typeof reason.then\n            ? Error(\"The render was aborted by the server with a promise.\")\n            : reason;\n      abortListeners.forEach(function (callback) {\n        return callback(error$22);\n      });\n      abortListeners.clear();\n    }\n    null !== request.destination &&\n      flushCompletedChunks(request, request.destination);\n  } catch (error$23) {\n    logRecoverableError(request, error$23, null), fatalError(request, error$23);\n  }\n}\nfunction resolveServerReference(bundlerConfig, id) {\n  var name = \"\",\n    resolvedModuleData = bundlerConfig[id];\n  if (resolvedModuleData) name = resolvedModuleData.name;\n  else {\n    var idx = id.lastIndexOf(\"#\");\n    -1 !== idx &&\n      ((name = id.slice(idx + 1)),\n      (resolvedModuleData = bundlerConfig[id.slice(0, idx)]));\n    if (!resolvedModuleData)\n      throw Error(\n        'Could not find the module \"' +\n          id +\n          '\" in the React Server Manifest. This is probably a bug in the React Server Components bundler.'\n      );\n  }\n  return resolvedModuleData.async\n    ? [resolvedModuleData.id, resolvedModuleData.chunks, name, 1]\n    : [resolvedModuleData.id, resolvedModuleData.chunks, name];\n}\nvar chunkCache = new Map();\nfunction requireAsyncModule(id) {\n  var promise = globalThis.__next_require__(id);\n  if (\"function\" !== typeof promise.then || \"fulfilled\" === promise.status)\n    return null;\n  promise.then(\n    function (value) {\n      promise.status = \"fulfilled\";\n      promise.value = value;\n    },\n    function (reason) {\n      promise.status = \"rejected\";\n      promise.reason = reason;\n    }\n  );\n  return promise;\n}\nfunction ignoreReject() {}\nfunction preloadModule(metadata) {\n  for (var chunks = metadata[1], promises = [], i = 0; i < chunks.length; ) {\n    var chunkId = chunks[i++];\n    chunks[i++];\n    var entry = chunkCache.get(chunkId);\n    if (void 0 === entry) {\n      entry = __webpack_chunk_load__(chunkId);\n      promises.push(entry);\n      var resolve = chunkCache.set.bind(chunkCache, chunkId, null);\n      entry.then(resolve, ignoreReject);\n      chunkCache.set(chunkId, entry);\n    } else null !== entry && promises.push(entry);\n  }\n  return 4 === metadata.length\n    ? 0 === promises.length\n      ? requireAsyncModule(metadata[0])\n      : Promise.all(promises).then(function () {\n          return requireAsyncModule(metadata[0]);\n        })\n    : 0 < promises.length\n      ? Promise.all(promises)\n      : null;\n}\nfunction requireModule(metadata) {\n  var moduleExports = globalThis.__next_require__(metadata[0]);\n  if (4 === metadata.length && \"function\" === typeof moduleExports.then)\n    if (\"fulfilled\" === moduleExports.status)\n      moduleExports = moduleExports.value;\n    else throw moduleExports.reason;\n  return \"*\" === metadata[2]\n    ? moduleExports\n    : \"\" === metadata[2]\n      ? moduleExports.__esModule\n        ? moduleExports.default\n        : moduleExports\n      : moduleExports[metadata[2]];\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction Chunk(status, value, reason, response) {\n  this.status = status;\n  this.value = value;\n  this.reason = reason;\n  this._response = response;\n}\nChunk.prototype = Object.create(Promise.prototype);\nChunk.prototype.then = function (resolve, reject) {\n  switch (this.status) {\n    case \"resolved_model\":\n      initializeModelChunk(this);\n  }\n  switch (this.status) {\n    case \"fulfilled\":\n      resolve(this.value);\n      break;\n    case \"pending\":\n    case \"blocked\":\n    case \"cyclic\":\n      resolve &&\n        (null === this.value && (this.value = []), this.value.push(resolve));\n      reject &&\n        (null === this.reason && (this.reason = []), this.reason.push(reject));\n      break;\n    default:\n      reject(this.reason);\n  }\n};\nfunction createPendingChunk(response) {\n  return new Chunk(\"pending\", null, null, response);\n}\nfunction wakeChunk(listeners, value) {\n  for (var i = 0; i < listeners.length; i++) (0, listeners[i])(value);\n}\nfunction triggerErrorOnChunk(chunk, error) {\n  if (\"pending\" !== chunk.status && \"blocked\" !== chunk.status)\n    chunk.reason.error(error);\n  else {\n    var listeners = chunk.reason;\n    chunk.status = \"rejected\";\n    chunk.reason = error;\n    null !== listeners && wakeChunk(listeners, error);\n  }\n}\nfunction resolveModelChunk(chunk, value, id) {\n  if (\"pending\" !== chunk.status)\n    (chunk = chunk.reason),\n      \"C\" === value[0]\n        ? chunk.close(\"C\" === value ? '\"$undefined\"' : value.slice(1))\n        : chunk.enqueueModel(value);\n  else {\n    var resolveListeners = chunk.value,\n      rejectListeners = chunk.reason;\n    chunk.status = \"resolved_model\";\n    chunk.value = value;\n    chunk.reason = id;\n    if (null !== resolveListeners)\n      switch ((initializeModelChunk(chunk), chunk.status)) {\n        case \"fulfilled\":\n          wakeChunk(resolveListeners, chunk.value);\n          break;\n        case \"pending\":\n        case \"blocked\":\n        case \"cyclic\":\n          if (chunk.value)\n            for (value = 0; value < resolveListeners.length; value++)\n              chunk.value.push(resolveListeners[value]);\n          else chunk.value = resolveListeners;\n          if (chunk.reason) {\n            if (rejectListeners)\n              for (value = 0; value < rejectListeners.length; value++)\n                chunk.reason.push(rejectListeners[value]);\n          } else chunk.reason = rejectListeners;\n          break;\n        case \"rejected\":\n          rejectListeners && wakeChunk(rejectListeners, chunk.reason);\n      }\n  }\n}\nfunction createResolvedIteratorResultChunk(response, value, done) {\n  return new Chunk(\n    \"resolved_model\",\n    (done ? '{\"done\":true,\"value\":' : '{\"done\":false,\"value\":') + value + \"}\",\n    -1,\n    response\n  );\n}\nfunction resolveIteratorResultChunk(chunk, value, done) {\n  resolveModelChunk(\n    chunk,\n    (done ? '{\"done\":true,\"value\":' : '{\"done\":false,\"value\":') + value + \"}\",\n    -1\n  );\n}\nfunction loadServerReference$1(\n  response,\n  id,\n  bound,\n  parentChunk,\n  parentObject,\n  key\n) {\n  var serverReference = resolveServerReference(response._bundlerConfig, id);\n  id = preloadModule(serverReference);\n  if (bound)\n    bound = Promise.all([bound, id]).then(function (_ref) {\n      _ref = _ref[0];\n      var fn = requireModule(serverReference);\n      return fn.bind.apply(fn, [null].concat(_ref));\n    });\n  else if (id)\n    bound = Promise.resolve(id).then(function () {\n      return requireModule(serverReference);\n    });\n  else return requireModule(serverReference);\n  bound.then(\n    createModelResolver(\n      parentChunk,\n      parentObject,\n      key,\n      !1,\n      response,\n      createModel,\n      []\n    ),\n    createModelReject(parentChunk)\n  );\n  return null;\n}\nfunction reviveModel(response, parentObj, parentKey, value, reference) {\n  if (\"string\" === typeof value)\n    return parseModelString(response, parentObj, parentKey, value, reference);\n  if (\"object\" === typeof value && null !== value)\n    if (\n      (void 0 !== reference &&\n        void 0 !== response._temporaryReferences &&\n        response._temporaryReferences.set(value, reference),\n      Array.isArray(value))\n    )\n      for (var i = 0; i < value.length; i++)\n        value[i] = reviveModel(\n          response,\n          value,\n          \"\" + i,\n          value[i],\n          void 0 !== reference ? reference + \":\" + i : void 0\n        );\n    else\n      for (i in value)\n        hasOwnProperty.call(value, i) &&\n          ((parentObj =\n            void 0 !== reference && -1 === i.indexOf(\":\")\n              ? reference + \":\" + i\n              : void 0),\n          (parentObj = reviveModel(response, value, i, value[i], parentObj)),\n          void 0 !== parentObj ? (value[i] = parentObj) : delete value[i]);\n  return value;\n}\nvar initializingChunk = null,\n  initializingChunkBlockedModel = null;\nfunction initializeModelChunk(chunk) {\n  var prevChunk = initializingChunk,\n    prevBlocked = initializingChunkBlockedModel;\n  initializingChunk = chunk;\n  initializingChunkBlockedModel = null;\n  var rootReference = -1 === chunk.reason ? void 0 : chunk.reason.toString(16),\n    resolvedModel = chunk.value;\n  chunk.status = \"cyclic\";\n  chunk.value = null;\n  chunk.reason = null;\n  try {\n    var rawModel = JSON.parse(resolvedModel),\n      value = reviveModel(\n        chunk._response,\n        { \"\": rawModel },\n        \"\",\n        rawModel,\n        rootReference\n      );\n    if (\n      null !== initializingChunkBlockedModel &&\n      0 < initializingChunkBlockedModel.deps\n    )\n      (initializingChunkBlockedModel.value = value), (chunk.status = \"blocked\");\n    else {\n      var resolveListeners = chunk.value;\n      chunk.status = \"fulfilled\";\n      chunk.value = value;\n      null !== resolveListeners && wakeChunk(resolveListeners, value);\n    }\n  } catch (error) {\n    (chunk.status = \"rejected\"), (chunk.reason = error);\n  } finally {\n    (initializingChunk = prevChunk),\n      (initializingChunkBlockedModel = prevBlocked);\n  }\n}\nfunction reportGlobalError(response, error) {\n  response._closed = !0;\n  response._closedReason = error;\n  response._chunks.forEach(function (chunk) {\n    \"pending\" === chunk.status && triggerErrorOnChunk(chunk, error);\n  });\n}\nfunction getChunk(response, id) {\n  var chunks = response._chunks,\n    chunk = chunks.get(id);\n  chunk ||\n    ((chunk = response._formData.get(response._prefix + id)),\n    (chunk =\n      null != chunk\n        ? new Chunk(\"resolved_model\", chunk, id, response)\n        : response._closed\n          ? new Chunk(\"rejected\", null, response._closedReason, response)\n          : createPendingChunk(response)),\n    chunks.set(id, chunk));\n  return chunk;\n}\nfunction createModelResolver(\n  chunk,\n  parentObject,\n  key,\n  cyclic,\n  response,\n  map,\n  path\n) {\n  if (initializingChunkBlockedModel) {\n    var blocked = initializingChunkBlockedModel;\n    cyclic || blocked.deps++;\n  } else\n    blocked = initializingChunkBlockedModel = {\n      deps: cyclic ? 0 : 1,\n      value: null\n    };\n  return function (value) {\n    for (var i = 1; i < path.length; i++) value = value[path[i]];\n    parentObject[key] = map(response, value);\n    \"\" === key && null === blocked.value && (blocked.value = parentObject[key]);\n    blocked.deps--;\n    0 === blocked.deps &&\n      \"blocked\" === chunk.status &&\n      ((value = chunk.value),\n      (chunk.status = \"fulfilled\"),\n      (chunk.value = blocked.value),\n      null !== value && wakeChunk(value, blocked.value));\n  };\n}\nfunction createModelReject(chunk) {\n  return function (error) {\n    return triggerErrorOnChunk(chunk, error);\n  };\n}\nfunction getOutlinedModel(response, reference, parentObject, key, map) {\n  reference = reference.split(\":\");\n  var id = parseInt(reference[0], 16);\n  id = getChunk(response, id);\n  switch (id.status) {\n    case \"resolved_model\":\n      initializeModelChunk(id);\n  }\n  switch (id.status) {\n    case \"fulfilled\":\n      parentObject = id.value;\n      for (key = 1; key < reference.length; key++)\n        parentObject = parentObject[reference[key]];\n      return map(response, parentObject);\n    case \"pending\":\n    case \"blocked\":\n    case \"cyclic\":\n      var parentChunk = initializingChunk;\n      id.then(\n        createModelResolver(\n          parentChunk,\n          parentObject,\n          key,\n          \"cyclic\" === id.status,\n          response,\n          map,\n          reference\n        ),\n        createModelReject(parentChunk)\n      );\n      return null;\n    default:\n      throw id.reason;\n  }\n}\nfunction createMap(response, model) {\n  return new Map(model);\n}\nfunction createSet(response, model) {\n  return new Set(model);\n}\nfunction extractIterator(response, model) {\n  return model[Symbol.iterator]();\n}\nfunction createModel(response, model) {\n  return model;\n}\nfunction parseTypedArray(\n  response,\n  reference,\n  constructor,\n  bytesPerElement,\n  parentObject,\n  parentKey\n) {\n  reference = parseInt(reference.slice(2), 16);\n  reference = response._formData.get(response._prefix + reference);\n  reference =\n    constructor === ArrayBuffer\n      ? reference.arrayBuffer()\n      : reference.arrayBuffer().then(function (buffer) {\n          return new constructor(buffer);\n        });\n  bytesPerElement = initializingChunk;\n  reference.then(\n    createModelResolver(\n      bytesPerElement,\n      parentObject,\n      parentKey,\n      !1,\n      response,\n      createModel,\n      []\n    ),\n    createModelReject(bytesPerElement)\n  );\n  return null;\n}\nfunction resolveStream(response, id, stream, controller) {\n  var chunks = response._chunks;\n  stream = new Chunk(\"fulfilled\", stream, controller, response);\n  chunks.set(id, stream);\n  response = response._formData.getAll(response._prefix + id);\n  for (id = 0; id < response.length; id++)\n    (chunks = response[id]),\n      \"C\" === chunks[0]\n        ? controller.close(\"C\" === chunks ? '\"$undefined\"' : chunks.slice(1))\n        : controller.enqueueModel(chunks);\n}\nfunction parseReadableStream(response, reference, type) {\n  reference = parseInt(reference.slice(2), 16);\n  var controller = null;\n  type = new ReadableStream({\n    type: type,\n    start: function (c) {\n      controller = c;\n    }\n  });\n  var previousBlockedChunk = null;\n  resolveStream(response, reference, type, {\n    enqueueModel: function (json) {\n      if (null === previousBlockedChunk) {\n        var chunk = new Chunk(\"resolved_model\", json, -1, response);\n        initializeModelChunk(chunk);\n        \"fulfilled\" === chunk.status\n          ? controller.enqueue(chunk.value)\n          : (chunk.then(\n              function (v) {\n                return controller.enqueue(v);\n              },\n              function (e) {\n                return controller.error(e);\n              }\n            ),\n            (previousBlockedChunk = chunk));\n      } else {\n        chunk = previousBlockedChunk;\n        var chunk$26 = createPendingChunk(response);\n        chunk$26.then(\n          function (v) {\n            return controller.enqueue(v);\n          },\n          function (e) {\n            return controller.error(e);\n          }\n        );\n        previousBlockedChunk = chunk$26;\n        chunk.then(function () {\n          previousBlockedChunk === chunk$26 && (previousBlockedChunk = null);\n          resolveModelChunk(chunk$26, json, -1);\n        });\n      }\n    },\n    close: function () {\n      if (null === previousBlockedChunk) controller.close();\n      else {\n        var blockedChunk = previousBlockedChunk;\n        previousBlockedChunk = null;\n        blockedChunk.then(function () {\n          return controller.close();\n        });\n      }\n    },\n    error: function (error) {\n      if (null === previousBlockedChunk) controller.error(error);\n      else {\n        var blockedChunk = previousBlockedChunk;\n        previousBlockedChunk = null;\n        blockedChunk.then(function () {\n          return controller.error(error);\n        });\n      }\n    }\n  });\n  return type;\n}\nfunction asyncIterator() {\n  return this;\n}\nfunction createIterator(next) {\n  next = { next: next };\n  next[ASYNC_ITERATOR] = asyncIterator;\n  return next;\n}\nfunction parseAsyncIterable(response, reference, iterator) {\n  reference = parseInt(reference.slice(2), 16);\n  var buffer = [],\n    closed = !1,\n    nextWriteIndex = 0,\n    $jscomp$compprop2 = {};\n  $jscomp$compprop2 =\n    (($jscomp$compprop2[ASYNC_ITERATOR] = function () {\n      var nextReadIndex = 0;\n      return createIterator(function (arg) {\n        if (void 0 !== arg)\n          throw Error(\n            \"Values cannot be passed to next() of AsyncIterables passed to Client Components.\"\n          );\n        if (nextReadIndex === buffer.length) {\n          if (closed)\n            return new Chunk(\n              \"fulfilled\",\n              { done: !0, value: void 0 },\n              null,\n              response\n            );\n          buffer[nextReadIndex] = createPendingChunk(response);\n        }\n        return buffer[nextReadIndex++];\n      });\n    }),\n    $jscomp$compprop2);\n  iterator = iterator ? $jscomp$compprop2[ASYNC_ITERATOR]() : $jscomp$compprop2;\n  resolveStream(response, reference, iterator, {\n    enqueueModel: function (value) {\n      nextWriteIndex === buffer.length\n        ? (buffer[nextWriteIndex] = createResolvedIteratorResultChunk(\n            response,\n            value,\n            !1\n          ))\n        : resolveIteratorResultChunk(buffer[nextWriteIndex], value, !1);\n      nextWriteIndex++;\n    },\n    close: function (value) {\n      closed = !0;\n      nextWriteIndex === buffer.length\n        ? (buffer[nextWriteIndex] = createResolvedIteratorResultChunk(\n            response,\n            value,\n            !0\n          ))\n        : resolveIteratorResultChunk(buffer[nextWriteIndex], value, !0);\n      for (nextWriteIndex++; nextWriteIndex < buffer.length; )\n        resolveIteratorResultChunk(\n          buffer[nextWriteIndex++],\n          '\"$undefined\"',\n          !0\n        );\n    },\n    error: function (error) {\n      closed = !0;\n      for (\n        nextWriteIndex === buffer.length &&\n        (buffer[nextWriteIndex] = createPendingChunk(response));\n        nextWriteIndex < buffer.length;\n\n      )\n        triggerErrorOnChunk(buffer[nextWriteIndex++], error);\n    }\n  });\n  return iterator;\n}\nfunction parseModelString(response, obj, key, value, reference) {\n  if (\"$\" === value[0]) {\n    switch (value[1]) {\n      case \"$\":\n        return value.slice(1);\n      case \"@\":\n        return (obj = parseInt(value.slice(2), 16)), getChunk(response, obj);\n      case \"F\":\n        return (\n          (value = value.slice(2)),\n          (value = getOutlinedModel(response, value, obj, key, createModel)),\n          loadServerReference$1(\n            response,\n            value.id,\n            value.bound,\n            initializingChunk,\n            obj,\n            key\n          )\n        );\n      case \"T\":\n        if (void 0 === reference || void 0 === response._temporaryReferences)\n          throw Error(\n            \"Could not reference an opaque temporary reference. This is likely due to misconfiguring the temporaryReferences options on the server.\"\n          );\n        return createTemporaryReference(\n          response._temporaryReferences,\n          reference\n        );\n      case \"Q\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, obj, key, createMap)\n        );\n      case \"W\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, obj, key, createSet)\n        );\n      case \"K\":\n        obj = value.slice(2);\n        var formPrefix = response._prefix + obj + \"_\",\n          data = new FormData();\n        response._formData.forEach(function (entry, entryKey) {\n          entryKey.startsWith(formPrefix) &&\n            data.append(entryKey.slice(formPrefix.length), entry);\n        });\n        return data;\n      case \"i\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, obj, key, extractIterator)\n        );\n      case \"I\":\n        return Infinity;\n      case \"-\":\n        return \"$-0\" === value ? -0 : -Infinity;\n      case \"N\":\n        return NaN;\n      case \"u\":\n        return;\n      case \"D\":\n        return new Date(Date.parse(value.slice(2)));\n      case \"n\":\n        return BigInt(value.slice(2));\n    }\n    switch (value[1]) {\n      case \"A\":\n        return parseTypedArray(response, value, ArrayBuffer, 1, obj, key);\n      case \"O\":\n        return parseTypedArray(response, value, Int8Array, 1, obj, key);\n      case \"o\":\n        return parseTypedArray(response, value, Uint8Array, 1, obj, key);\n      case \"U\":\n        return parseTypedArray(response, value, Uint8ClampedArray, 1, obj, key);\n      case \"S\":\n        return parseTypedArray(response, value, Int16Array, 2, obj, key);\n      case \"s\":\n        return parseTypedArray(response, value, Uint16Array, 2, obj, key);\n      case \"L\":\n        return parseTypedArray(response, value, Int32Array, 4, obj, key);\n      case \"l\":\n        return parseTypedArray(response, value, Uint32Array, 4, obj, key);\n      case \"G\":\n        return parseTypedArray(response, value, Float32Array, 4, obj, key);\n      case \"g\":\n        return parseTypedArray(response, value, Float64Array, 8, obj, key);\n      case \"M\":\n        return parseTypedArray(response, value, BigInt64Array, 8, obj, key);\n      case \"m\":\n        return parseTypedArray(response, value, BigUint64Array, 8, obj, key);\n      case \"V\":\n        return parseTypedArray(response, value, DataView, 1, obj, key);\n      case \"B\":\n        return (\n          (obj = parseInt(value.slice(2), 16)),\n          response._formData.get(response._prefix + obj)\n        );\n    }\n    switch (value[1]) {\n      case \"R\":\n        return parseReadableStream(response, value, void 0);\n      case \"r\":\n        return parseReadableStream(response, value, \"bytes\");\n      case \"X\":\n        return parseAsyncIterable(response, value, !1);\n      case \"x\":\n        return parseAsyncIterable(response, value, !0);\n    }\n    value = value.slice(1);\n    return getOutlinedModel(response, value, obj, key, createModel);\n  }\n  return value;\n}\nfunction createResponse(bundlerConfig, formFieldPrefix, temporaryReferences) {\n  var backingFormData =\n      3 < arguments.length && void 0 !== arguments[3]\n        ? arguments[3]\n        : new FormData(),\n    chunks = new Map();\n  return {\n    _bundlerConfig: bundlerConfig,\n    _prefix: formFieldPrefix,\n    _formData: backingFormData,\n    _chunks: chunks,\n    _closed: !1,\n    _closedReason: null,\n    _temporaryReferences: temporaryReferences\n  };\n}\nfunction close(response) {\n  reportGlobalError(response, Error(\"Connection closed.\"));\n}\nfunction loadServerReference(bundlerConfig, id, bound) {\n  var serverReference = resolveServerReference(bundlerConfig, id);\n  bundlerConfig = preloadModule(serverReference);\n  return bound\n    ? Promise.all([bound, bundlerConfig]).then(function (_ref) {\n        _ref = _ref[0];\n        var fn = requireModule(serverReference);\n        return fn.bind.apply(fn, [null].concat(_ref));\n      })\n    : bundlerConfig\n      ? Promise.resolve(bundlerConfig).then(function () {\n          return requireModule(serverReference);\n        })\n      : Promise.resolve(requireModule(serverReference));\n}\nfunction decodeBoundActionMetaData(body, serverManifest, formFieldPrefix) {\n  body = createResponse(serverManifest, formFieldPrefix, void 0, body);\n  close(body);\n  body = getChunk(body, 0);\n  body.then(function () {});\n  if (\"fulfilled\" !== body.status) throw body.reason;\n  return body.value;\n}\nexports.createClientModuleProxy = function (moduleId) {\n  moduleId = registerClientReferenceImpl({}, moduleId, !1);\n  return new Proxy(moduleId, proxyHandlers$1);\n};\nexports.createTemporaryReferenceSet = function () {\n  return new WeakMap();\n};\nexports.decodeAction = function (body, serverManifest) {\n  var formData = new FormData(),\n    action = null;\n  body.forEach(function (value, key) {\n    key.startsWith(\"$ACTION_\")\n      ? key.startsWith(\"$ACTION_REF_\")\n        ? ((value = \"$ACTION_\" + key.slice(12) + \":\"),\n          (value = decodeBoundActionMetaData(body, serverManifest, value)),\n          (action = loadServerReference(serverManifest, value.id, value.bound)))\n        : key.startsWith(\"$ACTION_ID_\") &&\n          ((value = key.slice(11)),\n          (action = loadServerReference(serverManifest, value, null)))\n      : formData.append(key, value);\n  });\n  return null === action\n    ? null\n    : action.then(function (fn) {\n        return fn.bind(null, formData);\n      });\n};\nexports.decodeFormState = function (actionResult, body, serverManifest) {\n  var keyPath = body.get(\"$ACTION_KEY\");\n  if (\"string\" !== typeof keyPath) return Promise.resolve(null);\n  var metaData = null;\n  body.forEach(function (value, key) {\n    key.startsWith(\"$ACTION_REF_\") &&\n      ((value = \"$ACTION_\" + key.slice(12) + \":\"),\n      (metaData = decodeBoundActionMetaData(body, serverManifest, value)));\n  });\n  if (null === metaData) return Promise.resolve(null);\n  var referenceId = metaData.id;\n  return Promise.resolve(metaData.bound).then(function (bound) {\n    return null === bound\n      ? null\n      : [actionResult, keyPath, referenceId, bound.length - 1];\n  });\n};\nexports.decodeReply = function (body, webpackMap, options) {\n  if (\"string\" === typeof body) {\n    var form = new FormData();\n    form.append(\"0\", body);\n    body = form;\n  }\n  body = createResponse(\n    webpackMap,\n    \"\",\n    options ? options.temporaryReferences : void 0,\n    body\n  );\n  webpackMap = getChunk(body, 0);\n  close(body);\n  return webpackMap;\n};\nexports.decodeReplyFromAsyncIterable = function (\n  iterable,\n  webpackMap,\n  options\n) {\n  function progress(entry) {\n    if (entry.done) close(response);\n    else {\n      entry = entry.value;\n      var name = entry[0];\n      entry = entry[1];\n      if (\"string\" === typeof entry) {\n        response._formData.append(name, entry);\n        var prefix = response._prefix;\n        if (name.startsWith(prefix)) {\n          var chunks = response._chunks;\n          name = +name.slice(prefix.length);\n          (chunks = chunks.get(name)) && resolveModelChunk(chunks, entry, name);\n        }\n      } else response._formData.append(name, entry);\n      iterator.next().then(progress, error);\n    }\n  }\n  function error(reason) {\n    reportGlobalError(response, reason);\n    \"function\" === typeof iterator.throw &&\n      iterator.throw(reason).then(error, error);\n  }\n  var iterator = iterable[ASYNC_ITERATOR](),\n    response = createResponse(\n      webpackMap,\n      \"\",\n      options ? options.temporaryReferences : void 0\n    );\n  iterator.next().then(progress, error);\n  return getChunk(response, 0);\n};\nexports.registerClientReference = function (\n  proxyImplementation,\n  id,\n  exportName\n) {\n  return registerClientReferenceImpl(\n    proxyImplementation,\n    id + \"#\" + exportName,\n    !1\n  );\n};\nexports.registerServerReference = function (reference, id, exportName) {\n  return Object.defineProperties(reference, {\n    $$typeof: { value: SERVER_REFERENCE_TAG },\n    $$id: {\n      value: null === exportName ? id : id + \"#\" + exportName,\n      configurable: !0\n    },\n    $$bound: { value: null, configurable: !0 },\n    bind: { value: bind, configurable: !0 }\n  });\n};\n\n// This is a patch added by Next.js\nconst setTimeoutOrImmediate =\n  typeof globalThis['set' + 'Immediate'] === 'function' &&\n  // edge runtime sandbox defines a stub for setImmediate\n  // (see 'addStub' in packages/next/src/server/web/sandbox/context.ts)\n  // but it's made non-enumerable, so we can detect it\n  globalThis.propertyIsEnumerable('setImmediate')\n    ? globalThis['set' + 'Immediate']\n    : setTimeout;\n\nexports.renderToReadableStream = function (model, webpackMap, options) {\n  var request = new RequestInstance(\n    20,\n    model,\n    webpackMap,\n    options ? options.onError : void 0,\n    options ? options.identifierPrefix : void 0,\n    options ? options.onPostpone : void 0,\n    options ? options.temporaryReferences : void 0,\n    void 0,\n    void 0,\n    noop,\n    noop\n  );\n  if (options && options.signal) {\n    var signal = options.signal;\n    if (signal.aborted) abort(request, signal.reason);\n    else {\n      var listener = function () {\n        abort(request, signal.reason);\n        signal.removeEventListener(\"abort\", listener);\n      };\n      signal.addEventListener(\"abort\", listener);\n    }\n  }\n  return new ReadableStream(\n    {\n      type: \"bytes\",\n      start: function () {\n        startWork(request);\n      },\n      pull: function (controller) {\n        startFlowing(request, controller);\n      },\n      cancel: function (reason) {\n        request.destination = null;\n        abort(request, reason);\n      }\n    },\n    { highWaterMark: 0 }\n  );\n};\nexports.unstable_prerender = function (model, webpackMap, options) {\n  return new Promise(function (resolve, reject) {\n    var request = new RequestInstance(\n      21,\n      model,\n      webpackMap,\n      options ? options.onError : void 0,\n      options ? options.identifierPrefix : void 0,\n      options ? options.onPostpone : void 0,\n      options ? options.temporaryReferences : void 0,\n      void 0,\n      void 0,\n      function () {\n        var stream = new ReadableStream(\n          {\n            type: \"bytes\",\n            start: function () {\n              startWork(request);\n            },\n            pull: function (controller) {\n              startFlowing(request, controller);\n            },\n            cancel: function (reason) {\n              request.destination = null;\n              abort(request, reason);\n            }\n          },\n          { highWaterMark: 0 }\n        );\n        resolve({ prelude: stream });\n      },\n      reject\n    );\n    if (options && options.signal) {\n      var signal = options.signal;\n      if (signal.aborted) abort(request, signal.reason);\n      else {\n        var listener = function () {\n          abort(request, signal.reason);\n          signal.removeEventListener(\"abort\", listener);\n        };\n        signal.addEventListener(\"abort\", listener);\n      }\n    }\n    startWork(request);\n  });\n};\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","let warning = () => { };\nlet invariant = () => { };\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { memo } from 'motion-utils';\nimport { isHTMLElement } from '../../../utils/is-html-element.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!isHTMLElement(motionValue?.owner?.current)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const numChildren = visualElement.variantChildren.size;\n    const maxStaggerDuration = (numChildren - 1) * staggerChildren;\n    const delayIsFunction = typeof delayChildren === \"function\";\n    const generateStaggerDuration = delayIsFunction\n        ? (i) => delayChildren(i, numChildren)\n        : // Support deprecated staggerChildren\n            staggerDirection === 1\n                ? (i = 0) => i * staggerChildren\n                : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delay +\n                (delayIsFunction ? 0 : delayChildren) +\n                generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursor.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.distanceThreshold = distanceThreshold;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        /**\n         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPointerEvent = null;\n        /**\n         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPanInfo = null;\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.stop(event, info);\n            this.latestPointerEvent = null;\n            this.latestPanInfo = null;\n        };\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            distanceThreshold,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    /**\n     * @internal\n     */\n    stop(event, panInfo) {\n        const finalEvent = event || this.latestPointerEvent;\n        const finalPanInfo = panInfo || this.latestPanInfo;\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging || !finalPanInfo || !finalEvent)\n            return;\n        const { velocity } = finalPanInfo;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(finalEvent, finalPanInfo));\n        }\n    }\n    /**\n     * @internal\n     */\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\n/**\n * Track whether we've taken any snapshots yet. If not,\n * we can safely skip notification of didUpdate.\n */\nlet hasTakenAnySnapshot = false;\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            if (hasTakenAnySnapshot) {\n                projection.root.didUpdate();\n            }\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        hasTakenAnySnapshot = true;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, frame, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                let innerWidth = 0;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                // Set initial innerWidth in a frame.read callback to batch the read\n                frame.read(() => {\n                    innerWidth = window.innerWidth;\n                });\n                attachResizeListener(instance, () => {\n                    const newInnerWidth = window.innerWidth;\n                    if (newInnerWidth === innerWidth)\n                        return;\n                    innerWidth = newInnerWidth;\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            this.animationCommitId = this.animationId;\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            else {\n                this.isUpdating = false;\n                /**\n                 * Write\n                 */\n                this.nodes.forEach(resetTransformStyle);\n                /**\n                 * Read ==================\n                 */\n                // Update layout measurements of updated children\n                this.nodes.forEach(updateLayout);\n                /**\n                 * Write\n                 */\n                // Notify listeners that the layout is updated\n                this.nodes.forEach(notifyLayoutUpdate);\n            }\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        applyProjectionStyles(targetStyle, // CSSStyleDeclaration - doesn't allow numbers to be assigned to properties\n        styleProp) {\n            if (!this.instance || this.isSVG)\n                return;\n            if (!this.isVisible) {\n                targetStyle.visibility = \"hidden\";\n                return;\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                targetStyle.visibility = \"\";\n                targetStyle.opacity = \"\";\n                targetStyle.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                targetStyle.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                if (this.options.layoutId) {\n                    targetStyle.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    targetStyle.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    targetStyle.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return;\n            }\n            targetStyle.visibility = \"\";\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            let transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                transform = transformTemplate(valuesToRender, transform);\n            }\n            targetStyle.transform = transform;\n            const { x, y } = this.projectionDelta;\n            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        targetStyle[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        targetStyle[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                targetStyle.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { createProjectionNode } from './create-projection-node.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addEventListener(\"change\", setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    const elementStyle = element.style;\n    let key;\n    for (key in style) {\n        // CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.\n        elementStyle[key] = style[key];\n    }\n    // Write projection styles directly to element style\n    projection?.applyProjectionStyles(elementStyle, styleProp);\n    for (key in vars) {\n        // Loop over any CSS variables and assign those.\n        // They can only be assigned using `setProperty`.\n        elementStyle.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","import { NextURL } from '../next-url';\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils';\nimport { RemovedUAError, RemovedPageError } from '../error';\nimport { RequestCookies } from './cookies';\nexport const INTERNALS = Symbol('internal request');\n/**\n * This class extends the [Web `Request` API](https://developer.mozilla.org/docs/Web/API/Request) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextRequest`](https://nextjs.org/docs/app/api-reference/functions/next-request)\n */ export class NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== 'string' && 'url' in input ? input.url : String(input);\n        validateURL(url);\n        // node Request instance requires duplex option when a body\n        // is present or it errors, we don't handle this for\n        // Request being passed in since it would have already\n        // errored if this wasn't configured\n        if (process.env.NEXT_RUNTIME !== 'edge') {\n            if (init.body && init.duplex !== 'half') {\n                init.duplex = 'half';\n            }\n        }\n        if (input instanceof Request) super(input, init);\n        else super(url, init);\n        const nextUrl = new NextURL(url, {\n            headers: toNodeOutgoingHttpHeaders(this.headers),\n            nextConfig: init.nextConfig\n        });\n        this[INTERNALS] = {\n            cookies: new RequestCookies(this.headers),\n            nextUrl,\n            url: process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE ? url : nextUrl.toString()\n        };\n    }\n    [Symbol.for('edge-runtime.inspect.custom')]() {\n        return {\n            cookies: this.cookies,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get nextUrl() {\n        return this[INTERNALS].nextUrl;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url;\n    }\n}\n\n//# sourceMappingURL=request.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    interceptTestApis: null,\n    wrapRequestHandler: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    interceptTestApis: function() {\n        return interceptTestApis;\n    },\n    wrapRequestHandler: function() {\n        return wrapRequestHandler;\n    }\n});\nconst _context = require(\"./context\");\nconst _fetch = require(\"./fetch\");\nfunction interceptTestApis() {\n    return (0, _fetch.interceptFetch)(global.fetch);\n}\nfunction wrapRequestHandler(handler) {\n    return (req, fn)=>(0, _context.withRequest)(req, _fetch.reader, ()=>handler(req, fn));\n}\n\n//# sourceMappingURL=server-edge.js.map","/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/ // eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */ var BaseServerSpan = /*#__PURE__*/ function(BaseServerSpan) {\n    BaseServerSpan[\"handleRequest\"] = \"BaseServer.handleRequest\";\n    BaseServerSpan[\"run\"] = \"BaseServer.run\";\n    BaseServerSpan[\"pipe\"] = \"BaseServer.pipe\";\n    BaseServerSpan[\"getStaticHTML\"] = \"BaseServer.getStaticHTML\";\n    BaseServerSpan[\"render\"] = \"BaseServer.render\";\n    BaseServerSpan[\"renderToResponseWithComponents\"] = \"BaseServer.renderToResponseWithComponents\";\n    BaseServerSpan[\"renderToResponse\"] = \"BaseServer.renderToResponse\";\n    BaseServerSpan[\"renderToHTML\"] = \"BaseServer.renderToHTML\";\n    BaseServerSpan[\"renderError\"] = \"BaseServer.renderError\";\n    BaseServerSpan[\"renderErrorToResponse\"] = \"BaseServer.renderErrorToResponse\";\n    BaseServerSpan[\"renderErrorToHTML\"] = \"BaseServer.renderErrorToHTML\";\n    BaseServerSpan[\"render404\"] = \"BaseServer.render404\";\n    return BaseServerSpan;\n}(BaseServerSpan || {});\nvar LoadComponentsSpan = /*#__PURE__*/ function(LoadComponentsSpan) {\n    LoadComponentsSpan[\"loadDefaultErrorComponents\"] = \"LoadComponents.loadDefaultErrorComponents\";\n    LoadComponentsSpan[\"loadComponents\"] = \"LoadComponents.loadComponents\";\n    return LoadComponentsSpan;\n}(LoadComponentsSpan || {});\nvar NextServerSpan = /*#__PURE__*/ function(NextServerSpan) {\n    NextServerSpan[\"getRequestHandler\"] = \"NextServer.getRequestHandler\";\n    NextServerSpan[\"getServer\"] = \"NextServer.getServer\";\n    NextServerSpan[\"getServerRequestHandler\"] = \"NextServer.getServerRequestHandler\";\n    NextServerSpan[\"createServer\"] = \"createServer.createServer\";\n    return NextServerSpan;\n}(NextServerSpan || {});\nvar NextNodeServerSpan = /*#__PURE__*/ function(NextNodeServerSpan) {\n    NextNodeServerSpan[\"compression\"] = \"NextNodeServer.compression\";\n    NextNodeServerSpan[\"getBuildId\"] = \"NextNodeServer.getBuildId\";\n    NextNodeServerSpan[\"createComponentTree\"] = \"NextNodeServer.createComponentTree\";\n    NextNodeServerSpan[\"clientComponentLoading\"] = \"NextNodeServer.clientComponentLoading\";\n    NextNodeServerSpan[\"getLayoutOrPageModule\"] = \"NextNodeServer.getLayoutOrPageModule\";\n    NextNodeServerSpan[\"generateStaticRoutes\"] = \"NextNodeServer.generateStaticRoutes\";\n    NextNodeServerSpan[\"generateFsStaticRoutes\"] = \"NextNodeServer.generateFsStaticRoutes\";\n    NextNodeServerSpan[\"generatePublicRoutes\"] = \"NextNodeServer.generatePublicRoutes\";\n    NextNodeServerSpan[\"generateImageRoutes\"] = \"NextNodeServer.generateImageRoutes.route\";\n    NextNodeServerSpan[\"sendRenderResult\"] = \"NextNodeServer.sendRenderResult\";\n    NextNodeServerSpan[\"proxyRequest\"] = \"NextNodeServer.proxyRequest\";\n    NextNodeServerSpan[\"runApi\"] = \"NextNodeServer.runApi\";\n    NextNodeServerSpan[\"render\"] = \"NextNodeServer.render\";\n    NextNodeServerSpan[\"renderHTML\"] = \"NextNodeServer.renderHTML\";\n    NextNodeServerSpan[\"imageOptimizer\"] = \"NextNodeServer.imageOptimizer\";\n    NextNodeServerSpan[\"getPagePath\"] = \"NextNodeServer.getPagePath\";\n    NextNodeServerSpan[\"getRoutesManifest\"] = \"NextNodeServer.getRoutesManifest\";\n    NextNodeServerSpan[\"findPageComponents\"] = \"NextNodeServer.findPageComponents\";\n    NextNodeServerSpan[\"getFontManifest\"] = \"NextNodeServer.getFontManifest\";\n    NextNodeServerSpan[\"getServerComponentManifest\"] = \"NextNodeServer.getServerComponentManifest\";\n    NextNodeServerSpan[\"getRequestHandler\"] = \"NextNodeServer.getRequestHandler\";\n    NextNodeServerSpan[\"renderToHTML\"] = \"NextNodeServer.renderToHTML\";\n    NextNodeServerSpan[\"renderError\"] = \"NextNodeServer.renderError\";\n    NextNodeServerSpan[\"renderErrorToHTML\"] = \"NextNodeServer.renderErrorToHTML\";\n    NextNodeServerSpan[\"render404\"] = \"NextNodeServer.render404\";\n    NextNodeServerSpan[\"startResponse\"] = \"NextNodeServer.startResponse\";\n    // nested inner span, does not require parent scope name\n    NextNodeServerSpan[\"route\"] = \"route\";\n    NextNodeServerSpan[\"onProxyReq\"] = \"onProxyReq\";\n    NextNodeServerSpan[\"apiResolver\"] = \"apiResolver\";\n    NextNodeServerSpan[\"internalFetch\"] = \"internalFetch\";\n    return NextNodeServerSpan;\n}(NextNodeServerSpan || {});\nvar StartServerSpan = /*#__PURE__*/ function(StartServerSpan) {\n    StartServerSpan[\"startServer\"] = \"startServer.startServer\";\n    return StartServerSpan;\n}(StartServerSpan || {});\nvar RenderSpan = /*#__PURE__*/ function(RenderSpan) {\n    RenderSpan[\"getServerSideProps\"] = \"Render.getServerSideProps\";\n    RenderSpan[\"getStaticProps\"] = \"Render.getStaticProps\";\n    RenderSpan[\"renderToString\"] = \"Render.renderToString\";\n    RenderSpan[\"renderDocument\"] = \"Render.renderDocument\";\n    RenderSpan[\"createBodyResult\"] = \"Render.createBodyResult\";\n    return RenderSpan;\n}(RenderSpan || {});\nvar AppRenderSpan = /*#__PURE__*/ function(AppRenderSpan) {\n    AppRenderSpan[\"renderToString\"] = \"AppRender.renderToString\";\n    AppRenderSpan[\"renderToReadableStream\"] = \"AppRender.renderToReadableStream\";\n    AppRenderSpan[\"getBodyResult\"] = \"AppRender.getBodyResult\";\n    AppRenderSpan[\"fetch\"] = \"AppRender.fetch\";\n    return AppRenderSpan;\n}(AppRenderSpan || {});\nvar RouterSpan = /*#__PURE__*/ function(RouterSpan) {\n    RouterSpan[\"executeRoute\"] = \"Router.executeRoute\";\n    return RouterSpan;\n}(RouterSpan || {});\nvar NodeSpan = /*#__PURE__*/ function(NodeSpan) {\n    NodeSpan[\"runHandler\"] = \"Node.runHandler\";\n    return NodeSpan;\n}(NodeSpan || {});\nvar AppRouteRouteHandlersSpan = /*#__PURE__*/ function(AppRouteRouteHandlersSpan) {\n    AppRouteRouteHandlersSpan[\"runHandler\"] = \"AppRouteRouteHandlers.runHandler\";\n    return AppRouteRouteHandlersSpan;\n}(AppRouteRouteHandlersSpan || {});\nvar ResolveMetadataSpan = /*#__PURE__*/ function(ResolveMetadataSpan) {\n    ResolveMetadataSpan[\"generateMetadata\"] = \"ResolveMetadata.generateMetadata\";\n    ResolveMetadataSpan[\"generateViewport\"] = \"ResolveMetadata.generateViewport\";\n    return ResolveMetadataSpan;\n}(ResolveMetadataSpan || {});\nvar MiddlewareSpan = /*#__PURE__*/ function(MiddlewareSpan) {\n    MiddlewareSpan[\"execute\"] = \"Middleware.execute\";\n    return MiddlewareSpan;\n}(MiddlewareSpan || {});\n// This list is used to filter out spans that are not relevant to the user\nexport const NextVanillaSpanAllowlist = [\n    \"Middleware.execute\",\n    \"BaseServer.handleRequest\",\n    \"Render.getServerSideProps\",\n    \"Render.getStaticProps\",\n    \"AppRender.fetch\",\n    \"AppRender.getBodyResult\",\n    \"Render.renderDocument\",\n    \"Node.runHandler\",\n    \"AppRouteRouteHandlers.runHandler\",\n    \"ResolveMetadata.generateMetadata\",\n    \"ResolveMetadata.generateViewport\",\n    \"NextNodeServer.createComponentTree\",\n    \"NextNodeServer.findPageComponents\",\n    \"NextNodeServer.getLayoutOrPageModule\",\n    \"NextNodeServer.startResponse\",\n    \"NextNodeServer.clientComponentLoading\"\n];\n// These Spans are allowed to be always logged\n// when the otel log prefix env is set\nexport const LogSpanAllowList = [\n    \"NextNodeServer.findPageComponents\",\n    \"NextNodeServer.createComponentTree\",\n    \"NextNodeServer.clientComponentLoading\"\n];\nexport { BaseServerSpan, LoadComponentsSpan, NextServerSpan, NextNodeServerSpan, StartServerSpan, RenderSpan, RouterSpan, AppRenderSpan, NodeSpan, AppRouteRouteHandlersSpan, ResolveMetadataSpan, MiddlewareSpan,  };\n\n//# sourceMappingURL=constants.js.map","(()=>{var e={318:function(e,t){(function(e,n){true?n(t):0})(this,(function(e){\"use strict\";class StructError extends TypeError{constructor(e,t){let n;const{message:r,explanation:i,...c}=e;const{path:o}=e;const a=o.length===0?r:`At path: ${o.join(\".\")} -- ${r}`;super(i??a);if(i!=null)this.cause=a;Object.assign(this,c);this.name=this.constructor.name;this.failures=()=>n??(n=[e,...t()])}}function isIterable(e){return isObject(e)&&typeof e[Symbol.iterator]===\"function\"}function isObject(e){return typeof e===\"object\"&&e!=null}function isPlainObject(e){if(Object.prototype.toString.call(e)!==\"[object Object]\"){return false}const t=Object.getPrototypeOf(e);return t===null||t===Object.prototype}function print(e){if(typeof e===\"symbol\"){return e.toString()}return typeof e===\"string\"?JSON.stringify(e):`${e}`}function shiftIterator(e){const{done:t,value:n}=e.next();return t?undefined:n}function toFailure(e,t,n,r){if(e===true){return}else if(e===false){e={}}else if(typeof e===\"string\"){e={message:e}}const{path:i,branch:c}=t;const{type:o}=n;const{refinement:a,message:s=`Expected a value of type \\`${o}\\`${a?` with refinement \\`${a}\\``:\"\"}, but received: \\`${print(r)}\\``}=e;return{value:r,type:o,refinement:a,key:i[i.length-1],path:i,branch:c,...e,message:s}}function*toFailures(e,t,n,r){if(!isIterable(e)){e=[e]}for(const i of e){const e=toFailure(i,t,n,r);if(e){yield e}}}function*run(e,t,n={}){const{path:r=[],branch:i=[e],coerce:c=false,mask:o=false}=n;const a={path:r,branch:i};if(c){e=t.coercer(e,a);if(o&&t.type!==\"type\"&&isObject(t.schema)&&isObject(e)&&!Array.isArray(e)){for(const n in e){if(t.schema[n]===undefined){delete e[n]}}}}let s=\"valid\";for(const r of t.validator(e,a)){r.explanation=n.message;s=\"not_valid\";yield[r,undefined]}for(let[u,f,l]of t.entries(e,a)){const t=run(f,l,{path:u===undefined?r:[...r,u],branch:u===undefined?i:[...i,f],coerce:c,mask:o,message:n.message});for(const n of t){if(n[0]){s=n[0].refinement!=null?\"not_refined\":\"not_valid\";yield[n[0],undefined]}else if(c){f=n[1];if(u===undefined){e=f}else if(e instanceof Map){e.set(u,f)}else if(e instanceof Set){e.add(f)}else if(isObject(e)){if(f!==undefined||u in e)e[u]=f}}}}if(s!==\"not_valid\"){for(const r of t.refiner(e,a)){r.explanation=n.message;s=\"not_refined\";yield[r,undefined]}}if(s===\"valid\"){yield[undefined,e]}}class Struct{constructor(e){const{type:t,schema:n,validator:r,refiner:i,coercer:c=(e=>e),entries:o=function*(){}}=e;this.type=t;this.schema=n;this.entries=o;this.coercer=c;if(r){this.validator=(e,t)=>{const n=r(e,t);return toFailures(n,t,this,e)}}else{this.validator=()=>[]}if(i){this.refiner=(e,t)=>{const n=i(e,t);return toFailures(n,t,this,e)}}else{this.refiner=()=>[]}}assert(e,t){return assert(e,this,t)}create(e,t){return create(e,this,t)}is(e){return is(e,this)}mask(e,t){return mask(e,this,t)}validate(e,t={}){return validate(e,this,t)}}function assert(e,t,n){const r=validate(e,t,{message:n});if(r[0]){throw r[0]}}function create(e,t,n){const r=validate(e,t,{coerce:true,message:n});if(r[0]){throw r[0]}else{return r[1]}}function mask(e,t,n){const r=validate(e,t,{coerce:true,mask:true,message:n});if(r[0]){throw r[0]}else{return r[1]}}function is(e,t){const n=validate(e,t);return!n[0]}function validate(e,t,n={}){const r=run(e,t,n);const i=shiftIterator(r);if(i[0]){const e=new StructError(i[0],(function*(){for(const e of r){if(e[0]){yield e[0]}}}));return[e,undefined]}else{const e=i[1];return[undefined,e]}}function assign(...e){const t=e[0].type===\"type\";const n=e.map((e=>e.schema));const r=Object.assign({},...n);return t?type(r):object(r)}function define(e,t){return new Struct({type:e,schema:null,validator:t})}function deprecated(e,t){return new Struct({...e,refiner:(t,n)=>t===undefined||e.refiner(t,n),validator(n,r){if(n===undefined){return true}else{t(n,r);return e.validator(n,r)}}})}function dynamic(e){return new Struct({type:\"dynamic\",schema:null,*entries(t,n){const r=e(t,n);yield*r.entries(t,n)},validator(t,n){const r=e(t,n);return r.validator(t,n)},coercer(t,n){const r=e(t,n);return r.coercer(t,n)},refiner(t,n){const r=e(t,n);return r.refiner(t,n)}})}function lazy(e){let t;return new Struct({type:\"lazy\",schema:null,*entries(n,r){t??(t=e());yield*t.entries(n,r)},validator(n,r){t??(t=e());return t.validator(n,r)},coercer(n,r){t??(t=e());return t.coercer(n,r)},refiner(n,r){t??(t=e());return t.refiner(n,r)}})}function omit(e,t){const{schema:n}=e;const r={...n};for(const e of t){delete r[e]}switch(e.type){case\"type\":return type(r);default:return object(r)}}function partial(e){const t=e instanceof Struct?{...e.schema}:{...e};for(const e in t){t[e]=optional(t[e])}return object(t)}function pick(e,t){const{schema:n}=e;const r={};for(const e of t){r[e]=n[e]}return object(r)}function struct(e,t){console.warn(\"superstruct@0.11 - The `struct` helper has been renamed to `define`.\");return define(e,t)}function any(){return define(\"any\",(()=>true))}function array(e){return new Struct({type:\"array\",schema:e,*entries(t){if(e&&Array.isArray(t)){for(const[n,r]of t.entries()){yield[n,r,e]}}},coercer(e){return Array.isArray(e)?e.slice():e},validator(e){return Array.isArray(e)||`Expected an array value, but received: ${print(e)}`}})}function bigint(){return define(\"bigint\",(e=>typeof e===\"bigint\"))}function boolean(){return define(\"boolean\",(e=>typeof e===\"boolean\"))}function date(){return define(\"date\",(e=>e instanceof Date&&!isNaN(e.getTime())||`Expected a valid \\`Date\\` object, but received: ${print(e)}`))}function enums(e){const t={};const n=e.map((e=>print(e))).join();for(const n of e){t[n]=n}return new Struct({type:\"enums\",schema:t,validator(t){return e.includes(t)||`Expected one of \\`${n}\\`, but received: ${print(t)}`}})}function func(){return define(\"func\",(e=>typeof e===\"function\"||`Expected a function, but received: ${print(e)}`))}function instance(e){return define(\"instance\",(t=>t instanceof e||`Expected a \\`${e.name}\\` instance, but received: ${print(t)}`))}function integer(){return define(\"integer\",(e=>typeof e===\"number\"&&!isNaN(e)&&Number.isInteger(e)||`Expected an integer, but received: ${print(e)}`))}function intersection(e){return new Struct({type:\"intersection\",schema:null,*entries(t,n){for(const r of e){yield*r.entries(t,n)}},*validator(t,n){for(const r of e){yield*r.validator(t,n)}},*refiner(t,n){for(const r of e){yield*r.refiner(t,n)}}})}function literal(e){const t=print(e);const n=typeof e;return new Struct({type:\"literal\",schema:n===\"string\"||n===\"number\"||n===\"boolean\"?e:null,validator(n){return n===e||`Expected the literal \\`${t}\\`, but received: ${print(n)}`}})}function map(e,t){return new Struct({type:\"map\",schema:null,*entries(n){if(e&&t&&n instanceof Map){for(const[r,i]of n.entries()){yield[r,r,e];yield[r,i,t]}}},coercer(e){return e instanceof Map?new Map(e):e},validator(e){return e instanceof Map||`Expected a \\`Map\\` object, but received: ${print(e)}`}})}function never(){return define(\"never\",(()=>false))}function nullable(e){return new Struct({...e,validator:(t,n)=>t===null||e.validator(t,n),refiner:(t,n)=>t===null||e.refiner(t,n)})}function number(){return define(\"number\",(e=>typeof e===\"number\"&&!isNaN(e)||`Expected a number, but received: ${print(e)}`))}function object(e){const t=e?Object.keys(e):[];const n=never();return new Struct({type:\"object\",schema:e?e:null,*entries(r){if(e&&isObject(r)){const i=new Set(Object.keys(r));for(const n of t){i.delete(n);yield[n,r[n],e[n]]}for(const e of i){yield[e,r[e],n]}}},validator(e){return isObject(e)||`Expected an object, but received: ${print(e)}`},coercer(e){return isObject(e)?{...e}:e}})}function optional(e){return new Struct({...e,validator:(t,n)=>t===undefined||e.validator(t,n),refiner:(t,n)=>t===undefined||e.refiner(t,n)})}function record(e,t){return new Struct({type:\"record\",schema:null,*entries(n){if(isObject(n)){for(const r in n){const i=n[r];yield[r,r,e];yield[r,i,t]}}},validator(e){return isObject(e)||`Expected an object, but received: ${print(e)}`}})}function regexp(){return define(\"regexp\",(e=>e instanceof RegExp))}function set(e){return new Struct({type:\"set\",schema:null,*entries(t){if(e&&t instanceof Set){for(const n of t){yield[n,n,e]}}},coercer(e){return e instanceof Set?new Set(e):e},validator(e){return e instanceof Set||`Expected a \\`Set\\` object, but received: ${print(e)}`}})}function string(){return define(\"string\",(e=>typeof e===\"string\"||`Expected a string, but received: ${print(e)}`))}function tuple(e){const t=never();return new Struct({type:\"tuple\",schema:null,*entries(n){if(Array.isArray(n)){const r=Math.max(e.length,n.length);for(let i=0;i<r;i++){yield[i,n[i],e[i]||t]}}},validator(e){return Array.isArray(e)||`Expected an array, but received: ${print(e)}`}})}function type(e){const t=Object.keys(e);return new Struct({type:\"type\",schema:e,*entries(n){if(isObject(n)){for(const r of t){yield[r,n[r],e[r]]}}},validator(e){return isObject(e)||`Expected an object, but received: ${print(e)}`},coercer(e){return isObject(e)?{...e}:e}})}function union(e){const t=e.map((e=>e.type)).join(\" | \");return new Struct({type:\"union\",schema:null,coercer(t){for(const n of e){const[e,r]=n.validate(t,{coerce:true});if(!e){return r}}return t},validator(n,r){const i=[];for(const t of e){const[...e]=run(n,t,r);const[c]=e;if(!c[0]){return[]}else{for(const[t]of e){if(t){i.push(t)}}}}return[`Expected the value to satisfy a union of \\`${t}\\`, but received: ${print(n)}`,...i]}})}function unknown(){return define(\"unknown\",(()=>true))}function coerce(e,t,n){return new Struct({...e,coercer:(r,i)=>is(r,t)?e.coercer(n(r,i),i):e.coercer(r,i)})}function defaulted(e,t,n={}){return coerce(e,unknown(),(e=>{const r=typeof t===\"function\"?t():t;if(e===undefined){return r}if(!n.strict&&isPlainObject(e)&&isPlainObject(r)){const t={...e};let n=false;for(const e in r){if(t[e]===undefined){t[e]=r[e];n=true}}if(n){return t}}return e}))}function trimmed(e){return coerce(e,string(),(e=>e.trim()))}function empty(e){return refine(e,\"empty\",(t=>{const n=getSize(t);return n===0||`Expected an empty ${e.type} but received one with a size of \\`${n}\\``}))}function getSize(e){if(e instanceof Map||e instanceof Set){return e.size}else{return e.length}}function max(e,t,n={}){const{exclusive:r}=n;return refine(e,\"max\",(n=>r?n<t:n<=t||`Expected a ${e.type} less than ${r?\"\":\"or equal to \"}${t} but received \\`${n}\\``))}function min(e,t,n={}){const{exclusive:r}=n;return refine(e,\"min\",(n=>r?n>t:n>=t||`Expected a ${e.type} greater than ${r?\"\":\"or equal to \"}${t} but received \\`${n}\\``))}function nonempty(e){return refine(e,\"nonempty\",(t=>{const n=getSize(t);return n>0||`Expected a nonempty ${e.type} but received an empty one`}))}function pattern(e,t){return refine(e,\"pattern\",(n=>t.test(n)||`Expected a ${e.type} matching \\`/${t.source}/\\` but received \"${n}\"`))}function size(e,t,n=t){const r=`Expected a ${e.type}`;const i=t===n?`of \\`${t}\\``:`between \\`${t}\\` and \\`${n}\\``;return refine(e,\"size\",(e=>{if(typeof e===\"number\"||e instanceof Date){return t<=e&&e<=n||`${r} ${i} but received \\`${e}\\``}else if(e instanceof Map||e instanceof Set){const{size:c}=e;return t<=c&&c<=n||`${r} with a size ${i} but received one with a size of \\`${c}\\``}else{const{length:c}=e;return t<=c&&c<=n||`${r} with a length ${i} but received one with a length of \\`${c}\\``}}))}function refine(e,t,n){return new Struct({...e,*refiner(r,i){yield*e.refiner(r,i);const c=n(r,i);const o=toFailures(c,i,e,r);for(const e of o){yield{...e,refinement:t}}}})}e.Struct=Struct;e.StructError=StructError;e.any=any;e.array=array;e.assert=assert;e.assign=assign;e.bigint=bigint;e.boolean=boolean;e.coerce=coerce;e.create=create;e.date=date;e.defaulted=defaulted;e.define=define;e.deprecated=deprecated;e.dynamic=dynamic;e.empty=empty;e.enums=enums;e.func=func;e.instance=instance;e.integer=integer;e.intersection=intersection;e.is=is;e.lazy=lazy;e.literal=literal;e.map=map;e.mask=mask;e.max=max;e.min=min;e.never=never;e.nonempty=nonempty;e.nullable=nullable;e.number=number;e.object=object;e.omit=omit;e.optional=optional;e.partial=partial;e.pattern=pattern;e.pick=pick;e.record=record;e.refine=refine;e.regexp=regexp;e.set=set;e.size=size;e.string=string;e.struct=struct;e.trimmed=trimmed;e.tuple=tuple;e.type=type;e.union=union;e.unknown=unknown;e.validate=validate}))}};if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t={};e[318](0,t);module.exports=t})();","export function getRevalidateReason(params) {\n    if (params.isOnDemandRevalidate) {\n        return 'on-demand';\n    }\n    if (params.isRevalidate) {\n        return 'stale';\n    }\n    return undefined;\n}\n\n//# sourceMappingURL=utils.js.map","import { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep';\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\nimport { isAppRouteRoute } from '../is-app-route-route';\nexport const STATIC_METADATA_IMAGES = {\n    icon: {\n        filename: 'icon',\n        extensions: [\n            'ico',\n            'jpg',\n            'jpeg',\n            'png',\n            'svg'\n        ]\n    },\n    apple: {\n        filename: 'apple-icon',\n        extensions: [\n            'jpg',\n            'jpeg',\n            'png'\n        ]\n    },\n    favicon: {\n        filename: 'favicon',\n        extensions: [\n            'ico'\n        ]\n    },\n    openGraph: {\n        filename: 'opengraph-image',\n        extensions: [\n            'jpg',\n            'jpeg',\n            'png',\n            'gif'\n        ]\n    },\n    twitter: {\n        filename: 'twitter-image',\n        extensions: [\n            'jpg',\n            'jpeg',\n            'png',\n            'gif'\n        ]\n    }\n};\n// Match routes that are metadata routes, e.g. /sitemap.xml, /favicon.<ext>, /<icon>.<ext>, etc.\n// TODO-METADATA: support more metadata routes with more extensions\nexport const DEFAULT_METADATA_ROUTE_EXTENSIONS = [\n    'js',\n    'jsx',\n    'ts',\n    'tsx'\n];\n// Match the file extension with the dynamic multi-routes extensions\n// e.g. ([xml, js], null) -> can match `/sitemap.xml/route`, `sitemap.js/route`\n// e.g. ([png], [ts]) -> can match `/opengrapg-image.png`, `/opengraph-image.ts`\nexport const getExtensionRegexString = (staticExtensions, dynamicExtensions)=>{\n    // If there's no possible multi dynamic routes, will not match any <name>[].<ext> files\n    if (!dynamicExtensions || dynamicExtensions.length === 0) {\n        return `(\\\\.(?:${staticExtensions.join('|')}))`;\n    }\n    return `(?:\\\\.(${staticExtensions.join('|')})|(\\\\.(${dynamicExtensions.join('|')})))`;\n};\n/**\n * Determine if the file is a metadata route file entry\n * @param appDirRelativePath the relative file path to app/\n * @param pageExtensions the js extensions, such as ['js', 'jsx', 'ts', 'tsx']\n * @param strictlyMatchExtensions if it's true, match the file with page extension, otherwise match the file with default corresponding extension\n * @returns {boolean} if the file is a metadata route file\n */ export function isMetadataRouteFile(appDirRelativePath, pageExtensions, strictlyMatchExtensions) {\n    // End with the extension or optional to have the extension\n    // When strictlyMatchExtensions is true, it's used for match file path;\n    // When strictlyMatchExtensions, the dynamic extension is skipped but\n    // static extension is kept, which is usually used for matching route path.\n    const trailingMatcher = (strictlyMatchExtensions ? '' : '?') + '$';\n    // Match the optional variants like /opengraph-image2, /icon-a102f4.png, etc.\n    const variantsMatcher = '\\\\d?';\n    // The -\\w{6} is the suffix that normalized from group routes;\n    const groupSuffix = strictlyMatchExtensions ? '' : '(-\\\\w{6})?';\n    const suffixMatcher = `${variantsMatcher}${groupSuffix}`;\n    const metadataRouteFilesRegex = [\n        new RegExp(`^[\\\\\\\\/]robots${getExtensionRegexString(pageExtensions.concat('txt'), null)}${trailingMatcher}`),\n        new RegExp(`^[\\\\\\\\/]manifest${getExtensionRegexString(pageExtensions.concat('webmanifest', 'json'), null)}${trailingMatcher}`),\n        new RegExp(`^[\\\\\\\\/]favicon\\\\.ico$`),\n        new RegExp(`[\\\\\\\\/]sitemap${getExtensionRegexString([\n            'xml'\n        ], pageExtensions)}${trailingMatcher}`),\n        new RegExp(`[\\\\\\\\/]${STATIC_METADATA_IMAGES.icon.filename}${suffixMatcher}${getExtensionRegexString(STATIC_METADATA_IMAGES.icon.extensions, pageExtensions)}${trailingMatcher}`),\n        new RegExp(`[\\\\\\\\/]${STATIC_METADATA_IMAGES.apple.filename}${suffixMatcher}${getExtensionRegexString(STATIC_METADATA_IMAGES.apple.extensions, pageExtensions)}${trailingMatcher}`),\n        new RegExp(`[\\\\\\\\/]${STATIC_METADATA_IMAGES.openGraph.filename}${suffixMatcher}${getExtensionRegexString(STATIC_METADATA_IMAGES.openGraph.extensions, pageExtensions)}${trailingMatcher}`),\n        new RegExp(`[\\\\\\\\/]${STATIC_METADATA_IMAGES.twitter.filename}${suffixMatcher}${getExtensionRegexString(STATIC_METADATA_IMAGES.twitter.extensions, pageExtensions)}${trailingMatcher}`)\n    ];\n    const normalizedAppDirRelativePath = normalizePathSep(appDirRelativePath);\n    const matched = metadataRouteFilesRegex.some((r)=>r.test(normalizedAppDirRelativePath));\n    return matched;\n}\n// Check if the route is a static metadata route, with /route suffix\n// e.g. /favicon.ico/route, /icon.png/route, etc.\n// But skip the text routes like robots.txt since they might also be dynamic.\n// Checking route path is not enough to determine if text routes is dynamic.\nexport function isStaticMetadataRoute(route) {\n    // extract ext with regex\n    const pathname = route.replace(/\\/route$/, '');\n    const matched = isAppRouteRoute(route) && isMetadataRouteFile(pathname, [], true) && // These routes can either be built by static or dynamic entrypoints,\n    // so we assume they're dynamic\n    pathname !== '/robots.txt' && pathname !== '/manifest.webmanifest' && !pathname.endsWith('/sitemap.xml');\n    return matched;\n}\n/**\n * Determine if a page or pathname is a metadata page.\n *\n * The input is a page or pathname, which can be with or without page suffix /foo/page or /foo.\n * But it will not contain the /route suffix.\n *\n * .e.g\n * /robots -> true\n * /sitemap -> true\n * /foo -> false\n */ export function isMetadataPage(page) {\n    const matched = !isAppRouteRoute(page) && isMetadataRouteFile(page, [], false);\n    return matched;\n}\n/*\n * Determine if a Next.js route is a metadata route.\n * `route` will has a route suffix.\n *\n * e.g.\n * /app/robots/route -> true\n * /robots/route -> true\n * /sitemap/[__metadata_id__]/route -> true\n * /app/sitemap/page -> false\n * /icon-a102f4/route -> true\n */ export function isMetadataRoute(route) {\n    let page = normalizeAppPath(route).replace(/^\\/?app\\//, '')// Remove the dynamic route id\n    .replace('/[__metadata_id__]', '')// Remove the /route suffix\n    .replace(/\\/route$/, '');\n    if (page[0] !== '/') page = '/' + page;\n    const matched = isAppRouteRoute(route) && isMetadataRouteFile(page, [], false);\n    return matched;\n}\n\n//# sourceMappingURL=is-metadata-route.js.map","import {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../../../lib/constants'\nimport { INTERCEPTION_ROUTE_MARKERS } from './interception-routes'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { removeTrailingSlash } from './remove-trailing-slash'\n\nexport interface Group {\n  pos: number\n  repeat: boolean\n  optional: boolean\n}\n\nexport interface RouteRegex {\n  groups: { [groupName: string]: Group }\n  re: RegExp\n}\n\ntype GetNamedRouteRegexOptions = {\n  /**\n   * Whether to prefix the route keys with the NEXT_INTERCEPTION_MARKER_PREFIX\n   * or NEXT_QUERY_PARAM_PREFIX. This is only relevant when creating the\n   * routes-manifest during the build.\n   */\n  prefixRouteKeys: boolean\n\n  /**\n   * Whether to include the suffix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n\n  /**\n   * Whether to backtrack duplicate keys. This is only relevant when creating\n   * the routes-manifest during the build.\n   */\n  backreferenceDuplicateKeys?: boolean\n}\n\ntype GetRouteRegexOptions = {\n  /**\n   * Whether to include extra parts in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   * of adding this option.\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n}\n\n/**\n * Regular expression pattern used to match route parameters.\n * Matches both single parameters and parameter groups.\n * Examples:\n *   - `[[...slug]]` matches parameter group with key 'slug', repeat: true, optional: true\n *   - `[...slug]` matches parameter group with key 'slug', repeat: true, optional: false\n *   - `[[foo]]` matches parameter with key 'foo', repeat: false, optional: true\n *   - `[bar]` matches parameter with key 'bar', repeat: false, optional: false\n */\nconst PARAMETER_PATTERN = /^([^[]*)\\[((?:\\[[^\\]]*\\])|[^\\]]+)\\](.*)$/\n\n/**\n * Parses a given parameter from a route to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[[...slug]]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[[foo]]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `[bar]` -> `{ key: 'bar', repeat: false, optional: false }`\n *   - `fizz` -> `{ key: 'fizz', repeat: false, optional: false }`\n * @param param - The parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseParameter(param: string) {\n  const match = param.match(PARAMETER_PATTERN)\n\n  if (!match) {\n    return parseMatchedParameter(param)\n  }\n\n  return parseMatchedParameter(match[2])\n}\n\n/**\n * Parses a matched parameter from the PARAMETER_PATTERN regex to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `...slug` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[foo]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `bar` -> `{ key: 'bar', repeat: false, optional: false }`\n * @param param - The matched parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nfunction parseMatchedParameter(param: string) {\n  const optional = param.startsWith('[') && param.endsWith(']')\n  if (optional) {\n    param = param.slice(1, -1)\n  }\n  const repeat = param.startsWith('...')\n  if (repeat) {\n    param = param.slice(3)\n  }\n  return { key: param, repeat, optional }\n}\n\nfunction getParametrizedRoute(\n  route: string,\n  includeSuffix: boolean,\n  includePrefix: boolean\n) {\n  const groups: { [groupName: string]: Group } = {}\n  let groupIndex = 1\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const markerMatch = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n      segment.startsWith(m)\n    )\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (markerMatch && paramMatches && paramMatches[2]) {\n      const { key, optional, repeat } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n      segments.push(`/${escapeStringRegexp(markerMatch)}([^/]+?)`)\n    } else if (paramMatches && paramMatches[2]) {\n      const { key, repeat, optional } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = repeat ? (optional ? '(?:/(.+?))?' : '/(.+?)') : '/([^/]+?)'\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    parameterizedRoute: segments.join(''),\n    groups,\n  }\n}\n\n/**\n * From a normalized route this function generates a regular expression and\n * a corresponding groups object intended to be used to store matching groups\n * from the regular expression.\n */\nexport function getRouteRegex(\n  normalizedRoute: string,\n  {\n    includeSuffix = false,\n    includePrefix = false,\n    excludeOptionalTrailingSlash = false,\n  }: GetRouteRegexOptions = {}\n): RouteRegex {\n  const { parameterizedRoute, groups } = getParametrizedRoute(\n    normalizedRoute,\n    includeSuffix,\n    includePrefix\n  )\n\n  let re = parameterizedRoute\n  if (!excludeOptionalTrailingSlash) {\n    re += '(?:/)?'\n  }\n\n  return {\n    re: new RegExp(`^${re}$`),\n    groups: groups,\n  }\n}\n\n/**\n * Builds a function to generate a minimal routeKey using only a-z and minimal\n * number of characters.\n */\nfunction buildGetSafeRouteKey() {\n  let i = 0\n\n  return () => {\n    let routeKey = ''\n    let j = ++i\n    while (j > 0) {\n      routeKey += String.fromCharCode(97 + ((j - 1) % 26))\n      j = Math.floor((j - 1) / 26)\n    }\n    return routeKey\n  }\n}\n\nfunction getSafeKeyFromSegment({\n  interceptionMarker,\n  getSafeRouteKey,\n  segment,\n  routeKeys,\n  keyPrefix,\n  backreferenceDuplicateKeys,\n}: {\n  interceptionMarker?: string\n  getSafeRouteKey: () => string\n  segment: string\n  routeKeys: Record<string, string>\n  keyPrefix?: string\n  backreferenceDuplicateKeys: boolean\n}) {\n  const { key, optional, repeat } = parseMatchedParameter(segment)\n\n  // replace any non-word characters since they can break\n  // the named regex\n  let cleanedKey = key.replace(/\\W/g, '')\n\n  if (keyPrefix) {\n    cleanedKey = `${keyPrefix}${cleanedKey}`\n  }\n  let invalidKey = false\n\n  // check if the key is still invalid and fallback to using a known\n  // safe key\n  if (cleanedKey.length === 0 || cleanedKey.length > 30) {\n    invalidKey = true\n  }\n  if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {\n    invalidKey = true\n  }\n\n  if (invalidKey) {\n    cleanedKey = getSafeRouteKey()\n  }\n\n  const duplicateKey = cleanedKey in routeKeys\n\n  if (keyPrefix) {\n    routeKeys[cleanedKey] = `${keyPrefix}${key}`\n  } else {\n    routeKeys[cleanedKey] = key\n  }\n\n  // if the segment has an interception marker, make sure that's part of the regex pattern\n  // this is to ensure that the route with the interception marker doesn't incorrectly match\n  // the non-intercepted route (ie /app/(.)[username] should not match /app/[username])\n  const interceptionPrefix = interceptionMarker\n    ? escapeStringRegexp(interceptionMarker)\n    : ''\n\n  let pattern: string\n  if (duplicateKey && backreferenceDuplicateKeys) {\n    // Use a backreference to the key to ensure that the key is the same value\n    // in each of the placeholders.\n    pattern = `\\\\k<${cleanedKey}>`\n  } else if (repeat) {\n    pattern = `(?<${cleanedKey}>.+?)`\n  } else {\n    pattern = `(?<${cleanedKey}>[^/]+?)`\n  }\n\n  return optional\n    ? `(?:/${interceptionPrefix}${pattern})?`\n    : `/${interceptionPrefix}${pattern}`\n}\n\nfunction getNamedParametrizedRoute(\n  route: string,\n  prefixRouteKeys: boolean,\n  includeSuffix: boolean,\n  includePrefix: boolean,\n  backreferenceDuplicateKeys: boolean\n) {\n  const getSafeRouteKey = buildGetSafeRouteKey()\n  const routeKeys: { [named: string]: string } = {}\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const hasInterceptionMarker = INTERCEPTION_ROUTE_MARKERS.some((m) =>\n      segment.startsWith(m)\n    )\n\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (hasInterceptionMarker && paramMatches && paramMatches[2]) {\n      // If there's an interception marker, add it to the segments.\n      segments.push(\n        getSafeKeyFromSegment({\n          getSafeRouteKey,\n          interceptionMarker: paramMatches[1],\n          segment: paramMatches[2],\n          routeKeys,\n          keyPrefix: prefixRouteKeys\n            ? NEXT_INTERCEPTION_MARKER_PREFIX\n            : undefined,\n          backreferenceDuplicateKeys,\n        })\n      )\n    } else if (paramMatches && paramMatches[2]) {\n      // If there's a prefix, add it to the segments if it's enabled.\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = getSafeKeyFromSegment({\n        getSafeRouteKey,\n        segment: paramMatches[2],\n        routeKeys,\n        keyPrefix: prefixRouteKeys ? NEXT_QUERY_PARAM_PREFIX : undefined,\n        backreferenceDuplicateKeys,\n      })\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    namedParameterizedRoute: segments.join(''),\n    routeKeys,\n  }\n}\n\n/**\n * This function extends `getRouteRegex` generating also a named regexp where\n * each group is named along with a routeKeys object that indexes the assigned\n * named group with its corresponding key. When the routeKeys need to be\n * prefixed to uniquely identify internally the \"prefixRouteKey\" arg should\n * be \"true\" currently this is only the case when creating the routes-manifest\n * during the build\n */\nexport function getNamedRouteRegex(\n  normalizedRoute: string,\n  options: GetNamedRouteRegexOptions\n) {\n  const result = getNamedParametrizedRoute(\n    normalizedRoute,\n    options.prefixRouteKeys,\n    options.includeSuffix ?? false,\n    options.includePrefix ?? false,\n    options.backreferenceDuplicateKeys ?? false\n  )\n\n  let namedRegex = result.namedParameterizedRoute\n  if (!options.excludeOptionalTrailingSlash) {\n    namedRegex += '(?:/)?'\n  }\n\n  return {\n    ...getRouteRegex(normalizedRoute, options),\n    namedRegex: `^${namedRegex}$`,\n    routeKeys: result.routeKeys,\n  }\n}\n\n/**\n * Generates a named regexp.\n * This is intended to be using for build time only.\n */\nexport function getNamedMiddlewareRegex(\n  normalizedRoute: string,\n  options: {\n    catchAll?: boolean\n  }\n) {\n  const { parameterizedRoute } = getParametrizedRoute(\n    normalizedRoute,\n    false,\n    false\n  )\n  const { catchAll = true } = options\n  if (parameterizedRoute === '/') {\n    let catchAllRegex = catchAll ? '.*' : ''\n    return {\n      namedRegex: `^/${catchAllRegex}$`,\n    }\n  }\n\n  const { namedParameterizedRoute } = getNamedParametrizedRoute(\n    normalizedRoute,\n    false,\n    false,\n    false,\n    false\n  )\n  let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : ''\n  return {\n    namedRegex: `^${namedParameterizedRoute}${catchAllGroupedRegex}$`,\n  }\n}\n","import type { HtmlProps } from './html-context.shared-runtime'\nimport type { ComponentType, JSX } from 'react'\nimport type { DomainLocale } from '../../server/config'\nimport type { Env } from '@next/env'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextRouter } from './router/router'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { PreviewData } from '../../types'\nimport type { COMPILER_NAMES } from './constants'\nimport type fs from 'fs'\n\nexport type NextComponentType<\n  Context extends BaseContext = NextPageContext,\n  InitialProps = {},\n  Props = {},\n> = ComponentType<Props> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param context Context of `page`\n   */\n  getInitialProps?(context: Context): InitialProps | Promise<InitialProps>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n>\n\nexport type AppType<P = {}> = NextComponentType<\n  AppContextType,\n  P,\n  AppPropsType<any, P>\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport const WEB_VITALS = ['CLS', 'FCP', 'FID', 'INP', 'LCP', 'TTFB'] as const\nexport type NextWebVitalsMetric = {\n  id: string\n  startTime: number\n  value: number\n  attribution?: { [key: string]: unknown }\n} & (\n  | {\n      label: 'web-vital'\n      name: (typeof WEB_VITALS)[number]\n    }\n  | {\n      label: 'custom'\n      name:\n        | 'Next.js-hydration'\n        | 'Next.js-route-change-to-render'\n        | 'Next.js-render'\n    }\n)\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => DocumentInitialProps | Promise<DocumentInitialProps>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  runtimeConfig?: { [key: string]: any }\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  isExperimentalCompile?: boolean\n  dynamicIds?: (string | number)[]\n  err?: Error & {\n    statusCode?: number\n    source?: typeof COMPILER_NAMES.server | typeof COMPILER_NAMES.edgeServer\n  }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  locale?: string\n  locales?: readonly string[]\n  defaultLocale?: string\n  domainLocales?: readonly DomainLocale[]\n  scriptLoader?: any[]\n  isPreview?: boolean\n  notFoundSrcPage?: string\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * The currently active locale\n   */\n  locale?: string\n  /**\n   * All configured locales\n   */\n  locales?: readonly string[]\n  /**\n   * The configured default locale\n   */\n  defaultLocale?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<Router extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: Router\n}\n\nexport type AppInitialProps<PageProps = any> = {\n  pageProps: PageProps\n}\n\nexport type AppPropsType<\n  Router extends NextRouter = NextRouter,\n  PageProps = {},\n> = AppInitialProps<PageProps> & {\n  Component: NextComponentType<NextPageContext, any, any>\n  router: Router\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n  defaultGetInitialProps(\n    ctx: DocumentContext,\n    options?: { nonce?: string }\n  ): Promise<DocumentInitialProps>\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | Iterable<React.ReactNode> | JSX.Element\n}\n\nexport type DocumentProps = DocumentInitialProps & HtmlProps\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: Partial<{\n    [key: string]: string | string[]\n  }>\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: Partial<{\n    [key: string]: string\n  }>\n\n  body: any\n\n  env: Env\n\n  draftMode?: boolean\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: PreviewData\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<Data = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<Data>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<Data>\n  status: (statusCode: number) => NextApiResponse<Data>\n  redirect(url: string): NextApiResponse<Data>\n  redirect(status: number, url: string): NextApiResponse<Data>\n\n  /**\n   * Set draft mode\n   */\n  setDraftMode: (options: { enable: boolean }) => NextApiResponse<Data>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n      /**\n       * Specifies the path for the preview session to work under. By default,\n       * the path is considered the \"default path\", i.e., any pages under \"/\".\n       */\n      path?: string\n    }\n  ) => NextApiResponse<Data>\n\n  /**\n   * Clear preview data for Next.js' prerender mode\n   */\n  clearPreviewData: (options?: { path?: string }) => NextApiResponse<Data>\n\n  /**\n   * Revalidate a specific page and regenerate it using On-Demand Incremental\n   * Static Regeneration.\n   * The path should be an actual path, not a rewritten path. E.g. for\n   * \"/blog/[slug]\" this should be \"/blog/post-1\".\n   * @link https://nextjs.org/docs/app/building-your-application/data-fetching/incremental-static-regeneration#on-demand-revalidation-with-revalidatepath\n   */\n  revalidate: (\n    urlPath: string,\n    opts?: {\n      unstable_onlyGenerated?: boolean\n    }\n  ) => Promise<void>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => unknown | Promise<unknown>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/\nexport const isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url)\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport function normalizeRepeatedSlashes(url: string) {\n  const urlParts = url.split('?')\n  const urlNoQuery = urlParts[0]\n\n  return (\n    urlNoQuery\n      // first we replace any non-encoded backslashes with forward\n      // then normalize repeated forward slashes\n      .replace(/\\\\/g, '/')\n      .replace(/\\/\\/+/g, '/') +\n    (urlParts[1] ? `?${urlParts.slice(1).join('?')}` : '')\n  )\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {},\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  (['mark', 'measure', 'getEntriesByName'] as const).every(\n    (method) => typeof performance[method] === 'function'\n  )\n\nexport class DecodeError extends Error {}\nexport class NormalizeError extends Error {}\nexport class PageNotFoundError extends Error {\n  code: string\n\n  constructor(page: string) {\n    super()\n    this.code = 'ENOENT'\n    this.name = 'PageNotFoundError'\n    this.message = `Cannot find module for page: ${page}`\n  }\n}\n\nexport class MissingStaticPage extends Error {\n  constructor(page: string, message: string) {\n    super()\n    this.message = `Failed to load static file for page: ${page} ${message}`\n  }\n}\n\nexport class MiddlewareNotFoundError extends Error {\n  code: string\n  constructor() {\n    super()\n    this.code = 'ENOENT'\n    this.message = `Cannot find the middleware module`\n  }\n}\n\nexport interface CacheFs {\n  existsSync: typeof fs.existsSync\n  readFile: typeof fs.promises.readFile\n  readFileSync: typeof fs.readFileSync\n  writeFile(f: string, d: any): Promise<void>\n  mkdir(dir: string): Promise<void | string>\n  stat(f: string): Promise<{ mtime: Date }>\n}\n\nexport function stringifyError(error: Error) {\n  return JSON.stringify({ message: error.message, stack: error.stack })\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nimport { searchParamsToUrlQuery } from './querystring'\nimport { parseRelativeUrl } from './parse-relative-url'\n\nexport interface ParsedUrl {\n  hash: string\n  hostname?: string | null\n  href: string\n  pathname: string\n  port?: string | null\n  protocol?: string | null\n  query: ParsedUrlQuery\n  search: string\n}\n\nexport function parseUrl(url: string): ParsedUrl {\n  if (url.startsWith('/')) {\n    return parseRelativeUrl(url)\n  }\n\n  const parsedURL = new URL(url)\n  return {\n    hash: parsedURL.hash,\n    hostname: parsedURL.hostname,\n    href: parsedURL.href,\n    pathname: parsedURL.pathname,\n    port: parsedURL.port,\n    protocol: parsedURL.protocol,\n    query: searchParamsToUrlQuery(parsedURL.searchParams),\n    search: parsedURL.search,\n  }\n}\n","/**\n * Parse cookies from the `headers` of request\n * @param req request object\n */ export function getCookieParser(headers) {\n    return function parseCookie() {\n        const { cookie } = headers;\n        if (!cookie) {\n            return {};\n        }\n        const { parse: parseCookieFn } = require('next/dist/compiled/cookie');\n        return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie);\n    };\n}\n\n//# sourceMappingURL=get-cookie-parser.js.map","import { format as formatUrl, parse as parseUrl } from 'url';\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path';\nimport { getPathMatch } from '../shared/lib/router/utils/path-match';\nimport { getNamedRouteRegex } from '../shared/lib/router/utils/route-regex';\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher';\nimport { matchHas, prepareDestination } from '../shared/lib/router/utils/prepare-destination';\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash';\nimport { normalizeRscURL } from '../shared/lib/router/utils/app-paths';\nimport { NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER, NEXT_CACHE_REVALIDATED_TAGS_HEADER, NEXT_INTERCEPTION_MARKER_PREFIX, NEXT_QUERY_PARAM_PREFIX } from '../lib/constants';\nimport { normalizeNextQueryParam } from './web/utils';\nexport function normalizeVercelUrl(req, paramKeys, defaultRouteRegex) {\n    // make sure to normalize req.url on Vercel to strip dynamic and rewrite\n    // params from the query which are added during routing\n    const _parsedUrl = parseUrl(req.url, true);\n    delete _parsedUrl.search;\n    for (const key of Object.keys(_parsedUrl.query)){\n        const isNextQueryPrefix = key !== NEXT_QUERY_PARAM_PREFIX && key.startsWith(NEXT_QUERY_PARAM_PREFIX);\n        const isNextInterceptionMarkerPrefix = key !== NEXT_INTERCEPTION_MARKER_PREFIX && key.startsWith(NEXT_INTERCEPTION_MARKER_PREFIX);\n        if (isNextQueryPrefix || isNextInterceptionMarkerPrefix || paramKeys.includes(key) || defaultRouteRegex && Object.keys(defaultRouteRegex.groups).includes(key)) {\n            delete _parsedUrl.query[key];\n        }\n    }\n    req.url = formatUrl(_parsedUrl);\n}\nexport function interpolateDynamicPath(pathname, params, defaultRouteRegex) {\n    if (!defaultRouteRegex) return pathname;\n    for (const param of Object.keys(defaultRouteRegex.groups)){\n        const { optional, repeat } = defaultRouteRegex.groups[param];\n        let builtParam = `[${repeat ? '...' : ''}${param}]`;\n        if (optional) {\n            builtParam = `[${builtParam}]`;\n        }\n        let paramValue;\n        const value = params[param];\n        if (Array.isArray(value)) {\n            paramValue = value.map((v)=>v && encodeURIComponent(v)).join('/');\n        } else if (value) {\n            paramValue = encodeURIComponent(value);\n        } else {\n            paramValue = '';\n        }\n        pathname = pathname.replaceAll(builtParam, paramValue);\n    }\n    return pathname;\n}\nexport function normalizeDynamicRouteParams(query, defaultRouteRegex, defaultRouteMatches, ignoreMissingOptional) {\n    let hasValidParams = true;\n    let params = {};\n    for (const key of Object.keys(defaultRouteRegex.groups)){\n        let value = query[key];\n        if (typeof value === 'string') {\n            value = normalizeRscURL(value);\n        } else if (Array.isArray(value)) {\n            value = value.map(normalizeRscURL);\n        }\n        // if the value matches the default value we can't rely\n        // on the parsed params, this is used to signal if we need\n        // to parse x-now-route-matches or not\n        const defaultValue = defaultRouteMatches[key];\n        const isOptional = defaultRouteRegex.groups[key].optional;\n        const isDefaultValue = Array.isArray(defaultValue) ? defaultValue.some((defaultVal)=>{\n            return Array.isArray(value) ? value.some((val)=>val.includes(defaultVal)) : value == null ? void 0 : value.includes(defaultVal);\n        }) : value == null ? void 0 : value.includes(defaultValue);\n        if (isDefaultValue || typeof value === 'undefined' && !(isOptional && ignoreMissingOptional)) {\n            return {\n                params: {},\n                hasValidParams: false\n            };\n        }\n        // non-provided optional values should be undefined so normalize\n        // them to undefined\n        if (isOptional && (!value || Array.isArray(value) && value.length === 1 && // fallback optional catch-all SSG pages have\n        // [[...paramName]] for the root path on Vercel\n        (value[0] === 'index' || value[0] === `[[...${key}]]`))) {\n            value = undefined;\n            delete query[key];\n        }\n        // query values from the proxy aren't already split into arrays\n        // so make sure to normalize catch-all values\n        if (value && typeof value === 'string' && defaultRouteRegex.groups[key].repeat) {\n            value = value.split('/');\n        }\n        if (value) {\n            params[key] = value;\n        }\n    }\n    return {\n        params,\n        hasValidParams\n    };\n}\nexport function getUtils({ page, i18n, basePath, rewrites, pageIsDynamic, trailingSlash, caseSensitive }) {\n    let defaultRouteRegex;\n    let dynamicRouteMatcher;\n    let defaultRouteMatches;\n    if (pageIsDynamic) {\n        defaultRouteRegex = getNamedRouteRegex(page, {\n            prefixRouteKeys: false\n        });\n        dynamicRouteMatcher = getRouteMatcher(defaultRouteRegex);\n        defaultRouteMatches = dynamicRouteMatcher(page);\n    }\n    function handleRewrites(req, parsedUrl) {\n        const rewriteParams = {};\n        let fsPathname = parsedUrl.pathname;\n        const matchesPage = ()=>{\n            const fsPathnameNoSlash = removeTrailingSlash(fsPathname || '');\n            return fsPathnameNoSlash === removeTrailingSlash(page) || (dynamicRouteMatcher == null ? void 0 : dynamicRouteMatcher(fsPathnameNoSlash));\n        };\n        const checkRewrite = (rewrite)=>{\n            const matcher = getPathMatch(rewrite.source + (trailingSlash ? '(/)?' : ''), {\n                removeUnnamedParams: true,\n                strict: true,\n                sensitive: !!caseSensitive\n            });\n            if (!parsedUrl.pathname) return false;\n            let params = matcher(parsedUrl.pathname);\n            if ((rewrite.has || rewrite.missing) && params) {\n                const hasParams = matchHas(req, parsedUrl.query, rewrite.has, rewrite.missing);\n                if (hasParams) {\n                    Object.assign(params, hasParams);\n                } else {\n                    params = false;\n                }\n            }\n            if (params) {\n                const { parsedDestination, destQuery } = prepareDestination({\n                    appendParamsToQuery: true,\n                    destination: rewrite.destination,\n                    params: params,\n                    query: parsedUrl.query\n                });\n                // if the rewrite destination is external break rewrite chain\n                if (parsedDestination.protocol) {\n                    return true;\n                }\n                Object.assign(rewriteParams, destQuery, params);\n                Object.assign(parsedUrl.query, parsedDestination.query);\n                delete parsedDestination.query;\n                Object.assign(parsedUrl, parsedDestination);\n                fsPathname = parsedUrl.pathname;\n                if (!fsPathname) return false;\n                if (basePath) {\n                    fsPathname = fsPathname.replace(new RegExp(`^${basePath}`), '') || '/';\n                }\n                if (i18n) {\n                    const result = normalizeLocalePath(fsPathname, i18n.locales);\n                    fsPathname = result.pathname;\n                    parsedUrl.query.nextInternalLocale = result.detectedLocale || params.nextInternalLocale;\n                }\n                if (fsPathname === page) {\n                    return true;\n                }\n                if (pageIsDynamic && dynamicRouteMatcher) {\n                    const dynamicParams = dynamicRouteMatcher(fsPathname);\n                    if (dynamicParams) {\n                        parsedUrl.query = {\n                            ...parsedUrl.query,\n                            ...dynamicParams\n                        };\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n        for (const rewrite of rewrites.beforeFiles || []){\n            checkRewrite(rewrite);\n        }\n        if (fsPathname !== page) {\n            let finished = false;\n            for (const rewrite of rewrites.afterFiles || []){\n                finished = checkRewrite(rewrite);\n                if (finished) break;\n            }\n            if (!finished && !matchesPage()) {\n                for (const rewrite of rewrites.fallback || []){\n                    finished = checkRewrite(rewrite);\n                    if (finished) break;\n                }\n            }\n        }\n        return rewriteParams;\n    }\n    function getParamsFromRouteMatches(routeMatchesHeader) {\n        // If we don't have a default route regex, we can't get params from route\n        // matches\n        if (!defaultRouteRegex) return null;\n        const { groups, routeKeys } = defaultRouteRegex;\n        const matcher = getRouteMatcher({\n            re: {\n                // Simulate a RegExp match from the \\`req.url\\` input\n                exec: (str)=>{\n                    // Normalize all the prefixed query params.\n                    const obj = Object.fromEntries(new URLSearchParams(str));\n                    for (const [key, value] of Object.entries(obj)){\n                        const normalizedKey = normalizeNextQueryParam(key);\n                        if (!normalizedKey) continue;\n                        obj[normalizedKey] = value;\n                        delete obj[key];\n                    }\n                    // Use all the named route keys.\n                    const result = {};\n                    for (const keyName of Object.keys(routeKeys)){\n                        const paramName = routeKeys[keyName];\n                        // If this param name is not a valid parameter name, then skip it.\n                        if (!paramName) continue;\n                        const group = groups[paramName];\n                        const value = obj[keyName];\n                        // When we're missing a required param, we can't match the route.\n                        if (!group.optional && !value) return null;\n                        result[group.pos] = value;\n                    }\n                    return result;\n                }\n            },\n            groups\n        });\n        const routeMatches = matcher(routeMatchesHeader);\n        if (!routeMatches) return null;\n        return routeMatches;\n    }\n    return {\n        handleRewrites,\n        defaultRouteRegex,\n        dynamicRouteMatcher,\n        defaultRouteMatches,\n        getParamsFromRouteMatches,\n        /**\n     * Normalize dynamic route params.\n     *\n     * @param query - The query params to normalize.\n     * @param ignoreMissingOptional - Whether to ignore missing optional params.\n     * @returns The normalized params and whether they are valid.\n     */ normalizeDynamicRouteParams: (query, ignoreMissingOptional)=>{\n            if (!defaultRouteRegex || !defaultRouteMatches) {\n                return {\n                    params: {},\n                    hasValidParams: false\n                };\n            }\n            return normalizeDynamicRouteParams(query, defaultRouteRegex, defaultRouteMatches, ignoreMissingOptional);\n        },\n        normalizeVercelUrl: (req, paramKeys)=>normalizeVercelUrl(req, paramKeys, defaultRouteRegex),\n        interpolateDynamicPath: (pathname, params)=>interpolateDynamicPath(pathname, params, defaultRouteRegex)\n    };\n}\nexport function getPreviouslyRevalidatedTags(headers, previewModeId) {\n    return typeof headers[NEXT_CACHE_REVALIDATED_TAGS_HEADER] === 'string' && headers[NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER] === previewModeId ? headers[NEXT_CACHE_REVALIDATED_TAGS_HEADER].split(',') : [];\n}\n\n//# sourceMappingURL=server-utils.js.map","import { isMetadataPage } from './is-metadata-route';\nimport path from '../../shared/lib/isomorphic/path';\nimport { interpolateDynamicPath } from '../../server/server-utils';\nimport { getNamedRouteRegex } from '../../shared/lib/router/utils/route-regex';\nimport { djb2Hash } from '../../shared/lib/hash';\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\nimport { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep';\nimport { isGroupSegment, isParallelRouteSegment } from '../../shared/lib/segment';\n/*\n * If there's special convention like (...) or @ in the page path,\n * Give it a unique hash suffix to avoid conflicts\n *\n * e.g.\n * /opengraph-image -> /opengraph-image\n * /(post)/opengraph-image.tsx -> /opengraph-image-[0-9a-z]{6}\n *\n * Sitemap is an exception, it should not have a suffix.\n * Each sitemap contains all the urls of sub routes, we don't have the case of duplicates `/(group)/sitemap.[ext]` and `/sitemap.[ext]` since they should be the same.\n * Hence we always normalize the urls for sitemap and do not append hash suffix, and ensure user-land only contains one sitemap per pathname.\n *\n * /sitemap -> /sitemap\n * /(post)/sitemap -> /sitemap\n */ function getMetadataRouteSuffix(page) {\n    // Remove the last segment and get the parent pathname\n    // e.g. /parent/a/b/c -> /parent/a/b\n    // e.g. /parent/opengraph-image -> /parent\n    const parentPathname = path.dirname(page);\n    // Only apply suffix to metadata routes except for sitemaps\n    if (page.endsWith('/sitemap')) {\n        return '';\n    }\n    // Calculate the hash suffix based on the parent path\n    let suffix = '';\n    // Check if there's any special characters in the parent pathname.\n    const segments = parentPathname.split('/');\n    if (segments.some((seg)=>isGroupSegment(seg) || isParallelRouteSegment(seg))) {\n        // Hash the parent path to get a unique suffix\n        suffix = djb2Hash(parentPathname).toString(36).slice(0, 6);\n    }\n    return suffix;\n}\n/**\n * Fill the dynamic segment in the metadata route\n *\n * Example:\n * fillMetadataSegment('/a/[slug]', { params: { slug: 'b' } }, 'open-graph') -> '/a/b/open-graph'\n *\n */ export function fillMetadataSegment(segment, params, lastSegment) {\n    const pathname = normalizeAppPath(segment);\n    const routeRegex = getNamedRouteRegex(pathname, {\n        prefixRouteKeys: false\n    });\n    const route = interpolateDynamicPath(pathname, params, routeRegex);\n    const { name, ext } = path.parse(lastSegment);\n    const pagePath = path.posix.join(segment, name);\n    const suffix = getMetadataRouteSuffix(pagePath);\n    const routeSuffix = suffix ? `-${suffix}` : '';\n    return normalizePathSep(path.join(route, `${name}${routeSuffix}${ext}`));\n}\n/**\n * Map metadata page key to the corresponding route\n *\n * static file page key:    /app/robots.txt -> /robots.xml -> /robots.txt/route\n * dynamic route page key:  /app/robots.tsx -> /robots -> /robots.txt/route\n *\n * @param page\n * @returns\n */ export function normalizeMetadataRoute(page) {\n    if (!isMetadataPage(page)) {\n        return page;\n    }\n    let route = page;\n    let suffix = '';\n    if (page === '/robots') {\n        route += '.txt';\n    } else if (page === '/manifest') {\n        route += '.webmanifest';\n    } else {\n        suffix = getMetadataRouteSuffix(page);\n    }\n    // Support both /<metadata-route.ext> and custom routes /<metadata-route>/route.ts.\n    // If it's a metadata file route, we need to append /[id]/route to the page.\n    if (!route.endsWith('/route')) {\n        const { dir, name: baseName, ext } = path.parse(route);\n        route = path.posix.join(dir, `${baseName}${suffix ? `-${suffix}` : ''}${ext}`, 'route');\n    }\n    return route;\n}\n// Normalize metadata route page to either a single route or a dynamic route.\n// e.g. Input: /sitemap/route\n// when isDynamic is false, single route -> /sitemap.xml/route\n// when isDynamic is false, dynamic route -> /sitemap/[__metadata_id__]/route\n// also works for pathname such as /sitemap -> /sitemap.xml, but will not append /route suffix\nexport function normalizeMetadataPageToRoute(page, isDynamic) {\n    const isRoute = page.endsWith('/route');\n    const routePagePath = isRoute ? page.slice(0, -'/route'.length) : page;\n    const metadataRouteExtension = routePagePath.endsWith('/sitemap') ? '.xml' : '';\n    const mapped = isDynamic ? `${routePagePath}/[__metadata_id__]` : `${routePagePath}${metadataRouteExtension}`;\n    return mapped + (isRoute ? '/route' : '');\n}\n\n//# sourceMappingURL=get-metadata-route.js.map","(function(){\"use strict\";var e={114:function(e){function assertPath(e){if(typeof e!==\"string\"){throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(e))}}function normalizeStringPosix(e,r){var t=\"\";var i=0;var n=-1;var a=0;var f;for(var l=0;l<=e.length;++l){if(l<e.length)f=e.charCodeAt(l);else if(f===47)break;else f=47;if(f===47){if(n===l-1||a===1){}else if(n!==l-1&&a===2){if(t.length<2||i!==2||t.charCodeAt(t.length-1)!==46||t.charCodeAt(t.length-2)!==46){if(t.length>2){var s=t.lastIndexOf(\"/\");if(s!==t.length-1){if(s===-1){t=\"\";i=0}else{t=t.slice(0,s);i=t.length-1-t.lastIndexOf(\"/\")}n=l;a=0;continue}}else if(t.length===2||t.length===1){t=\"\";i=0;n=l;a=0;continue}}if(r){if(t.length>0)t+=\"/..\";else t=\"..\";i=2}}else{if(t.length>0)t+=\"/\"+e.slice(n+1,l);else t=e.slice(n+1,l);i=l-n-1}n=l;a=0}else if(f===46&&a!==-1){++a}else{a=-1}}return t}function _format(e,r){var t=r.dir||r.root;var i=r.base||(r.name||\"\")+(r.ext||\"\");if(!t){return i}if(t===r.root){return t+i}return t+e+i}var r={resolve:function resolve(){var e=\"\";var r=false;var t;for(var i=arguments.length-1;i>=-1&&!r;i--){var n;if(i>=0)n=arguments[i];else{if(t===undefined)t=\"\";n=t}assertPath(n);if(n.length===0){continue}e=n+\"/\"+e;r=n.charCodeAt(0)===47}e=normalizeStringPosix(e,!r);if(r){if(e.length>0)return\"/\"+e;else return\"/\"}else if(e.length>0){return e}else{return\".\"}},normalize:function normalize(e){assertPath(e);if(e.length===0)return\".\";var r=e.charCodeAt(0)===47;var t=e.charCodeAt(e.length-1)===47;e=normalizeStringPosix(e,!r);if(e.length===0&&!r)e=\".\";if(e.length>0&&t)e+=\"/\";if(r)return\"/\"+e;return e},isAbsolute:function isAbsolute(e){assertPath(e);return e.length>0&&e.charCodeAt(0)===47},join:function join(){if(arguments.length===0)return\".\";var e;for(var t=0;t<arguments.length;++t){var i=arguments[t];assertPath(i);if(i.length>0){if(e===undefined)e=i;else e+=\"/\"+i}}if(e===undefined)return\".\";return r.normalize(e)},relative:function relative(e,t){assertPath(e);assertPath(t);if(e===t)return\"\";e=r.resolve(e);t=r.resolve(t);if(e===t)return\"\";var i=1;for(;i<e.length;++i){if(e.charCodeAt(i)!==47)break}var n=e.length;var a=n-i;var f=1;for(;f<t.length;++f){if(t.charCodeAt(f)!==47)break}var l=t.length;var s=l-f;var o=a<s?a:s;var u=-1;var h=0;for(;h<=o;++h){if(h===o){if(s>o){if(t.charCodeAt(f+h)===47){return t.slice(f+h+1)}else if(h===0){return t.slice(f+h)}}else if(a>o){if(e.charCodeAt(i+h)===47){u=h}else if(h===0){u=0}}break}var c=e.charCodeAt(i+h);var v=t.charCodeAt(f+h);if(c!==v)break;else if(c===47)u=h}var g=\"\";for(h=i+u+1;h<=n;++h){if(h===n||e.charCodeAt(h)===47){if(g.length===0)g+=\"..\";else g+=\"/..\"}}if(g.length>0)return g+t.slice(f+u);else{f+=u;if(t.charCodeAt(f)===47)++f;return t.slice(f)}},_makeLong:function _makeLong(e){return e},dirname:function dirname(e){assertPath(e);if(e.length===0)return\".\";var r=e.charCodeAt(0);var t=r===47;var i=-1;var n=true;for(var a=e.length-1;a>=1;--a){r=e.charCodeAt(a);if(r===47){if(!n){i=a;break}}else{n=false}}if(i===-1)return t?\"/\":\".\";if(t&&i===1)return\"//\";return e.slice(0,i)},basename:function basename(e,r){if(r!==undefined&&typeof r!==\"string\")throw new TypeError('\"ext\" argument must be a string');assertPath(e);var t=0;var i=-1;var n=true;var a;if(r!==undefined&&r.length>0&&r.length<=e.length){if(r.length===e.length&&r===e)return\"\";var f=r.length-1;var l=-1;for(a=e.length-1;a>=0;--a){var s=e.charCodeAt(a);if(s===47){if(!n){t=a+1;break}}else{if(l===-1){n=false;l=a+1}if(f>=0){if(s===r.charCodeAt(f)){if(--f===-1){i=a}}else{f=-1;i=l}}}}if(t===i)i=l;else if(i===-1)i=e.length;return e.slice(t,i)}else{for(a=e.length-1;a>=0;--a){if(e.charCodeAt(a)===47){if(!n){t=a+1;break}}else if(i===-1){n=false;i=a+1}}if(i===-1)return\"\";return e.slice(t,i)}},extname:function extname(e){assertPath(e);var r=-1;var t=0;var i=-1;var n=true;var a=0;for(var f=e.length-1;f>=0;--f){var l=e.charCodeAt(f);if(l===47){if(!n){t=f+1;break}continue}if(i===-1){n=false;i=f+1}if(l===46){if(r===-1)r=f;else if(a!==1)a=1}else if(r!==-1){a=-1}}if(r===-1||i===-1||a===0||a===1&&r===i-1&&r===t+1){return\"\"}return e.slice(r,i)},format:function format(e){if(e===null||typeof e!==\"object\"){throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof e)}return _format(\"/\",e)},parse:function parse(e){assertPath(e);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(e.length===0)return r;var t=e.charCodeAt(0);var i=t===47;var n;if(i){r.root=\"/\";n=1}else{n=0}var a=-1;var f=0;var l=-1;var s=true;var o=e.length-1;var u=0;for(;o>=n;--o){t=e.charCodeAt(o);if(t===47){if(!s){f=o+1;break}continue}if(l===-1){s=false;l=o+1}if(t===46){if(a===-1)a=o;else if(u!==1)u=1}else if(a!==-1){u=-1}}if(a===-1||l===-1||u===0||u===1&&a===l-1&&a===f+1){if(l!==-1){if(f===0&&i)r.base=r.name=e.slice(1,l);else r.base=r.name=e.slice(f,l)}}else{if(f===0&&i){r.name=e.slice(1,a);r.base=e.slice(1,l)}else{r.name=e.slice(f,a);r.base=e.slice(f,l)}r.ext=e.slice(a,l)}if(f>0)r.dir=e.slice(0,f-1);else if(i)r.dir=\"/\";return r},sep:\"/\",delimiter:\":\",win32:null,posix:null};r.posix=r;e.exports=r}};var r={};function __nccwpck_require__(t){var i=r[t];if(i!==undefined){return i.exports}var n=r[t]={exports:{}};var a=true;try{e[t](n,n.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(114);module.exports=t})();","import { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { parsePath } from '../shared/lib/router/utils/parse-path'\n\n/**\n * Normalizes the trailing slash of a path according to the `trailingSlash` option\n * in `next.config.js`.\n */\nexport const normalizePathTrailingSlash = (path: string) => {\n  if (!path.startsWith('/') || process.env.__NEXT_MANUAL_TRAILING_SLASH) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  if (process.env.__NEXT_TRAILING_SLASH) {\n    if (/\\.[^/]+\\/?$/.test(pathname)) {\n      return `${removeTrailingSlash(pathname)}${query}${hash}`\n    } else if (pathname.endsWith('/')) {\n      return `${pathname}${query}${hash}`\n    } else {\n      return `${pathname}/${query}${hash}`\n    }\n  }\n\n  return `${removeTrailingSlash(pathname)}${query}${hash}`\n}\n","import { addPathPrefix } from '../shared/lib/router/utils/add-path-prefix'\nimport { normalizePathTrailingSlash } from './normalize-trailing-slash'\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nexport function addBasePath(path: string, required?: boolean): string {\n  return normalizePathTrailingSlash(\n    process.env.__NEXT_MANUAL_CLIENT_BASE_PATH && !required\n      ? path\n      : addPathPrefix(path, basePath)\n  )\n}\n","import type { ActionManifest } from '../../build/webpack/plugins/flight-client-entry-plugin'\nimport type {\n  ClientReferenceManifest,\n  ClientReferenceManifestForRsc,\n} from '../../build/webpack/plugins/flight-manifest-plugin'\nimport type { DeepReadonly } from '../../shared/lib/deep-readonly'\nimport { InvariantError } from '../../shared/lib/invariant-error'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { workAsyncStorage } from './work-async-storage.external'\n\nlet __next_loaded_action_key: CryptoKey\n\nexport function arrayBufferToString(\n  buffer: ArrayBuffer | Uint8Array<ArrayBufferLike>\n) {\n  const bytes = new Uint8Array(buffer)\n  const len = bytes.byteLength\n\n  // @anonrig: V8 has a limit of 65535 arguments in a function.\n  // For len < 65535, this is faster.\n  // https://github.com/vercel/next.js/pull/56377#pullrequestreview-1656181623\n  if (len < 65535) {\n    return String.fromCharCode.apply(null, bytes as unknown as number[])\n  }\n\n  let binary = ''\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i])\n  }\n  return binary\n}\n\nexport function stringToUint8Array(binary: string) {\n  const len = binary.length\n  const arr = new Uint8Array(len)\n\n  for (let i = 0; i < len; i++) {\n    arr[i] = binary.charCodeAt(i)\n  }\n\n  return arr\n}\n\nexport function encrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.encrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\nexport function decrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.decrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\n// This is a global singleton that is used to encode/decode the action bound args from\n// the closure. This can't be using a AsyncLocalStorage as it might happen on the module\n// level. Since the client reference manifest won't be mutated, let's use a global singleton\n// to keep it.\nconst SERVER_ACTION_MANIFESTS_SINGLETON = Symbol.for(\n  'next.server.action-manifests'\n)\n\nexport function setReferenceManifestsSingleton({\n  page,\n  clientReferenceManifest,\n  serverActionsManifest,\n  serverModuleMap,\n}: {\n  page: string\n  clientReferenceManifest: DeepReadonly<ClientReferenceManifest>\n  serverActionsManifest: DeepReadonly<ActionManifest>\n  serverModuleMap: {\n    [id: string]: {\n      id: string\n      chunks: string[]\n      name: string\n    }\n  }\n}) {\n  // @ts-expect-error\n  const clientReferenceManifestsPerPage = globalThis[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ]?.clientReferenceManifestsPerPage as\n    | undefined\n    | DeepReadonly<Record<string, ClientReferenceManifest>>\n\n  // @ts-expect-error\n  globalThis[SERVER_ACTION_MANIFESTS_SINGLETON] = {\n    clientReferenceManifestsPerPage: {\n      ...clientReferenceManifestsPerPage,\n      [normalizeAppPath(page)]: clientReferenceManifest,\n    },\n    serverActionsManifest,\n    serverModuleMap,\n  }\n}\n\nexport function getServerModuleMap() {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    serverModuleMap: {\n      [id: string]: {\n        id: string\n        chunks: string[]\n        name: string\n      }\n    }\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  return serverActionsManifestSingleton.serverModuleMap\n}\n\nexport function getClientReferenceManifestForRsc(): DeepReadonly<ClientReferenceManifestForRsc> {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    clientReferenceManifestsPerPage: DeepReadonly<\n      Record<string, ClientReferenceManifest>\n    >\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  const { clientReferenceManifestsPerPage } = serverActionsManifestSingleton\n  const workStore = workAsyncStorage.getStore()\n\n  if (!workStore) {\n    // If there's no work store defined, we can assume that a client reference\n    // manifest is needed during module evaluation, e.g. to create a server\n    // action using a higher-order function. This might also use client\n    // components which need to be serialized by Flight, and therefore client\n    // references need to be resolvable. To make this work, we're returning a\n    // merged manifest across all pages. This is fine as long as the module IDs\n    // are not page specific, which they are not for Webpack. TODO: Fix this in\n    // Turbopack.\n    return mergeClientReferenceManifests(clientReferenceManifestsPerPage)\n  }\n\n  const clientReferenceManifest =\n    clientReferenceManifestsPerPage[workStore.route]\n\n  if (!clientReferenceManifest) {\n    throw new InvariantError(\n      `Missing Client Reference Manifest for ${workStore.route}.`\n    )\n  }\n\n  return clientReferenceManifest\n}\n\nexport async function getActionEncryptionKey() {\n  if (__next_loaded_action_key) {\n    return __next_loaded_action_key\n  }\n\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    serverActionsManifest: DeepReadonly<ActionManifest>\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  const rawKey =\n    process.env.NEXT_SERVER_ACTIONS_ENCRYPTION_KEY ||\n    serverActionsManifestSingleton.serverActionsManifest.encryptionKey\n\n  if (rawKey === undefined) {\n    throw new InvariantError('Missing encryption key for Server Actions')\n  }\n\n  __next_loaded_action_key = await crypto.subtle.importKey(\n    'raw',\n    stringToUint8Array(atob(rawKey)),\n    'AES-GCM',\n    true,\n    ['encrypt', 'decrypt']\n  )\n\n  return __next_loaded_action_key\n}\n\nfunction mergeClientReferenceManifests(\n  clientReferenceManifestsPerPage: DeepReadonly<\n    Record<string, ClientReferenceManifest>\n  >\n): ClientReferenceManifestForRsc {\n  const clientReferenceManifests = Object.values(\n    clientReferenceManifestsPerPage as Record<string, ClientReferenceManifest>\n  )\n\n  const mergedClientReferenceManifest: ClientReferenceManifestForRsc = {\n    clientModules: {},\n    edgeRscModuleMapping: {},\n    rscModuleMapping: {},\n  }\n\n  for (const clientReferenceManifest of clientReferenceManifests) {\n    mergedClientReferenceManifest.clientModules = {\n      ...mergedClientReferenceManifest.clientModules,\n      ...clientReferenceManifest.clientModules,\n    }\n    mergedClientReferenceManifest.edgeRscModuleMapping = {\n      ...mergedClientReferenceManifest.edgeRscModuleMapping,\n      ...clientReferenceManifest.edgeRscModuleMapping,\n    }\n    mergedClientReferenceManifest.rscModuleMapping = {\n      ...mergedClientReferenceManifest.rscModuleMapping,\n      ...clientReferenceManifest.rscModuleMapping,\n    }\n  }\n\n  return mergedClientReferenceManifest\n}\n","/**\n * Run function with `scroll-behavior: auto` applied to `<html/>`.\n * This css change will be reverted after the function finishes.\n */\nexport function handleSmoothScroll(\n  fn: () => void,\n  options: { dontForceLayout?: boolean; onlyHashChange?: boolean } = {}\n) {\n  // if only the hash is changed, we don't need to disable smooth scrolling\n  // we only care to prevent smooth scrolling when navigating to a new page to avoid jarring UX\n  if (options.onlyHashChange) {\n    fn()\n    return\n  }\n  const htmlElement = document.documentElement\n  const existing = htmlElement.style.scrollBehavior\n  htmlElement.style.scrollBehavior = 'auto'\n  if (!options.dontForceLayout) {\n    // In Chrome-based browsers we need to force reflow before calling `scrollTo`.\n    // Otherwise it will not pickup the change in scrollBehavior\n    // More info here: https://github.com/vercel/next.js/issues/40719#issuecomment-1336248042\n    htmlElement.getClientRects()\n  }\n  fn()\n  htmlElement.style.scrollBehavior = existing\n}\n","import type { FlightRouterState } from '../../../../server/app-render/types'\nimport { isInterceptionRouteAppPath } from '../../../../shared/lib/router/utils/interception-routes'\n\nexport function hasInterceptionRouteInCurrentTree([\n  segment,\n  parallelRoutes,\n]: FlightRouterState): boolean {\n  // If we have a dynamic segment, it's marked as an interception route by the presence of the `i` suffix.\n  if (Array.isArray(segment) && (segment[2] === 'di' || segment[2] === 'ci')) {\n    return true\n  }\n\n  // If segment is not an array, apply the existing string-based check\n  if (typeof segment === 'string' && isInterceptionRouteAppPath(segment)) {\n    return true\n  }\n\n  // Iterate through parallelRoutes if they exist\n  if (parallelRoutes) {\n    for (const key in parallelRoutes) {\n      if (hasInterceptionRouteInCurrentTree(parallelRoutes[key])) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n","(()=>{\"use strict\";var e={491:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ContextAPI=void 0;const n=r(223);const a=r(172);const o=r(930);const i=\"context\";const c=new n.NoopContextManager;class ContextAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new ContextAPI}return this._instance}setGlobalContextManager(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}active(){return this._getContextManager().active()}with(e,t,r,...n){return this._getContextManager().with(e,t,r,...n)}bind(e,t){return this._getContextManager().bind(e,t)}_getContextManager(){return(0,a.getGlobal)(i)||c}disable(){this._getContextManager().disable();(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.ContextAPI=ContextAPI},930:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagAPI=void 0;const n=r(56);const a=r(912);const o=r(957);const i=r(172);const c=\"diag\";class DiagAPI{constructor(){function _logProxy(e){return function(...t){const r=(0,i.getGlobal)(\"diag\");if(!r)return;return r[e](...t)}}const e=this;const setLogger=(t,r={logLevel:o.DiagLogLevel.INFO})=>{var n,c,s;if(t===e){const t=new Error(\"Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation\");e.error((n=t.stack)!==null&&n!==void 0?n:t.message);return false}if(typeof r===\"number\"){r={logLevel:r}}const u=(0,i.getGlobal)(\"diag\");const l=(0,a.createLogLevelDiagLogger)((c=r.logLevel)!==null&&c!==void 0?c:o.DiagLogLevel.INFO,t);if(u&&!r.suppressOverrideMessage){const e=(s=(new Error).stack)!==null&&s!==void 0?s:\"<failed to generate stacktrace>\";u.warn(`Current logger will be overwritten from ${e}`);l.warn(`Current logger will overwrite one already registered from ${e}`)}return(0,i.registerGlobal)(\"diag\",l,e,true)};e.setLogger=setLogger;e.disable=()=>{(0,i.unregisterGlobal)(c,e)};e.createComponentLogger=e=>new n.DiagComponentLogger(e);e.verbose=_logProxy(\"verbose\");e.debug=_logProxy(\"debug\");e.info=_logProxy(\"info\");e.warn=_logProxy(\"warn\");e.error=_logProxy(\"error\")}static instance(){if(!this._instance){this._instance=new DiagAPI}return this._instance}}t.DiagAPI=DiagAPI},653:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.MetricsAPI=void 0;const n=r(660);const a=r(172);const o=r(930);const i=\"metrics\";class MetricsAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new MetricsAPI}return this._instance}setGlobalMeterProvider(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}getMeterProvider(){return(0,a.getGlobal)(i)||n.NOOP_METER_PROVIDER}getMeter(e,t,r){return this.getMeterProvider().getMeter(e,t,r)}disable(){(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.MetricsAPI=MetricsAPI},181:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.PropagationAPI=void 0;const n=r(172);const a=r(874);const o=r(194);const i=r(277);const c=r(369);const s=r(930);const u=\"propagation\";const l=new a.NoopTextMapPropagator;class PropagationAPI{constructor(){this.createBaggage=c.createBaggage;this.getBaggage=i.getBaggage;this.getActiveBaggage=i.getActiveBaggage;this.setBaggage=i.setBaggage;this.deleteBaggage=i.deleteBaggage}static getInstance(){if(!this._instance){this._instance=new PropagationAPI}return this._instance}setGlobalPropagator(e){return(0,n.registerGlobal)(u,e,s.DiagAPI.instance())}inject(e,t,r=o.defaultTextMapSetter){return this._getGlobalPropagator().inject(e,t,r)}extract(e,t,r=o.defaultTextMapGetter){return this._getGlobalPropagator().extract(e,t,r)}fields(){return this._getGlobalPropagator().fields()}disable(){(0,n.unregisterGlobal)(u,s.DiagAPI.instance())}_getGlobalPropagator(){return(0,n.getGlobal)(u)||l}}t.PropagationAPI=PropagationAPI},997:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceAPI=void 0;const n=r(172);const a=r(846);const o=r(139);const i=r(607);const c=r(930);const s=\"trace\";class TraceAPI{constructor(){this._proxyTracerProvider=new a.ProxyTracerProvider;this.wrapSpanContext=o.wrapSpanContext;this.isSpanContextValid=o.isSpanContextValid;this.deleteSpan=i.deleteSpan;this.getSpan=i.getSpan;this.getActiveSpan=i.getActiveSpan;this.getSpanContext=i.getSpanContext;this.setSpan=i.setSpan;this.setSpanContext=i.setSpanContext}static getInstance(){if(!this._instance){this._instance=new TraceAPI}return this._instance}setGlobalTracerProvider(e){const t=(0,n.registerGlobal)(s,this._proxyTracerProvider,c.DiagAPI.instance());if(t){this._proxyTracerProvider.setDelegate(e)}return t}getTracerProvider(){return(0,n.getGlobal)(s)||this._proxyTracerProvider}getTracer(e,t){return this.getTracerProvider().getTracer(e,t)}disable(){(0,n.unregisterGlobal)(s,c.DiagAPI.instance());this._proxyTracerProvider=new a.ProxyTracerProvider}}t.TraceAPI=TraceAPI},277:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.deleteBaggage=t.setBaggage=t.getActiveBaggage=t.getBaggage=void 0;const n=r(491);const a=r(780);const o=(0,a.createContextKey)(\"OpenTelemetry Baggage Key\");function getBaggage(e){return e.getValue(o)||undefined}t.getBaggage=getBaggage;function getActiveBaggage(){return getBaggage(n.ContextAPI.getInstance().active())}t.getActiveBaggage=getActiveBaggage;function setBaggage(e,t){return e.setValue(o,t)}t.setBaggage=setBaggage;function deleteBaggage(e){return e.deleteValue(o)}t.deleteBaggage=deleteBaggage},993:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.BaggageImpl=void 0;class BaggageImpl{constructor(e){this._entries=e?new Map(e):new Map}getEntry(e){const t=this._entries.get(e);if(!t){return undefined}return Object.assign({},t)}getAllEntries(){return Array.from(this._entries.entries()).map((([e,t])=>[e,t]))}setEntry(e,t){const r=new BaggageImpl(this._entries);r._entries.set(e,t);return r}removeEntry(e){const t=new BaggageImpl(this._entries);t._entries.delete(e);return t}removeEntries(...e){const t=new BaggageImpl(this._entries);for(const r of e){t._entries.delete(r)}return t}clear(){return new BaggageImpl}}t.BaggageImpl=BaggageImpl},830:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataSymbol=void 0;t.baggageEntryMetadataSymbol=Symbol(\"BaggageEntryMetadata\")},369:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataFromString=t.createBaggage=void 0;const n=r(930);const a=r(993);const o=r(830);const i=n.DiagAPI.instance();function createBaggage(e={}){return new a.BaggageImpl(new Map(Object.entries(e)))}t.createBaggage=createBaggage;function baggageEntryMetadataFromString(e){if(typeof e!==\"string\"){i.error(`Cannot create baggage metadata from unknown type: ${typeof e}`);e=\"\"}return{__TYPE__:o.baggageEntryMetadataSymbol,toString(){return e}}}t.baggageEntryMetadataFromString=baggageEntryMetadataFromString},67:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.context=void 0;const n=r(491);t.context=n.ContextAPI.getInstance()},223:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopContextManager=void 0;const n=r(780);class NoopContextManager{active(){return n.ROOT_CONTEXT}with(e,t,r,...n){return t.call(r,...n)}bind(e,t){return t}enable(){return this}disable(){return this}}t.NoopContextManager=NoopContextManager},780:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ROOT_CONTEXT=t.createContextKey=void 0;function createContextKey(e){return Symbol.for(e)}t.createContextKey=createContextKey;class BaseContext{constructor(e){const t=this;t._currentContext=e?new Map(e):new Map;t.getValue=e=>t._currentContext.get(e);t.setValue=(e,r)=>{const n=new BaseContext(t._currentContext);n._currentContext.set(e,r);return n};t.deleteValue=e=>{const r=new BaseContext(t._currentContext);r._currentContext.delete(e);return r}}}t.ROOT_CONTEXT=new BaseContext},506:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.diag=void 0;const n=r(930);t.diag=n.DiagAPI.instance()},56:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagComponentLogger=void 0;const n=r(172);class DiagComponentLogger{constructor(e){this._namespace=e.namespace||\"DiagComponentLogger\"}debug(...e){return logProxy(\"debug\",this._namespace,e)}error(...e){return logProxy(\"error\",this._namespace,e)}info(...e){return logProxy(\"info\",this._namespace,e)}warn(...e){return logProxy(\"warn\",this._namespace,e)}verbose(...e){return logProxy(\"verbose\",this._namespace,e)}}t.DiagComponentLogger=DiagComponentLogger;function logProxy(e,t,r){const a=(0,n.getGlobal)(\"diag\");if(!a){return}r.unshift(t);return a[e](...r)}},972:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagConsoleLogger=void 0;const r=[{n:\"error\",c:\"error\"},{n:\"warn\",c:\"warn\"},{n:\"info\",c:\"info\"},{n:\"debug\",c:\"debug\"},{n:\"verbose\",c:\"trace\"}];class DiagConsoleLogger{constructor(){function _consoleFunc(e){return function(...t){if(console){let r=console[e];if(typeof r!==\"function\"){r=console.log}if(typeof r===\"function\"){return r.apply(console,t)}}}}for(let e=0;e<r.length;e++){this[r[e].n]=_consoleFunc(r[e].c)}}}t.DiagConsoleLogger=DiagConsoleLogger},912:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createLogLevelDiagLogger=void 0;const n=r(957);function createLogLevelDiagLogger(e,t){if(e<n.DiagLogLevel.NONE){e=n.DiagLogLevel.NONE}else if(e>n.DiagLogLevel.ALL){e=n.DiagLogLevel.ALL}t=t||{};function _filterFunc(r,n){const a=t[r];if(typeof a===\"function\"&&e>=n){return a.bind(t)}return function(){}}return{error:_filterFunc(\"error\",n.DiagLogLevel.ERROR),warn:_filterFunc(\"warn\",n.DiagLogLevel.WARN),info:_filterFunc(\"info\",n.DiagLogLevel.INFO),debug:_filterFunc(\"debug\",n.DiagLogLevel.DEBUG),verbose:_filterFunc(\"verbose\",n.DiagLogLevel.VERBOSE)}}t.createLogLevelDiagLogger=createLogLevelDiagLogger},957:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagLogLevel=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"ERROR\"]=30]=\"ERROR\";e[e[\"WARN\"]=50]=\"WARN\";e[e[\"INFO\"]=60]=\"INFO\";e[e[\"DEBUG\"]=70]=\"DEBUG\";e[e[\"VERBOSE\"]=80]=\"VERBOSE\";e[e[\"ALL\"]=9999]=\"ALL\"})(r=t.DiagLogLevel||(t.DiagLogLevel={}))},172:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.unregisterGlobal=t.getGlobal=t.registerGlobal=void 0;const n=r(200);const a=r(521);const o=r(130);const i=a.VERSION.split(\".\")[0];const c=Symbol.for(`opentelemetry.js.api.${i}`);const s=n._globalThis;function registerGlobal(e,t,r,n=false){var o;const i=s[c]=(o=s[c])!==null&&o!==void 0?o:{version:a.VERSION};if(!n&&i[e]){const t=new Error(`@opentelemetry/api: Attempted duplicate registration of API: ${e}`);r.error(t.stack||t.message);return false}if(i.version!==a.VERSION){const t=new Error(`@opentelemetry/api: Registration of version v${i.version} for ${e} does not match previously registered API v${a.VERSION}`);r.error(t.stack||t.message);return false}i[e]=t;r.debug(`@opentelemetry/api: Registered a global for ${e} v${a.VERSION}.`);return true}t.registerGlobal=registerGlobal;function getGlobal(e){var t,r;const n=(t=s[c])===null||t===void 0?void 0:t.version;if(!n||!(0,o.isCompatible)(n)){return}return(r=s[c])===null||r===void 0?void 0:r[e]}t.getGlobal=getGlobal;function unregisterGlobal(e,t){t.debug(`@opentelemetry/api: Unregistering a global for ${e} v${a.VERSION}.`);const r=s[c];if(r){delete r[e]}}t.unregisterGlobal=unregisterGlobal},130:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.isCompatible=t._makeCompatibilityCheck=void 0;const n=r(521);const a=/^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;function _makeCompatibilityCheck(e){const t=new Set([e]);const r=new Set;const n=e.match(a);if(!n){return()=>false}const o={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(o.prerelease!=null){return function isExactmatch(t){return t===e}}function _reject(e){r.add(e);return false}function _accept(e){t.add(e);return true}return function isCompatible(e){if(t.has(e)){return true}if(r.has(e)){return false}const n=e.match(a);if(!n){return _reject(e)}const i={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(i.prerelease!=null){return _reject(e)}if(o.major!==i.major){return _reject(e)}if(o.major===0){if(o.minor===i.minor&&o.patch<=i.patch){return _accept(e)}return _reject(e)}if(o.minor<=i.minor){return _accept(e)}return _reject(e)}}t._makeCompatibilityCheck=_makeCompatibilityCheck;t.isCompatible=_makeCompatibilityCheck(n.VERSION)},886:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.metrics=void 0;const n=r(653);t.metrics=n.MetricsAPI.getInstance()},901:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ValueType=void 0;var r;(function(e){e[e[\"INT\"]=0]=\"INT\";e[e[\"DOUBLE\"]=1]=\"DOUBLE\"})(r=t.ValueType||(t.ValueType={}))},102:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createNoopMeter=t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=t.NOOP_OBSERVABLE_GAUGE_METRIC=t.NOOP_OBSERVABLE_COUNTER_METRIC=t.NOOP_UP_DOWN_COUNTER_METRIC=t.NOOP_HISTOGRAM_METRIC=t.NOOP_COUNTER_METRIC=t.NOOP_METER=t.NoopObservableUpDownCounterMetric=t.NoopObservableGaugeMetric=t.NoopObservableCounterMetric=t.NoopObservableMetric=t.NoopHistogramMetric=t.NoopUpDownCounterMetric=t.NoopCounterMetric=t.NoopMetric=t.NoopMeter=void 0;class NoopMeter{constructor(){}createHistogram(e,r){return t.NOOP_HISTOGRAM_METRIC}createCounter(e,r){return t.NOOP_COUNTER_METRIC}createUpDownCounter(e,r){return t.NOOP_UP_DOWN_COUNTER_METRIC}createObservableGauge(e,r){return t.NOOP_OBSERVABLE_GAUGE_METRIC}createObservableCounter(e,r){return t.NOOP_OBSERVABLE_COUNTER_METRIC}createObservableUpDownCounter(e,r){return t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC}addBatchObservableCallback(e,t){}removeBatchObservableCallback(e){}}t.NoopMeter=NoopMeter;class NoopMetric{}t.NoopMetric=NoopMetric;class NoopCounterMetric extends NoopMetric{add(e,t){}}t.NoopCounterMetric=NoopCounterMetric;class NoopUpDownCounterMetric extends NoopMetric{add(e,t){}}t.NoopUpDownCounterMetric=NoopUpDownCounterMetric;class NoopHistogramMetric extends NoopMetric{record(e,t){}}t.NoopHistogramMetric=NoopHistogramMetric;class NoopObservableMetric{addCallback(e){}removeCallback(e){}}t.NoopObservableMetric=NoopObservableMetric;class NoopObservableCounterMetric extends NoopObservableMetric{}t.NoopObservableCounterMetric=NoopObservableCounterMetric;class NoopObservableGaugeMetric extends NoopObservableMetric{}t.NoopObservableGaugeMetric=NoopObservableGaugeMetric;class NoopObservableUpDownCounterMetric extends NoopObservableMetric{}t.NoopObservableUpDownCounterMetric=NoopObservableUpDownCounterMetric;t.NOOP_METER=new NoopMeter;t.NOOP_COUNTER_METRIC=new NoopCounterMetric;t.NOOP_HISTOGRAM_METRIC=new NoopHistogramMetric;t.NOOP_UP_DOWN_COUNTER_METRIC=new NoopUpDownCounterMetric;t.NOOP_OBSERVABLE_COUNTER_METRIC=new NoopObservableCounterMetric;t.NOOP_OBSERVABLE_GAUGE_METRIC=new NoopObservableGaugeMetric;t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=new NoopObservableUpDownCounterMetric;function createNoopMeter(){return t.NOOP_METER}t.createNoopMeter=createNoopMeter},660:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NOOP_METER_PROVIDER=t.NoopMeterProvider=void 0;const n=r(102);class NoopMeterProvider{getMeter(e,t,r){return n.NOOP_METER}}t.NoopMeterProvider=NoopMeterProvider;t.NOOP_METER_PROVIDER=new NoopMeterProvider},200:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(46),t)},651:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t._globalThis=void 0;t._globalThis=typeof globalThis===\"object\"?globalThis:global},46:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(651),t)},939:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.propagation=void 0;const n=r(181);t.propagation=n.PropagationAPI.getInstance()},874:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTextMapPropagator=void 0;class NoopTextMapPropagator{inject(e,t){}extract(e,t){return e}fields(){return[]}}t.NoopTextMapPropagator=NoopTextMapPropagator},194:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.defaultTextMapSetter=t.defaultTextMapGetter=void 0;t.defaultTextMapGetter={get(e,t){if(e==null){return undefined}return e[t]},keys(e){if(e==null){return[]}return Object.keys(e)}};t.defaultTextMapSetter={set(e,t,r){if(e==null){return}e[t]=r}}},845:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.trace=void 0;const n=r(997);t.trace=n.TraceAPI.getInstance()},403:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NonRecordingSpan=void 0;const n=r(476);class NonRecordingSpan{constructor(e=n.INVALID_SPAN_CONTEXT){this._spanContext=e}spanContext(){return this._spanContext}setAttribute(e,t){return this}setAttributes(e){return this}addEvent(e,t){return this}setStatus(e){return this}updateName(e){return this}end(e){}isRecording(){return false}recordException(e,t){}}t.NonRecordingSpan=NonRecordingSpan},614:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracer=void 0;const n=r(491);const a=r(607);const o=r(403);const i=r(139);const c=n.ContextAPI.getInstance();class NoopTracer{startSpan(e,t,r=c.active()){const n=Boolean(t===null||t===void 0?void 0:t.root);if(n){return new o.NonRecordingSpan}const s=r&&(0,a.getSpanContext)(r);if(isSpanContext(s)&&(0,i.isSpanContextValid)(s)){return new o.NonRecordingSpan(s)}else{return new o.NonRecordingSpan}}startActiveSpan(e,t,r,n){let o;let i;let s;if(arguments.length<2){return}else if(arguments.length===2){s=t}else if(arguments.length===3){o=t;s=r}else{o=t;i=r;s=n}const u=i!==null&&i!==void 0?i:c.active();const l=this.startSpan(e,o,u);const g=(0,a.setSpan)(u,l);return c.with(g,s,undefined,l)}}t.NoopTracer=NoopTracer;function isSpanContext(e){return typeof e===\"object\"&&typeof e[\"spanId\"]===\"string\"&&typeof e[\"traceId\"]===\"string\"&&typeof e[\"traceFlags\"]===\"number\"}},124:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracerProvider=void 0;const n=r(614);class NoopTracerProvider{getTracer(e,t,r){return new n.NoopTracer}}t.NoopTracerProvider=NoopTracerProvider},125:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracer=void 0;const n=r(614);const a=new n.NoopTracer;class ProxyTracer{constructor(e,t,r,n){this._provider=e;this.name=t;this.version=r;this.options=n}startSpan(e,t,r){return this._getTracer().startSpan(e,t,r)}startActiveSpan(e,t,r,n){const a=this._getTracer();return Reflect.apply(a.startActiveSpan,a,arguments)}_getTracer(){if(this._delegate){return this._delegate}const e=this._provider.getDelegateTracer(this.name,this.version,this.options);if(!e){return a}this._delegate=e;return this._delegate}}t.ProxyTracer=ProxyTracer},846:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracerProvider=void 0;const n=r(125);const a=r(124);const o=new a.NoopTracerProvider;class ProxyTracerProvider{getTracer(e,t,r){var a;return(a=this.getDelegateTracer(e,t,r))!==null&&a!==void 0?a:new n.ProxyTracer(this,e,t,r)}getDelegate(){var e;return(e=this._delegate)!==null&&e!==void 0?e:o}setDelegate(e){this._delegate=e}getDelegateTracer(e,t,r){var n;return(n=this._delegate)===null||n===void 0?void 0:n.getTracer(e,t,r)}}t.ProxyTracerProvider=ProxyTracerProvider},996:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SamplingDecision=void 0;var r;(function(e){e[e[\"NOT_RECORD\"]=0]=\"NOT_RECORD\";e[e[\"RECORD\"]=1]=\"RECORD\";e[e[\"RECORD_AND_SAMPLED\"]=2]=\"RECORD_AND_SAMPLED\"})(r=t.SamplingDecision||(t.SamplingDecision={}))},607:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.getSpanContext=t.setSpanContext=t.deleteSpan=t.setSpan=t.getActiveSpan=t.getSpan=void 0;const n=r(780);const a=r(403);const o=r(491);const i=(0,n.createContextKey)(\"OpenTelemetry Context Key SPAN\");function getSpan(e){return e.getValue(i)||undefined}t.getSpan=getSpan;function getActiveSpan(){return getSpan(o.ContextAPI.getInstance().active())}t.getActiveSpan=getActiveSpan;function setSpan(e,t){return e.setValue(i,t)}t.setSpan=setSpan;function deleteSpan(e){return e.deleteValue(i)}t.deleteSpan=deleteSpan;function setSpanContext(e,t){return setSpan(e,new a.NonRecordingSpan(t))}t.setSpanContext=setSpanContext;function getSpanContext(e){var t;return(t=getSpan(e))===null||t===void 0?void 0:t.spanContext()}t.getSpanContext=getSpanContext},325:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceStateImpl=void 0;const n=r(564);const a=32;const o=512;const i=\",\";const c=\"=\";class TraceStateImpl{constructor(e){this._internalState=new Map;if(e)this._parse(e)}set(e,t){const r=this._clone();if(r._internalState.has(e)){r._internalState.delete(e)}r._internalState.set(e,t);return r}unset(e){const t=this._clone();t._internalState.delete(e);return t}get(e){return this._internalState.get(e)}serialize(){return this._keys().reduce(((e,t)=>{e.push(t+c+this.get(t));return e}),[]).join(i)}_parse(e){if(e.length>o)return;this._internalState=e.split(i).reverse().reduce(((e,t)=>{const r=t.trim();const a=r.indexOf(c);if(a!==-1){const o=r.slice(0,a);const i=r.slice(a+1,t.length);if((0,n.validateKey)(o)&&(0,n.validateValue)(i)){e.set(o,i)}else{}}return e}),new Map);if(this._internalState.size>a){this._internalState=new Map(Array.from(this._internalState.entries()).reverse().slice(0,a))}}_keys(){return Array.from(this._internalState.keys()).reverse()}_clone(){const e=new TraceStateImpl;e._internalState=new Map(this._internalState);return e}}t.TraceStateImpl=TraceStateImpl},564:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.validateValue=t.validateKey=void 0;const r=\"[_0-9a-z-*/]\";const n=`[a-z]${r}{0,255}`;const a=`[a-z0-9]${r}{0,240}@[a-z]${r}{0,13}`;const o=new RegExp(`^(?:${n}|${a})$`);const i=/^[ -~]{0,255}[!-~]$/;const c=/,|=/;function validateKey(e){return o.test(e)}t.validateKey=validateKey;function validateValue(e){return i.test(e)&&!c.test(e)}t.validateValue=validateValue},98:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createTraceState=void 0;const n=r(325);function createTraceState(e){return new n.TraceStateImpl(e)}t.createTraceState=createTraceState},476:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.INVALID_SPAN_CONTEXT=t.INVALID_TRACEID=t.INVALID_SPANID=void 0;const n=r(475);t.INVALID_SPANID=\"0000000000000000\";t.INVALID_TRACEID=\"00000000000000000000000000000000\";t.INVALID_SPAN_CONTEXT={traceId:t.INVALID_TRACEID,spanId:t.INVALID_SPANID,traceFlags:n.TraceFlags.NONE}},357:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanKind=void 0;var r;(function(e){e[e[\"INTERNAL\"]=0]=\"INTERNAL\";e[e[\"SERVER\"]=1]=\"SERVER\";e[e[\"CLIENT\"]=2]=\"CLIENT\";e[e[\"PRODUCER\"]=3]=\"PRODUCER\";e[e[\"CONSUMER\"]=4]=\"CONSUMER\"})(r=t.SpanKind||(t.SpanKind={}))},139:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.wrapSpanContext=t.isSpanContextValid=t.isValidSpanId=t.isValidTraceId=void 0;const n=r(476);const a=r(403);const o=/^([0-9a-f]{32})$/i;const i=/^[0-9a-f]{16}$/i;function isValidTraceId(e){return o.test(e)&&e!==n.INVALID_TRACEID}t.isValidTraceId=isValidTraceId;function isValidSpanId(e){return i.test(e)&&e!==n.INVALID_SPANID}t.isValidSpanId=isValidSpanId;function isSpanContextValid(e){return isValidTraceId(e.traceId)&&isValidSpanId(e.spanId)}t.isSpanContextValid=isSpanContextValid;function wrapSpanContext(e){return new a.NonRecordingSpan(e)}t.wrapSpanContext=wrapSpanContext},847:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanStatusCode=void 0;var r;(function(e){e[e[\"UNSET\"]=0]=\"UNSET\";e[e[\"OK\"]=1]=\"OK\";e[e[\"ERROR\"]=2]=\"ERROR\"})(r=t.SpanStatusCode||(t.SpanStatusCode={}))},475:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceFlags=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"SAMPLED\"]=1]=\"SAMPLED\"})(r=t.TraceFlags||(t.TraceFlags={}))},521:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.VERSION=void 0;t.VERSION=\"1.6.0\"}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var a=t[r]={exports:{}};var o=true;try{e[r].call(a.exports,a,a.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return a.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r={};(()=>{var e=r;Object.defineProperty(e,\"__esModule\",{value:true});e.trace=e.propagation=e.metrics=e.diag=e.context=e.INVALID_SPAN_CONTEXT=e.INVALID_TRACEID=e.INVALID_SPANID=e.isValidSpanId=e.isValidTraceId=e.isSpanContextValid=e.createTraceState=e.TraceFlags=e.SpanStatusCode=e.SpanKind=e.SamplingDecision=e.ProxyTracerProvider=e.ProxyTracer=e.defaultTextMapSetter=e.defaultTextMapGetter=e.ValueType=e.createNoopMeter=e.DiagLogLevel=e.DiagConsoleLogger=e.ROOT_CONTEXT=e.createContextKey=e.baggageEntryMetadataFromString=void 0;var t=__nccwpck_require__(369);Object.defineProperty(e,\"baggageEntryMetadataFromString\",{enumerable:true,get:function(){return t.baggageEntryMetadataFromString}});var n=__nccwpck_require__(780);Object.defineProperty(e,\"createContextKey\",{enumerable:true,get:function(){return n.createContextKey}});Object.defineProperty(e,\"ROOT_CONTEXT\",{enumerable:true,get:function(){return n.ROOT_CONTEXT}});var a=__nccwpck_require__(972);Object.defineProperty(e,\"DiagConsoleLogger\",{enumerable:true,get:function(){return a.DiagConsoleLogger}});var o=__nccwpck_require__(957);Object.defineProperty(e,\"DiagLogLevel\",{enumerable:true,get:function(){return o.DiagLogLevel}});var i=__nccwpck_require__(102);Object.defineProperty(e,\"createNoopMeter\",{enumerable:true,get:function(){return i.createNoopMeter}});var c=__nccwpck_require__(901);Object.defineProperty(e,\"ValueType\",{enumerable:true,get:function(){return c.ValueType}});var s=__nccwpck_require__(194);Object.defineProperty(e,\"defaultTextMapGetter\",{enumerable:true,get:function(){return s.defaultTextMapGetter}});Object.defineProperty(e,\"defaultTextMapSetter\",{enumerable:true,get:function(){return s.defaultTextMapSetter}});var u=__nccwpck_require__(125);Object.defineProperty(e,\"ProxyTracer\",{enumerable:true,get:function(){return u.ProxyTracer}});var l=__nccwpck_require__(846);Object.defineProperty(e,\"ProxyTracerProvider\",{enumerable:true,get:function(){return l.ProxyTracerProvider}});var g=__nccwpck_require__(996);Object.defineProperty(e,\"SamplingDecision\",{enumerable:true,get:function(){return g.SamplingDecision}});var p=__nccwpck_require__(357);Object.defineProperty(e,\"SpanKind\",{enumerable:true,get:function(){return p.SpanKind}});var d=__nccwpck_require__(847);Object.defineProperty(e,\"SpanStatusCode\",{enumerable:true,get:function(){return d.SpanStatusCode}});var _=__nccwpck_require__(475);Object.defineProperty(e,\"TraceFlags\",{enumerable:true,get:function(){return _.TraceFlags}});var f=__nccwpck_require__(98);Object.defineProperty(e,\"createTraceState\",{enumerable:true,get:function(){return f.createTraceState}});var b=__nccwpck_require__(139);Object.defineProperty(e,\"isSpanContextValid\",{enumerable:true,get:function(){return b.isSpanContextValid}});Object.defineProperty(e,\"isValidTraceId\",{enumerable:true,get:function(){return b.isValidTraceId}});Object.defineProperty(e,\"isValidSpanId\",{enumerable:true,get:function(){return b.isValidSpanId}});var v=__nccwpck_require__(476);Object.defineProperty(e,\"INVALID_SPANID\",{enumerable:true,get:function(){return v.INVALID_SPANID}});Object.defineProperty(e,\"INVALID_TRACEID\",{enumerable:true,get:function(){return v.INVALID_TRACEID}});Object.defineProperty(e,\"INVALID_SPAN_CONTEXT\",{enumerable:true,get:function(){return v.INVALID_SPAN_CONTEXT}});const O=__nccwpck_require__(67);Object.defineProperty(e,\"context\",{enumerable:true,get:function(){return O.context}});const P=__nccwpck_require__(506);Object.defineProperty(e,\"diag\",{enumerable:true,get:function(){return P.diag}});const N=__nccwpck_require__(886);Object.defineProperty(e,\"metrics\",{enumerable:true,get:function(){return N.metrics}});const S=__nccwpck_require__(939);Object.defineProperty(e,\"propagation\",{enumerable:true,get:function(){return S.propagation}});const C=__nccwpck_require__(845);Object.defineProperty(e,\"trace\",{enumerable:true,get:function(){return C.trace}});e[\"default\"]={context:O.context,diag:P.diag,metrics:N.metrics,propagation:S.propagation,trace:C.trace}})();module.exports=r})();","import { RedirectStatusCode } from './redirect-status-code'\nimport {\n  RedirectType,\n  type RedirectError,\n  isRedirectError,\n  REDIRECT_ERROR_CODE,\n} from './redirect-error'\n\nconst actionAsyncStorage =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/action-async-storage.external') as typeof import('../../server/app-render/action-async-storage.external')\n      ).actionAsyncStorage\n    : undefined\n\nexport function getRedirectError(\n  url: string,\n  type: RedirectType,\n  statusCode: RedirectStatusCode = RedirectStatusCode.TemporaryRedirect\n): RedirectError {\n  const error = new Error(REDIRECT_ERROR_CODE) as RedirectError\n  error.digest = `${REDIRECT_ERROR_CODE};${type};${url};${statusCode};`\n  return error\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 307/303 to the caller.\n * - In a Server Action, type defaults to 'push' and 'replace' elsewhere.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function redirect(\n  /** The URL to redirect to */\n  url: string,\n  type?: RedirectType\n): never {\n  type ??= actionAsyncStorage?.getStore()?.isAction\n    ? RedirectType.push\n    : RedirectType.replace\n\n  throw getRedirectError(url, type, RedirectStatusCode.TemporaryRedirect)\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 308/303 to the caller.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function permanentRedirect(\n  /** The URL to redirect to */\n  url: string,\n  type: RedirectType = RedirectType.replace\n): never {\n  throw getRedirectError(url, type, RedirectStatusCode.PermanentRedirect)\n}\n\n/**\n * Returns the encoded URL from the error if it's a RedirectError, null\n * otherwise. Note that this does not validate the URL returned.\n *\n * @param error the error that may be a redirect error\n * @return the url if the error was a redirect error\n */\nexport function getURLFromRedirectError(error: RedirectError): string\nexport function getURLFromRedirectError(error: unknown): string | null {\n  if (!isRedirectError(error)) return null\n\n  // Slices off the beginning of the digest that contains the code and the\n  // separating ';'.\n  return error.digest.split(';').slice(2, -2).join(';')\n}\n\nexport function getRedirectTypeFromError(error: RedirectError): RedirectType {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return error.digest.split(';', 2)[1] as RedirectType\n}\n\nexport function getRedirectStatusCodeFromError(error: RedirectError): number {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return Number(error.digest.split(';').at(-2))\n}\n","import { getRequestMeta } from '../../../request-meta';\nimport { fromNodeOutgoingHttpHeaders } from '../../utils';\nimport { NextRequest } from '../request';\nimport { isNodeNextRequest, isWebNextRequest } from '../../../base-http/helpers';\nexport const ResponseAbortedName = 'ResponseAborted';\nexport class ResponseAborted extends Error {\n    constructor(...args){\n        super(...args), this.name = ResponseAbortedName;\n    }\n}\n/**\n * Creates an AbortController tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * If the `close` event is fired before the `finish` event, then we'll send the\n * `abort` signal.\n */ export function createAbortController(response) {\n    const controller = new AbortController();\n    // If `finish` fires first, then `res.end()` has been called and the close is\n    // just us finishing the stream on our side. If `close` fires first, then we\n    // know the client disconnected before we finished.\n    response.once('close', ()=>{\n        if (response.writableFinished) return;\n        controller.abort(new ResponseAborted());\n    });\n    return controller;\n}\n/**\n * Creates an AbortSignal tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * This cannot be done with the request (IncomingMessage or Readable) because\n * the `abort` event will not fire if to data has been fully read (because that\n * will \"close\" the readable stream and nothing fires after that).\n */ export function signalFromNodeResponse(response) {\n    const { errored, destroyed } = response;\n    if (errored || destroyed) {\n        return AbortSignal.abort(errored ?? new ResponseAborted());\n    }\n    const { signal } = createAbortController(response);\n    return signal;\n}\nexport class NextRequestAdapter {\n    static fromBaseNextRequest(request, signal) {\n        if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME === 'edge' && isWebNextRequest(request)) {\n            return NextRequestAdapter.fromWebNextRequest(request);\n        } else if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME !== 'edge' && isNodeNextRequest(request)) {\n            return NextRequestAdapter.fromNodeNextRequest(request, signal);\n        } else {\n            throw Object.defineProperty(new Error('Invariant: Unsupported NextRequest type'), \"__NEXT_ERROR_CODE\", {\n                value: \"E345\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    static fromNodeNextRequest(request, signal) {\n        // HEAD and GET requests can not have a body.\n        let body = null;\n        if (request.method !== 'GET' && request.method !== 'HEAD' && request.body) {\n            // @ts-expect-error - this is handled by undici, when streams/web land use it instead\n            body = request.body;\n        }\n        let url;\n        if (request.url.startsWith('http')) {\n            url = new URL(request.url);\n        } else {\n            // Grab the full URL from the request metadata.\n            const base = getRequestMeta(request, 'initURL');\n            if (!base || !base.startsWith('http')) {\n                // Because the URL construction relies on the fact that the URL provided\n                // is absolute, we need to provide a base URL. We can't use the request\n                // URL because it's relative, so we use a dummy URL instead.\n                url = new URL(request.url, 'http://n');\n            } else {\n                url = new URL(request.url, base);\n            }\n        }\n        return new NextRequest(url, {\n            method: request.method,\n            headers: fromNodeOutgoingHttpHeaders(request.headers),\n            duplex: 'half',\n            signal,\n            // geo\n            // ip\n            // nextConfig\n            // body can not be passed if request was aborted\n            // or we get a Request body was disturbed error\n            ...signal.aborted ? {} : {\n                body\n            }\n        });\n    }\n    static fromWebNextRequest(request) {\n        // HEAD and GET requests can not have a body.\n        let body = null;\n        if (request.method !== 'GET' && request.method !== 'HEAD') {\n            body = request.body;\n        }\n        return new NextRequest(request.url, {\n            method: request.method,\n            headers: fromNodeOutgoingHttpHeaders(request.headers),\n            duplex: 'half',\n            signal: request.request.signal,\n            // geo\n            // ip\n            // nextConfig\n            // body can not be passed if request was aborted\n            // or we get a Request body was disturbed error\n            ...request.request.signal.aborted ? {} : {\n                body\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=next-request.js.map","import type {\n  CacheNodeSeedData,\n  FlightData,\n  FlightDataPath,\n  FlightRouterState,\n  FlightSegmentPath,\n  Segment,\n} from '../server/app-render/types'\nimport type { HeadData } from '../shared/lib/app-router-context.shared-runtime'\nimport { PAGE_SEGMENT_KEY } from '../shared/lib/segment'\n\nexport type NormalizedFlightData = {\n  /**\n   * The full `FlightSegmentPath` inclusive of the final `Segment`\n   */\n  segmentPath: FlightSegmentPath\n  /**\n   * The `FlightSegmentPath` exclusive of the final `Segment`\n   */\n  pathToSegment: FlightSegmentPath\n  segment: Segment\n  tree: FlightRouterState\n  seedData: CacheNodeSeedData | null\n  head: HeadData\n  isHeadPartial: boolean\n  isRootRender: boolean\n}\n\n// TODO: We should only have to export `normalizeFlightData`, however because the initial flight data\n// that gets passed to `createInitialRouterState` doesn't conform to the `FlightDataPath` type (it's missing the root segment)\n// we're currently exporting it so we can use it directly. This should be fixed as part of the unification of\n// the different ways we express `FlightSegmentPath`.\nexport function getFlightDataPartsFromPath(\n  flightDataPath: FlightDataPath\n): NormalizedFlightData {\n  // Pick the last 4 items from the `FlightDataPath` to get the [tree, seedData, viewport, isHeadPartial].\n  const flightDataPathLength = 4\n  // tree, seedData, and head are *always* the last three items in the `FlightDataPath`.\n  const [tree, seedData, head, isHeadPartial] =\n    flightDataPath.slice(-flightDataPathLength)\n  // The `FlightSegmentPath` is everything except the last three items. For a root render, it won't be present.\n  const segmentPath = flightDataPath.slice(0, -flightDataPathLength)\n\n  return {\n    // TODO: Unify these two segment path helpers. We are inconsistently pushing an empty segment (\"\")\n    // to the start of the segment path in some places which makes it hard to use solely the segment path.\n    // Look for \"// TODO-APP: remove ''\" in the codebase.\n    pathToSegment: segmentPath.slice(0, -1),\n    segmentPath,\n    // if the `FlightDataPath` corresponds with the root, there'll be no segment path,\n    // in which case we default to ''.\n    segment: segmentPath[segmentPath.length - 1] ?? '',\n    tree,\n    seedData,\n    head,\n    isHeadPartial,\n    isRootRender: flightDataPath.length === flightDataPathLength,\n  }\n}\n\nexport function getNextFlightSegmentPath(\n  flightSegmentPath: FlightSegmentPath\n): FlightSegmentPath {\n  // Since `FlightSegmentPath` is a repeated tuple of `Segment` and `ParallelRouteKey`, we slice off two items\n  // to get the next segment path.\n  return flightSegmentPath.slice(2)\n}\n\nexport function normalizeFlightData(\n  flightData: FlightData\n): NormalizedFlightData[] | string {\n  // FlightData can be a string when the server didn't respond with a proper flight response,\n  // or when a redirect happens, to signal to the client that it needs to perform an MPA navigation.\n  if (typeof flightData === 'string') {\n    return flightData\n  }\n\n  return flightData.map(getFlightDataPartsFromPath)\n}\n\n/**\n * This function is used to prepare the flight router state for the request.\n * It removes markers that are not needed by the server, and are purely used\n * for stashing state on the client.\n * @param flightRouterState - The flight router state to prepare.\n * @param isHmrRefresh - Whether this is an HMR refresh request.\n * @returns The prepared flight router state.\n */\nexport function prepareFlightRouterStateForRequest(\n  flightRouterState: FlightRouterState,\n  isHmrRefresh?: boolean\n): string {\n  // HMR requests need the complete, unmodified state for proper functionality\n  if (isHmrRefresh) {\n    return encodeURIComponent(JSON.stringify(flightRouterState))\n  }\n\n  return encodeURIComponent(\n    JSON.stringify(stripClientOnlyDataFromFlightRouterState(flightRouterState))\n  )\n}\n\n/**\n * Recursively strips client-only data from FlightRouterState while preserving\n * server-needed information for proper rendering decisions.\n */\nfunction stripClientOnlyDataFromFlightRouterState(\n  flightRouterState: FlightRouterState\n): FlightRouterState {\n  const [\n    segment,\n    parallelRoutes,\n    _url, // Intentionally unused - URLs are client-only\n    refreshMarker,\n    isRootLayout,\n  ] = flightRouterState\n\n  // __PAGE__ segments are always fetched from the server, so there's\n  // no need to send them up\n  const cleanedSegment = stripSearchParamsFromPageSegment(segment)\n\n  // Recursively process parallel routes\n  const cleanedParallelRoutes: { [key: string]: FlightRouterState } = {}\n  for (const [key, childState] of Object.entries(parallelRoutes)) {\n    cleanedParallelRoutes[key] =\n      stripClientOnlyDataFromFlightRouterState(childState)\n  }\n\n  const result: FlightRouterState = [\n    cleanedSegment,\n    cleanedParallelRoutes,\n    null, // URLs omitted - server reconstructs paths from segments\n    shouldPreserveRefreshMarker(refreshMarker) ? refreshMarker : null,\n  ]\n\n  // Append optional fields if present\n  if (isRootLayout !== undefined) {\n    result[4] = isRootLayout\n  }\n\n  return result\n}\n\n/**\n * Strips search parameters from __PAGE__ segments to prevent sensitive\n * client-side data from being sent to the server.\n */\nfunction stripSearchParamsFromPageSegment(segment: Segment): Segment {\n  if (\n    typeof segment === 'string' &&\n    segment.startsWith(PAGE_SEGMENT_KEY + '?')\n  ) {\n    return PAGE_SEGMENT_KEY\n  }\n  return segment\n}\n\n/**\n * Determines whether the refresh marker should be sent to the server\n * Client-only markers like 'refresh' are stripped, while server-needed markers\n * like 'refetch' and 'inside-shared-layout' are preserved.\n */\nfunction shouldPreserveRefreshMarker(\n  refreshMarker: FlightRouterState[3]\n): boolean {\n  return Boolean(refreshMarker && refreshMarker !== 'refresh')\n}\n","import { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\nimport { pathHasPrefix } from '../../shared/lib/router/utils/path-has-prefix';\nimport { removePathPrefix } from '../../shared/lib/router/utils/remove-path-prefix';\nimport { workAsyncStorage } from './work-async-storage.external';\n// This function creates a Flight-acceptable server module map proxy from our\n// Server Reference Manifest similar to our client module map.\n// This is because our manifest contains a lot of internal Next.js data that\n// are relevant to the runtime, workers, etc. that React doesn't need to know.\nexport function createServerModuleMap({ serverActionsManifest }) {\n    return new Proxy({}, {\n        get: (_, id)=>{\n            var _serverActionsManifest__id, _serverActionsManifest_;\n            const workers = (_serverActionsManifest_ = serverActionsManifest[process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node']) == null ? void 0 : (_serverActionsManifest__id = _serverActionsManifest_[id]) == null ? void 0 : _serverActionsManifest__id.workers;\n            if (!workers) {\n                return undefined;\n            }\n            const workStore = workAsyncStorage.getStore();\n            let workerEntry;\n            if (workStore) {\n                workerEntry = workers[normalizeWorkerPageName(workStore.page)];\n            } else {\n                // If there's no work store defined, we can assume that a server\n                // module map is needed during module evaluation, e.g. to create a\n                // server action using a higher-order function. Therefore it should be\n                // safe to return any entry from the manifest that matches the action\n                // ID. They all refer to the same module ID, which must also exist in\n                // the current page bundle. TODO: This is currently not guaranteed in\n                // Turbopack, and needs to be fixed.\n                workerEntry = Object.values(workers).at(0);\n            }\n            if (!workerEntry) {\n                return undefined;\n            }\n            const { moduleId, async } = workerEntry;\n            return {\n                id: moduleId,\n                name: id,\n                chunks: [],\n                async\n            };\n        }\n    });\n}\n/**\n * Checks if the requested action has a worker for the current page.\n * If not, it returns the first worker that has a handler for the action.\n */ export function selectWorkerForForwarding(actionId, pageName, serverActionsManifest) {\n    var _serverActionsManifest__actionId;\n    const workers = (_serverActionsManifest__actionId = serverActionsManifest[process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'][actionId]) == null ? void 0 : _serverActionsManifest__actionId.workers;\n    const workerName = normalizeWorkerPageName(pageName);\n    // no workers, nothing to forward to\n    if (!workers) return;\n    // if there is a worker for this page, no need to forward it.\n    if (workers[workerName]) {\n        return;\n    }\n    // otherwise, grab the first worker that has a handler for this action id\n    return denormalizeWorkerPageName(Object.keys(workers)[0]);\n}\n/**\n * The flight entry loader keys actions by bundlePath.\n * bundlePath corresponds with the relative path (including 'app') to the page entrypoint.\n */ function normalizeWorkerPageName(pageName) {\n    if (pathHasPrefix(pageName, 'app')) {\n        return pageName;\n    }\n    return 'app' + pageName;\n}\n/**\n * Converts a bundlePath (relative path to the entrypoint) to a routable page name\n */ function denormalizeWorkerPageName(bundlePath) {\n    return normalizeAppPath(removePathPrefix(bundlePath, 'app'));\n}\n\n//# sourceMappingURL=action-utils.js.map","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","(()=>{\"use strict\";var e={328:e=>{function hash(e){var r=5381,_=e.length;while(_){r=r*33^e.charCodeAt(--_)}return r>>>0}e.exports=hash}};var r={};function __nccwpck_require__(_){var a=r[_];if(a!==undefined){return a.exports}var t=r[_]={exports:{}};var i=true;try{e[_](t,t.exports,__nccwpck_require__);i=false}finally{if(i)delete r[_]}return t.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var _=__nccwpck_require__(328);module.exports=_})();","import { useEffect, useRef, useState } from 'react'\nimport { createPortal } from 'react-dom'\nimport type { FlightRouterState } from '../../server/app-render/types'\n\nconst ANNOUNCER_TYPE = 'next-route-announcer'\nconst ANNOUNCER_ID = '__next-route-announcer__'\n\nfunction getAnnouncerNode() {\n  const existingAnnouncer = document.getElementsByName(ANNOUNCER_TYPE)[0]\n  if (existingAnnouncer?.shadowRoot?.childNodes[0]) {\n    return existingAnnouncer.shadowRoot.childNodes[0] as HTMLElement\n  } else {\n    const container = document.createElement(ANNOUNCER_TYPE)\n    container.style.cssText = 'position:absolute'\n    const announcer = document.createElement('div')\n    announcer.ariaLive = 'assertive'\n    announcer.id = ANNOUNCER_ID\n    announcer.role = 'alert'\n    announcer.style.cssText =\n      'position:absolute;border:0;height:1px;margin:-1px;padding:0;width:1px;clip:rect(0 0 0 0);overflow:hidden;white-space:nowrap;word-wrap:normal'\n\n    // Use shadow DOM here to avoid any potential CSS bleed\n    const shadow = container.attachShadow({ mode: 'open' })\n    shadow.appendChild(announcer)\n    document.body.appendChild(container)\n    return announcer\n  }\n}\n\nexport function AppRouterAnnouncer({ tree }: { tree: FlightRouterState }) {\n  const [portalNode, setPortalNode] = useState<HTMLElement | null>(null)\n\n  useEffect(() => {\n    const announcer = getAnnouncerNode()\n    setPortalNode(announcer)\n    return () => {\n      const container = document.getElementsByTagName(ANNOUNCER_TYPE)[0]\n      if (container?.isConnected) {\n        document.body.removeChild(container)\n      }\n    }\n  }, [])\n\n  const [routeAnnouncement, setRouteAnnouncement] = useState('')\n  const previousTitle = useRef<string | undefined>(undefined)\n\n  useEffect(() => {\n    let currentTitle = ''\n    if (document.title) {\n      currentTitle = document.title\n    } else {\n      const pageHeader = document.querySelector('h1')\n      if (pageHeader) {\n        currentTitle = pageHeader.innerText || pageHeader.textContent || ''\n      }\n    }\n\n    // Only announce the title change, but not for the first load because screen\n    // readers do that automatically.\n    if (\n      previousTitle.current !== undefined &&\n      previousTitle.current !== currentTitle\n    ) {\n      setRouteAnnouncement(currentTitle)\n    }\n    previousTitle.current = currentTitle\n  }, [tree])\n\n  return portalNode ? createPortal(routeAnnouncement, portalNode) : null\n}\n","import type { FlightRouterState } from '../../../../server/app-render/types'\nimport type { CacheNode } from '../../../../shared/lib/app-router-context.shared-runtime'\nimport { createRouterCacheKey } from '../create-router-cache-key'\n\nexport function findHeadInCache(\n  cache: CacheNode,\n  parallelRoutes: FlightRouterState[1]\n): [CacheNode, string] | null {\n  return findHeadInCacheImpl(cache, parallelRoutes, '')\n}\n\nfunction findHeadInCacheImpl(\n  cache: CacheNode,\n  parallelRoutes: FlightRouterState[1],\n  keyPrefix: string\n): [CacheNode, string] | null {\n  const isLastItem = Object.keys(parallelRoutes).length === 0\n  if (isLastItem) {\n    // Returns the entire Cache Node of the segment whose head we will render.\n    return [cache, keyPrefix]\n  }\n\n  // First try the 'children' parallel route if it exists\n  // when starting from the \"root\", this corresponds with the main page component\n  const parallelRoutesKeys = Object.keys(parallelRoutes).filter(\n    (key) => key !== 'children'\n  )\n\n  // if we are at the root, we need to check the children slot first\n  if ('children' in parallelRoutes) {\n    parallelRoutesKeys.unshift('children')\n  }\n\n  for (const key of parallelRoutesKeys) {\n    const [segment, childParallelRoutes] = parallelRoutes[key]\n    const childSegmentMap = cache.parallelRoutes.get(key)\n    if (!childSegmentMap) {\n      continue\n    }\n\n    const cacheKey = createRouterCacheKey(segment)\n\n    const cacheNode = childSegmentMap.get(cacheKey)\n    if (!cacheNode) {\n      continue\n    }\n\n    const item = findHeadInCacheImpl(\n      cacheNode,\n      childParallelRoutes,\n      keyPrefix + '/' + cacheKey\n    )\n    if (item) {\n      return item\n    }\n  }\n\n  return null\n}\n","import { hasBasePath } from './has-base-path'\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nexport function removeBasePath(path: string): string {\n  if (process.env.__NEXT_MANUAL_CLIENT_BASE_PATH) {\n    if (!hasBasePath(path)) {\n      return path\n    }\n  }\n\n  // Can't trim the basePath if it has zero length!\n  if (basePath.length === 0) return path\n\n  path = path.slice(basePath.length)\n  if (!path.startsWith('/')) path = `/${path}`\n  return path\n}\n","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;Object.defineProperty(r,\"__esModule\",{value:true});function lexer(e){var r=[];var n=0;while(n<e.length){var t=e[n];if(t===\"*\"||t===\"+\"||t===\"?\"){r.push({type:\"MODIFIER\",index:n,value:e[n++]});continue}if(t===\"\\\\\"){r.push({type:\"ESCAPED_CHAR\",index:n++,value:e[n++]});continue}if(t===\"{\"){r.push({type:\"OPEN\",index:n,value:e[n++]});continue}if(t===\"}\"){r.push({type:\"CLOSE\",index:n,value:e[n++]});continue}if(t===\":\"){var i=\"\";var a=n+1;while(a<e.length){var o=e.charCodeAt(a);if(o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122||o===95){i+=e[a++];continue}break}if(!i)throw new TypeError(\"Missing parameter name at \"+n);r.push({type:\"NAME\",index:n,value:i});n=a;continue}if(t===\"(\"){var f=1;var u=\"\";var a=n+1;if(e[a]===\"?\"){throw new TypeError('Pattern cannot start with \"?\" at '+a)}while(a<e.length){if(e[a]===\"\\\\\"){u+=e[a++]+e[a++];continue}if(e[a]===\")\"){f--;if(f===0){a++;break}}else if(e[a]===\"(\"){f++;if(e[a+1]!==\"?\"){throw new TypeError(\"Capturing groups are not allowed at \"+a)}}u+=e[a++]}if(f)throw new TypeError(\"Unbalanced pattern at \"+n);if(!u)throw new TypeError(\"Missing pattern at \"+n);r.push({type:\"PATTERN\",index:n,value:u});n=a;continue}r.push({type:\"CHAR\",index:n,value:e[n++]})}r.push({type:\"END\",index:n,value:\"\"});return r}function parse(e,r){if(r===void 0){r={}}var n=lexer(e);var t=r.prefixes,i=t===void 0?\"./\":t;var a=\"[^\"+escapeString(r.delimiter||\"/#?\")+\"]+?\";var o=[];var f=0;var u=0;var p=\"\";var tryConsume=function(e){if(u<n.length&&n[u].type===e)return n[u++].value};var mustConsume=function(e){var r=tryConsume(e);if(r!==undefined)return r;var t=n[u],i=t.type,a=t.index;throw new TypeError(\"Unexpected \"+i+\" at \"+a+\", expected \"+e)};var consumeText=function(){var e=\"\";var r;while(r=tryConsume(\"CHAR\")||tryConsume(\"ESCAPED_CHAR\")){e+=r}return e};while(u<n.length){var v=tryConsume(\"CHAR\");var c=tryConsume(\"NAME\");var s=tryConsume(\"PATTERN\");if(c||s){var d=v||\"\";if(i.indexOf(d)===-1){p+=d;d=\"\"}if(p){o.push(p);p=\"\"}o.push({name:c||f++,prefix:d,suffix:\"\",pattern:s||a,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}var g=v||tryConsume(\"ESCAPED_CHAR\");if(g){p+=g;continue}if(p){o.push(p);p=\"\"}var x=tryConsume(\"OPEN\");if(x){var d=consumeText();var l=tryConsume(\"NAME\")||\"\";var h=tryConsume(\"PATTERN\")||\"\";var m=consumeText();mustConsume(\"CLOSE\");o.push({name:l||(h?f++:\"\"),pattern:l&&!h?a:h,prefix:d,suffix:m,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}mustConsume(\"END\")}return o}r.parse=parse;function compile(e,r){return tokensToFunction(parse(e,r),r)}r.compile=compile;function tokensToFunction(e,r){if(r===void 0){r={}}var n=flags(r);var t=r.encode,i=t===void 0?function(e){return e}:t,a=r.validate,o=a===void 0?true:a;var f=e.map((function(e){if(typeof e===\"object\"){return new RegExp(\"^(?:\"+e.pattern+\")$\",n)}}));return function(r){var n=\"\";for(var t=0;t<e.length;t++){var a=e[t];if(typeof a===\"string\"){n+=a;continue}var u=r?r[a.name]:undefined;var p=a.modifier===\"?\"||a.modifier===\"*\";var v=a.modifier===\"*\"||a.modifier===\"+\";if(Array.isArray(u)){if(!v){throw new TypeError('Expected \"'+a.name+'\" to not repeat, but got an array')}if(u.length===0){if(p)continue;throw new TypeError('Expected \"'+a.name+'\" to not be empty')}for(var c=0;c<u.length;c++){var s=i(u[c],a);if(o&&!f[t].test(s)){throw new TypeError('Expected all \"'+a.name+'\" to match \"'+a.pattern+'\", but got \"'+s+'\"')}n+=a.prefix+s+a.suffix}continue}if(typeof u===\"string\"||typeof u===\"number\"){var s=i(String(u),a);if(o&&!f[t].test(s)){throw new TypeError('Expected \"'+a.name+'\" to match \"'+a.pattern+'\", but got \"'+s+'\"')}n+=a.prefix+s+a.suffix;continue}if(p)continue;var d=v?\"an array\":\"a string\";throw new TypeError('Expected \"'+a.name+'\" to be '+d)}return n}}r.tokensToFunction=tokensToFunction;function match(e,r){var n=[];var t=pathToRegexp(e,n,r);return regexpToFunction(t,n,r)}r.match=match;function regexpToFunction(e,r,n){if(n===void 0){n={}}var t=n.decode,i=t===void 0?function(e){return e}:t;return function(n){var t=e.exec(n);if(!t)return false;var a=t[0],o=t.index;var f=Object.create(null);var _loop_1=function(e){if(t[e]===undefined)return\"continue\";var n=r[e-1];if(n.modifier===\"*\"||n.modifier===\"+\"){f[n.name]=t[e].split(n.prefix+n.suffix).map((function(e){return i(e,n)}))}else{f[n.name]=i(t[e],n)}};for(var u=1;u<t.length;u++){_loop_1(u)}return{path:a,index:o,params:f}}}r.regexpToFunction=regexpToFunction;function escapeString(e){return e.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g,\"\\\\$1\")}function flags(e){return e&&e.sensitive?\"\":\"i\"}function regexpToRegexp(e,r){if(!r)return e;var n=e.source.match(/\\((?!\\?)/g);if(n){for(var t=0;t<n.length;t++){r.push({name:t,prefix:\"\",suffix:\"\",modifier:\"\",pattern:\"\"})}}return e}function arrayToRegexp(e,r,n){var t=e.map((function(e){return pathToRegexp(e,r,n).source}));return new RegExp(\"(?:\"+t.join(\"|\")+\")\",flags(n))}function stringToRegexp(e,r,n){return tokensToRegexp(parse(e,n),r,n)}function tokensToRegexp(e,r,n){if(n===void 0){n={}}var t=n.strict,i=t===void 0?false:t,a=n.start,o=a===void 0?true:a,f=n.end,u=f===void 0?true:f,p=n.encode,v=p===void 0?function(e){return e}:p;var c=\"[\"+escapeString(n.endsWith||\"\")+\"]|$\";var s=\"[\"+escapeString(n.delimiter||\"/#?\")+\"]\";var d=o?\"^\":\"\";for(var g=0,x=e;g<x.length;g++){var l=x[g];if(typeof l===\"string\"){d+=escapeString(v(l))}else{var h=escapeString(v(l.prefix));var m=escapeString(v(l.suffix));if(l.pattern){if(r)r.push(l);if(h||m){if(l.modifier===\"+\"||l.modifier===\"*\"){var E=l.modifier===\"*\"?\"?\":\"\";d+=\"(?:\"+h+\"((?:\"+l.pattern+\")(?:\"+m+h+\"(?:\"+l.pattern+\"))*)\"+m+\")\"+E}else{d+=\"(?:\"+h+\"(\"+l.pattern+\")\"+m+\")\"+l.modifier}}else{d+=\"(\"+l.pattern+\")\"+l.modifier}}else{d+=\"(?:\"+h+m+\")\"+l.modifier}}}if(u){if(!i)d+=s+\"?\";d+=!n.endsWith?\"$\":\"(?=\"+c+\")\"}else{var T=e[e.length-1];var y=typeof T===\"string\"?s.indexOf(T[T.length-1])>-1:T===undefined;if(!i){d+=\"(?:\"+s+\"(?=\"+c+\"))?\"}if(!y){d+=\"(?=\"+s+\"|\"+c+\")\"}}return new RegExp(d,flags(n))}r.tokensToRegexp=tokensToRegexp;function pathToRegexp(e,r,n){if(e instanceof RegExp)return regexpToRegexp(e,r);if(Array.isArray(e))return arrayToRegexp(e,r,n);return stringToRegexp(e,r,n)}r.pathToRegexp=pathToRegexp})();module.exports=e})();","/**\n * @license React\n * react-dom.react-server.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"next/dist/compiled/react\");\nfunction noop() {}\nvar Internals = {\n  d: {\n    f: noop,\n    r: function () {\n      throw Error(\n        \"Invalid form element. requestFormReset must be passed a form that was rendered by React.\"\n      );\n    },\n    D: noop,\n    C: noop,\n    L: noop,\n    m: noop,\n    X: noop,\n    S: noop,\n    M: noop\n  },\n  p: 0,\n  findDOMNode: null\n};\nif (!React.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE)\n  throw Error(\n    'The \"react\" package in this environment is not configured correctly. The \"react-server\" condition must be enabled in any environment that runs React Server Components.'\n  );\nfunction getCrossOriginStringAs(as, input) {\n  if (\"font\" === as) return \"\";\n  if (\"string\" === typeof input)\n    return \"use-credentials\" === input ? input : \"\";\n}\nexports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  Internals;\nexports.preconnect = function (href, options) {\n  \"string\" === typeof href &&\n    (options\n      ? ((options = options.crossOrigin),\n        (options =\n          \"string\" === typeof options\n            ? \"use-credentials\" === options\n              ? options\n              : \"\"\n            : void 0))\n      : (options = null),\n    Internals.d.C(href, options));\n};\nexports.prefetchDNS = function (href) {\n  \"string\" === typeof href && Internals.d.D(href);\n};\nexports.preinit = function (href, options) {\n  if (\"string\" === typeof href && options && \"string\" === typeof options.as) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),\n      integrity =\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      fetchPriority =\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0;\n    \"style\" === as\n      ? Internals.d.S(\n          href,\n          \"string\" === typeof options.precedence ? options.precedence : void 0,\n          {\n            crossOrigin: crossOrigin,\n            integrity: integrity,\n            fetchPriority: fetchPriority\n          }\n        )\n      : \"script\" === as &&\n        Internals.d.X(href, {\n          crossOrigin: crossOrigin,\n          integrity: integrity,\n          fetchPriority: fetchPriority,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n  }\n};\nexports.preinitModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (\"object\" === typeof options && null !== options) {\n      if (null == options.as || \"script\" === options.as) {\n        var crossOrigin = getCrossOriginStringAs(\n          options.as,\n          options.crossOrigin\n        );\n        Internals.d.M(href, {\n          crossOrigin: crossOrigin,\n          integrity:\n            \"string\" === typeof options.integrity ? options.integrity : void 0,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n      }\n    } else null == options && Internals.d.M(href);\n};\nexports.preload = function (href, options) {\n  if (\n    \"string\" === typeof href &&\n    \"object\" === typeof options &&\n    null !== options &&\n    \"string\" === typeof options.as\n  ) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin);\n    Internals.d.L(href, as, {\n      crossOrigin: crossOrigin,\n      integrity:\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      nonce: \"string\" === typeof options.nonce ? options.nonce : void 0,\n      type: \"string\" === typeof options.type ? options.type : void 0,\n      fetchPriority:\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0,\n      referrerPolicy:\n        \"string\" === typeof options.referrerPolicy\n          ? options.referrerPolicy\n          : void 0,\n      imageSrcSet:\n        \"string\" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,\n      imageSizes:\n        \"string\" === typeof options.imageSizes ? options.imageSizes : void 0,\n      media: \"string\" === typeof options.media ? options.media : void 0\n    });\n  }\n};\nexports.preloadModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (options) {\n      var crossOrigin = getCrossOriginStringAs(options.as, options.crossOrigin);\n      Internals.d.m(href, {\n        as:\n          \"string\" === typeof options.as && \"script\" !== options.as\n            ? options.as\n            : void 0,\n        crossOrigin: crossOrigin,\n        integrity:\n          \"string\" === typeof options.integrity ? options.integrity : void 0\n      });\n    } else Internals.d.m(href);\n};\nexports.version = \"19.2.0-canary-3fbfb9ba-20250409\";\n","import { createAsyncLocalStorage } from '../app-render/async-local-storage';\nexport function getBuiltinRequestContext() {\n    const _globalThis = globalThis;\n    const ctx = _globalThis[NEXT_REQUEST_CONTEXT_SYMBOL];\n    return ctx == null ? void 0 : ctx.get();\n}\nconst NEXT_REQUEST_CONTEXT_SYMBOL = Symbol.for('@next/request-context');\n/** \"@next/request-context\" has a different signature from AsyncLocalStorage,\n * matching [AsyncContext.Variable](https://github.com/tc39/proposal-async-context).\n * We don't need a full AsyncContext adapter here, just having `.get()` is enough\n */ export function createLocalRequestContext() {\n    const storage = createAsyncLocalStorage();\n    return {\n        get: ()=>storage.getStore(),\n        run: (value, callback)=>storage.run(value, callback)\n    };\n}\n\n//# sourceMappingURL=builtin-request-context.js.map","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import type {\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../../server/app-render/types'\nimport { DEFAULT_SEGMENT_KEY } from '../../../shared/lib/segment'\nimport { getNextFlightSegmentPath } from '../../flight-data-helpers'\nimport { matchSegment } from '../match-segments'\nimport { addRefreshMarkerToActiveParallelSegments } from './refetch-inactive-parallel-segments'\n\n/**\n * Deep merge of the two router states. Parallel route keys are preserved if the patch doesn't have them.\n */\nfunction applyPatch(\n  initialTree: FlightRouterState,\n  patchTree: FlightRouterState\n): FlightRouterState {\n  const [initialSegment, initialParallelRoutes] = initialTree\n  const [patchSegment, patchParallelRoutes] = patchTree\n\n  // if the applied patch segment is __DEFAULT__ then it can be ignored in favor of the initial tree\n  // this is because the __DEFAULT__ segment is used as a placeholder on navigation\n  if (\n    patchSegment === DEFAULT_SEGMENT_KEY &&\n    initialSegment !== DEFAULT_SEGMENT_KEY\n  ) {\n    return initialTree\n  }\n\n  if (matchSegment(initialSegment, patchSegment)) {\n    const newParallelRoutes: FlightRouterState[1] = {}\n    for (const key in initialParallelRoutes) {\n      const isInPatchTreeParallelRoutes =\n        typeof patchParallelRoutes[key] !== 'undefined'\n      if (isInPatchTreeParallelRoutes) {\n        newParallelRoutes[key] = applyPatch(\n          initialParallelRoutes[key],\n          patchParallelRoutes[key]\n        )\n      } else {\n        newParallelRoutes[key] = initialParallelRoutes[key]\n      }\n    }\n\n    for (const key in patchParallelRoutes) {\n      if (newParallelRoutes[key]) {\n        continue\n      }\n\n      newParallelRoutes[key] = patchParallelRoutes[key]\n    }\n\n    const tree: FlightRouterState = [initialSegment, newParallelRoutes]\n\n    // Copy over the existing tree\n    if (initialTree[2]) {\n      tree[2] = initialTree[2]\n    }\n\n    if (initialTree[3]) {\n      tree[3] = initialTree[3]\n    }\n\n    if (initialTree[4]) {\n      tree[4] = initialTree[4]\n    }\n\n    return tree\n  }\n\n  return patchTree\n}\n\n/**\n * Apply the router state from the Flight response, but skip patching default segments.\n * Useful for patching the router cache when navigating, where we persist the existing default segment if there isn't a new one.\n * Creates a new router state tree.\n */\nexport function applyRouterStatePatchToTree(\n  flightSegmentPath: FlightSegmentPath,\n  flightRouterState: FlightRouterState,\n  treePatch: FlightRouterState,\n  path: string\n): FlightRouterState | null {\n  const [segment, parallelRoutes, url, refetch, isRootLayout] =\n    flightRouterState\n\n  // Root refresh\n  if (flightSegmentPath.length === 1) {\n    const tree: FlightRouterState = applyPatch(flightRouterState, treePatch)\n\n    addRefreshMarkerToActiveParallelSegments(tree, path)\n\n    return tree\n  }\n\n  const [currentSegment, parallelRouteKey] = flightSegmentPath\n\n  // Tree path returned from the server should always match up with the current tree in the browser\n  if (!matchSegment(currentSegment, segment)) {\n    return null\n  }\n\n  const lastSegment = flightSegmentPath.length === 2\n\n  let parallelRoutePatch\n  if (lastSegment) {\n    parallelRoutePatch = applyPatch(parallelRoutes[parallelRouteKey], treePatch)\n  } else {\n    parallelRoutePatch = applyRouterStatePatchToTree(\n      getNextFlightSegmentPath(flightSegmentPath),\n      parallelRoutes[parallelRouteKey],\n      treePatch,\n      path\n    )\n\n    if (parallelRoutePatch === null) {\n      return null\n    }\n  }\n\n  const tree: FlightRouterState = [\n    flightSegmentPath[0],\n    {\n      ...parallelRoutes,\n      [parallelRouteKey]: parallelRoutePatch,\n    },\n    url,\n    refetch,\n  ]\n\n  // Current segment is the root layout\n  if (isRootLayout) {\n    tree[4] = true\n  }\n\n  addRefreshMarkerToActiveParallelSegments(tree, path)\n\n  return tree\n}\n","import type {\n  CacheNodeSeedData,\n  FlightRouterState,\n  FlightSegmentPath,\n  Segment,\n} from '../../../server/app-render/types'\nimport type {\n  CacheNode,\n  ChildSegmentMap,\n  HeadData,\n  LoadingModuleData,\n  ReadyCacheNode,\n} from '../../../shared/lib/app-router-context.shared-runtime'\nimport { DEFAULT_SEGMENT_KEY } from '../../../shared/lib/segment'\nimport { matchSegment } from '../match-segments'\nimport { createRouterCacheKey } from './create-router-cache-key'\nimport type { FetchServerResponseResult } from './fetch-server-response'\nimport { isNavigatingToNewRootLayout } from './is-navigating-to-new-root-layout'\nimport { DYNAMIC_STALETIME_MS } from './prefetch-cache-utils'\n\n// This is yet another tree type that is used to track pending promises that\n// need to be fulfilled once the dynamic data is received. The terminal nodes of\n// this tree represent the new Cache Node trees that were created during this\n// request. We can't use the Cache Node tree or Route State tree directly\n// because those include reused nodes, too. This tree is discarded as soon as\n// the navigation response is received.\ntype SPANavigationTask = {\n  // The router state that corresponds to the tree that this Task represents.\n  route: FlightRouterState\n  // The CacheNode that corresponds to the tree that this Task represents. If\n  // `children` is null (i.e. if this is a terminal task node), then `node`\n  // represents a brand new Cache Node tree, which way or may not need to be\n  // filled with dynamic data from the server.\n  node: CacheNode | null\n  // The tree sent to the server during the dynamic request. This is the\n  // same as `route`, except with the `refetch` marker set on dynamic segments.\n  // If all the segments are static, then this will be null, and no server\n  // request is required.\n  dynamicRequestTree: FlightRouterState | null\n  children: Map<string, SPANavigationTask> | null\n}\n\n// A special type used to bail out and trigger a full-page navigation.\ntype MPANavigationTask = {\n  // MPA tasks are distinguised from SPA tasks by having a null `route`.\n  route: null\n  node: null\n  dynamicRequestTree: null\n  children: null\n}\n\nconst MPA_NAVIGATION_TASK: MPANavigationTask = {\n  route: null,\n  node: null,\n  dynamicRequestTree: null,\n  children: null,\n}\n\nexport type Task = SPANavigationTask | MPANavigationTask\n\n// Creates a new Cache Node tree (i.e. copy-on-write) that represents the\n// optimistic result of a navigation, using both the current Cache Node tree and\n// data that was prefetched prior to navigation.\n//\n// At the moment we call this function, we haven't yet received the navigation\n// response from the server. It could send back something completely different\n// from the tree that was prefetched — due to rewrites, default routes, parallel\n// routes, etc.\n//\n// But in most cases, it will return the same tree that we prefetched, just with\n// the dynamic holes filled in. So we optimistically assume this will happen,\n// and accept that the real result could be arbitrarily different.\n//\n// We'll reuse anything that was already in the previous tree, since that's what\n// the server does.\n//\n// New segments (ones that don't appear in the old tree) are assigned an\n// unresolved promise. The data for these promises will be fulfilled later, when\n// the navigation response is received.\n//\n// The tree can be rendered immediately after it is created (that's why this is\n// a synchronous function). Any new trees that do not have prefetch data will\n// suspend during rendering, until the dynamic data streams in.\n//\n// Returns a Task object, which contains both the updated Cache Node and a path\n// to the pending subtrees that need to be resolved by the navigation response.\n//\n// A return value of `null` means there were no changes, and the previous tree\n// can be reused without initiating a server request.\nexport function startPPRNavigation(\n  navigatedAt: number,\n  oldCacheNode: CacheNode,\n  oldRouterState: FlightRouterState,\n  newRouterState: FlightRouterState,\n  prefetchData: CacheNodeSeedData | null,\n  prefetchHead: HeadData | null,\n  isPrefetchHeadPartial: boolean,\n  isSamePageNavigation: boolean,\n  scrollableSegmentsResult: Array<FlightSegmentPath>\n): Task | null {\n  const segmentPath: Array<FlightSegmentPath> = []\n  return updateCacheNodeOnNavigation(\n    navigatedAt,\n    oldCacheNode,\n    oldRouterState,\n    newRouterState,\n    false,\n    prefetchData,\n    prefetchHead,\n    isPrefetchHeadPartial,\n    isSamePageNavigation,\n    segmentPath,\n    scrollableSegmentsResult\n  )\n}\n\nfunction updateCacheNodeOnNavigation(\n  navigatedAt: number,\n  oldCacheNode: CacheNode,\n  oldRouterState: FlightRouterState,\n  newRouterState: FlightRouterState,\n  didFindRootLayout: boolean,\n  prefetchData: CacheNodeSeedData | null,\n  prefetchHead: HeadData | null,\n  isPrefetchHeadPartial: boolean,\n  isSamePageNavigation: boolean,\n  segmentPath: FlightSegmentPath,\n  scrollableSegmentsResult: Array<FlightSegmentPath>\n): Task | null {\n  // Diff the old and new trees to reuse the shared layouts.\n  const oldRouterStateChildren = oldRouterState[1]\n  const newRouterStateChildren = newRouterState[1]\n  const prefetchDataChildren = prefetchData !== null ? prefetchData[2] : null\n\n  if (!didFindRootLayout) {\n    // We're currently traversing the part of the tree that was also part of\n    // the previous route. If we discover a root layout, then we don't need to\n    // trigger an MPA navigation. See beginRenderingNewRouteTree for context.\n    const isRootLayout = newRouterState[4] === true\n    if (isRootLayout) {\n      // Found a matching root layout.\n      didFindRootLayout = true\n    }\n  }\n\n  const oldParallelRoutes = oldCacheNode.parallelRoutes\n\n  // Clone the current set of segment children, even if they aren't active in\n  // the new tree.\n  // TODO: We currently retain all the inactive segments indefinitely, until\n  // there's an explicit refresh, or a parent layout is lazily refreshed. We\n  // rely on this for popstate navigations, which update the Router State Tree\n  // but do not eagerly perform a data fetch, because they expect the segment\n  // data to already be in the Cache Node tree. For highly static sites that\n  // are mostly read-only, this may happen only rarely, causing memory to\n  // leak. We should figure out a better model for the lifetime of inactive\n  // segments, so we can maintain instant back/forward navigations without\n  // leaking memory indefinitely.\n  const prefetchParallelRoutes = new Map(oldParallelRoutes)\n\n  // As we diff the trees, we may sometimes modify (copy-on-write, not mutate)\n  // the Route Tree that was returned by the server — for example, in the case\n  // of default parallel routes, we preserve the currently active segment. To\n  // avoid mutating the original tree, we clone the router state children along\n  // the return path.\n  let patchedRouterStateChildren: {\n    [parallelRouteKey: string]: FlightRouterState\n  } = {}\n  let taskChildren = null\n\n  // Most navigations require a request to fetch additional data from the\n  // server, either because the data was not already prefetched, or because the\n  // target route contains dynamic data that cannot be prefetched.\n  //\n  // However, if the target route is fully static, and it's already completely\n  // loaded into the segment cache, then we can skip the server request.\n  //\n  // This starts off as `false`, and is set to `true` if any of the child\n  // routes requires a dynamic request.\n  let needsDynamicRequest = false\n  // As we traverse the children, we'll construct a FlightRouterState that can\n  // be sent to the server to request the dynamic data. If it turns out that\n  // nothing in the subtree is dynamic (i.e. needsDynamicRequest is false at the\n  // end), then this will be discarded.\n  // TODO: We can probably optimize the format of this data structure to only\n  // include paths that are dynamic. Instead of reusing the\n  // FlightRouterState type.\n  let dynamicRequestTreeChildren: {\n    [parallelRouteKey: string]: FlightRouterState\n  } = {}\n\n  for (let parallelRouteKey in newRouterStateChildren) {\n    const newRouterStateChild: FlightRouterState =\n      newRouterStateChildren[parallelRouteKey]\n    const oldRouterStateChild: FlightRouterState | void =\n      oldRouterStateChildren[parallelRouteKey]\n    const oldSegmentMapChild = oldParallelRoutes.get(parallelRouteKey)\n    const prefetchDataChild: CacheNodeSeedData | void | null =\n      prefetchDataChildren !== null\n        ? prefetchDataChildren[parallelRouteKey]\n        : null\n\n    const newSegmentChild = newRouterStateChild[0]\n    const newSegmentPathChild = segmentPath.concat([\n      parallelRouteKey,\n      newSegmentChild,\n    ])\n    const newSegmentKeyChild = createRouterCacheKey(newSegmentChild)\n\n    const oldSegmentChild =\n      oldRouterStateChild !== undefined ? oldRouterStateChild[0] : undefined\n\n    const oldCacheNodeChild =\n      oldSegmentMapChild !== undefined\n        ? oldSegmentMapChild.get(newSegmentKeyChild)\n        : undefined\n\n    let taskChild: Task | null\n    if (newSegmentChild === DEFAULT_SEGMENT_KEY) {\n      // This is another kind of leaf segment — a default route.\n      //\n      // Default routes have special behavior. When there's no matching segment\n      // for a parallel route, Next.js preserves the currently active segment\n      // during a client navigation — but not for initial render. The server\n      // leaves it to the client to account for this. So we need to handle\n      // it here.\n      if (oldRouterStateChild !== undefined) {\n        // Reuse the existing Router State for this segment. We spawn a \"task\"\n        // just to keep track of the updated router state; unlike most, it's\n        // already fulfilled and won't be affected by the dynamic response.\n        taskChild = spawnReusedTask(oldRouterStateChild)\n      } else {\n        // There's no currently active segment. Switch to the \"create\" path.\n        taskChild = beginRenderingNewRouteTree(\n          navigatedAt,\n          oldRouterStateChild,\n          newRouterStateChild,\n          oldCacheNodeChild,\n          didFindRootLayout,\n          prefetchDataChild !== undefined ? prefetchDataChild : null,\n          prefetchHead,\n          isPrefetchHeadPartial,\n          newSegmentPathChild,\n          scrollableSegmentsResult\n        )\n      }\n    } else if (\n      isSamePageNavigation &&\n      // Check if this is a page segment.\n      // TODO: We're not consistent about how we do this check. Some places\n      // check if the segment starts with PAGE_SEGMENT_KEY, but most seem to\n      // check if there any any children, which is why I'm doing it here. We\n      // should probably encode an empty children set as `null` though. Either\n      // way, we should update all the checks to be consistent.\n      Object.keys(newRouterStateChild[1]).length === 0\n    ) {\n      // We special case navigations to the exact same URL as the current\n      // location. It's a common UI pattern for apps to refresh when you click a\n      // link to the current page. So when this happens, we refresh the dynamic\n      // data in the page segments.\n      //\n      // Note that this does not apply if the any part of the hash or search\n      // query has changed. This might feel a bit weird but it makes more sense\n      // when you consider that the way to trigger this behavior is to click\n      // the same link multiple times.\n      //\n      // TODO: We should probably refresh the *entire* route when this case\n      // occurs, not just the page segments. Essentially treating it the same as\n      // a refresh() triggered by an action, which is the more explicit way of\n      // modeling the UI pattern described above.\n      //\n      // Also note that this only refreshes the dynamic data, not static/\n      // cached data. If the page segment is fully static and prefetched, the\n      // request is skipped. (This is also how refresh() works.)\n      taskChild = beginRenderingNewRouteTree(\n        navigatedAt,\n        oldRouterStateChild,\n        newRouterStateChild,\n        oldCacheNodeChild,\n        didFindRootLayout,\n        prefetchDataChild !== undefined ? prefetchDataChild : null,\n        prefetchHead,\n        isPrefetchHeadPartial,\n        newSegmentPathChild,\n        scrollableSegmentsResult\n      )\n    } else if (\n      oldRouterStateChild !== undefined &&\n      oldSegmentChild !== undefined &&\n      matchSegment(newSegmentChild, oldSegmentChild)\n    ) {\n      if (\n        oldCacheNodeChild !== undefined &&\n        oldRouterStateChild !== undefined\n      ) {\n        // This segment exists in both the old and new trees. Recursively update\n        // the children.\n        taskChild = updateCacheNodeOnNavigation(\n          navigatedAt,\n          oldCacheNodeChild,\n          oldRouterStateChild,\n          newRouterStateChild,\n          didFindRootLayout,\n          prefetchDataChild,\n          prefetchHead,\n          isPrefetchHeadPartial,\n          isSamePageNavigation,\n          newSegmentPathChild,\n          scrollableSegmentsResult\n        )\n      } else {\n        // There's no existing Cache Node for this segment. Switch to the\n        // \"create\" path.\n        taskChild = beginRenderingNewRouteTree(\n          navigatedAt,\n          oldRouterStateChild,\n          newRouterStateChild,\n          oldCacheNodeChild,\n          didFindRootLayout,\n          prefetchDataChild !== undefined ? prefetchDataChild : null,\n          prefetchHead,\n          isPrefetchHeadPartial,\n          newSegmentPathChild,\n          scrollableSegmentsResult\n        )\n      }\n    } else {\n      // This is a new tree. Switch to the \"create\" path.\n      taskChild = beginRenderingNewRouteTree(\n        navigatedAt,\n        oldRouterStateChild,\n        newRouterStateChild,\n        oldCacheNodeChild,\n        didFindRootLayout,\n        prefetchDataChild !== undefined ? prefetchDataChild : null,\n        prefetchHead,\n        isPrefetchHeadPartial,\n        newSegmentPathChild,\n        scrollableSegmentsResult\n      )\n    }\n\n    if (taskChild !== null) {\n      // Recursively propagate up the child tasks.\n\n      if (taskChild.route === null) {\n        // One of the child tasks discovered a change to the root layout.\n        // Immediately unwind from this recursive traversal.\n        return MPA_NAVIGATION_TASK\n      }\n\n      if (taskChildren === null) {\n        taskChildren = new Map()\n      }\n      taskChildren.set(parallelRouteKey, taskChild)\n      const newCacheNodeChild = taskChild.node\n      if (newCacheNodeChild !== null) {\n        const newSegmentMapChild: ChildSegmentMap = new Map(oldSegmentMapChild)\n        newSegmentMapChild.set(newSegmentKeyChild, newCacheNodeChild)\n        prefetchParallelRoutes.set(parallelRouteKey, newSegmentMapChild)\n      }\n\n      // The child tree's route state may be different from the prefetched\n      // route sent by the server. We need to clone it as we traverse back up\n      // the tree.\n      const taskChildRoute = taskChild.route\n      patchedRouterStateChildren[parallelRouteKey] = taskChildRoute\n\n      const dynamicRequestTreeChild = taskChild.dynamicRequestTree\n      if (dynamicRequestTreeChild !== null) {\n        // Something in the child tree is dynamic.\n        needsDynamicRequest = true\n        dynamicRequestTreeChildren[parallelRouteKey] = dynamicRequestTreeChild\n      } else {\n        dynamicRequestTreeChildren[parallelRouteKey] = taskChildRoute\n      }\n    } else {\n      // The child didn't change. We can use the prefetched router state.\n      patchedRouterStateChildren[parallelRouteKey] = newRouterStateChild\n      dynamicRequestTreeChildren[parallelRouteKey] = newRouterStateChild\n    }\n  }\n\n  if (taskChildren === null) {\n    // No new tasks were spawned.\n    return null\n  }\n\n  const newCacheNode: ReadyCacheNode = {\n    lazyData: null,\n    rsc: oldCacheNode.rsc,\n    // We intentionally aren't updating the prefetchRsc field, since this node\n    // is already part of the current tree, because it would be weird for\n    // prefetch data to be newer than the final data. It probably won't ever be\n    // observable anyway, but it could happen if the segment is unmounted then\n    // mounted again, because LayoutRouter will momentarily switch to rendering\n    // prefetchRsc, via useDeferredValue.\n    prefetchRsc: oldCacheNode.prefetchRsc,\n    head: oldCacheNode.head,\n    prefetchHead: oldCacheNode.prefetchHead,\n    loading: oldCacheNode.loading,\n\n    // Everything is cloned except for the children, which we computed above.\n    parallelRoutes: prefetchParallelRoutes,\n\n    navigatedAt,\n  }\n\n  return {\n    // Return a cloned copy of the router state with updated children.\n    route: patchRouterStateWithNewChildren(\n      newRouterState,\n      patchedRouterStateChildren\n    ),\n    node: newCacheNode,\n    dynamicRequestTree: needsDynamicRequest\n      ? patchRouterStateWithNewChildren(\n          newRouterState,\n          dynamicRequestTreeChildren\n        )\n      : null,\n    children: taskChildren,\n  }\n}\n\nfunction beginRenderingNewRouteTree(\n  navigatedAt: number,\n  oldRouterState: FlightRouterState | void,\n  newRouterState: FlightRouterState,\n  existingCacheNode: CacheNode | void,\n  didFindRootLayout: boolean,\n  prefetchData: CacheNodeSeedData | null,\n  possiblyPartialPrefetchHead: HeadData | null,\n  isPrefetchHeadPartial: boolean,\n  segmentPath: FlightSegmentPath,\n  scrollableSegmentsResult: Array<FlightSegmentPath>\n): Task {\n  if (!didFindRootLayout) {\n    // The route tree changed before we reached a layout. (The highest-level\n    // layout in a route tree is referred to as the \"root\" layout.) This could\n    // mean that we're navigating between two different root layouts. When this\n    // happens, we perform a full-page (MPA-style) navigation.\n    //\n    // However, the algorithm for deciding where to start rendering a route\n    // (i.e. the one performed in order to reach this function) is stricter\n    // than the one used to detect a change in the root layout. So just because\n    // we're re-rendering a segment outside of the root layout does not mean we\n    // should trigger a full-page navigation.\n    //\n    // Specifically, we handle dynamic parameters differently: two segments are\n    // considered the same even if their parameter values are different.\n    //\n    // Refer to isNavigatingToNewRootLayout for details.\n    //\n    // Note that we only have to perform this extra traversal if we didn't\n    // already discover a root layout in the part of the tree that is unchanged.\n    // In the common case, this branch is skipped completely.\n    if (\n      oldRouterState === undefined ||\n      isNavigatingToNewRootLayout(oldRouterState, newRouterState)\n    ) {\n      // The root layout changed. Perform a full-page navigation.\n      return MPA_NAVIGATION_TASK\n    }\n  }\n  return createCacheNodeOnNavigation(\n    navigatedAt,\n    newRouterState,\n    existingCacheNode,\n    prefetchData,\n    possiblyPartialPrefetchHead,\n    isPrefetchHeadPartial,\n    segmentPath,\n    scrollableSegmentsResult\n  )\n}\n\nfunction createCacheNodeOnNavigation(\n  navigatedAt: number,\n  routerState: FlightRouterState,\n  existingCacheNode: CacheNode | void,\n  prefetchData: CacheNodeSeedData | null,\n  possiblyPartialPrefetchHead: HeadData | null,\n  isPrefetchHeadPartial: boolean,\n  segmentPath: FlightSegmentPath,\n  scrollableSegmentsResult: Array<FlightSegmentPath>\n): SPANavigationTask {\n  // Same traversal as updateCacheNodeNavigation, but we switch to this path\n  // once we reach the part of the tree that was not in the previous route. We\n  // don't need to diff against the old tree, we just need to create a new one.\n\n  // The head is assigned to every leaf segment delivered by the server. Based\n  // on corresponding logic in fill-lazy-items-till-leaf-with-head.ts\n  const routerStateChildren = routerState[1]\n  const isLeafSegment = Object.keys(routerStateChildren).length === 0\n\n  // Even we're rendering inside the \"new\" part of the target tree, we may have\n  // a locally cached segment that we can reuse. This may come from either 1)\n  // the CacheNode tree, which lives in React state and is populated by previous\n  // navigations; or 2) the prefetch cache, which is a separate cache that is\n  // populated by prefetches.\n  let rsc: React.ReactNode\n  let loading: LoadingModuleData | Promise<LoadingModuleData>\n  let head: HeadData | null\n  let cacheNodeNavigatedAt: number\n  if (\n    existingCacheNode !== undefined &&\n    // DYNAMIC_STALETIME_MS defaults to 0, but it can be increased using\n    // the experimental.staleTimes.dynamic config. When set, we'll avoid\n    // refetching dynamic data if it was fetched within the given threshold.\n    existingCacheNode.navigatedAt + DYNAMIC_STALETIME_MS > navigatedAt\n  ) {\n    // We have an existing CacheNode for this segment, and it's not stale. We\n    // should reuse it rather than request a new one.\n    rsc = existingCacheNode.rsc\n    loading = existingCacheNode.loading\n    head = existingCacheNode.head\n\n    // Don't update the navigatedAt timestamp, since we're reusing stale data.\n    cacheNodeNavigatedAt = existingCacheNode.navigatedAt\n  } else if (prefetchData !== null) {\n    // There's no existing CacheNode for this segment, but we do have prefetch\n    // data. If the prefetch data is fully static (i.e. does not contain any\n    // dynamic holes), we don't need to request it from the server.\n    rsc = prefetchData[1]\n    loading = prefetchData[3]\n    head = isLeafSegment ? possiblyPartialPrefetchHead : null\n    // Even though we're accessing the data from the prefetch cache, this is\n    // conceptually a new segment, not a reused one. So we should update the\n    // navigatedAt timestamp.\n    cacheNodeNavigatedAt = navigatedAt\n    const isPrefetchRscPartial = prefetchData[4]\n    if (\n      // Check if the segment data is partial\n      isPrefetchRscPartial ||\n      // Check if the head is partial (only relevant if this is a leaf segment)\n      (isPrefetchHeadPartial && isLeafSegment)\n    ) {\n      // We only have partial data from this segment. Like missing segments, we\n      // must request the full data from the server.\n      return spawnPendingTask(\n        navigatedAt,\n        routerState,\n        prefetchData,\n        possiblyPartialPrefetchHead,\n        isPrefetchHeadPartial,\n        segmentPath,\n        scrollableSegmentsResult\n      )\n    } else {\n      // The prefetch data is fully static, so we can omit it from the\n      // navigation request.\n    }\n  } else {\n    // There's no prefetch for this segment. Everything from this point will be\n    // requested from the server, even if there are static children below it.\n    // Create a terminal task node that will later be fulfilled by\n    // server response.\n    return spawnPendingTask(\n      navigatedAt,\n      routerState,\n      null,\n      possiblyPartialPrefetchHead,\n      isPrefetchHeadPartial,\n      segmentPath,\n      scrollableSegmentsResult\n    )\n  }\n\n  // We already have a full segment we can render, so we don't need to request a\n  // new one from the server. Keep traversing down the tree until we reach\n  // something that requires a dynamic request.\n  const prefetchDataChildren = prefetchData !== null ? prefetchData[2] : null\n  const taskChildren = new Map()\n  const existingCacheNodeChildren =\n    existingCacheNode !== undefined ? existingCacheNode.parallelRoutes : null\n  const cacheNodeChildren = new Map(existingCacheNodeChildren)\n  let dynamicRequestTreeChildren: {\n    [parallelRouteKey: string]: FlightRouterState\n  } = {}\n  let needsDynamicRequest = false\n  if (isLeafSegment) {\n    // The segment path of every leaf segment (i.e. page) is collected into\n    // a result array. This is used by the LayoutRouter to scroll to ensure that\n    // new pages are visible after a navigation.\n    // TODO: We should use a string to represent the segment path instead of\n    // an array. We already use a string representation for the path when\n    // accessing the Segment Cache, so we can use the same one.\n    scrollableSegmentsResult.push(segmentPath)\n  } else {\n    for (let parallelRouteKey in routerStateChildren) {\n      const routerStateChild: FlightRouterState =\n        routerStateChildren[parallelRouteKey]\n      const prefetchDataChild: CacheNodeSeedData | void | null =\n        prefetchDataChildren !== null\n          ? prefetchDataChildren[parallelRouteKey]\n          : null\n      const existingSegmentMapChild =\n        existingCacheNodeChildren !== null\n          ? existingCacheNodeChildren.get(parallelRouteKey)\n          : undefined\n      const segmentChild = routerStateChild[0]\n      const segmentPathChild = segmentPath.concat([\n        parallelRouteKey,\n        segmentChild,\n      ])\n      const segmentKeyChild = createRouterCacheKey(segmentChild)\n\n      const existingCacheNodeChild =\n        existingSegmentMapChild !== undefined\n          ? existingSegmentMapChild.get(segmentKeyChild)\n          : undefined\n\n      const taskChild = createCacheNodeOnNavigation(\n        navigatedAt,\n        routerStateChild,\n        existingCacheNodeChild,\n        prefetchDataChild,\n        possiblyPartialPrefetchHead,\n        isPrefetchHeadPartial,\n        segmentPathChild,\n        scrollableSegmentsResult\n      )\n      taskChildren.set(parallelRouteKey, taskChild)\n      const dynamicRequestTreeChild = taskChild.dynamicRequestTree\n      if (dynamicRequestTreeChild !== null) {\n        // Something in the child tree is dynamic.\n        needsDynamicRequest = true\n        dynamicRequestTreeChildren[parallelRouteKey] = dynamicRequestTreeChild\n      } else {\n        dynamicRequestTreeChildren[parallelRouteKey] = routerStateChild\n      }\n      const newCacheNodeChild = taskChild.node\n      if (newCacheNodeChild !== null) {\n        const newSegmentMapChild: ChildSegmentMap = new Map()\n        newSegmentMapChild.set(segmentKeyChild, newCacheNodeChild)\n        cacheNodeChildren.set(parallelRouteKey, newSegmentMapChild)\n      }\n    }\n  }\n\n  return {\n    // Since we're inside a new route tree, unlike the\n    // `updateCacheNodeOnNavigation` path, the router state on the children\n    // tasks is always the same as the router state we pass in. So we don't need\n    // to clone/modify it.\n    route: routerState,\n    node: {\n      lazyData: null,\n      // Since this segment is already full, we don't need to use the\n      // `prefetchRsc` field.\n      rsc,\n      prefetchRsc: null,\n      head,\n      prefetchHead: null,\n      loading,\n      parallelRoutes: cacheNodeChildren,\n      navigatedAt: cacheNodeNavigatedAt,\n    },\n    dynamicRequestTree: needsDynamicRequest\n      ? patchRouterStateWithNewChildren(routerState, dynamicRequestTreeChildren)\n      : null,\n    children: taskChildren,\n  }\n}\n\nfunction patchRouterStateWithNewChildren(\n  baseRouterState: FlightRouterState,\n  newChildren: { [parallelRouteKey: string]: FlightRouterState }\n): FlightRouterState {\n  const clone: FlightRouterState = [baseRouterState[0], newChildren]\n  // Based on equivalent logic in apply-router-state-patch-to-tree, but should\n  // confirm whether we need to copy all of these fields. Not sure the server\n  // ever sends, e.g. the refetch marker.\n  if (2 in baseRouterState) {\n    clone[2] = baseRouterState[2]\n  }\n  if (3 in baseRouterState) {\n    clone[3] = baseRouterState[3]\n  }\n  if (4 in baseRouterState) {\n    clone[4] = baseRouterState[4]\n  }\n  return clone\n}\n\nfunction spawnPendingTask(\n  navigatedAt: number,\n  routerState: FlightRouterState,\n  prefetchData: CacheNodeSeedData | null,\n  prefetchHead: HeadData | null,\n  isPrefetchHeadPartial: boolean,\n  segmentPath: FlightSegmentPath,\n  scrollableSegmentsResult: Array<FlightSegmentPath>\n): SPANavigationTask {\n  // Create a task that will later be fulfilled by data from the server.\n\n  // Clone the prefetched route tree and the `refetch` marker to it. We'll send\n  // this to the server so it knows where to start rendering.\n  const dynamicRequestTree = patchRouterStateWithNewChildren(\n    routerState,\n    routerState[1]\n  )\n  dynamicRequestTree[3] = 'refetch'\n\n  const newTask: Task = {\n    route: routerState,\n\n    // Corresponds to the part of the route that will be rendered on the server.\n    node: createPendingCacheNode(\n      navigatedAt,\n      routerState,\n      prefetchData,\n      prefetchHead,\n      isPrefetchHeadPartial,\n      segmentPath,\n      scrollableSegmentsResult\n    ),\n    // Because this is non-null, and it gets propagated up through the parent\n    // tasks, the root task will know that it needs to perform a server request.\n    dynamicRequestTree,\n    children: null,\n  }\n  return newTask\n}\n\nfunction spawnReusedTask(reusedRouterState: FlightRouterState): Task {\n  // Create a task that reuses an existing segment, e.g. when reusing\n  // the current active segment in place of a default route.\n  return {\n    route: reusedRouterState,\n    node: null,\n    dynamicRequestTree: null,\n    children: null,\n  }\n}\n\n// Writes a dynamic server response into the tree created by\n// updateCacheNodeOnNavigation. All pending promises that were spawned by the\n// navigation will be resolved, either with dynamic data from the server, or\n// `null` to indicate that the data is missing.\n//\n// A `null` value will trigger a lazy fetch during render, which will then patch\n// up the tree using the same mechanism as the non-PPR implementation\n// (serverPatchReducer).\n//\n// Usually, the server will respond with exactly the subset of data that we're\n// waiting for — everything below the nearest shared layout. But technically,\n// the server can return anything it wants.\n//\n// This does _not_ create a new tree; it modifies the existing one in place.\n// Which means it must follow the Suspense rules of cache safety.\nexport function listenForDynamicRequest(\n  task: SPANavigationTask,\n  responsePromise: Promise<FetchServerResponseResult>\n) {\n  responsePromise.then(\n    ({ flightData }: FetchServerResponseResult) => {\n      if (typeof flightData === 'string') {\n        // Happens when navigating to page in `pages` from `app`. We shouldn't\n        // get here because should have already handled this during\n        // the prefetch.\n        return\n      }\n      for (const normalizedFlightData of flightData) {\n        const {\n          segmentPath,\n          tree: serverRouterState,\n          seedData: dynamicData,\n          head: dynamicHead,\n        } = normalizedFlightData\n\n        if (!dynamicData) {\n          // This shouldn't happen. PPR should always send back a response.\n          // However, `FlightDataPath` is a shared type and the pre-PPR handling of\n          // this might return null.\n          continue\n        }\n\n        writeDynamicDataIntoPendingTask(\n          task,\n          segmentPath,\n          serverRouterState,\n          dynamicData,\n          dynamicHead\n        )\n      }\n\n      // Now that we've exhausted all the data we received from the server, if\n      // there are any remaining pending tasks in the tree, abort them now.\n      // If there's any missing data, it will trigger a lazy fetch.\n      abortTask(task, null)\n    },\n    (error: any) => {\n      // This will trigger an error during render\n      abortTask(task, error)\n    }\n  )\n}\n\nfunction writeDynamicDataIntoPendingTask(\n  rootTask: SPANavigationTask,\n  segmentPath: FlightSegmentPath,\n  serverRouterState: FlightRouterState,\n  dynamicData: CacheNodeSeedData,\n  dynamicHead: HeadData\n) {\n  // The data sent by the server represents only a subtree of the app. We need\n  // to find the part of the task tree that matches the server response, and\n  // fulfill it using the dynamic data.\n  //\n  // segmentPath represents the parent path of subtree. It's a repeating pattern\n  // of parallel route key and segment:\n  //\n  //   [string, Segment, string, Segment, string, Segment, ...]\n  //\n  // Iterate through the path and finish any tasks that match this payload.\n  let task = rootTask\n  for (let i = 0; i < segmentPath.length; i += 2) {\n    const parallelRouteKey: string = segmentPath[i]\n    const segment: Segment = segmentPath[i + 1]\n    const taskChildren = task.children\n    if (taskChildren !== null) {\n      const taskChild = taskChildren.get(parallelRouteKey)\n      if (taskChild !== undefined) {\n        const taskSegment = taskChild.route[0]\n        if (matchSegment(segment, taskSegment)) {\n          // Found a match for this task. Keep traversing down the task tree.\n          task = taskChild\n          continue\n        }\n      }\n    }\n    // We didn't find a child task that matches the server data. Exit. We won't\n    // abort the task, though, because a different FlightDataPath may be able to\n    // fulfill it (see loop in listenForDynamicRequest). We only abort tasks\n    // once we've run out of data.\n    return\n  }\n\n  finishTaskUsingDynamicDataPayload(\n    task,\n    serverRouterState,\n    dynamicData,\n    dynamicHead\n  )\n}\n\nfunction finishTaskUsingDynamicDataPayload(\n  task: SPANavigationTask,\n  serverRouterState: FlightRouterState,\n  dynamicData: CacheNodeSeedData,\n  dynamicHead: HeadData\n) {\n  if (task.dynamicRequestTree === null) {\n    // Everything in this subtree is already complete. Bail out.\n    return\n  }\n\n  // dynamicData may represent a larger subtree than the task. Before we can\n  // finish the task, we need to line them up.\n  const taskChildren = task.children\n  const taskNode = task.node\n  if (taskChildren === null) {\n    // We've reached the leaf node of the pending task. The server data tree\n    // lines up the pending Cache Node tree. We can now switch to the\n    // normal algorithm.\n    if (taskNode !== null) {\n      finishPendingCacheNode(\n        taskNode,\n        task.route,\n        serverRouterState,\n        dynamicData,\n        dynamicHead\n      )\n      // Set this to null to indicate that this task is now complete.\n      task.dynamicRequestTree = null\n    }\n    return\n  }\n  // The server returned more data than we need to finish the task. Skip over\n  // the extra segments until we reach the leaf task node.\n  const serverChildren = serverRouterState[1]\n  const dynamicDataChildren = dynamicData[2]\n\n  for (const parallelRouteKey in serverRouterState) {\n    const serverRouterStateChild: FlightRouterState =\n      serverChildren[parallelRouteKey]\n    const dynamicDataChild: CacheNodeSeedData | null | void =\n      dynamicDataChildren[parallelRouteKey]\n\n    const taskChild = taskChildren.get(parallelRouteKey)\n    if (taskChild !== undefined) {\n      const taskSegment = taskChild.route[0]\n      if (\n        matchSegment(serverRouterStateChild[0], taskSegment) &&\n        dynamicDataChild !== null &&\n        dynamicDataChild !== undefined\n      ) {\n        // Found a match for this task. Keep traversing down the task tree.\n        return finishTaskUsingDynamicDataPayload(\n          taskChild,\n          serverRouterStateChild,\n          dynamicDataChild,\n          dynamicHead\n        )\n      }\n    }\n    // We didn't find a child task that matches the server data. We won't abort\n    // the task, though, because a different FlightDataPath may be able to\n    // fulfill it (see loop in listenForDynamicRequest). We only abort tasks\n    // once we've run out of data.\n  }\n}\n\nfunction createPendingCacheNode(\n  navigatedAt: number,\n  routerState: FlightRouterState,\n  prefetchData: CacheNodeSeedData | null,\n  prefetchHead: HeadData | null,\n  isPrefetchHeadPartial: boolean,\n  segmentPath: FlightSegmentPath,\n  scrollableSegmentsResult: Array<FlightSegmentPath>\n): ReadyCacheNode {\n  const routerStateChildren = routerState[1]\n  const prefetchDataChildren = prefetchData !== null ? prefetchData[2] : null\n\n  const parallelRoutes = new Map()\n  for (let parallelRouteKey in routerStateChildren) {\n    const routerStateChild: FlightRouterState =\n      routerStateChildren[parallelRouteKey]\n    const prefetchDataChild: CacheNodeSeedData | null | void =\n      prefetchDataChildren !== null\n        ? prefetchDataChildren[parallelRouteKey]\n        : null\n\n    const segmentChild = routerStateChild[0]\n    const segmentPathChild = segmentPath.concat([\n      parallelRouteKey,\n      segmentChild,\n    ])\n    const segmentKeyChild = createRouterCacheKey(segmentChild)\n\n    const newCacheNodeChild = createPendingCacheNode(\n      navigatedAt,\n      routerStateChild,\n      prefetchDataChild === undefined ? null : prefetchDataChild,\n      prefetchHead,\n      isPrefetchHeadPartial,\n      segmentPathChild,\n      scrollableSegmentsResult\n    )\n\n    const newSegmentMapChild: ChildSegmentMap = new Map()\n    newSegmentMapChild.set(segmentKeyChild, newCacheNodeChild)\n    parallelRoutes.set(parallelRouteKey, newSegmentMapChild)\n  }\n\n  // The head is assigned to every leaf segment delivered by the server. Based\n  // on corresponding logic in fill-lazy-items-till-leaf-with-head.ts\n  const isLeafSegment = parallelRoutes.size === 0\n\n  if (isLeafSegment) {\n    // The segment path of every leaf segment (i.e. page) is collected into\n    // a result array. This is used by the LayoutRouter to scroll to ensure that\n    // new pages are visible after a navigation.\n    // TODO: We should use a string to represent the segment path instead of\n    // an array. We already use a string representation for the path when\n    // accessing the Segment Cache, so we can use the same one.\n    scrollableSegmentsResult.push(segmentPath)\n  }\n\n  const maybePrefetchRsc = prefetchData !== null ? prefetchData[1] : null\n  const maybePrefetchLoading = prefetchData !== null ? prefetchData[3] : null\n  return {\n    lazyData: null,\n    parallelRoutes: parallelRoutes,\n\n    prefetchRsc: maybePrefetchRsc !== undefined ? maybePrefetchRsc : null,\n    prefetchHead: isLeafSegment ? prefetchHead : [null, null],\n\n    // TODO: Technically, a loading boundary could contain dynamic data. We must\n    // have separate `loading` and `prefetchLoading` fields to handle this, like\n    // we do for the segment data and head.\n    loading: maybePrefetchLoading !== undefined ? maybePrefetchLoading : null,\n\n    // Create a deferred promise. This will be fulfilled once the dynamic\n    // response is received from the server.\n    rsc: createDeferredRsc() as React.ReactNode,\n    head: isLeafSegment ? (createDeferredRsc() as React.ReactNode) : null,\n\n    navigatedAt,\n  }\n}\n\nfunction finishPendingCacheNode(\n  cacheNode: CacheNode,\n  taskState: FlightRouterState,\n  serverState: FlightRouterState,\n  dynamicData: CacheNodeSeedData,\n  dynamicHead: HeadData\n): void {\n  // Writes a dynamic response into an existing Cache Node tree. This does _not_\n  // create a new tree, it updates the existing tree in-place. So it must follow\n  // the Suspense rules of cache safety — it can resolve pending promises, but\n  // it cannot overwrite existing data. It can add segments to the tree (because\n  // a missing segment will cause the layout router to suspend).\n  // but it cannot delete them.\n  //\n  // We must resolve every promise in the tree, or else it will suspend\n  // indefinitely. If we did not receive data for a segment, we will resolve its\n  // data promise to `null` to trigger a lazy fetch during render.\n  const taskStateChildren = taskState[1]\n  const serverStateChildren = serverState[1]\n  const dataChildren = dynamicData[2]\n\n  // The router state that we traverse the tree with (taskState) is the same one\n  // that we used to construct the pending Cache Node tree. That way we're sure\n  // to resolve all the pending promises.\n  const parallelRoutes = cacheNode.parallelRoutes\n  for (let parallelRouteKey in taskStateChildren) {\n    const taskStateChild: FlightRouterState =\n      taskStateChildren[parallelRouteKey]\n    const serverStateChild: FlightRouterState | void =\n      serverStateChildren[parallelRouteKey]\n    const dataChild: CacheNodeSeedData | null | void =\n      dataChildren[parallelRouteKey]\n\n    const segmentMapChild = parallelRoutes.get(parallelRouteKey)\n    const taskSegmentChild = taskStateChild[0]\n    const taskSegmentKeyChild = createRouterCacheKey(taskSegmentChild)\n\n    const cacheNodeChild =\n      segmentMapChild !== undefined\n        ? segmentMapChild.get(taskSegmentKeyChild)\n        : undefined\n\n    if (cacheNodeChild !== undefined) {\n      if (\n        serverStateChild !== undefined &&\n        matchSegment(taskSegmentChild, serverStateChild[0])\n      ) {\n        if (dataChild !== undefined && dataChild !== null) {\n          // This is the happy path. Recursively update all the children.\n          finishPendingCacheNode(\n            cacheNodeChild,\n            taskStateChild,\n            serverStateChild,\n            dataChild,\n            dynamicHead\n          )\n        } else {\n          // The server never returned data for this segment. Trigger a lazy\n          // fetch during render. This shouldn't happen because the Route Tree\n          // and the Seed Data tree sent by the server should always be the same\n          // shape when part of the same server response.\n          abortPendingCacheNode(taskStateChild, cacheNodeChild, null)\n        }\n      } else {\n        // The server never returned data for this segment. Trigger a lazy\n        // fetch during render.\n        abortPendingCacheNode(taskStateChild, cacheNodeChild, null)\n      }\n    } else {\n      // The server response matches what was expected to receive, but there's\n      // no matching Cache Node in the task tree. This is a bug in the\n      // implementation because we should have created a node for every\n      // segment in the tree that's associated with this task.\n    }\n  }\n\n  // Use the dynamic data from the server to fulfill the deferred RSC promise\n  // on the Cache Node.\n  const rsc = cacheNode.rsc\n  const dynamicSegmentData = dynamicData[1]\n  if (rsc === null) {\n    // This is a lazy cache node. We can overwrite it. This is only safe\n    // because we know that the LayoutRouter suspends if `rsc` is `null`.\n    cacheNode.rsc = dynamicSegmentData\n  } else if (isDeferredRsc(rsc)) {\n    // This is a deferred RSC promise. We can fulfill it with the data we just\n    // received from the server. If it was already resolved by a different\n    // navigation, then this does nothing because we can't overwrite data.\n    rsc.resolve(dynamicSegmentData)\n  } else {\n    // This is not a deferred RSC promise, nor is it empty, so it must have\n    // been populated by a different navigation. We must not overwrite it.\n  }\n\n  // Check if this is a leaf segment. If so, it will have a `head` property with\n  // a pending promise that needs to be resolved with the dynamic head from\n  // the server.\n  const head = cacheNode.head\n  if (isDeferredRsc(head)) {\n    head.resolve(dynamicHead)\n  }\n}\n\nexport function abortTask(task: SPANavigationTask, error: any): void {\n  const cacheNode = task.node\n  if (cacheNode === null) {\n    // This indicates the task is already complete.\n    return\n  }\n\n  const taskChildren = task.children\n  if (taskChildren === null) {\n    // Reached the leaf task node. This is the root of a pending cache\n    // node tree.\n    abortPendingCacheNode(task.route, cacheNode, error)\n  } else {\n    // This is an intermediate task node. Keep traversing until we reach a\n    // task node with no children. That will be the root of the cache node tree\n    // that needs to be resolved.\n    for (const taskChild of taskChildren.values()) {\n      abortTask(taskChild, error)\n    }\n  }\n\n  // Set this to null to indicate that this task is now complete.\n  task.dynamicRequestTree = null\n}\n\nfunction abortPendingCacheNode(\n  routerState: FlightRouterState,\n  cacheNode: CacheNode,\n  error: any\n): void {\n  // For every pending segment in the tree, resolve its `rsc` promise to `null`\n  // to trigger a lazy fetch during render.\n  //\n  // Or, if an error object is provided, it will error instead.\n  const routerStateChildren = routerState[1]\n  const parallelRoutes = cacheNode.parallelRoutes\n  for (let parallelRouteKey in routerStateChildren) {\n    const routerStateChild: FlightRouterState =\n      routerStateChildren[parallelRouteKey]\n    const segmentMapChild = parallelRoutes.get(parallelRouteKey)\n    if (segmentMapChild === undefined) {\n      // This shouldn't happen because we're traversing the same tree that was\n      // used to construct the cache nodes in the first place.\n      continue\n    }\n    const segmentChild = routerStateChild[0]\n    const segmentKeyChild = createRouterCacheKey(segmentChild)\n    const cacheNodeChild = segmentMapChild.get(segmentKeyChild)\n    if (cacheNodeChild !== undefined) {\n      abortPendingCacheNode(routerStateChild, cacheNodeChild, error)\n    } else {\n      // This shouldn't happen because we're traversing the same tree that was\n      // used to construct the cache nodes in the first place.\n    }\n  }\n  const rsc = cacheNode.rsc\n  if (isDeferredRsc(rsc)) {\n    if (error === null) {\n      // This will trigger a lazy fetch during render.\n      rsc.resolve(null)\n    } else {\n      // This will trigger an error during rendering.\n      rsc.reject(error)\n    }\n  }\n\n  // Check if this is a leaf segment. If so, it will have a `head` property with\n  // a pending promise that needs to be resolved. If an error was provided, we\n  // will not resolve it with an error, since this is rendered at the root of\n  // the app. We want the segment to error, not the entire app.\n  const head = cacheNode.head\n  if (isDeferredRsc(head)) {\n    head.resolve(null)\n  }\n}\n\nexport function updateCacheNodeOnPopstateRestoration(\n  oldCacheNode: CacheNode,\n  routerState: FlightRouterState\n): ReadyCacheNode {\n  // A popstate navigation reads data from the local cache. It does not issue\n  // new network requests (unless the cache entries have been evicted). So, we\n  // update the cache to drop the prefetch data for any segment whose dynamic\n  // data was already received. This prevents an unnecessary flash back to PPR\n  // state during a back/forward navigation.\n  //\n  // This function clones the entire cache node tree and sets the `prefetchRsc`\n  // field to `null` to prevent it from being rendered. We can't mutate the node\n  // in place because this is a concurrent data structure.\n\n  const routerStateChildren = routerState[1]\n  const oldParallelRoutes = oldCacheNode.parallelRoutes\n  const newParallelRoutes = new Map(oldParallelRoutes)\n  for (let parallelRouteKey in routerStateChildren) {\n    const routerStateChild: FlightRouterState =\n      routerStateChildren[parallelRouteKey]\n    const segmentChild = routerStateChild[0]\n    const segmentKeyChild = createRouterCacheKey(segmentChild)\n    const oldSegmentMapChild = oldParallelRoutes.get(parallelRouteKey)\n    if (oldSegmentMapChild !== undefined) {\n      const oldCacheNodeChild = oldSegmentMapChild.get(segmentKeyChild)\n      if (oldCacheNodeChild !== undefined) {\n        const newCacheNodeChild = updateCacheNodeOnPopstateRestoration(\n          oldCacheNodeChild,\n          routerStateChild\n        )\n        const newSegmentMapChild = new Map(oldSegmentMapChild)\n        newSegmentMapChild.set(segmentKeyChild, newCacheNodeChild)\n        newParallelRoutes.set(parallelRouteKey, newSegmentMapChild)\n      }\n    }\n  }\n\n  // Only show prefetched data if the dynamic data is still pending.\n  //\n  // Tehnically, what we're actually checking is whether the dynamic network\n  // response was received. But since it's a streaming response, this does not\n  // mean that all the dynamic data has fully streamed in. It just means that\n  // _some_ of the dynamic data was received. But as a heuristic, we assume that\n  // the rest dynamic data will stream in quickly, so it's still better to skip\n  // the prefetch state.\n  const rsc = oldCacheNode.rsc\n  const shouldUsePrefetch = isDeferredRsc(rsc) && rsc.status === 'pending'\n\n  return {\n    lazyData: null,\n    rsc,\n    head: oldCacheNode.head,\n\n    prefetchHead: shouldUsePrefetch ? oldCacheNode.prefetchHead : [null, null],\n    prefetchRsc: shouldUsePrefetch ? oldCacheNode.prefetchRsc : null,\n    loading: oldCacheNode.loading,\n\n    // These are the cloned children we computed above\n    parallelRoutes: newParallelRoutes,\n\n    navigatedAt: oldCacheNode.navigatedAt,\n  }\n}\n\nconst DEFERRED = Symbol()\n\ntype PendingDeferredRsc = Promise<React.ReactNode> & {\n  status: 'pending'\n  resolve: (value: React.ReactNode) => void\n  reject: (error: any) => void\n  tag: Symbol\n}\n\ntype FulfilledDeferredRsc = Promise<React.ReactNode> & {\n  status: 'fulfilled'\n  value: React.ReactNode\n  resolve: (value: React.ReactNode) => void\n  reject: (error: any) => void\n  tag: Symbol\n}\n\ntype RejectedDeferredRsc = Promise<React.ReactNode> & {\n  status: 'rejected'\n  reason: any\n  resolve: (value: React.ReactNode) => void\n  reject: (error: any) => void\n  tag: Symbol\n}\n\ntype DeferredRsc =\n  | PendingDeferredRsc\n  | FulfilledDeferredRsc\n  | RejectedDeferredRsc\n\n// This type exists to distinguish a DeferredRsc from a Flight promise. It's a\n// compromise to avoid adding an extra field on every Cache Node, which would be\n// awkward because the pre-PPR parts of codebase would need to account for it,\n// too. We can remove it once type Cache Node type is more settled.\nfunction isDeferredRsc(value: any): value is DeferredRsc {\n  return value && value.tag === DEFERRED\n}\n\nfunction createDeferredRsc(): PendingDeferredRsc {\n  let resolve: any\n  let reject: any\n  const pendingRsc = new Promise<React.ReactNode>((res, rej) => {\n    resolve = res\n    reject = rej\n  }) as PendingDeferredRsc\n  pendingRsc.status = 'pending'\n  pendingRsc.resolve = (value: React.ReactNode) => {\n    if (pendingRsc.status === 'pending') {\n      const fulfilledRsc: FulfilledDeferredRsc = pendingRsc as any\n      fulfilledRsc.status = 'fulfilled'\n      fulfilledRsc.value = value\n      resolve(value)\n    }\n  }\n  pendingRsc.reject = (error: any) => {\n    if (pendingRsc.status === 'pending') {\n      const rejectedRsc: RejectedDeferredRsc = pendingRsc as any\n      rejectedRsc.status = 'rejected'\n      rejectedRsc.reason = error\n      reject(error)\n    }\n  }\n  pendingRsc.tag = DEFERRED\n  return pendingRsc\n}\n","import type {\n  CacheNodeSeedData,\n  FlightRouterState,\n} from '../../../server/app-render/types'\nimport type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport {\n  addSearchParamsIfPageSegment,\n  PAGE_SEGMENT_KEY,\n} from '../../../shared/lib/segment'\nimport type { NormalizedFlightData } from '../../flight-data-helpers'\nimport { createEmptyCacheNode } from '../app-router'\nimport { applyRouterStatePatchToTree } from './apply-router-state-patch-to-tree'\nimport { createHrefFromUrl } from './create-href-from-url'\nimport { createRouterCacheKey } from './create-router-cache-key'\nimport { fillCacheWithNewSubTreeDataButOnlyLoading } from './fill-cache-with-new-subtree-data'\nimport { handleMutable } from './handle-mutable'\nimport type { Mutable, ReadonlyReducerState } from './router-reducer-types'\n\n/**\n * This is a stop-gap until per-segment caching is implemented. It leverages the `aliased` flag that is added\n * to prefetch entries when it's determined that the loading state from that entry should be used for this navigation.\n * This function takes the aliased entry and only applies the loading state to the updated cache node.\n * We should remove this once per-segment fetching is implemented as ideally the prefetch cache will contain a\n * more granular segment map and so the router will be able to simply re-use the loading segment for the new navigation.\n */\nexport function handleAliasedPrefetchEntry(\n  navigatedAt: number,\n  state: ReadonlyReducerState,\n  flightData: string | NormalizedFlightData[],\n  url: URL,\n  mutable: Mutable\n) {\n  let currentTree = state.tree\n  let currentCache = state.cache\n  const href = createHrefFromUrl(url)\n  let applied\n\n  if (typeof flightData === 'string') {\n    return false\n  }\n\n  for (const normalizedFlightData of flightData) {\n    // If the segment doesn't have a loading component, we don't need to do anything.\n    if (!hasLoadingComponentInSeedData(normalizedFlightData.seedData)) {\n      continue\n    }\n\n    let treePatch = normalizedFlightData.tree\n    // Segments are keyed by searchParams (e.g. __PAGE__?{\"foo\":\"bar\"}). We might return a less specific, param-less entry,\n    // so we ensure that the final tree contains the correct searchParams (reflected in the URL) are provided in the updated FlightRouterState tree.\n    // We only do this on the first read, as otherwise we'd be overwriting the searchParams that may have already been set\n    treePatch = addSearchParamsToPageSegments(\n      treePatch,\n      Object.fromEntries(url.searchParams)\n    )\n\n    const { seedData, isRootRender, pathToSegment } = normalizedFlightData\n    // TODO-APP: remove ''\n    const flightSegmentPathWithLeadingEmpty = ['', ...pathToSegment]\n\n    // Segments are keyed by searchParams (e.g. __PAGE__?{\"foo\":\"bar\"}). We might return a less specific, param-less entry,\n    // so we ensure that the final tree contains the correct searchParams (reflected in the URL) are provided in the updated FlightRouterState tree.\n    // We only do this on the first read, as otherwise we'd be overwriting the searchParams that may have already been set\n    treePatch = addSearchParamsToPageSegments(\n      treePatch,\n      Object.fromEntries(url.searchParams)\n    )\n\n    let newTree = applyRouterStatePatchToTree(\n      flightSegmentPathWithLeadingEmpty,\n      currentTree,\n      treePatch,\n      href\n    )\n\n    const newCache = createEmptyCacheNode()\n\n    // The prefetch cache entry was aliased -- this signals that we only fill in the cache with the\n    // loading state and not the actual parallel route seed data.\n    if (isRootRender && seedData) {\n      // Fill in the cache with the new loading / rsc data\n      const rsc = seedData[1]\n      const loading = seedData[3]\n      newCache.loading = loading\n      newCache.rsc = rsc\n\n      // Construct a new tree and apply the aliased loading state for each parallel route\n      fillNewTreeWithOnlyLoadingSegments(\n        navigatedAt,\n        newCache,\n        currentCache,\n        treePatch,\n        seedData\n      )\n    } else {\n      // Copy rsc for the root node of the cache.\n      newCache.rsc = currentCache.rsc\n      newCache.prefetchRsc = currentCache.prefetchRsc\n      newCache.loading = currentCache.loading\n      newCache.parallelRoutes = new Map(currentCache.parallelRoutes)\n\n      // copy the loading state only into the leaf node (the part that changed)\n      fillCacheWithNewSubTreeDataButOnlyLoading(\n        navigatedAt,\n        newCache,\n        currentCache,\n        normalizedFlightData\n      )\n    }\n\n    // If we don't have an updated tree, there's no reason to update the cache, as the tree\n    // dictates what cache nodes to render.\n    if (newTree) {\n      currentTree = newTree\n      currentCache = newCache\n      applied = true\n    }\n  }\n\n  if (!applied) {\n    return false\n  }\n\n  mutable.patchedTree = currentTree\n  mutable.cache = currentCache\n  mutable.canonicalUrl = href\n  mutable.hashFragment = url.hash\n\n  return handleMutable(state, mutable)\n}\n\nfunction hasLoadingComponentInSeedData(seedData: CacheNodeSeedData | null) {\n  if (!seedData) return false\n\n  const parallelRoutes = seedData[2]\n  const loading = seedData[3]\n\n  if (loading) {\n    return true\n  }\n\n  for (const key in parallelRoutes) {\n    if (hasLoadingComponentInSeedData(parallelRoutes[key])) {\n      return true\n    }\n  }\n\n  return false\n}\n\nfunction fillNewTreeWithOnlyLoadingSegments(\n  navigatedAt: number,\n  newCache: CacheNode,\n  existingCache: CacheNode,\n  routerState: FlightRouterState,\n  cacheNodeSeedData: CacheNodeSeedData | null\n) {\n  const isLastSegment = Object.keys(routerState[1]).length === 0\n  if (isLastSegment) {\n    return\n  }\n\n  for (const key in routerState[1]) {\n    const parallelRouteState = routerState[1][key]\n    const segmentForParallelRoute = parallelRouteState[0]\n    const cacheKey = createRouterCacheKey(segmentForParallelRoute)\n\n    const parallelSeedData =\n      cacheNodeSeedData !== null && cacheNodeSeedData[2][key] !== undefined\n        ? cacheNodeSeedData[2][key]\n        : null\n\n    let newCacheNode: CacheNode\n    if (parallelSeedData !== null) {\n      // New data was sent from the server.\n      const rsc = parallelSeedData[1]\n      const loading = parallelSeedData[3]\n      newCacheNode = {\n        lazyData: null,\n        // copy the layout but null the page segment as that's not meant to be used\n        rsc: segmentForParallelRoute.includes(PAGE_SEGMENT_KEY) ? null : rsc,\n        prefetchRsc: null,\n        head: null,\n        prefetchHead: null,\n        parallelRoutes: new Map(),\n        loading,\n        navigatedAt,\n      }\n    } else {\n      // No data available for this node. This will trigger a lazy fetch\n      // during render.\n      newCacheNode = {\n        lazyData: null,\n        rsc: null,\n        prefetchRsc: null,\n        head: null,\n        prefetchHead: null,\n        parallelRoutes: new Map(),\n        loading: null,\n        navigatedAt: -1,\n      }\n    }\n\n    const existingParallelRoutes = newCache.parallelRoutes.get(key)\n    if (existingParallelRoutes) {\n      existingParallelRoutes.set(cacheKey, newCacheNode)\n    } else {\n      newCache.parallelRoutes.set(key, new Map([[cacheKey, newCacheNode]]))\n    }\n\n    fillNewTreeWithOnlyLoadingSegments(\n      navigatedAt,\n      newCacheNode,\n      existingCache,\n      parallelRouteState,\n      parallelSeedData\n    )\n  }\n}\n\n/**\n * Add search params to the page segments in the flight router state\n * Page segments that are associated with search params have a page segment key\n * followed by a query string. This function will add those params to the page segment.\n * This is useful if we return an aliased prefetch entry (ie, won't have search params)\n * but the canonical router URL has search params.\n */\nexport function addSearchParamsToPageSegments(\n  flightRouterState: FlightRouterState,\n  searchParams: Record<string, string | string[] | undefined>\n): FlightRouterState {\n  const [segment, parallelRoutes, ...rest] = flightRouterState\n\n  // If it's a page segment, modify the segment by adding search params\n  if (segment.includes(PAGE_SEGMENT_KEY)) {\n    const newSegment = addSearchParamsIfPageSegment(segment, searchParams)\n    return [newSegment, parallelRoutes, ...rest]\n  }\n\n  // Otherwise, recurse through the parallel routes and return a new tree\n  const updatedParallelRoutes: { [key: string]: FlightRouterState } = {}\n\n  for (const [key, parallelRoute] of Object.entries(parallelRoutes)) {\n    updatedParallelRoutes[key] = addSearchParamsToPageSegments(\n      parallelRoute,\n      searchParams\n    )\n  }\n\n  return [segment, updatedParallelRoutes, ...rest]\n}\n","import type { CacheNode } from '../../../../shared/lib/app-router-context.shared-runtime'\nimport type {\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../../../server/app-render/types'\nimport { fetchServerResponse } from '../fetch-server-response'\nimport { createHrefFromUrl } from '../create-href-from-url'\nimport { invalidateCacheBelowFlightSegmentPath } from '../invalidate-cache-below-flight-segmentpath'\nimport { applyRouterStatePatchToTree } from '../apply-router-state-patch-to-tree'\nimport { shouldHardNavigate } from '../should-hard-navigate'\nimport { isNavigatingToNewRootLayout } from '../is-navigating-to-new-root-layout'\nimport {\n  PrefetchCacheEntryStatus,\n  type Mutable,\n  type NavigateAction,\n  type ReadonlyReducerState,\n  type ReducerState,\n} from '../router-reducer-types'\nimport { handleMutable } from '../handle-mutable'\nimport { applyFlightData } from '../apply-flight-data'\nimport { prefetchQueue } from './prefetch-reducer'\nimport { createEmptyCacheNode } from '../../app-router'\nimport { DEFAULT_SEGMENT_KEY } from '../../../../shared/lib/segment'\nimport { listenForDynamicRequest, startPPRNavigation } from '../ppr-navigations'\nimport {\n  getOrCreatePrefetchCacheEntry,\n  prunePrefetchCache,\n} from '../prefetch-cache-utils'\nimport { clearCacheNodeDataForSegmentPath } from '../clear-cache-node-data-for-segment-path'\nimport { handleAliasedPrefetchEntry } from '../aliased-prefetch-navigations'\nimport {\n  navigate as navigateUsingSegmentCache,\n  NavigationResultTag,\n  type NavigationResult,\n} from '../../segment-cache'\n\nexport function handleExternalUrl(\n  state: ReadonlyReducerState,\n  mutable: Mutable,\n  url: string,\n  pendingPush: boolean\n) {\n  mutable.mpaNavigation = true\n  mutable.canonicalUrl = url\n  mutable.pendingPush = pendingPush\n  mutable.scrollableSegments = undefined\n\n  return handleMutable(state, mutable)\n}\n\nfunction generateSegmentsFromPatch(\n  flightRouterPatch: FlightRouterState\n): FlightSegmentPath[] {\n  const segments: FlightSegmentPath[] = []\n  const [segment, parallelRoutes] = flightRouterPatch\n\n  if (Object.keys(parallelRoutes).length === 0) {\n    return [[segment]]\n  }\n\n  for (const [parallelRouteKey, parallelRoute] of Object.entries(\n    parallelRoutes\n  )) {\n    for (const childSegment of generateSegmentsFromPatch(parallelRoute)) {\n      // If the segment is empty, it means we are at the root of the tree\n      if (segment === '') {\n        segments.push([parallelRouteKey, ...childSegment])\n      } else {\n        segments.push([segment, parallelRouteKey, ...childSegment])\n      }\n    }\n  }\n\n  return segments\n}\n\nfunction triggerLazyFetchForLeafSegments(\n  newCache: CacheNode,\n  currentCache: CacheNode,\n  flightSegmentPath: FlightSegmentPath,\n  treePatch: FlightRouterState\n) {\n  let appliedPatch = false\n\n  newCache.rsc = currentCache.rsc\n  newCache.prefetchRsc = currentCache.prefetchRsc\n  newCache.loading = currentCache.loading\n  newCache.parallelRoutes = new Map(currentCache.parallelRoutes)\n\n  const segmentPathsToFill = generateSegmentsFromPatch(treePatch).map(\n    (segment) => [...flightSegmentPath, ...segment]\n  )\n\n  for (const segmentPaths of segmentPathsToFill) {\n    clearCacheNodeDataForSegmentPath(newCache, currentCache, segmentPaths)\n\n    appliedPatch = true\n  }\n\n  return appliedPatch\n}\n\nfunction handleNavigationResult(\n  url: URL,\n  state: ReadonlyReducerState,\n  mutable: Mutable,\n  pendingPush: boolean,\n  result: NavigationResult\n): ReducerState {\n  switch (result.tag) {\n    case NavigationResultTag.MPA: {\n      // Perform an MPA navigation.\n      const newUrl = result.data\n      return handleExternalUrl(state, mutable, newUrl, pendingPush)\n    }\n    case NavigationResultTag.NoOp: {\n      // The server responded with no change to the current page. However, if\n      // the URL changed, we still need to update that.\n      const newCanonicalUrl = result.data.canonicalUrl\n      mutable.canonicalUrl = newCanonicalUrl\n\n      // Check if the only thing that changed was the hash fragment.\n      const oldUrl = new URL(state.canonicalUrl, url)\n      const onlyHashChange =\n        // We don't need to compare the origins, because client-driven\n        // navigations are always same-origin.\n        url.pathname === oldUrl.pathname &&\n        url.search === oldUrl.search &&\n        url.hash !== oldUrl.hash\n      if (onlyHashChange) {\n        // The only updated part of the URL is the hash.\n        mutable.onlyHashChange = true\n        mutable.shouldScroll = result.data.shouldScroll\n        mutable.hashFragment = url.hash\n        // Setting this to an empty array triggers a scroll for all new and\n        // updated segments. See `ScrollAndFocusHandler` for more details.\n        mutable.scrollableSegments = []\n      }\n\n      return handleMutable(state, mutable)\n    }\n    case NavigationResultTag.Success: {\n      // Received a new result.\n      mutable.cache = result.data.cacheNode\n      mutable.patchedTree = result.data.flightRouterState\n      mutable.canonicalUrl = result.data.canonicalUrl\n      mutable.scrollableSegments = result.data.scrollableSegments\n      mutable.shouldScroll = result.data.shouldScroll\n      mutable.hashFragment = result.data.hash\n      return handleMutable(state, mutable)\n    }\n    case NavigationResultTag.Async: {\n      return result.data.then(\n        (asyncResult) =>\n          handleNavigationResult(url, state, mutable, pendingPush, asyncResult),\n        // If the navigation failed, return the current state.\n        // TODO: This matches the current behavior but we need to do something\n        // better here if the network fails.\n        () => {\n          return state\n        }\n      )\n    }\n    default: {\n      result satisfies never\n      return state\n    }\n  }\n}\n\nexport function navigateReducer(\n  state: ReadonlyReducerState,\n  action: NavigateAction\n): ReducerState {\n  const { url, isExternalUrl, navigateType, shouldScroll, allowAliasing } =\n    action\n  const mutable: Mutable = {}\n  const { hash } = url\n  const href = createHrefFromUrl(url)\n  const pendingPush = navigateType === 'push'\n  // we want to prune the prefetch cache on every navigation to avoid it growing too large\n  prunePrefetchCache(state.prefetchCache)\n\n  mutable.preserveCustomHistoryState = false\n  mutable.pendingPush = pendingPush\n\n  if (isExternalUrl) {\n    return handleExternalUrl(state, mutable, url.toString(), pendingPush)\n  }\n\n  // Handles case where `<meta http-equiv=\"refresh\">` tag is present,\n  // which will trigger an MPA navigation.\n  if (document.getElementById('__next-page-redirect')) {\n    return handleExternalUrl(state, mutable, href, pendingPush)\n  }\n\n  if (process.env.__NEXT_CLIENT_SEGMENT_CACHE) {\n    // (Very Early Experimental Feature) Segment Cache\n    //\n    // Bypass the normal prefetch cache and use the new per-segment cache\n    // implementation instead. This is only supported if PPR is enabled, too.\n    //\n    // Temporary glue code between the router reducer and the new navigation\n    // implementation. Eventually we'll rewrite the router reducer to a\n    // state machine.\n    const result = navigateUsingSegmentCache(\n      url,\n      state.cache,\n      state.tree,\n      state.nextUrl,\n      shouldScroll\n    )\n    return handleNavigationResult(url, state, mutable, pendingPush, result)\n  }\n\n  const prefetchValues = getOrCreatePrefetchCacheEntry({\n    url,\n    nextUrl: state.nextUrl,\n    tree: state.tree,\n    prefetchCache: state.prefetchCache,\n    allowAliasing,\n  })\n  const { treeAtTimeOfPrefetch, data } = prefetchValues\n\n  prefetchQueue.bump(data)\n\n  return data.then(\n    ({ flightData, canonicalUrl: canonicalUrlOverride, postponed }) => {\n      const navigatedAt = Date.now()\n\n      let isFirstRead = false\n      // we only want to mark this once\n      if (!prefetchValues.lastUsedTime) {\n        // important: we should only mark the cache node as dirty after we unsuspend from the call above\n        prefetchValues.lastUsedTime = navigatedAt\n        isFirstRead = true\n      }\n\n      if (prefetchValues.aliased) {\n        const result = handleAliasedPrefetchEntry(\n          navigatedAt,\n          state,\n          flightData,\n          url,\n          mutable\n        )\n\n        // We didn't return new router state because we didn't apply the aliased entry for some reason.\n        // We'll re-invoke the navigation handler but ensure that we don't attempt to use the aliased entry. This\n        // will create an on-demand prefetch entry.\n        if (result === false) {\n          return navigateReducer(state, { ...action, allowAliasing: false })\n        }\n\n        return result\n      }\n\n      // Handle case when navigating to page in `pages` from `app`\n      if (typeof flightData === 'string') {\n        return handleExternalUrl(state, mutable, flightData, pendingPush)\n      }\n\n      const updatedCanonicalUrl = canonicalUrlOverride\n        ? createHrefFromUrl(canonicalUrlOverride)\n        : href\n\n      const onlyHashChange =\n        !!hash &&\n        state.canonicalUrl.split('#', 1)[0] ===\n          updatedCanonicalUrl.split('#', 1)[0]\n\n      // If only the hash has changed, the server hasn't sent us any new data. We can just update\n      // the mutable properties responsible for URL and scroll handling and return early.\n      if (onlyHashChange) {\n        mutable.onlyHashChange = true\n        mutable.canonicalUrl = updatedCanonicalUrl\n        mutable.shouldScroll = shouldScroll\n        mutable.hashFragment = hash\n        mutable.scrollableSegments = []\n        return handleMutable(state, mutable)\n      }\n\n      let currentTree = state.tree\n      let currentCache = state.cache\n      let scrollableSegments: FlightSegmentPath[] = []\n      for (const normalizedFlightData of flightData) {\n        const {\n          pathToSegment: flightSegmentPath,\n          seedData,\n          head,\n          isHeadPartial,\n          isRootRender,\n        } = normalizedFlightData\n        let treePatch = normalizedFlightData.tree\n\n        // TODO-APP: remove ''\n        const flightSegmentPathWithLeadingEmpty = ['', ...flightSegmentPath]\n\n        // Create new tree based on the flightSegmentPath and router state patch\n        let newTree = applyRouterStatePatchToTree(\n          // TODO-APP: remove ''\n          flightSegmentPathWithLeadingEmpty,\n          currentTree,\n          treePatch,\n          href\n        )\n\n        // If the tree patch can't be applied to the current tree then we use the tree at time of prefetch\n        // TODO-APP: This should instead fill in the missing pieces in `currentTree` with the data from `treeAtTimeOfPrefetch`, then apply the patch.\n        if (newTree === null) {\n          newTree = applyRouterStatePatchToTree(\n            // TODO-APP: remove ''\n            flightSegmentPathWithLeadingEmpty,\n            treeAtTimeOfPrefetch,\n            treePatch,\n            href\n          )\n        }\n\n        if (newTree !== null) {\n          if (\n            // This is just a paranoid check. When a route is PPRed, the server\n            // will send back a static response that's rendered from\n            // the root. If for some reason it doesn't, we fall back to the\n            // non-PPR implementation.\n            // TODO: We should get rid of the else branch and do all navigations\n            // via startPPRNavigation. The current structure is just\n            // an incremental step.\n            seedData &&\n            isRootRender &&\n            postponed\n          ) {\n            const task = startPPRNavigation(\n              navigatedAt,\n              currentCache,\n              currentTree,\n              treePatch,\n              seedData,\n              head,\n              isHeadPartial,\n              false,\n              scrollableSegments\n            )\n\n            if (task !== null) {\n              if (task.route === null) {\n                // Detected a change to the root layout. Perform an full-\n                // page navigation.\n                return handleExternalUrl(state, mutable, href, pendingPush)\n              }\n              // Use the tree computed by startPPRNavigation instead\n              // of the one computed by applyRouterStatePatchToTree.\n              // TODO: We should remove applyRouterStatePatchToTree\n              // from the PPR path entirely.\n              const patchedRouterState: FlightRouterState = task.route\n              newTree = patchedRouterState\n\n              const newCache = task.node\n              if (newCache !== null) {\n                // We've created a new Cache Node tree that contains a prefetched\n                // version of the next page. This can be rendered instantly.\n                mutable.cache = newCache\n              }\n              const dynamicRequestTree = task.dynamicRequestTree\n              if (dynamicRequestTree !== null) {\n                // The prefetched tree has dynamic holes in it. We initiate a\n                // dynamic request to fill them in.\n                //\n                // Do not block on the result. We'll immediately render the Cache\n                // Node tree and suspend on the dynamic parts. When the request\n                // comes in, we'll fill in missing data and ping React to\n                // re-render. Unlike the lazy fetching model in the non-PPR\n                // implementation, this is modeled as a single React update +\n                // streaming, rather than multiple top-level updates. (However,\n                // even in the new model, we'll still need to sometimes update the\n                // root multiple times per navigation, like if the server sends us\n                // a different response than we expected. For now, we revert back\n                // to the lazy fetching mechanism in that case.)\n                const dynamicRequest = fetchServerResponse(url, {\n                  flightRouterState: dynamicRequestTree,\n                  nextUrl: state.nextUrl,\n                })\n\n                listenForDynamicRequest(task, dynamicRequest)\n                // We store the dynamic request on the `lazyData` property of the CacheNode\n                // because we're not going to await the dynamic request here. Since we're not blocking\n                // on the dynamic request, `layout-router` will\n                // task.node.lazyData = dynamicRequest\n              } else {\n                // The prefetched tree does not contain dynamic holes — it's\n                // fully static. We can skip the dynamic request.\n              }\n            } else {\n              // Nothing changed, so reuse the old cache.\n              // TODO: What if the head changed but not any of the segment data?\n              // Is that possible? If so, we should clone the whole tree and\n              // update the head.\n              newTree = treePatch\n            }\n          } else {\n            // The static response does not include any dynamic holes, so\n            // there's no need to do a second request.\n            // TODO: As an incremental step this just reverts back to the\n            // non-PPR implementation. We can simplify this branch further,\n            // given that PPR prefetches are always static and return the whole\n            // tree. Or in the meantime we could factor it out into a\n            // separate function.\n\n            if (isNavigatingToNewRootLayout(currentTree, newTree)) {\n              return handleExternalUrl(state, mutable, href, pendingPush)\n            }\n\n            const cache: CacheNode = createEmptyCacheNode()\n            let applied = false\n\n            if (\n              prefetchValues.status === PrefetchCacheEntryStatus.stale &&\n              !isFirstRead\n            ) {\n              // When we have a stale prefetch entry, we only want to re-use the loading state of the route we're navigating to, to support instant loading navigations\n              // this will trigger a lazy fetch for the actual page data by nulling the `rsc` and `prefetchRsc` values for page data,\n              // while copying over the `loading` for the segment that contains the page data.\n              // We only do this on subsequent reads, as otherwise there'd be no loading data to re-use.\n\n              // We skip this branch if only the hash fragment has changed, as we don't want to trigger a lazy fetch in that case\n              applied = triggerLazyFetchForLeafSegments(\n                cache,\n                currentCache,\n                flightSegmentPath,\n                treePatch\n              )\n              // since we re-used the stale cache's loading state & refreshed the data,\n              // update the `lastUsedTime` so that it can continue to be re-used for the next 30s\n              prefetchValues.lastUsedTime = navigatedAt\n            } else {\n              applied = applyFlightData(\n                navigatedAt,\n                currentCache,\n                cache,\n                normalizedFlightData,\n                prefetchValues\n              )\n            }\n\n            const hardNavigate = shouldHardNavigate(\n              // TODO-APP: remove ''\n              flightSegmentPathWithLeadingEmpty,\n              currentTree\n            )\n\n            if (hardNavigate) {\n              // Copy rsc for the root node of the cache.\n              cache.rsc = currentCache.rsc\n              cache.prefetchRsc = currentCache.prefetchRsc\n\n              invalidateCacheBelowFlightSegmentPath(\n                cache,\n                currentCache,\n                flightSegmentPath\n              )\n              // Ensure the existing cache value is used when the cache was not invalidated.\n              mutable.cache = cache\n            } else if (applied) {\n              mutable.cache = cache\n              // If we applied the cache, we update the \"current cache\" value so any other\n              // segments in the FlightDataPath will be able to reference the updated cache.\n              currentCache = cache\n            }\n\n            for (const subSegment of generateSegmentsFromPatch(treePatch)) {\n              const scrollableSegmentPath = [\n                ...flightSegmentPath,\n                ...subSegment,\n              ]\n              // Filter out the __DEFAULT__ paths as they shouldn't be scrolled to in this case.\n              if (\n                scrollableSegmentPath[scrollableSegmentPath.length - 1] !==\n                DEFAULT_SEGMENT_KEY\n              ) {\n                scrollableSegments.push(scrollableSegmentPath)\n              }\n            }\n          }\n\n          currentTree = newTree\n        }\n      }\n\n      mutable.patchedTree = currentTree\n      mutable.canonicalUrl = updatedCanonicalUrl\n      mutable.scrollableSegments = scrollableSegments\n      mutable.hashFragment = hash\n      mutable.shouldScroll = shouldScroll\n\n      return handleMutable(state, mutable)\n    },\n    () => state\n  )\n}\n","import { createHrefFromUrl } from '../create-href-from-url'\nimport { applyRouterStatePatchToTree } from '../apply-router-state-patch-to-tree'\nimport { isNavigatingToNewRootLayout } from '../is-navigating-to-new-root-layout'\nimport type {\n  ServerPatchAction,\n  ReducerState,\n  ReadonlyReducerState,\n  Mutable,\n} from '../router-reducer-types'\nimport { handleExternalUrl } from './navigate-reducer'\nimport { applyFlightData } from '../apply-flight-data'\nimport { handleMutable } from '../handle-mutable'\nimport type { CacheNode } from '../../../../shared/lib/app-router-context.shared-runtime'\nimport { createEmptyCacheNode } from '../../app-router'\n\nexport function serverPatchReducer(\n  state: ReadonlyReducerState,\n  action: ServerPatchAction\n): ReducerState {\n  const {\n    serverResponse: { flightData, canonicalUrl: canonicalUrlOverride },\n    navigatedAt,\n  } = action\n\n  const mutable: Mutable = {}\n\n  mutable.preserveCustomHistoryState = false\n\n  // Handle case when navigating to page in `pages` from `app`\n  if (typeof flightData === 'string') {\n    return handleExternalUrl(\n      state,\n      mutable,\n      flightData,\n      state.pushRef.pendingPush\n    )\n  }\n\n  let currentTree = state.tree\n  let currentCache = state.cache\n\n  for (const normalizedFlightData of flightData) {\n    const { segmentPath: flightSegmentPath, tree: treePatch } =\n      normalizedFlightData\n\n    const newTree = applyRouterStatePatchToTree(\n      // TODO-APP: remove ''\n      ['', ...flightSegmentPath],\n      currentTree,\n      treePatch,\n      state.canonicalUrl\n    )\n\n    // `applyRouterStatePatchToTree` returns `null` when it determined that the server response is not applicable to the current tree.\n    // In other words, the server responded with a tree that doesn't match what the client is currently rendering.\n    // This can happen if the server patch action took longer to resolve than a subsequent navigation which would have changed the tree.\n    // Previously this case triggered an MPA navigation but it should be safe to simply discard the server response rather than forcing\n    // the entire page to reload.\n    if (newTree === null) {\n      return state\n    }\n\n    if (isNavigatingToNewRootLayout(currentTree, newTree)) {\n      return handleExternalUrl(\n        state,\n        mutable,\n        state.canonicalUrl,\n        state.pushRef.pendingPush\n      )\n    }\n\n    const canonicalUrlOverrideHref = canonicalUrlOverride\n      ? createHrefFromUrl(canonicalUrlOverride)\n      : undefined\n\n    if (canonicalUrlOverrideHref) {\n      mutable.canonicalUrl = canonicalUrlOverrideHref\n    }\n\n    const cache: CacheNode = createEmptyCacheNode()\n    applyFlightData(navigatedAt, currentCache, cache, normalizedFlightData)\n\n    mutable.patchedTree = newTree\n    mutable.cache = cache\n\n    currentCache = cache\n    currentTree = newTree\n  }\n\n  return handleMutable(state, mutable)\n}\n","import { createHrefFromUrl } from '../create-href-from-url'\nimport type {\n  ReadonlyReducerState,\n  ReducerState,\n  RestoreAction,\n} from '../router-reducer-types'\nimport { extractPathFromFlightRouterState } from '../compute-changed-path'\nimport { updateCacheNodeOnPopstateRestoration } from '../ppr-navigations'\n\nexport function restoreReducer(\n  state: ReadonlyReducerState,\n  action: RestoreAction\n): ReducerState {\n  const { url, tree } = action\n  const href = createHrefFromUrl(url)\n  // This action is used to restore the router state from the history state.\n  // However, it's possible that the history state no longer contains the `FlightRouterState`.\n  // We will copy over the internal state on pushState/replaceState events, but if a history entry\n  // occurred before hydration, or if the user navigated to a hash using a regular anchor link,\n  // the history state will not contain the `FlightRouterState`.\n  // In this case, we'll continue to use the existing tree so the router doesn't get into an invalid state.\n  const treeToRestore = tree || state.tree\n\n  const oldCache = state.cache\n  const newCache = process.env.__NEXT_PPR\n    ? // When PPR is enabled, we update the cache to drop the prefetch\n      // data for any segment whose dynamic data was already received. This\n      // prevents an unnecessary flash back to PPR state during a\n      // back/forward navigation.\n      updateCacheNodeOnPopstateRestoration(oldCache, treeToRestore)\n    : oldCache\n\n  return {\n    // Set canonical url\n    canonicalUrl: href,\n    pushRef: {\n      pendingPush: false,\n      mpaNavigation: false,\n      // Ensures that the custom history state that was set is preserved when applying this update.\n      preserveCustomHistoryState: true,\n    },\n    focusAndScrollRef: state.focusAndScrollRef,\n    cache: newCache,\n    prefetchCache: state.prefetchCache,\n    // Restore provided tree\n    tree: treeToRestore,\n    nextUrl: extractPathFromFlightRouterState(treeToRestore) ?? url.pathname,\n  }\n}\n","import type { FlightRouterState } from '../../../server/app-render/types'\nimport { handleExternalUrl } from './reducers/navigate-reducer'\nimport type {\n  ReadonlyReducerState,\n  ReducerActions,\n} from './router-reducer-types'\n\n/**\n * Handles the case where the client router attempted to patch the tree but, due to a mismatch, the patch failed.\n * This will perform an MPA navigation to return the router to a valid state.\n */\nexport function handleSegmentMismatch(\n  state: ReadonlyReducerState,\n  action: ReducerActions,\n  treePatch: FlightRouterState\n) {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn(\n      'Performing hard navigation because your application experienced an unrecoverable error. If this keeps occurring, please file a Next.js issue.\\n\\n' +\n        'Reason: Segment mismatch\\n' +\n        `Last Action: ${action.type}\\n\\n` +\n        `Current Tree: ${JSON.stringify(state.tree)}\\n\\n` +\n        `Tree Patch Payload: ${JSON.stringify(treePatch)}`\n    )\n  }\n\n  return handleExternalUrl(state, {}, state.canonicalUrl, true)\n}\n","import { fetchServerResponse } from '../fetch-server-response'\nimport { createHrefFromUrl } from '../create-href-from-url'\nimport { applyRouterStatePatchToTree } from '../apply-router-state-patch-to-tree'\nimport { isNavigatingToNewRootLayout } from '../is-navigating-to-new-root-layout'\nimport type {\n  Mutable,\n  ReadonlyReducerState,\n  ReducerState,\n  RefreshAction,\n} from '../router-reducer-types'\nimport { handleExternalUrl } from './navigate-reducer'\nimport { handleMutable } from '../handle-mutable'\nimport type { CacheNode } from '../../../../shared/lib/app-router-context.shared-runtime'\nimport { fillLazyItemsTillLeafWithHead } from '../fill-lazy-items-till-leaf-with-head'\nimport { createEmptyCacheNode } from '../../app-router'\nimport { handleSegmentMismatch } from '../handle-segment-mismatch'\nimport { hasInterceptionRouteInCurrentTree } from './has-interception-route-in-current-tree'\nimport { refreshInactiveParallelSegments } from '../refetch-inactive-parallel-segments'\nimport { revalidateEntireCache } from '../../segment-cache'\n\nexport function refreshReducer(\n  state: ReadonlyReducerState,\n  action: RefreshAction\n): ReducerState {\n  const { origin } = action\n  const mutable: Mutable = {}\n  const href = state.canonicalUrl\n\n  let currentTree = state.tree\n\n  mutable.preserveCustomHistoryState = false\n\n  const cache: CacheNode = createEmptyCacheNode()\n\n  // If the current tree was intercepted, the nextUrl should be included in the request.\n  // This is to ensure that the refresh request doesn't get intercepted, accidentally triggering the interception route.\n  const includeNextUrl = hasInterceptionRouteInCurrentTree(state.tree)\n\n  // TODO-APP: verify that `href` is not an external url.\n  // Fetch data from the root of the tree.\n  cache.lazyData = fetchServerResponse(new URL(href, origin), {\n    flightRouterState: [\n      currentTree[0],\n      currentTree[1],\n      currentTree[2],\n      'refetch',\n    ],\n    nextUrl: includeNextUrl ? state.nextUrl : null,\n  })\n\n  const navigatedAt = Date.now()\n  return cache.lazyData.then(\n    async ({ flightData, canonicalUrl: canonicalUrlOverride }) => {\n      // Handle case when navigating to page in `pages` from `app`\n      if (typeof flightData === 'string') {\n        return handleExternalUrl(\n          state,\n          mutable,\n          flightData,\n          state.pushRef.pendingPush\n        )\n      }\n\n      // Remove cache.lazyData as it has been resolved at this point.\n      cache.lazyData = null\n\n      for (const normalizedFlightData of flightData) {\n        const {\n          tree: treePatch,\n          seedData: cacheNodeSeedData,\n          head,\n          isRootRender,\n        } = normalizedFlightData\n\n        if (!isRootRender) {\n          // TODO-APP: handle this case better\n          console.log('REFRESH FAILED')\n          return state\n        }\n\n        const newTree = applyRouterStatePatchToTree(\n          // TODO-APP: remove ''\n          [''],\n          currentTree,\n          treePatch,\n          state.canonicalUrl\n        )\n\n        if (newTree === null) {\n          return handleSegmentMismatch(state, action, treePatch)\n        }\n\n        if (isNavigatingToNewRootLayout(currentTree, newTree)) {\n          return handleExternalUrl(\n            state,\n            mutable,\n            href,\n            state.pushRef.pendingPush\n          )\n        }\n\n        const canonicalUrlOverrideHref = canonicalUrlOverride\n          ? createHrefFromUrl(canonicalUrlOverride)\n          : undefined\n\n        if (canonicalUrlOverride) {\n          mutable.canonicalUrl = canonicalUrlOverrideHref\n        }\n\n        // Handles case where prefetch only returns the router tree patch without rendered components.\n        if (cacheNodeSeedData !== null) {\n          const rsc = cacheNodeSeedData[1]\n          const loading = cacheNodeSeedData[3]\n          cache.rsc = rsc\n          cache.prefetchRsc = null\n          cache.loading = loading\n          fillLazyItemsTillLeafWithHead(\n            navigatedAt,\n            cache,\n            // Existing cache is not passed in as `router.refresh()` has to invalidate the entire cache.\n            undefined,\n            treePatch,\n            cacheNodeSeedData,\n            head,\n            undefined\n          )\n          if (process.env.__NEXT_CLIENT_SEGMENT_CACHE) {\n            revalidateEntireCache(state.nextUrl, newTree)\n          } else {\n            mutable.prefetchCache = new Map()\n          }\n        }\n\n        await refreshInactiveParallelSegments({\n          navigatedAt,\n          state,\n          updatedTree: newTree,\n          updatedCache: cache,\n          includeNextUrl,\n          canonicalUrl: mutable.canonicalUrl || state.canonicalUrl,\n        })\n\n        mutable.cache = cache\n        mutable.patchedTree = newTree\n\n        currentTree = newTree\n      }\n\n      return handleMutable(state, mutable)\n    },\n    () => state\n  )\n}\n","import { fetchServerResponse } from '../fetch-server-response'\nimport { createHrefFromUrl } from '../create-href-from-url'\nimport { applyRouterStatePatchToTree } from '../apply-router-state-patch-to-tree'\nimport { isNavigatingToNewRootLayout } from '../is-navigating-to-new-root-layout'\nimport type {\n  ReadonlyReducerState,\n  ReducerState,\n  HmrRefreshAction,\n  Mutable,\n} from '../router-reducer-types'\nimport { handleExternalUrl } from './navigate-reducer'\nimport { handleMutable } from '../handle-mutable'\nimport { applyFlightData } from '../apply-flight-data'\nimport type { CacheNode } from '../../../../shared/lib/app-router-context.shared-runtime'\nimport { createEmptyCacheNode } from '../../app-router'\nimport { handleSegmentMismatch } from '../handle-segment-mismatch'\nimport { hasInterceptionRouteInCurrentTree } from './has-interception-route-in-current-tree'\n\n// A version of refresh reducer that keeps the cache around instead of wiping all of it.\nfunction hmrRefreshReducerImpl(\n  state: ReadonlyReducerState,\n  action: HmrRefreshAction\n): ReducerState {\n  const { origin } = action\n  const mutable: Mutable = {}\n  const href = state.canonicalUrl\n\n  mutable.preserveCustomHistoryState = false\n\n  const cache: CacheNode = createEmptyCacheNode()\n  // If the current tree was intercepted, the nextUrl should be included in the request.\n  // This is to ensure that the refresh request doesn't get intercepted, accidentally triggering the interception route.\n  const includeNextUrl = hasInterceptionRouteInCurrentTree(state.tree)\n\n  // TODO-APP: verify that `href` is not an external url.\n  // Fetch data from the root of the tree.\n  const navigatedAt = Date.now()\n  cache.lazyData = fetchServerResponse(new URL(href, origin), {\n    flightRouterState: [state.tree[0], state.tree[1], state.tree[2], 'refetch'],\n    nextUrl: includeNextUrl ? state.nextUrl : null,\n    isHmrRefresh: true,\n  })\n\n  return cache.lazyData.then(\n    ({ flightData, canonicalUrl: canonicalUrlOverride }) => {\n      // Handle case when navigating to page in `pages` from `app`\n      if (typeof flightData === 'string') {\n        return handleExternalUrl(\n          state,\n          mutable,\n          flightData,\n          state.pushRef.pendingPush\n        )\n      }\n\n      // Remove cache.lazyData as it has been resolved at this point.\n      cache.lazyData = null\n\n      let currentTree = state.tree\n      let currentCache = state.cache\n\n      for (const normalizedFlightData of flightData) {\n        const { tree: treePatch, isRootRender } = normalizedFlightData\n        if (!isRootRender) {\n          // TODO-APP: handle this case better\n          console.log('REFRESH FAILED')\n          return state\n        }\n\n        const newTree = applyRouterStatePatchToTree(\n          // TODO-APP: remove ''\n          [''],\n          currentTree,\n          treePatch,\n          state.canonicalUrl\n        )\n\n        if (newTree === null) {\n          return handleSegmentMismatch(state, action, treePatch)\n        }\n\n        if (isNavigatingToNewRootLayout(currentTree, newTree)) {\n          return handleExternalUrl(\n            state,\n            mutable,\n            href,\n            state.pushRef.pendingPush\n          )\n        }\n\n        const canonicalUrlOverrideHref = canonicalUrlOverride\n          ? createHrefFromUrl(canonicalUrlOverride)\n          : undefined\n\n        if (canonicalUrlOverride) {\n          mutable.canonicalUrl = canonicalUrlOverrideHref\n        }\n        const applied = applyFlightData(\n          navigatedAt,\n          currentCache,\n          cache,\n          normalizedFlightData\n        )\n\n        if (applied) {\n          mutable.cache = cache\n          currentCache = cache\n        }\n\n        mutable.patchedTree = newTree\n        mutable.canonicalUrl = href\n\n        currentTree = newTree\n      }\n      return handleMutable(state, mutable)\n    },\n    () => state\n  )\n}\n\nfunction hmrRefreshReducerNoop(\n  state: ReadonlyReducerState,\n  _action: HmrRefreshAction\n): ReducerState {\n  return state\n}\n\nexport const hmrRefreshReducer =\n  process.env.NODE_ENV === 'production'\n    ? hmrRefreshReducerNoop\n    : hmrRefreshReducerImpl\n","import type {\n  ActionFlightResponse,\n  ActionResult,\n} from '../../../../server/app-render/types'\nimport { callServer } from '../../../app-call-server'\nimport { findSourceMapURL } from '../../../app-find-source-map-url'\nimport {\n  ACTION_HEADER,\n  NEXT_IS_PRERENDER_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_URL,\n  RSC_CONTENT_TYPE_HEADER,\n} from '../../app-router-headers'\n\n// // eslint-disable-next-line import/no-extraneous-dependencies\n// import { createFromFetch } from 'react-server-dom-webpack/client'\n// // eslint-disable-next-line import/no-extraneous-dependencies\n// import { encodeReply } from 'react-server-dom-webpack/client'\nconst { createFromFetch, createTemporaryReferenceSet, encodeReply } = (\n  !!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')\n) as typeof import('react-server-dom-webpack/client')\n\nimport {\n  PrefetchKind,\n  type ReadonlyReducerState,\n  type ReducerState,\n  type ServerActionAction,\n  type ServerActionMutable,\n} from '../router-reducer-types'\nimport { assignLocation } from '../../../assign-location'\nimport { createHrefFromUrl } from '../create-href-from-url'\nimport { handleExternalUrl } from './navigate-reducer'\nimport { applyRouterStatePatchToTree } from '../apply-router-state-patch-to-tree'\nimport { isNavigatingToNewRootLayout } from '../is-navigating-to-new-root-layout'\nimport type { CacheNode } from '../../../../shared/lib/app-router-context.shared-runtime'\nimport { handleMutable } from '../handle-mutable'\nimport { fillLazyItemsTillLeafWithHead } from '../fill-lazy-items-till-leaf-with-head'\nimport { createEmptyCacheNode } from '../../app-router'\nimport { hasInterceptionRouteInCurrentTree } from './has-interception-route-in-current-tree'\nimport { handleSegmentMismatch } from '../handle-segment-mismatch'\nimport { refreshInactiveParallelSegments } from '../refetch-inactive-parallel-segments'\nimport {\n  normalizeFlightData,\n  prepareFlightRouterStateForRequest,\n  type NormalizedFlightData,\n} from '../../../flight-data-helpers'\nimport { getRedirectError } from '../../redirect'\nimport { RedirectType } from '../../redirect-error'\nimport { createSeededPrefetchCacheEntry } from '../prefetch-cache-utils'\nimport { removeBasePath } from '../../../remove-base-path'\nimport { hasBasePath } from '../../../has-base-path'\nimport {\n  extractInfoFromServerReferenceId,\n  omitUnusedArgs,\n} from '../../../../shared/lib/server-reference-info'\nimport { revalidateEntireCache } from '../../segment-cache'\n\ntype FetchServerActionResult = {\n  redirectLocation: URL | undefined\n  redirectType: RedirectType | undefined\n  actionResult?: ActionResult\n  actionFlightData?: NormalizedFlightData[] | string\n  isPrerender: boolean\n  revalidatedParts: {\n    tag: boolean\n    cookie: boolean\n    paths: string[]\n  }\n}\n\nasync function fetchServerAction(\n  state: ReadonlyReducerState,\n  nextUrl: ReadonlyReducerState['nextUrl'],\n  { actionId, actionArgs }: ServerActionAction\n): Promise<FetchServerActionResult> {\n  const temporaryReferences = createTemporaryReferenceSet()\n  const info = extractInfoFromServerReferenceId(actionId)\n\n  // TODO: Currently, we're only omitting unused args for the experimental \"use\n  // cache\" functions. Once the server reference info byte feature is stable, we\n  // should apply this to server actions as well.\n  const usedArgs =\n    info.type === 'use-cache' ? omitUnusedArgs(actionArgs, info) : actionArgs\n\n  const body = await encodeReply(usedArgs, { temporaryReferences })\n\n  const res = await fetch('', {\n    method: 'POST',\n    headers: {\n      Accept: RSC_CONTENT_TYPE_HEADER,\n      [ACTION_HEADER]: actionId,\n      [NEXT_ROUTER_STATE_TREE_HEADER]: prepareFlightRouterStateForRequest(\n        state.tree\n      ),\n      ...(process.env.NEXT_DEPLOYMENT_ID\n        ? {\n            'x-deployment-id': process.env.NEXT_DEPLOYMENT_ID,\n          }\n        : {}),\n      ...(nextUrl\n        ? {\n            [NEXT_URL]: nextUrl,\n          }\n        : {}),\n    },\n    body,\n  })\n\n  const redirectHeader = res.headers.get('x-action-redirect')\n  const [location, _redirectType] = redirectHeader?.split(';') || []\n  let redirectType: RedirectType | undefined\n  switch (_redirectType) {\n    case 'push':\n      redirectType = RedirectType.push\n      break\n    case 'replace':\n      redirectType = RedirectType.replace\n      break\n    default:\n      redirectType = undefined\n  }\n\n  const isPrerender = !!res.headers.get(NEXT_IS_PRERENDER_HEADER)\n  let revalidatedParts: FetchServerActionResult['revalidatedParts']\n  try {\n    const revalidatedHeader = JSON.parse(\n      res.headers.get('x-action-revalidated') || '[[],0,0]'\n    )\n    revalidatedParts = {\n      paths: revalidatedHeader[0] || [],\n      tag: !!revalidatedHeader[1],\n      cookie: revalidatedHeader[2],\n    }\n  } catch (e) {\n    revalidatedParts = {\n      paths: [],\n      tag: false,\n      cookie: false,\n    }\n  }\n\n  const redirectLocation = location\n    ? assignLocation(\n        location,\n        new URL(state.canonicalUrl, window.location.href)\n      )\n    : undefined\n\n  const contentType = res.headers.get('content-type')\n\n  if (contentType?.startsWith(RSC_CONTENT_TYPE_HEADER)) {\n    const response: ActionFlightResponse = await createFromFetch(\n      Promise.resolve(res),\n      { callServer, findSourceMapURL, temporaryReferences }\n    )\n\n    if (location) {\n      // if it was a redirection, then result is just a regular RSC payload\n      return {\n        actionFlightData: normalizeFlightData(response.f),\n        redirectLocation,\n        redirectType,\n        revalidatedParts,\n        isPrerender,\n      }\n    }\n\n    return {\n      actionResult: response.a,\n      actionFlightData: normalizeFlightData(response.f),\n      redirectLocation,\n      redirectType,\n      revalidatedParts,\n      isPrerender,\n    }\n  }\n\n  // Handle invalid server action responses\n  if (res.status >= 400) {\n    // The server can respond with a text/plain error message, but we'll fallback to something generic\n    // if there isn't one.\n    const error =\n      contentType === 'text/plain'\n        ? await res.text()\n        : 'An unexpected response was received from the server.'\n\n    throw new Error(error)\n  }\n\n  return {\n    redirectLocation,\n    redirectType,\n    revalidatedParts,\n    isPrerender,\n  }\n}\n\n/*\n * This reducer is responsible for calling the server action and processing any side-effects from the server action.\n * It does not mutate the state by itself but rather delegates to other reducers to do the actual mutation.\n */\nexport function serverActionReducer(\n  state: ReadonlyReducerState,\n  action: ServerActionAction\n): ReducerState {\n  const { resolve, reject } = action\n  const mutable: ServerActionMutable = {}\n\n  let currentTree = state.tree\n\n  mutable.preserveCustomHistoryState = false\n\n  // only pass along the `nextUrl` param (used for interception routes) if the current route was intercepted.\n  // If the route has been intercepted, the action should be as well.\n  // Otherwise the server action might be intercepted with the wrong action id\n  // (ie, one that corresponds with the intercepted route)\n  const nextUrl =\n    state.nextUrl && hasInterceptionRouteInCurrentTree(state.tree)\n      ? state.nextUrl\n      : null\n\n  const navigatedAt = Date.now()\n\n  return fetchServerAction(state, nextUrl, action).then(\n    async ({\n      actionResult,\n      actionFlightData: flightData,\n      redirectLocation,\n      redirectType,\n      isPrerender,\n      revalidatedParts,\n    }) => {\n      let redirectHref: string | undefined\n\n      // honor the redirect type instead of defaulting to push in case of server actions.\n      if (redirectLocation) {\n        if (redirectType === RedirectType.replace) {\n          state.pushRef.pendingPush = false\n          mutable.pendingPush = false\n        } else {\n          state.pushRef.pendingPush = true\n          mutable.pendingPush = true\n        }\n\n        redirectHref = createHrefFromUrl(redirectLocation, false)\n        mutable.canonicalUrl = redirectHref\n      }\n\n      if (!flightData) {\n        resolve(actionResult)\n\n        // If there is a redirect but no flight data we need to do a mpaNavigation.\n        if (redirectLocation) {\n          return handleExternalUrl(\n            state,\n            mutable,\n            redirectLocation.href,\n            state.pushRef.pendingPush\n          )\n        }\n        return state\n      }\n\n      if (typeof flightData === 'string') {\n        // Handle case when navigating to page in `pages` from `app`\n        resolve(actionResult)\n\n        return handleExternalUrl(\n          state,\n          mutable,\n          flightData,\n          state.pushRef.pendingPush\n        )\n      }\n\n      const actionRevalidated =\n        revalidatedParts.paths.length > 0 ||\n        revalidatedParts.tag ||\n        revalidatedParts.cookie\n\n      for (const normalizedFlightData of flightData) {\n        const {\n          tree: treePatch,\n          seedData: cacheNodeSeedData,\n          head,\n          isRootRender,\n        } = normalizedFlightData\n\n        if (!isRootRender) {\n          // TODO-APP: handle this case better\n          console.log('SERVER ACTION APPLY FAILED')\n          resolve(actionResult)\n\n          return state\n        }\n\n        // Given the path can only have two items the items are only the router state and rsc for the root.\n        const newTree = applyRouterStatePatchToTree(\n          // TODO-APP: remove ''\n          [''],\n          currentTree,\n          treePatch,\n          redirectHref ? redirectHref : state.canonicalUrl\n        )\n\n        if (newTree === null) {\n          resolve(actionResult)\n\n          return handleSegmentMismatch(state, action, treePatch)\n        }\n\n        if (isNavigatingToNewRootLayout(currentTree, newTree)) {\n          resolve(actionResult)\n\n          return handleExternalUrl(\n            state,\n            mutable,\n            redirectHref || state.canonicalUrl,\n            state.pushRef.pendingPush\n          )\n        }\n\n        // The server sent back RSC data for the server action, so we need to apply it to the cache.\n        if (cacheNodeSeedData !== null) {\n          const rsc = cacheNodeSeedData[1]\n          const cache: CacheNode = createEmptyCacheNode()\n          cache.rsc = rsc\n          cache.prefetchRsc = null\n          cache.loading = cacheNodeSeedData[3]\n          fillLazyItemsTillLeafWithHead(\n            navigatedAt,\n            cache,\n            // Existing cache is not passed in as server actions have to invalidate the entire cache.\n            undefined,\n            treePatch,\n            cacheNodeSeedData,\n            head,\n            undefined\n          )\n\n          mutable.cache = cache\n          if (process.env.__NEXT_CLIENT_SEGMENT_CACHE) {\n            revalidateEntireCache(state.nextUrl, newTree)\n          } else {\n            mutable.prefetchCache = new Map()\n          }\n          if (actionRevalidated) {\n            await refreshInactiveParallelSegments({\n              navigatedAt,\n              state,\n              updatedTree: newTree,\n              updatedCache: cache,\n              includeNextUrl: Boolean(nextUrl),\n              canonicalUrl: mutable.canonicalUrl || state.canonicalUrl,\n            })\n          }\n        }\n\n        mutable.patchedTree = newTree\n        currentTree = newTree\n      }\n\n      if (redirectLocation && redirectHref) {\n        if (!process.env.__NEXT_CLIENT_SEGMENT_CACHE && !actionRevalidated) {\n          // Because the RedirectBoundary will trigger a navigation, we need to seed the prefetch cache\n          // with the FlightData that we got from the server action for the target page, so that it's\n          // available when the page is navigated to and doesn't need to be re-fetched.\n          // We only do this if the server action didn't revalidate any data, as in that case the\n          // client cache will be cleared and the data will be re-fetched anyway.\n          // NOTE: We don't do this in the Segment Cache implementation.\n          // Dynamic data should never be placed into the cache, unless it's\n          // \"converted\" to static data using <Link prefetch={true}>. What we\n          // do instead is re-prefetch links and forms whenever the cache is\n          // invalidated.\n          createSeededPrefetchCacheEntry({\n            url: redirectLocation,\n            data: {\n              flightData,\n              canonicalUrl: undefined,\n              couldBeIntercepted: false,\n              prerendered: false,\n              postponed: false,\n              // TODO: We should be able to set this if the server action\n              // returned a fully static response.\n              staleTime: -1,\n            },\n            tree: state.tree,\n            prefetchCache: state.prefetchCache,\n            nextUrl: state.nextUrl,\n            kind: isPrerender ? PrefetchKind.FULL : PrefetchKind.AUTO,\n          })\n          mutable.prefetchCache = state.prefetchCache\n        }\n\n        // If the action triggered a redirect, the action promise will be rejected with\n        // a redirect so that it's handled by RedirectBoundary as we won't have a valid\n        // action result to resolve the promise with. This will effectively reset the state of\n        // the component that called the action as the error boundary will remount the tree.\n        // The status code doesn't matter here as the action handler will have already sent\n        // a response with the correct status code.\n        reject(\n          getRedirectError(\n            hasBasePath(redirectHref)\n              ? removeBasePath(redirectHref)\n              : redirectHref,\n            redirectType || RedirectType.push\n          )\n        )\n      } else {\n        resolve(actionResult)\n      }\n\n      return handleMutable(state, mutable)\n    },\n    (e: any) => {\n      // When the server action is rejected we don't update the state and instead call the reject handler of the promise.\n      reject(e)\n\n      return state\n    }\n  )\n}\n","import {\n  ACTION_NAVIGATE,\n  ACTION_SERVER_PATCH,\n  ACTION_RESTORE,\n  ACTION_REFRESH,\n  ACTION_PREFETCH,\n  ACTION_HMR_REFRESH,\n  ACTION_SERVER_ACTION,\n} from './router-reducer-types'\nimport type {\n  ReducerActions,\n  ReducerState,\n  ReadonlyReducerState,\n} from './router-reducer-types'\nimport { navigateReducer } from './reducers/navigate-reducer'\nimport { serverPatchReducer } from './reducers/server-patch-reducer'\nimport { restoreReducer } from './reducers/restore-reducer'\nimport { refreshReducer } from './reducers/refresh-reducer'\nimport { prefetchReducer } from './reducers/prefetch-reducer'\nimport { hmrRefreshReducer } from './reducers/hmr-refresh-reducer'\nimport { serverActionReducer } from './reducers/server-action-reducer'\n\n/**\n * Reducer that handles the app-router state updates.\n */\nfunction clientReducer(\n  state: ReadonlyReducerState,\n  action: ReducerActions\n): ReducerState {\n  switch (action.type) {\n    case ACTION_NAVIGATE: {\n      return navigateReducer(state, action)\n    }\n    case ACTION_SERVER_PATCH: {\n      return serverPatchReducer(state, action)\n    }\n    case ACTION_RESTORE: {\n      return restoreReducer(state, action)\n    }\n    case ACTION_REFRESH: {\n      return refreshReducer(state, action)\n    }\n    case ACTION_HMR_REFRESH: {\n      return hmrRefreshReducer(state, action)\n    }\n    case ACTION_PREFETCH: {\n      return prefetchReducer(state, action)\n    }\n    case ACTION_SERVER_ACTION: {\n      return serverActionReducer(state, action)\n    }\n    // This case should never be hit as dispatch is strongly typed.\n    default:\n      throw new Error('Unknown action')\n  }\n}\n\nfunction serverReducer(\n  state: ReadonlyReducerState,\n  _action: ReducerActions\n): ReducerState {\n  return state\n}\n\n// we don't run the client reducer on the server, so we use a noop function for better tree shaking\nexport const reducer =\n  typeof window === 'undefined' ? serverReducer : clientReducer\n","import {\n  type AppRouterState,\n  type ReducerActions,\n  type ReducerState,\n  ACTION_REFRESH,\n  ACTION_SERVER_ACTION,\n  ACTION_NAVIGATE,\n  ACTION_RESTORE,\n  type NavigateAction,\n  ACTION_HMR_REFRESH,\n  PrefetchKind,\n  ACTION_PREFETCH,\n} from './router-reducer/router-reducer-types'\nimport { reducer } from './router-reducer/router-reducer'\nimport { startTransition } from 'react'\nimport { isThenable } from '../../shared/lib/is-thenable'\nimport { prefetch as prefetchWithSegmentCache } from './segment-cache'\nimport { dispatchAppRouterAction } from './use-action-queue'\nimport { addBasePath } from '../add-base-path'\nimport { createPrefetchURL, isExternalURL } from './app-router'\nimport { prefetchReducer } from './router-reducer/reducers/prefetch-reducer'\nimport type {\n  AppRouterInstance,\n  NavigateOptions,\n  PrefetchOptions,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport { setLinkForCurrentNavigation, type LinkInstance } from './links'\nimport type { FlightRouterState } from '../../server/app-render/types'\nimport type { ClientInstrumentationHooks } from '../app-index'\n\nexport type DispatchStatePromise = React.Dispatch<ReducerState>\n\nexport type AppRouterActionQueue = {\n  state: AppRouterState\n  dispatch: (payload: ReducerActions, setState: DispatchStatePromise) => void\n  action: (state: AppRouterState, action: ReducerActions) => ReducerState\n\n  onRouterTransitionStart:\n    | ((url: string, type: 'push' | 'replace' | 'traverse') => void)\n    | null\n\n  pending: ActionQueueNode | null\n  needsRefresh?: boolean\n  last: ActionQueueNode | null\n}\n\nexport type ActionQueueNode = {\n  payload: ReducerActions\n  next: ActionQueueNode | null\n  resolve: (value: ReducerState) => void\n  reject: (err: Error) => void\n  discarded?: boolean\n}\n\nfunction runRemainingActions(\n  actionQueue: AppRouterActionQueue,\n  setState: DispatchStatePromise\n) {\n  if (actionQueue.pending !== null) {\n    actionQueue.pending = actionQueue.pending.next\n    if (actionQueue.pending !== null) {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      runAction({\n        actionQueue,\n        action: actionQueue.pending,\n        setState,\n      })\n    } else {\n      // No more actions are pending, check if a refresh is needed\n      if (actionQueue.needsRefresh) {\n        actionQueue.needsRefresh = false\n        actionQueue.dispatch(\n          {\n            type: ACTION_REFRESH,\n            origin: window.location.origin,\n          },\n          setState\n        )\n      }\n    }\n  }\n}\n\nasync function runAction({\n  actionQueue,\n  action,\n  setState,\n}: {\n  actionQueue: AppRouterActionQueue\n  action: ActionQueueNode\n  setState: DispatchStatePromise\n}) {\n  const prevState = actionQueue.state\n\n  actionQueue.pending = action\n\n  const payload = action.payload\n  const actionResult = actionQueue.action(prevState, payload)\n\n  function handleResult(nextState: AppRouterState) {\n    // if we discarded this action, the state should also be discarded\n    if (action.discarded) {\n      return\n    }\n\n    actionQueue.state = nextState\n\n    runRemainingActions(actionQueue, setState)\n    action.resolve(nextState)\n  }\n\n  // if the action is a promise, set up a callback to resolve it\n  if (isThenable(actionResult)) {\n    actionResult.then(handleResult, (err) => {\n      runRemainingActions(actionQueue, setState)\n      action.reject(err)\n    })\n  } else {\n    handleResult(actionResult)\n  }\n}\n\nfunction dispatchAction(\n  actionQueue: AppRouterActionQueue,\n  payload: ReducerActions,\n  setState: DispatchStatePromise\n) {\n  let resolvers: {\n    resolve: (value: ReducerState) => void\n    reject: (reason: any) => void\n  } = { resolve: setState, reject: () => {} }\n\n  // most of the action types are async with the exception of restore\n  // it's important that restore is handled quickly since it's fired on the popstate event\n  // and we don't want to add any delay on a back/forward nav\n  // this only creates a promise for the async actions\n  if (payload.type !== ACTION_RESTORE) {\n    // Create the promise and assign the resolvers to the object.\n    const deferredPromise = new Promise<AppRouterState>((resolve, reject) => {\n      resolvers = { resolve, reject }\n    })\n\n    startTransition(() => {\n      // we immediately notify React of the pending promise -- the resolver is attached to the action node\n      // and will be called when the associated action promise resolves\n      setState(deferredPromise)\n    })\n  }\n\n  const newAction: ActionQueueNode = {\n    payload,\n    next: null,\n    resolve: resolvers.resolve,\n    reject: resolvers.reject,\n  }\n\n  // Check if the queue is empty\n  if (actionQueue.pending === null) {\n    // The queue is empty, so add the action and start it immediately\n    // Mark this action as the last in the queue\n    actionQueue.last = newAction\n\n    runAction({\n      actionQueue,\n      action: newAction,\n      setState,\n    })\n  } else if (\n    payload.type === ACTION_NAVIGATE ||\n    payload.type === ACTION_RESTORE\n  ) {\n    // Navigations (including back/forward) take priority over any pending actions.\n    // Mark the pending action as discarded (so the state is never applied) and start the navigation action immediately.\n    actionQueue.pending.discarded = true\n\n    // The rest of the current queue should still execute after this navigation.\n    // (Note that it can't contain any earlier navigations, because we always put those into `actionQueue.pending` by calling `runAction`)\n    newAction.next = actionQueue.pending.next\n\n    // if the pending action was a server action, mark the queue as needing a refresh once events are processed\n    if (actionQueue.pending.payload.type === ACTION_SERVER_ACTION) {\n      actionQueue.needsRefresh = true\n    }\n\n    runAction({\n      actionQueue,\n      action: newAction,\n      setState,\n    })\n  } else {\n    // The queue is not empty, so add the action to the end of the queue\n    // It will be started by runRemainingActions after the previous action finishes\n    if (actionQueue.last !== null) {\n      actionQueue.last.next = newAction\n    }\n    actionQueue.last = newAction\n  }\n}\n\nlet globalActionQueue: AppRouterActionQueue | null = null\n\nexport function createMutableActionQueue(\n  initialState: AppRouterState,\n  instrumentationHooks: ClientInstrumentationHooks | null\n): AppRouterActionQueue {\n  const actionQueue: AppRouterActionQueue = {\n    state: initialState,\n    dispatch: (payload: ReducerActions, setState: DispatchStatePromise) =>\n      dispatchAction(actionQueue, payload, setState),\n    action: async (state: AppRouterState, action: ReducerActions) => {\n      const result = reducer(state, action)\n      return result\n    },\n    pending: null,\n    last: null,\n    onRouterTransitionStart:\n      instrumentationHooks !== null &&\n      typeof instrumentationHooks.onRouterTransitionStart === 'function'\n        ? // This profiling hook will be called at the start of every navigation.\n          instrumentationHooks.onRouterTransitionStart\n        : null,\n  }\n\n  if (typeof window !== 'undefined') {\n    // The action queue is lazily created on hydration, but after that point\n    // it doesn't change. So we can store it in a global rather than pass\n    // it around everywhere via props/context.\n    if (globalActionQueue !== null) {\n      throw new Error(\n        'Internal Next.js Error: createMutableActionQueue was called more ' +\n          'than once'\n      )\n    }\n    globalActionQueue = actionQueue\n  }\n\n  return actionQueue\n}\n\nexport function getCurrentAppRouterState(): AppRouterState | null {\n  return globalActionQueue !== null ? globalActionQueue.state : null\n}\n\nfunction getAppRouterActionQueue(): AppRouterActionQueue {\n  if (globalActionQueue === null) {\n    throw new Error(\n      'Internal Next.js error: Router action dispatched before initialization.'\n    )\n  }\n  return globalActionQueue\n}\n\nfunction getProfilingHookForOnNavigationStart() {\n  if (globalActionQueue !== null) {\n    return globalActionQueue.onRouterTransitionStart\n  }\n  return null\n}\n\nexport function dispatchNavigateAction(\n  href: string,\n  navigateType: NavigateAction['navigateType'],\n  shouldScroll: boolean,\n  linkInstanceRef: LinkInstance | null\n): void {\n  // TODO: This stuff could just go into the reducer. Leaving as-is for now\n  // since we're about to rewrite all the router reducer stuff anyway.\n  const url = new URL(addBasePath(href), location.href)\n  if (process.env.__NEXT_APP_NAV_FAIL_HANDLING) {\n    window.next.__pendingUrl = url\n  }\n\n  setLinkForCurrentNavigation(linkInstanceRef)\n\n  const onRouterTransitionStart = getProfilingHookForOnNavigationStart()\n  if (onRouterTransitionStart !== null) {\n    onRouterTransitionStart(href, navigateType)\n  }\n\n  dispatchAppRouterAction({\n    type: ACTION_NAVIGATE,\n    url,\n    isExternalUrl: isExternalURL(url),\n    locationSearch: location.search,\n    shouldScroll,\n    navigateType,\n    allowAliasing: true,\n  })\n}\n\nexport function dispatchTraverseAction(\n  href: string,\n  tree: FlightRouterState | undefined\n) {\n  const onRouterTransitionStart = getProfilingHookForOnNavigationStart()\n  if (onRouterTransitionStart !== null) {\n    onRouterTransitionStart(href, 'traverse')\n  }\n  dispatchAppRouterAction({\n    type: ACTION_RESTORE,\n    url: new URL(href),\n    tree,\n  })\n}\n\n/**\n * The app router that is exposed through `useRouter`. These are public API\n * methods. Internal Next.js code should call the lower level methods directly\n * (although there's lots of existing code that doesn't do that).\n */\nexport const publicAppRouterInstance: AppRouterInstance = {\n  back: () => window.history.back(),\n  forward: () => window.history.forward(),\n  prefetch: process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? // Unlike the old implementation, the Segment Cache doesn't store its\n      // data in the router reducer state; it writes into a global mutable\n      // cache. So we don't need to dispatch an action.\n      (href: string, options?: PrefetchOptions) => {\n        const actionQueue = getAppRouterActionQueue()\n        prefetchWithSegmentCache(\n          href,\n          actionQueue.state.nextUrl,\n          actionQueue.state.tree,\n          options?.kind === PrefetchKind.FULL\n        )\n      }\n    : (href: string, options?: PrefetchOptions) => {\n        // Use the old prefetch implementation.\n        const actionQueue = getAppRouterActionQueue()\n        const url = createPrefetchURL(href)\n        if (url !== null) {\n          // The prefetch reducer doesn't actually update any state or\n          // trigger a rerender. It just writes to a mutable cache. So we\n          // shouldn't bother calling setState/dispatch; we can just re-run\n          // the reducer directly using the current state.\n          // TODO: Refactor this away from a \"reducer\" so it's\n          // less confusing.\n          prefetchReducer(actionQueue.state, {\n            type: ACTION_PREFETCH,\n            url,\n            kind: options?.kind ?? PrefetchKind.FULL,\n          })\n        }\n      },\n  replace: (href: string, options?: NavigateOptions) => {\n    startTransition(() => {\n      dispatchNavigateAction(href, 'replace', options?.scroll ?? true, null)\n    })\n  },\n  push: (href: string, options?: NavigateOptions) => {\n    startTransition(() => {\n      dispatchNavigateAction(href, 'push', options?.scroll ?? true, null)\n    })\n  },\n  refresh: () => {\n    startTransition(() => {\n      dispatchAppRouterAction({\n        type: ACTION_REFRESH,\n        origin: window.location.origin,\n      })\n    })\n  },\n  hmrRefresh: () => {\n    if (process.env.NODE_ENV !== 'development') {\n      throw new Error(\n        'hmrRefresh can only be used in development mode. Please use refresh instead.'\n      )\n    } else {\n      startTransition(() => {\n        dispatchAppRouterAction({\n          type: ACTION_HMR_REFRESH,\n          origin: window.location.origin,\n        })\n      })\n    }\n  },\n}\n\n// Exists for debugging purposes. Don't use in application code.\nif (typeof window !== 'undefined' && window.next) {\n  window.next.router = publicAppRouterInstance\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.react-server.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.react-server.development.js');\n}\n","import type { FlightRouterState } from '../../../server/app-render/types'\nimport type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport type { AppRouterState } from './router-reducer-types'\nimport { applyFlightData } from './apply-flight-data'\nimport { fetchServerResponse } from './fetch-server-response'\nimport { PAGE_SEGMENT_KEY } from '../../../shared/lib/segment'\n\ninterface RefreshInactiveParallelSegments {\n  navigatedAt: number\n  state: AppRouterState\n  updatedTree: FlightRouterState\n  updatedCache: CacheNode\n  includeNextUrl: boolean\n  canonicalUrl: string\n}\n\n/**\n * Refreshes inactive segments that are still in the current FlightRouterState.\n * A segment is considered \"inactive\" when the server response indicates it didn't match to a page component.\n * This happens during a soft-navigation, where the server will want to patch in the segment\n * with the \"default\" component, but we explicitly ignore the server in this case\n * and keep the existing state for that segment. New data for inactive segments are inherently\n * not part of the server response when we patch the tree, because they were associated with a response\n * from an earlier navigation/request. For each segment, once it becomes \"active\", we encode the URL that provided\n * the data for it. This function traverses parallel routes looking for these markers so that it can re-fetch\n * and patch the new data into the tree.\n */\nexport async function refreshInactiveParallelSegments(\n  options: RefreshInactiveParallelSegments\n) {\n  const fetchedSegments = new Set<string>()\n  await refreshInactiveParallelSegmentsImpl({\n    ...options,\n    rootTree: options.updatedTree,\n    fetchedSegments,\n  })\n}\n\nasync function refreshInactiveParallelSegmentsImpl({\n  navigatedAt,\n  state,\n  updatedTree,\n  updatedCache,\n  includeNextUrl,\n  fetchedSegments,\n  rootTree = updatedTree,\n  canonicalUrl,\n}: RefreshInactiveParallelSegments & {\n  fetchedSegments: Set<string>\n  rootTree: FlightRouterState\n}) {\n  const [, parallelRoutes, refetchPath, refetchMarker] = updatedTree\n  const fetchPromises = []\n\n  if (\n    refetchPath &&\n    refetchPath !== canonicalUrl &&\n    refetchMarker === 'refresh' &&\n    // it's possible for the tree to contain multiple segments that contain data at the same URL\n    // we keep track of them so we can dedupe the requests\n    !fetchedSegments.has(refetchPath)\n  ) {\n    fetchedSegments.add(refetchPath) // Mark this URL as fetched\n\n    // Eagerly kick off the fetch for the refetch path & the parallel routes. This should be fine to do as they each operate\n    // independently on their own cache nodes, and `applyFlightData` will copy anything it doesn't care about from the existing cache.\n    const fetchPromise = fetchServerResponse(\n      new URL(refetchPath, location.origin),\n      {\n        // refetch from the root of the updated tree, otherwise it will be scoped to the current segment\n        // and might not contain the data we need to patch in interception route data (such as dynamic params from a previous segment)\n        flightRouterState: [rootTree[0], rootTree[1], rootTree[2], 'refetch'],\n        nextUrl: includeNextUrl ? state.nextUrl : null,\n      }\n    ).then(({ flightData }) => {\n      if (typeof flightData !== 'string') {\n        for (const flightDataPath of flightData) {\n          // we only pass the new cache as this function is called after clearing the router cache\n          // and filling in the new page data from the server. Meaning the existing cache is actually the cache that's\n          // just been created & has been written to, but hasn't been \"committed\" yet.\n          applyFlightData(\n            navigatedAt,\n            updatedCache,\n            updatedCache,\n            flightDataPath\n          )\n        }\n      } else {\n        // When flightData is a string, it suggests that the server response should have triggered an MPA navigation\n        // I'm not 100% sure of this decision, but it seems unlikely that we'd want to introduce a redirect side effect\n        // when refreshing on-screen data, so handling this has been ommitted.\n      }\n    })\n\n    fetchPromises.push(fetchPromise)\n  }\n\n  for (const key in parallelRoutes) {\n    const parallelFetchPromise = refreshInactiveParallelSegmentsImpl({\n      navigatedAt,\n      state,\n      updatedTree: parallelRoutes[key],\n      updatedCache,\n      includeNextUrl,\n      fetchedSegments,\n      rootTree,\n      canonicalUrl,\n    })\n\n    fetchPromises.push(parallelFetchPromise)\n  }\n\n  await Promise.all(fetchPromises)\n}\n\n/**\n * Walks the current parallel segments to determine if they are \"active\".\n * An active parallel route will have a `__PAGE__` segment in the FlightRouterState.\n * As opposed to a `__DEFAULT__` segment, which means there was no match for that parallel route.\n * We add a special marker here so that we know how to refresh its data when the router is revalidated.\n */\nexport function addRefreshMarkerToActiveParallelSegments(\n  tree: FlightRouterState,\n  path: string\n) {\n  const [segment, parallelRoutes, , refetchMarker] = tree\n  // a page segment might also contain concatenated search params, so we do a partial match on the key\n  if (segment.includes(PAGE_SEGMENT_KEY) && refetchMarker !== 'refresh') {\n    tree[2] = path\n    tree[3] = 'refresh'\n  }\n\n  for (const key in parallelRoutes) {\n    addRefreshMarkerToActiveParallelSegments(parallelRoutes[key], path)\n  }\n}\n","import type { Segment } from '../../../server/app-render/types'\nimport { PAGE_SEGMENT_KEY } from '../../../shared/lib/segment'\n\nexport function createRouterCacheKey(\n  segment: Segment,\n  withoutSearchParameters: boolean = false\n) {\n  // if the segment is an array, it means it's a dynamic segment\n  // for example, ['lang', 'en', 'd']. We need to convert it to a string to store it as a cache node key.\n  if (Array.isArray(segment)) {\n    return `${segment[0]}|${segment[1]}|${segment[2]}`\n  }\n\n  // Page segments might have search parameters, ie __PAGE__?foo=bar\n  // When `withoutSearchParameters` is true, we only want to return the page segment\n  if (withoutSearchParameters && segment.startsWith(PAGE_SEGMENT_KEY)) {\n    return PAGE_SEGMENT_KEY\n  }\n\n  return segment\n}\n","export function createHrefFromUrl(\n  url: Pick<URL, 'pathname' | 'search' | 'hash'>,\n  includeHash: boolean = true\n): string {\n  return url.pathname + url.search + (includeHash ? url.hash : '')\n}\n","import { COOKIE_NAME_PRERENDER_BYPASS, checkIsOnDemandRevalidate } from '../api-utils';\nexport class DraftModeProvider {\n    constructor(previewProps, req, cookies, mutableCookies){\n        var _cookies_get;\n        // The logic for draftMode() is very similar to tryGetPreviewData()\n        // but Draft Mode does not have any data associated with it.\n        const isOnDemandRevalidate = previewProps && checkIsOnDemandRevalidate(req, previewProps).isOnDemandRevalidate;\n        const cookieValue = (_cookies_get = cookies.get(COOKIE_NAME_PRERENDER_BYPASS)) == null ? void 0 : _cookies_get.value;\n        this._isEnabled = Boolean(!isOnDemandRevalidate && cookieValue && previewProps && (cookieValue === previewProps.previewModeId || // In dev mode, the cookie can be actual hash value preview id but the preview props can still be `development-id`.\n        process.env.NODE_ENV !== 'production' && previewProps.previewModeId === 'development-id'));\n        this._previewModeId = previewProps == null ? void 0 : previewProps.previewModeId;\n        this._mutableCookies = mutableCookies;\n    }\n    get isEnabled() {\n        return this._isEnabled;\n    }\n    enable() {\n        if (!this._previewModeId) {\n            throw Object.defineProperty(new Error('Invariant: previewProps missing previewModeId this should never happen'), \"__NEXT_ERROR_CODE\", {\n                value: \"E93\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        this._mutableCookies.set({\n            name: COOKIE_NAME_PRERENDER_BYPASS,\n            value: this._previewModeId,\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/'\n        });\n        this._isEnabled = true;\n    }\n    disable() {\n        // To delete a cookie, set `expires` to a date in the past:\n        // https://tools.ietf.org/html/rfc6265#section-4.1.1\n        // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n        this._mutableCookies.set({\n            name: COOKIE_NAME_PRERENDER_BYPASS,\n            value: '',\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/',\n            expires: new Date(0)\n        });\n        this._isEnabled = false;\n    }\n}\n\n//# sourceMappingURL=draft-mode-provider.js.map","import { FLIGHT_HEADERS } from '../../client/components/app-router-headers';\nimport { HeadersAdapter } from '../web/spec-extension/adapters/headers';\nimport { MutableRequestCookiesAdapter, RequestCookiesAdapter, responseCookiesToRequestCookies, wrapWithMutableAccessCheck } from '../web/spec-extension/adapters/request-cookies';\nimport { ResponseCookies, RequestCookies } from '../web/spec-extension/cookies';\nimport { DraftModeProvider } from './draft-mode-provider';\nimport { splitCookiesString } from '../web/utils';\nfunction getHeaders(headers) {\n    const cleaned = HeadersAdapter.from(headers);\n    for (const header of FLIGHT_HEADERS){\n        cleaned.delete(header.toLowerCase());\n    }\n    return HeadersAdapter.seal(cleaned);\n}\nfunction getMutableCookies(headers, onUpdateCookies) {\n    const cookies = new RequestCookies(HeadersAdapter.from(headers));\n    return MutableRequestCookiesAdapter.wrap(cookies, onUpdateCookies);\n}\n/**\n * If middleware set cookies in this request (indicated by `x-middleware-set-cookie`),\n * then merge those into the existing cookie object, so that when `cookies()` is accessed\n * it's able to read the newly set cookies.\n */ function mergeMiddlewareCookies(req, existingCookies) {\n    if ('x-middleware-set-cookie' in req.headers && typeof req.headers['x-middleware-set-cookie'] === 'string') {\n        const setCookieValue = req.headers['x-middleware-set-cookie'];\n        const responseHeaders = new Headers();\n        for (const cookie of splitCookiesString(setCookieValue)){\n            responseHeaders.append('set-cookie', cookie);\n        }\n        const responseCookies = new ResponseCookies(responseHeaders);\n        // Transfer cookies from ResponseCookies to RequestCookies\n        for (const cookie of responseCookies.getAll()){\n            existingCookies.set(cookie);\n        }\n    }\n}\nexport function createRequestStoreForRender(req, res, url, rootParams, implicitTags, onUpdateCookies, previewProps, isHmrRefresh, serverComponentsHmrCache, renderResumeDataCache) {\n    return createRequestStoreImpl(// Pages start in render phase by default\n    'render', req, res, url, rootParams, implicitTags, onUpdateCookies, renderResumeDataCache, previewProps, isHmrRefresh, serverComponentsHmrCache);\n}\nexport function createRequestStoreForAPI(req, url, implicitTags, onUpdateCookies, previewProps) {\n    return createRequestStoreImpl(// API routes start in action phase by default\n    'action', req, undefined, url, {}, implicitTags, onUpdateCookies, undefined, previewProps, false, undefined);\n}\nfunction createRequestStoreImpl(phase, req, res, url, rootParams, implicitTags, onUpdateCookies, renderResumeDataCache, previewProps, isHmrRefresh, serverComponentsHmrCache) {\n    function defaultOnUpdateCookies(cookies) {\n        if (res) {\n            res.setHeader('Set-Cookie', cookies);\n        }\n    }\n    const cache = {};\n    return {\n        type: 'request',\n        phase,\n        implicitTags,\n        // Rather than just using the whole `url` here, we pull the parts we want\n        // to ensure we don't use parts of the URL that we shouldn't. This also\n        // lets us avoid requiring an empty string for `search` in the type.\n        url: {\n            pathname: url.pathname,\n            search: url.search ?? ''\n        },\n        rootParams,\n        get headers () {\n            if (!cache.headers) {\n                // Seal the headers object that'll freeze out any methods that could\n                // mutate the underlying data.\n                cache.headers = getHeaders(req.headers);\n            }\n            return cache.headers;\n        },\n        get cookies () {\n            if (!cache.cookies) {\n                // if middleware is setting cookie(s), then include those in\n                // the initial cached cookies so they can be read in render\n                const requestCookies = new RequestCookies(HeadersAdapter.from(req.headers));\n                mergeMiddlewareCookies(req, requestCookies);\n                // Seal the cookies object that'll freeze out any methods that could\n                // mutate the underlying data.\n                cache.cookies = RequestCookiesAdapter.seal(requestCookies);\n            }\n            return cache.cookies;\n        },\n        set cookies (value){\n            cache.cookies = value;\n        },\n        get mutableCookies () {\n            if (!cache.mutableCookies) {\n                const mutableCookies = getMutableCookies(req.headers, onUpdateCookies || (res ? defaultOnUpdateCookies : undefined));\n                mergeMiddlewareCookies(req, mutableCookies);\n                cache.mutableCookies = mutableCookies;\n            }\n            return cache.mutableCookies;\n        },\n        get userspaceMutableCookies () {\n            if (!cache.userspaceMutableCookies) {\n                const userspaceMutableCookies = wrapWithMutableAccessCheck(this.mutableCookies);\n                cache.userspaceMutableCookies = userspaceMutableCookies;\n            }\n            return cache.userspaceMutableCookies;\n        },\n        get draftMode () {\n            if (!cache.draftMode) {\n                cache.draftMode = new DraftModeProvider(previewProps, req, this.cookies, this.mutableCookies);\n            }\n            return cache.draftMode;\n        },\n        renderResumeDataCache: renderResumeDataCache ?? null,\n        isHmrRefresh,\n        serverComponentsHmrCache: serverComponentsHmrCache || globalThis.__serverComponentsHmrCache\n    };\n}\nexport function synchronizeMutableCookies(store) {\n    // TODO: does this need to update headers as well?\n    store.cookies = RequestCookiesAdapter.seal(responseCookiesToRequestCookies(store.mutableCookies));\n}\n\n//# sourceMappingURL=request-store.js.map","import { Batcher } from '../../lib/batcher';\nimport { scheduleOnNextTick } from '../../lib/scheduler';\nimport { fromResponseCacheEntry, routeKindToIncrementalCacheKind, toResponseCacheEntry } from './utils';\nexport * from './types';\nexport default class ResponseCache {\n    constructor(minimalMode){\n        this.batcher = Batcher.create({\n            // Ensure on-demand revalidate doesn't block normal requests, it should be\n            // safe to run an on-demand revalidate for the same key as a normal request.\n            cacheKeyFn: ({ key, isOnDemandRevalidate })=>`${key}-${isOnDemandRevalidate ? '1' : '0'}`,\n            // We wait to do any async work until after we've added our promise to\n            // `pendingResponses` to ensure that any any other calls will reuse the\n            // same promise until we've fully finished our work.\n            schedulerFn: scheduleOnNextTick\n        });\n        // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n        // because we replace this.minimalMode to true in production bundles.\n        const minimalModeKey = 'minimalMode';\n        this[minimalModeKey] = minimalMode;\n    }\n    async get(key, responseGenerator, context) {\n        // If there is no key for the cache, we can't possibly look this up in the\n        // cache so just return the result of the response generator.\n        if (!key) {\n            return responseGenerator({\n                hasResolved: false,\n                previousCacheEntry: null\n            });\n        }\n        const { incrementalCache, isOnDemandRevalidate = false, isFallback = false, isRoutePPREnabled = false } = context;\n        const response = await this.batcher.batch({\n            key,\n            isOnDemandRevalidate\n        }, async (cacheKey, resolve)=>{\n            var _this_previousCacheItem;\n            // We keep the previous cache entry around to leverage when the\n            // incremental cache is disabled in minimal mode.\n            if (this.minimalMode && ((_this_previousCacheItem = this.previousCacheItem) == null ? void 0 : _this_previousCacheItem.key) === cacheKey && this.previousCacheItem.expiresAt > Date.now()) {\n                return this.previousCacheItem.entry;\n            }\n            // Coerce the kindHint into a given kind for the incremental cache.\n            const kind = routeKindToIncrementalCacheKind(context.routeKind);\n            let resolved = false;\n            let cachedResponse = null;\n            try {\n                cachedResponse = !this.minimalMode ? await incrementalCache.get(key, {\n                    kind,\n                    isRoutePPREnabled: context.isRoutePPREnabled,\n                    isFallback\n                }) : null;\n                if (cachedResponse && !isOnDemandRevalidate) {\n                    resolve(cachedResponse);\n                    resolved = true;\n                    if (!cachedResponse.isStale || context.isPrefetch) {\n                        // The cached value is still valid, so we don't need\n                        // to update it yet.\n                        return null;\n                    }\n                }\n                const cacheEntry = await responseGenerator({\n                    hasResolved: resolved,\n                    previousCacheEntry: cachedResponse,\n                    isRevalidating: true\n                });\n                // If the cache entry couldn't be generated, we don't want to cache\n                // the result.\n                if (!cacheEntry) {\n                    // Unset the previous cache item if it was set.\n                    if (this.minimalMode) this.previousCacheItem = undefined;\n                    return null;\n                }\n                const resolveValue = await fromResponseCacheEntry({\n                    ...cacheEntry,\n                    isMiss: !cachedResponse\n                });\n                if (!resolveValue) {\n                    // Unset the previous cache item if it was set.\n                    if (this.minimalMode) this.previousCacheItem = undefined;\n                    return null;\n                }\n                // For on-demand revalidate wait to resolve until cache is set.\n                // Otherwise resolve now.\n                if (!isOnDemandRevalidate && !resolved) {\n                    resolve(resolveValue);\n                    resolved = true;\n                }\n                // We want to persist the result only if it has a cache control value\n                // defined.\n                if (resolveValue.cacheControl) {\n                    if (this.minimalMode) {\n                        this.previousCacheItem = {\n                            key: cacheKey,\n                            entry: resolveValue,\n                            expiresAt: Date.now() + 1000\n                        };\n                    } else {\n                        await incrementalCache.set(key, resolveValue.value, {\n                            cacheControl: resolveValue.cacheControl,\n                            isRoutePPREnabled,\n                            isFallback\n                        });\n                    }\n                }\n                return resolveValue;\n            } catch (err) {\n                // When a path is erroring we automatically re-set the existing cache\n                // with new revalidate and expire times to prevent non-stop retrying.\n                if (cachedResponse == null ? void 0 : cachedResponse.cacheControl) {\n                    const newRevalidate = Math.min(Math.max(cachedResponse.cacheControl.revalidate || 3, 3), 30);\n                    const newExpire = cachedResponse.cacheControl.expire === undefined ? undefined : Math.max(newRevalidate + 3, cachedResponse.cacheControl.expire);\n                    await incrementalCache.set(key, cachedResponse.value, {\n                        cacheControl: {\n                            revalidate: newRevalidate,\n                            expire: newExpire\n                        },\n                        isRoutePPREnabled,\n                        isFallback\n                    });\n                }\n                // While revalidating in the background we can't reject as we already\n                // resolved the cache entry so log the error here.\n                if (resolved) {\n                    console.error(err);\n                    return null;\n                }\n                // We haven't resolved yet, so let's throw to indicate an error.\n                throw err;\n            }\n        });\n        return toResponseCacheEntry(response);\n    }\n}\n\n//# sourceMappingURL=index.js.map","import { chainStreams, streamFromBuffer, streamFromString, streamToBuffer, streamToString } from './stream-utils/node-web-streams-helper';\nimport { isAbortError, pipeToNodeResponse } from './pipe-readable';\nexport default class RenderResult {\n    /**\n   * Creates a new RenderResult instance from a static response.\n   *\n   * @param value the static response value\n   * @returns a new RenderResult instance\n   */ static fromStatic(value) {\n        return new RenderResult(value, {\n            metadata: {}\n        });\n    }\n    constructor(response, { contentType, waitUntil, metadata }){\n        this.response = response;\n        this.contentType = contentType;\n        this.metadata = metadata;\n        this.waitUntil = waitUntil;\n    }\n    assignMetadata(metadata) {\n        Object.assign(this.metadata, metadata);\n    }\n    /**\n   * Returns true if the response is null. It can be null if the response was\n   * not found or was already sent.\n   */ get isNull() {\n        return this.response === null;\n    }\n    /**\n   * Returns false if the response is a string. It can be a string if the page\n   * was prerendered. If it's not, then it was generated dynamically.\n   */ get isDynamic() {\n        return typeof this.response !== 'string';\n    }\n    toUnchunkedBuffer(stream = false) {\n        if (this.response === null) {\n            throw Object.defineProperty(new Error('Invariant: null responses cannot be unchunked'), \"__NEXT_ERROR_CODE\", {\n                value: \"E274\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (typeof this.response !== 'string') {\n            if (!stream) {\n                throw Object.defineProperty(new Error('Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E81\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            return streamToBuffer(this.readable);\n        }\n        return Buffer.from(this.response);\n    }\n    toUnchunkedString(stream = false) {\n        if (this.response === null) {\n            throw Object.defineProperty(new Error('Invariant: null responses cannot be unchunked'), \"__NEXT_ERROR_CODE\", {\n                value: \"E274\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (typeof this.response !== 'string') {\n            if (!stream) {\n                throw Object.defineProperty(new Error('Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E81\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            return streamToString(this.readable);\n        }\n        return this.response;\n    }\n    /**\n   * Returns the response if it is a stream, or throws an error if it is a\n   * string.\n   */ get readable() {\n        if (this.response === null) {\n            throw Object.defineProperty(new Error('Invariant: null responses cannot be streamed'), \"__NEXT_ERROR_CODE\", {\n                value: \"E14\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (typeof this.response === 'string') {\n            throw Object.defineProperty(new Error('Invariant: static responses cannot be streamed'), \"__NEXT_ERROR_CODE\", {\n                value: \"E151\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (Buffer.isBuffer(this.response)) {\n            return streamFromBuffer(this.response);\n        }\n        // If the response is an array of streams, then chain them together.\n        if (Array.isArray(this.response)) {\n            return chainStreams(...this.response);\n        }\n        return this.response;\n    }\n    /**\n   * Chains a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the end. When this response is piped, all of the streams will be piped\n   * one after the other.\n   *\n   * @param readable The new stream to chain\n   */ chain(readable) {\n        if (this.response === null) {\n            throw Object.defineProperty(new Error('Invariant: response is null. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n                value: \"E258\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        // If the response is not an array of streams already, make it one.\n        let responses;\n        if (typeof this.response === 'string') {\n            responses = [\n                streamFromString(this.response)\n            ];\n        } else if (Array.isArray(this.response)) {\n            responses = this.response;\n        } else if (Buffer.isBuffer(this.response)) {\n            responses = [\n                streamFromBuffer(this.response)\n            ];\n        } else {\n            responses = [\n                this.response\n            ];\n        }\n        // Add the new stream to the array.\n        responses.push(readable);\n        // Update the response.\n        this.response = responses;\n    }\n    /**\n   * Pipes the response to a writable stream. This will close/cancel the\n   * writable stream if an error is encountered. If this doesn't throw, then\n   * the writable stream will be closed or aborted.\n   *\n   * @param writable Writable stream to pipe the response to\n   */ async pipeTo(writable) {\n        try {\n            await this.readable.pipeTo(writable, {\n                // We want to close the writable stream ourselves so that we can wait\n                // for the waitUntil promise to resolve before closing it. If an error\n                // is encountered, we'll abort the writable stream if we swallowed the\n                // error.\n                preventClose: true\n            });\n            // If there is a waitUntil promise, wait for it to resolve before\n            // closing the writable stream.\n            if (this.waitUntil) await this.waitUntil;\n            // Close the writable stream.\n            await writable.close();\n        } catch (err) {\n            // If this is an abort error, we should abort the writable stream (as we\n            // took ownership of it when we started piping). We don't need to re-throw\n            // because we handled the error.\n            if (isAbortError(err)) {\n                // Abort the writable stream if an error is encountered.\n                await writable.abort(err);\n                return;\n            }\n            // We're not aborting the writer here as when this method throws it's not\n            // clear as to how so the caller should assume it's their responsibility\n            // to clean up the writer.\n            throw err;\n        }\n    }\n    /**\n   * Pipes the response to a node response. This will close/cancel the node\n   * response if an error is encountered.\n   *\n   * @param res\n   */ async pipeToNodeResponse(res) {\n        await pipeToNodeResponse(this.readable, res, this.waitUntil);\n    }\n}\n\n//# sourceMappingURL=render-result.js.map","(()=>{\"use strict\";var e={993:e=>{var t=Object.prototype.hasOwnProperty,n=\"~\";function Events(){}if(Object.create){Events.prototype=Object.create(null);if(!(new Events).__proto__)n=false}function EE(e,t,n){this.fn=e;this.context=t;this.once=n||false}function addListener(e,t,r,i,s){if(typeof r!==\"function\"){throw new TypeError(\"The listener must be a function\")}var o=new EE(r,i||e,s),u=n?n+t:t;if(!e._events[u])e._events[u]=o,e._eventsCount++;else if(!e._events[u].fn)e._events[u].push(o);else e._events[u]=[e._events[u],o];return e}function clearEvent(e,t){if(--e._eventsCount===0)e._events=new Events;else delete e._events[t]}function EventEmitter(){this._events=new Events;this._eventsCount=0}EventEmitter.prototype.eventNames=function eventNames(){var e=[],r,i;if(this._eventsCount===0)return e;for(i in r=this._events){if(t.call(r,i))e.push(n?i.slice(1):i)}if(Object.getOwnPropertySymbols){return e.concat(Object.getOwnPropertySymbols(r))}return e};EventEmitter.prototype.listeners=function listeners(e){var t=n?n+e:e,r=this._events[t];if(!r)return[];if(r.fn)return[r.fn];for(var i=0,s=r.length,o=new Array(s);i<s;i++){o[i]=r[i].fn}return o};EventEmitter.prototype.listenerCount=function listenerCount(e){var t=n?n+e:e,r=this._events[t];if(!r)return 0;if(r.fn)return 1;return r.length};EventEmitter.prototype.emit=function emit(e,t,r,i,s,o){var u=n?n+e:e;if(!this._events[u])return false;var a=this._events[u],l=arguments.length,c,h;if(a.fn){if(a.once)this.removeListener(e,a.fn,undefined,true);switch(l){case 1:return a.fn.call(a.context),true;case 2:return a.fn.call(a.context,t),true;case 3:return a.fn.call(a.context,t,r),true;case 4:return a.fn.call(a.context,t,r,i),true;case 5:return a.fn.call(a.context,t,r,i,s),true;case 6:return a.fn.call(a.context,t,r,i,s,o),true}for(h=1,c=new Array(l-1);h<l;h++){c[h-1]=arguments[h]}a.fn.apply(a.context,c)}else{var _=a.length,f;for(h=0;h<_;h++){if(a[h].once)this.removeListener(e,a[h].fn,undefined,true);switch(l){case 1:a[h].fn.call(a[h].context);break;case 2:a[h].fn.call(a[h].context,t);break;case 3:a[h].fn.call(a[h].context,t,r);break;case 4:a[h].fn.call(a[h].context,t,r,i);break;default:if(!c)for(f=1,c=new Array(l-1);f<l;f++){c[f-1]=arguments[f]}a[h].fn.apply(a[h].context,c)}}}return true};EventEmitter.prototype.on=function on(e,t,n){return addListener(this,e,t,n,false)};EventEmitter.prototype.once=function once(e,t,n){return addListener(this,e,t,n,true)};EventEmitter.prototype.removeListener=function removeListener(e,t,r,i){var s=n?n+e:e;if(!this._events[s])return this;if(!t){clearEvent(this,s);return this}var o=this._events[s];if(o.fn){if(o.fn===t&&(!i||o.once)&&(!r||o.context===r)){clearEvent(this,s)}}else{for(var u=0,a=[],l=o.length;u<l;u++){if(o[u].fn!==t||i&&!o[u].once||r&&o[u].context!==r){a.push(o[u])}}if(a.length)this._events[s]=a.length===1?a[0]:a;else clearEvent(this,s)}return this};EventEmitter.prototype.removeAllListeners=function removeAllListeners(e){var t;if(e){t=n?n+e:e;if(this._events[t])clearEvent(this,t)}else{this._events=new Events;this._eventsCount=0}return this};EventEmitter.prototype.off=EventEmitter.prototype.removeListener;EventEmitter.prototype.addListener=EventEmitter.prototype.on;EventEmitter.prefixed=n;EventEmitter.EventEmitter=EventEmitter;if(true){e.exports=EventEmitter}},213:e=>{e.exports=(e,t)=>{t=t||(()=>{});return e.then((e=>new Promise((e=>{e(t())})).then((()=>e))),(e=>new Promise((e=>{e(t())})).then((()=>{throw e}))))}},574:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});function lowerBound(e,t,n){let r=0;let i=e.length;while(i>0){const s=i/2|0;let o=r+s;if(n(e[o],t)<=0){r=++o;i-=s+1}else{i=s}}return r}t[\"default\"]=lowerBound},821:(e,t,n)=>{Object.defineProperty(t,\"__esModule\",{value:true});const r=n(574);class PriorityQueue{constructor(){this._queue=[]}enqueue(e,t){t=Object.assign({priority:0},t);const n={priority:t.priority,run:e};if(this.size&&this._queue[this.size-1].priority>=t.priority){this._queue.push(n);return}const i=r.default(this._queue,n,((e,t)=>t.priority-e.priority));this._queue.splice(i,0,n)}dequeue(){const e=this._queue.shift();return e===null||e===void 0?void 0:e.run}filter(e){return this._queue.filter((t=>t.priority===e.priority)).map((e=>e.run))}get size(){return this._queue.length}}t[\"default\"]=PriorityQueue},816:(e,t,n)=>{const r=n(213);class TimeoutError extends Error{constructor(e){super(e);this.name=\"TimeoutError\"}}const pTimeout=(e,t,n)=>new Promise(((i,s)=>{if(typeof t!==\"number\"||t<0){throw new TypeError(\"Expected `milliseconds` to be a positive number\")}if(t===Infinity){i(e);return}const o=setTimeout((()=>{if(typeof n===\"function\"){try{i(n())}catch(e){s(e)}return}const r=typeof n===\"string\"?n:`Promise timed out after ${t} milliseconds`;const o=n instanceof Error?n:new TimeoutError(r);if(typeof e.cancel===\"function\"){e.cancel()}s(o)}),t);r(e.then(i,s),(()=>{clearTimeout(o)}))}));e.exports=pTimeout;e.exports[\"default\"]=pTimeout;e.exports.TimeoutError=TimeoutError}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var i=t[n]={exports:{}};var s=true;try{e[n](i,i.exports,__nccwpck_require__);s=false}finally{if(s)delete t[n]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};(()=>{var e=n;Object.defineProperty(e,\"__esModule\",{value:true});const t=__nccwpck_require__(993);const r=__nccwpck_require__(816);const i=__nccwpck_require__(821);const empty=()=>{};const s=new r.TimeoutError;class PQueue extends t{constructor(e){var t,n,r,s;super();this._intervalCount=0;this._intervalEnd=0;this._pendingCount=0;this._resolveEmpty=empty;this._resolveIdle=empty;e=Object.assign({carryoverConcurrencyCount:false,intervalCap:Infinity,interval:0,concurrency:Infinity,autoStart:true,queueClass:i.default},e);if(!(typeof e.intervalCap===\"number\"&&e.intervalCap>=1)){throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(n=(t=e.intervalCap)===null||t===void 0?void 0:t.toString())!==null&&n!==void 0?n:\"\"}\\` (${typeof e.intervalCap})`)}if(e.interval===undefined||!(Number.isFinite(e.interval)&&e.interval>=0)){throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(s=(r=e.interval)===null||r===void 0?void 0:r.toString())!==null&&s!==void 0?s:\"\"}\\` (${typeof e.interval})`)}this._carryoverConcurrencyCount=e.carryoverConcurrencyCount;this._isIntervalIgnored=e.intervalCap===Infinity||e.interval===0;this._intervalCap=e.intervalCap;this._interval=e.interval;this._queue=new e.queueClass;this._queueClass=e.queueClass;this.concurrency=e.concurrency;this._timeout=e.timeout;this._throwOnTimeout=e.throwOnTimeout===true;this._isPaused=e.autoStart===false}get _doesIntervalAllowAnother(){return this._isIntervalIgnored||this._intervalCount<this._intervalCap}get _doesConcurrentAllowAnother(){return this._pendingCount<this._concurrency}_next(){this._pendingCount--;this._tryToStartAnother();this.emit(\"next\")}_resolvePromises(){this._resolveEmpty();this._resolveEmpty=empty;if(this._pendingCount===0){this._resolveIdle();this._resolveIdle=empty;this.emit(\"idle\")}}_onResumeInterval(){this._onInterval();this._initializeIntervalIfNeeded();this._timeoutId=undefined}_isIntervalPaused(){const e=Date.now();if(this._intervalId===undefined){const t=this._intervalEnd-e;if(t<0){this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0}else{if(this._timeoutId===undefined){this._timeoutId=setTimeout((()=>{this._onResumeInterval()}),t)}return true}}return false}_tryToStartAnother(){if(this._queue.size===0){if(this._intervalId){clearInterval(this._intervalId)}this._intervalId=undefined;this._resolvePromises();return false}if(!this._isPaused){const e=!this._isIntervalPaused();if(this._doesIntervalAllowAnother&&this._doesConcurrentAllowAnother){const t=this._queue.dequeue();if(!t){return false}this.emit(\"active\");t();if(e){this._initializeIntervalIfNeeded()}return true}}return false}_initializeIntervalIfNeeded(){if(this._isIntervalIgnored||this._intervalId!==undefined){return}this._intervalId=setInterval((()=>{this._onInterval()}),this._interval);this._intervalEnd=Date.now()+this._interval}_onInterval(){if(this._intervalCount===0&&this._pendingCount===0&&this._intervalId){clearInterval(this._intervalId);this._intervalId=undefined}this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0;this._processQueue()}_processQueue(){while(this._tryToStartAnother()){}}get concurrency(){return this._concurrency}set concurrency(e){if(!(typeof e===\"number\"&&e>=1)){throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${e}\\` (${typeof e})`)}this._concurrency=e;this._processQueue()}async add(e,t={}){return new Promise(((n,i)=>{const run=async()=>{this._pendingCount++;this._intervalCount++;try{const o=this._timeout===undefined&&t.timeout===undefined?e():r.default(Promise.resolve(e()),t.timeout===undefined?this._timeout:t.timeout,(()=>{if(t.throwOnTimeout===undefined?this._throwOnTimeout:t.throwOnTimeout){i(s)}return undefined}));n(await o)}catch(e){i(e)}this._next()};this._queue.enqueue(run,t);this._tryToStartAnother();this.emit(\"add\")}))}async addAll(e,t){return Promise.all(e.map((async e=>this.add(e,t))))}start(){if(!this._isPaused){return this}this._isPaused=false;this._processQueue();return this}pause(){this._isPaused=true}clear(){this._queue=new this._queueClass}async onEmpty(){if(this._queue.size===0){return}return new Promise((e=>{const t=this._resolveEmpty;this._resolveEmpty=()=>{t();e()}}))}async onIdle(){if(this._pendingCount===0&&this._queue.size===0){return}return new Promise((e=>{const t=this._resolveIdle;this._resolveIdle=()=>{t();e()}}))}get size(){return this._queue.size}sizeBy(e){return this._queue.filter(e).length}get pending(){return this._pendingCount}get isPaused(){return this._isPaused}get timeout(){return this._timeout}set timeout(e){this._timeout=e}}e[\"default\"]=PQueue})();module.exports=n})();","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-server-dom-webpack-client.edge.production.js');\n} else {\n  module.exports = require('./cjs/react-server-dom-webpack-client.edge.development.js');\n}\n","export { RequestCookies, ResponseCookies, stringifyCookie } from 'next/dist/compiled/@edge-runtime/cookies';\n\n//# sourceMappingURL=cookies.js.map","import type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport type {\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../../server/app-render/types'\nimport type { FetchServerResponseResult } from './fetch-server-response'\n\nexport const ACTION_REFRESH = 'refresh'\nexport const ACTION_NAVIGATE = 'navigate'\nexport const ACTION_RESTORE = 'restore'\nexport const ACTION_SERVER_PATCH = 'server-patch'\nexport const ACTION_PREFETCH = 'prefetch'\nexport const ACTION_HMR_REFRESH = 'hmr-refresh'\nexport const ACTION_SERVER_ACTION = 'server-action'\n\nexport type RouterChangeByServerResponse = ({\n  navigatedAt,\n  previousTree,\n  serverResponse,\n}: {\n  navigatedAt: number\n  previousTree: FlightRouterState\n  serverResponse: FetchServerResponseResult\n}) => void\n\nexport interface Mutable {\n  mpaNavigation?: boolean\n  patchedTree?: FlightRouterState\n  canonicalUrl?: string\n  scrollableSegments?: FlightSegmentPath[]\n  pendingPush?: boolean\n  cache?: CacheNode\n  prefetchCache?: AppRouterState['prefetchCache']\n  hashFragment?: string\n  shouldScroll?: boolean\n  preserveCustomHistoryState?: boolean\n  onlyHashChange?: boolean\n}\n\nexport interface ServerActionMutable extends Mutable {\n  inFlightServerAction?: Promise<any> | null\n}\n\n/**\n * Refresh triggers a refresh of the full page data.\n * - fetches the Flight data and fills rsc at the root of the cache.\n * - The router state is updated at the root.\n */\nexport interface RefreshAction {\n  type: typeof ACTION_REFRESH\n  origin: Location['origin']\n}\n\nexport interface HmrRefreshAction {\n  type: typeof ACTION_HMR_REFRESH\n  origin: Location['origin']\n}\n\nexport type ServerActionDispatcher = (\n  args: Omit<\n    ServerActionAction,\n    'type' | 'mutable' | 'navigate' | 'changeByServerResponse' | 'cache'\n  >\n) => void\n\nexport interface ServerActionAction {\n  type: typeof ACTION_SERVER_ACTION\n  actionId: string\n  actionArgs: any[]\n  resolve: (value: any) => void\n  reject: (reason?: any) => void\n}\n\n/**\n * Navigate triggers a navigation to the provided url. It supports two types: `push` and `replace`.\n *\n * `navigateType`:\n * - `push` - pushes a new history entry in the browser history\n * - `replace` - replaces the current history entry in the browser history\n *\n * Navigate has multiple cache heuristics:\n * - page was prefetched\n *  - Apply router state tree from prefetch\n *  - Apply Flight data from prefetch to the cache\n *  - If Flight data is a string, it's a redirect and the state is updated to trigger a redirect\n *  - Check if hard navigation is needed\n *    - Hard navigation happens when a dynamic parameter below the common layout changed\n *    - When hard navigation is needed the cache is invalidated below the flightSegmentPath\n *    - The missing cache nodes of the page will be fetched in layout-router and trigger the SERVER_PATCH action\n *  - If hard navigation is not needed\n *    - The cache is reused\n *    - If any cache nodes are missing they'll be fetched in layout-router and trigger the SERVER_PATCH action\n * - page was not prefetched\n *  - The navigate was called from `next/router` (`router.push()` / `router.replace()`) / `next/link` without prefetched data available (e.g. the prefetch didn't come back from the server before clicking the link)\n *    - Flight data is fetched in the reducer (suspends the reducer)\n *    - Router state tree is created based on Flight data\n *    - Cache is filled based on the Flight data\n *\n * Above steps explain 3 cases:\n * - `soft` - Reuses the existing cache and fetches missing nodes in layout-router.\n * - `hard` - Creates a new cache where cache nodes are removed below the common layout and fetches missing nodes in layout-router.\n * - `optimistic` (explicit no prefetch) - Creates a new cache and kicks off the data fetch in the reducer. The data fetch is awaited in the layout-router.\n */\nexport interface NavigateAction {\n  type: typeof ACTION_NAVIGATE\n  url: URL\n  isExternalUrl: boolean\n  locationSearch: Location['search']\n  navigateType: 'push' | 'replace'\n  shouldScroll: boolean\n  allowAliasing: boolean\n}\n\n/**\n * Restore applies the provided router state.\n * - Used for `popstate` (back/forward navigation) where a known router state has to be applied.\n * - Also used when syncing the router state with `pushState`/`replaceState` calls.\n * - Router state is applied as-is from the history state, if available.\n * - If the history state does not contain the router state, the existing router state is used.\n * - If any cache node is missing it will be fetched in layout-router during rendering and the server-patch case.\n * - If existing cache nodes match these are used.\n */\nexport interface RestoreAction {\n  type: typeof ACTION_RESTORE\n  url: URL\n  tree: FlightRouterState | undefined\n}\n\n/**\n * Server-patch applies the provided Flight data to the cache and router tree.\n * - Only triggered in layout-router.\n * - Creates a new cache and router state with the Flight data applied.\n */\nexport interface ServerPatchAction {\n  type: typeof ACTION_SERVER_PATCH\n  navigatedAt: number\n  serverResponse: FetchServerResponseResult\n  previousTree: FlightRouterState\n}\n\n/**\n * PrefetchKind defines the type of prefetching that should be done.\n * - `auto` - if the page is dynamic, prefetch the page data partially, if static prefetch the page data fully.\n * - `full` - prefetch the page data fully.\n * - `temporary` - a temporary prefetch entry is added to the cache, this is used when prefetch={false} is used in next/link or when you push a route programmatically.\n */\n\nexport enum PrefetchKind {\n  AUTO = 'auto',\n  FULL = 'full',\n  TEMPORARY = 'temporary',\n}\n\n/**\n * Prefetch adds the provided FlightData to the prefetch cache\n * - Creates the router state tree based on the patch in FlightData\n * - Adds the FlightData to the prefetch cache\n * - In ACTION_NAVIGATE the prefetch cache is checked and the router state tree and FlightData are applied.\n */\nexport interface PrefetchAction {\n  type: typeof ACTION_PREFETCH\n  url: URL\n  kind: PrefetchKind\n}\n\nexport interface PushRef {\n  /**\n   * If the app-router should push a new history entry in app-router's useEffect()\n   */\n  pendingPush: boolean\n  /**\n   * Multi-page navigation through location.href.\n   */\n  mpaNavigation: boolean\n  /**\n   * Skip applying the router state to the browser history state.\n   */\n  preserveCustomHistoryState: boolean\n}\n\nexport type FocusAndScrollRef = {\n  /**\n   * If focus and scroll should be set in the layout-router's useEffect()\n   */\n  apply: boolean\n  /**\n   * The hash fragment that should be scrolled to.\n   */\n  hashFragment: string | null\n  /**\n   * The paths of the segments that should be focused.\n   */\n  segmentPaths: FlightSegmentPath[]\n  /**\n   * If only the URLs hash fragment changed\n   */\n  onlyHashChange: boolean\n}\n\nexport type PrefetchCacheEntry = {\n  treeAtTimeOfPrefetch: FlightRouterState\n  data: Promise<FetchServerResponseResult>\n  kind: PrefetchKind\n  prefetchTime: number\n  staleTime: number\n  lastUsedTime: number | null\n  key: string\n  status: PrefetchCacheEntryStatus\n  url: URL\n}\n\nexport enum PrefetchCacheEntryStatus {\n  fresh = 'fresh',\n  reusable = 'reusable',\n  expired = 'expired',\n  stale = 'stale',\n}\n\n/**\n * Handles keeping the state of app-router.\n */\nexport type AppRouterState = {\n  /**\n   * The router state, this is written into the history state in app-router using replaceState/pushState.\n   * - Has to be serializable as it is written into the history state.\n   * - Holds which segments and parallel routes are shown on the screen.\n   */\n  tree: FlightRouterState\n  /**\n   * The cache holds React nodes for every segment that is shown on screen as well as previously shown segments.\n   * It also holds in-progress data requests.\n   * Prefetched data is stored separately in `prefetchCache`, that is applied during ACTION_NAVIGATE.\n   */\n  cache: CacheNode\n  /**\n   * Cache that holds prefetched Flight responses keyed by url.\n   */\n  prefetchCache: Map<string, PrefetchCacheEntry>\n  /**\n   * Decides if the update should create a new history entry and if the navigation has to trigger a browser navigation.\n   */\n  pushRef: PushRef\n  /**\n   * Decides if the update should apply scroll and focus management.\n   */\n  focusAndScrollRef: FocusAndScrollRef\n  /**\n   * The canonical url that is pushed/replaced.\n   * - This is the url you see in the browser.\n   */\n  canonicalUrl: string\n  /**\n   * The underlying \"url\" representing the UI state, which is used for intercepting routes.\n   */\n  nextUrl: string | null\n}\n\nexport type ReadonlyReducerState = Readonly<AppRouterState>\nexport type ReducerState = Promise<AppRouterState> | AppRouterState\nexport type ReducerActions = Readonly<\n  | RefreshAction\n  | NavigateAction\n  | RestoreAction\n  | ServerPatchAction\n  | PrefetchAction\n  | HmrRefreshAction\n  | ServerActionAction\n>\n","// Combined load times for loading client components\nlet clientComponentLoadStart = 0;\nlet clientComponentLoadTimes = 0;\nlet clientComponentLoadCount = 0;\nexport function wrapClientComponentLoader(ComponentMod) {\n    if (!('performance' in globalThis)) {\n        return ComponentMod.__next_app__;\n    }\n    return {\n        require: (...args)=>{\n            const startTime = performance.now();\n            if (clientComponentLoadStart === 0) {\n                clientComponentLoadStart = startTime;\n            }\n            try {\n                clientComponentLoadCount += 1;\n                return ComponentMod.__next_app__.require(...args);\n            } finally{\n                clientComponentLoadTimes += performance.now() - startTime;\n            }\n        },\n        loadChunk: (...args)=>{\n            const startTime = performance.now();\n            const result = ComponentMod.__next_app__.loadChunk(...args);\n            // Avoid wrapping `loadChunk`'s result in an extra promise in case something like React depends on its identity.\n            // We only need to know when it's settled.\n            result.finally(()=>{\n                clientComponentLoadTimes += performance.now() - startTime;\n            });\n            return result;\n        }\n    };\n}\nexport function getClientComponentLoaderMetrics(options = {}) {\n    const metrics = clientComponentLoadStart === 0 ? undefined : {\n        clientComponentLoadStart,\n        clientComponentLoadTimes,\n        clientComponentLoadCount\n    };\n    if (options.reset) {\n        clientComponentLoadStart = 0;\n        clientComponentLoadTimes = 0;\n        clientComponentLoadCount = 0;\n    }\n    return metrics;\n}\n\n//# sourceMappingURL=client-component-renderer-logger.js.map","export * from '../client/components/navigation';\n\n//# sourceMappingURL=navigation.js.map"],"names":["getRouteMatcher","re","groups","pathname","routeMatch","exec","decode","decodeURIComponent","param","DecodeError","params","key","group","Object","entries","match","pos","undefined","repeat","split","map","entry","HeadManagerContext","React","parseRelativeURL","url","base","baseURL","URL","relative","isRelative","origin","toString","slice","length","ServerInsertedHTMLContext","useServerInsertedHTML","callback","addInsertedServerHTMLCallback","useContext","getNextPathnameInfo","options","result","basePath","i18n","trailingSlash","nextConfig","info","endsWith","pathHasPrefix","removePathPrefix","pathnameNoDataPrefix","startsWith","paths","replace","buildId","join","parseData","i18nProvider","analyze","normalizeLocalePath","locales","locale","detectedLocale","useNavFailureHandler","getHostname","parsed","headers","hostname","host","Array","isArray","toLowerCase","dispatch","dispatchAppRouterAction","action","useActionQueue","actionQueue","state","setState","isThenable","use","ReactDOM","require","decoderOptions","stream","chunkCache","Map","requireAsyncModule","id","promise","globalThis","__next_require__","then","status","value","reason","ignoreReject","preloadModule","metadata","chunks","promises","i","chunkId","get","__webpack_chunk_load__","push","resolve","set","bind","Promise","all","requireModule","moduleExports","__esModule","default","ReactDOMSharedInternals","__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","REACT_ELEMENT_TYPE","Symbol","for","REACT_LAZY_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","ASYNC_ITERATOR","asyncIterator","isArrayImpl","getPrototypeOf","ObjectPrototype","prototype","knownServerReferences","WeakMap","processReply","root","formFieldPrefix","temporaryReferences","reject","serializeTypedArray","tag","typedArray","Blob","Uint8Array","buffer","byteOffset","byteLength","blobId","nextPartId","formData","FormData","append","resolveToJSON","$$typeof","indexOf","maybeIterable","iterable","writtenObjects","parentReference","Error","_payload","init","_init","pendingParts","resolvedModel","lazyId","partJSON","serializeModel","x","lazyId$24","partJSON$25","data$26","promiseId","partValue","partJSON$28","modelRoot","data$32","prefix","forEach","originalValue","originalKey","from","Set","ArrayBuffer","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array","DataView","getIteratorFn","call","ReadableStream","serializeReadableStream","data","streamId","reader","binaryReader","getReader","mode","read","progress","done","JSON","stringify","serializeBinaryReader","serializeAsyncIterable","next","partJSON$22","x$23","Date","Number","isFinite","number","Infinity","bound","model","json","boundCache","defaultEncodeFormAction","identifierPrefix","referenceClosure","reference","thenable","res","rej","body","e","encodeFormData","prefixedData","name","method","encType","isSignatureEqual","referenceId","numberOfBoundArgs","boundPromise","boundArgs","error","registerBoundServerReference","encodeFormAction","has","originalBind","defineProperties","$$FORM_ACTION","$$IS_SIGNATURE_EQUAL","FunctionBind","Function","ArraySlice","apply","arguments","newFn","args","concat","ReactPromise","response","_response","readChunk","chunk","initializeModelChunk","initializeModuleChunk","createPendingChunk","wakeChunk","listeners","wakeChunkIfInitialized","resolveListeners","rejectListeners","triggerErrorOnChunk","createResolvedIteratorResultChunk","resolveIteratorResultChunk","resolveModelChunk","enqueueModel","resolveModuleChunk","create","initializingHandler","prevHandler","parse","_fromJSON","errored","deps","reportGlobalError","_closed","_closedReason","_chunks","createLazyChunkWrapper","getChunk","waitForReference","referencedChunk","parentObject","path","handler","parent","fulfill","splice","props","loadServerReference","metaData","_serverReferenceConfig","createBoundServerReference","callServer","_callServer","_encodeFormAction","serverReference","bundlerConfig","resolvedModuleData","idx","lastIndexOf","async","resolvedValue","unshift","getOutlinedModel","parseInt","createMap","createSet","createBlob","type","createFormData","extractIterator","createModel","missingCall","ResponseInstance","serverReferenceConfig","moduleLoading","nonce","_bundlerConfig","_moduleLoading","_nonce","_stringDecoder","TextDecoder","_rowLength","_rowTag","_rowID","_rowState","_buffer","_tempRefs","createFromJSONCallback","parseModelString","resolveErrorProd","NaN","BigInt","ref","blockedChunk","resolveBuffer","enqueueValue","resolveStream","controller","startReadableStream","start","c","previousBlockedChunk","enqueue","v","chunk$52","close","startAsyncIterable","closed","nextWriteIndex","$jscomp$compprop0","nextReadIndex","createIterator","arg","stack","message","mergeBuffer","lastChunk","l","i$53","resolveTypedArray","constructor","bytesPerElement","noServerCall","createResponseFromOptions","serverConsumerManifest","moduleMap","serverModuleMap","startReadingFromStream","_ref","rowState","rowTag","rowLength","chunkLength","lastIdx","offset","processFullBinaryRow","stringDecoder","row","clientReference","resolveClientReference","prepareDestinationWithChunks","nonce$jscomp$0","d","JSCompiler_temp_const$jscomp$0","JSCompiler_temp_const","X","JSCompiler_temp_const$jscomp$1","JSCompiler_inline_result","crossOrigin","D","C","L","m","S","M","digest","catch","exports","promiseForResponse","r","abort","signal","aborted","listener","removeEventListener","addEventListener","unescapeSegments","str","compileNonPath","includes","keys","RegExp","compile","validate","matchHas","query","missing","hasMatch","hasItem","req","cookies","getCookieParser","paramName","newParamName","charCode","charCodeAt","matcher","matches","groupKey","allMatch","every","item","some","prepareDestination","destHostnameCompiler","newUrl","assign","parsedDestination","parseDestination","escaped","destination","escapeSegment","escapeStringRegexp","segmentName","parseUrl","href","hash","destHostname","destQuery","destPath","destParams","destPathParamKeys","pathToRegexp","destHostnameParamKeys","strOrArray","paramKeys","filter","appendParamsToQuery","isInterceptionRouteAppPath","marker","INTERCEPTION_ROUTE_MARKERS","find","segment","destPathCompiler","search","err","normalizePagePath","page","normalized","test","isDynamicRoute","ensureLeadingSlash","getSelectedParams","currentTree","parallelRoute","values","parallelRoutes","isDynamicParameter","segmentValue","PAGE_SEGMENT_KEY","extractPathFromFlightRouterState","flightRouterState","DEFAULT_SEGMENT_KEY","segments","segmentToPathname","childrenPath","children","childPath","normalizeSegments","reduce","acc","removeLeadingSlash","isGroupSegment","actionId","actionArgs","startTransition","ACTION_SERVER_ACTION","useUntrackedPathname","hasFallbackRouteParams","workAsyncStorage","workStore","getStore","fallbackRouteParams","size","PathnameContext","isParallelRouteSegment","removeTrailingSlash","route","normalizeAppPath","index","normalizeRscURL","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","extractInterceptionRouteInformation","interceptingRoute","interceptedRoute","splitInterceptingRoute","AppRouterContext","Unauthorized","HTTPAccessErrorFallback","HandleRedirect","redirect","reset","redirectType","useRouter","RedirectErrorBoundary","getDerivedStateFromError","isRedirectError","getURLFromRedirectError","getRedirectTypeFromError","render","RedirectBoundary","router","slashedProtocols","applyRef","refA","current","cleanup","formatStringOrUrl","urlObjOrString","formatUrl","auth","urlObj","protocol","encodeURIComponent","port","String","querystring","slashes","LinkComponent","child","link","linkStatus","setOptimisticLinkStatus","useOptimistic","IDLE_LINK_STATUS","linkInstanceRef","useRef","hrefProp","as","asProp","childrenProp","prefetch","prefetchProp","passHref","shallow","scroll","onClick","onMouseEnter","onMouseEnterProp","onTouchStart","onTouchStartProp","legacyBehavior","onNavigate","forwardedRef","unstable_dynamicOnHover","restProps","a","prefetchEnabled","appPrefetchKind","PrefetchKind","AUTO","FULL","resolvedHref","only","childRef","childProps","mergedRef","useMergedRef","refB","observeLinkVisibilityOnMount","cleanupA","cleanupB","useCallback","cleanupFnA","cleanupFnB","mountLinkInstance","element","unmountLinkForCurrentNavigation","unmountPrefetchableInstance","defaultPrevented","linkClicked","nodeName","currentTarget","isAnchorNodeName","toUpperCase","isModifiedEvent","target","event","getAttribute","metaKey","ctrlKey","shiftKey","altKey","nativeEvent","which","hasAttribute","isLocalURL","isAbsoluteUrl","locationOrigin","getLocationOrigin","resolved","hasBasePath","_","preventDefault","location","isDefaultPrevented","dispatchNavigateAction","onNavigationIntent","process","upgradeToDynamicPrefetch","NODE_ENV","addBasePath","LinkStatusContext","Provider","module","parseRelativeUrl","parseQuery","globalBase","resolvedBase","window","searchParams","searchParamsToUrlQuery","HTML_LIMITED_BOT_UA_RE","HEADLESS_BROWSER_BOT_UA_RE","HTML_LIMITED_BOT_UA_RE_STRING","source","isBot","userAgent","isDomBotUA","isHtmlLimitedBotUA","getBotType","TEST_ROUTE","TEST_STRICT_ROUTE","strict","setCacheBustingSearchParam","uniqueCacheKey","hexHash","NEXT_ROUTER_PREFETCH_HEADER","NEXT_ROUTER_SEGMENT_PREFETCH_HEADER","NEXT_ROUTER_STATE_TREE_HEADER","NEXT_URL","existingSearch","pairs","rawQuery","Boolean","NEXT_RSC_UNION_QUERY","createFromReadableStream","urlToUrlWithoutFlightMarker","urlWithoutFlightParameters","delete","doMpaNavigation","flightData","canonicalUrl","couldBeIntercepted","prerendered","postponed","staleTime","abortController","AbortController","fetchServerResponse","nextUrl","prefetchKind","RSC_HEADER","prepareFlightRouterStateForRequest","isHmrRefresh","fetchPriority","TEMPORARY","createFetch","responseUrl","redirected","contentType","interception","NEXT_DID_POSTPONE_HEADER","staleTimeHeaderSeconds","NEXT_ROUTER_STALE_TIME_HEADER","RSC_CONTENT_TYPE_HEADER","ok","flightStream","createUnclosingPrefetchStream","originalFlightStream","pull","createFromNextReadableStream","b","getAppBuildId","normalizeFlightData","f","fetchUrl","fetch","credentials","priority","findSourceMapURL","unresolvedThenable","addPathSuffix","suffix","parsePath","detectDomainLocale","domainItems","domainHostname","domain","defaultLocale","ignorePrefix","lower","addPathPrefix","Forbidden","getPathMatch","regexp","delimiter","sensitive","regexpToFunction","regexModifier","flags","removeUnnamedParams","notEnabled","getCurrentCacheVersion","schedulePrefetchTask","cancelPrefetchTask","reschedulePrefetchTask","createCacheKey","PrefetchPriority","ClientPageRoot","Component","clientSearchParams","clientParams","store","InvariantError","createSearchParamsFromClient","createParamsFromClient","DYNAMIC_ERROR_CODE","DynamicServerError","description","isDynamicServerError","invalidServerComponentReactHooks","setMessage","lines","getStackWithoutErrorMessage","formatServerError","addedMessage","clientHook","regex","encodeURIPath","file","extractInfoFromServerReferenceId","infoByte","argMask","usedArgs","bit","typeBit","hasRestArgs","restArgs","createInitialRouterState","initialSeedData","navigatedAt","initialFlightData","initialCanonicalUrlParts","initialParallelRoutes","initialCanonicalUrl","normalizedFlightData","getFlightDataPartsFromPath","tree","initialTree","seedData","head","initialHead","cache","lazyData","rsc","prefetchRsc","prefetchHead","loading","createHrefFromUrl","addRefreshMarkerToActiveParallelSegments","prefetchCache","fillLazyItemsTillLeafWithHead","initialState","pushRef","pendingPush","mpaNavigation","preserveCustomHistoryState","focusAndScrollRef","onlyHashChange","hashFragment","segmentPaths","createSeededPrefetchCacheEntry","STATIC_STALETIME_MS","kind","NEXT_STATIC_GEN_BAILOUT","StaticGenBailoutError","code","isStaticGenBailoutError","existing","stringifyUrlQueryParam","isNaN","urlQueryToSearchParams","URLSearchParams","ClientSegmentRoot","slots","NEXT_HMR_REFRESH_HEADER","isPlainObject","hasOwnProperty","isDefinitelyAValidIdentifier","describeStringPropertyAccess","prop","describeHasCheckingStringProperty","stringifiedProp","wellKnownProperties","ALLOWED_CODES","NOT_FOUND","FORBIDDEN","UNAUTHORIZED","isHTTPAccessFallbackError","httpStatus","HTTP_ERROR_FALLBACK_ERROR_CODE","hashIndex","queryIndex","hasQuery","substring","withoutPrefix","addLocale","encodeSegment","encodeToFilesystemAndURLSafeString","paramValue","paramType","safeName","encodedName","safeValue","simpleParamValueRegex","btoa","base64url","RedirectStatusCode","BAILOUT_TO_CSR","errorCode","statusCode","at","REDIRECT_ERROR_CODE","parallelRouteKey","slotKey","isFunction","valOrFunction","resolveValue","genId","count","prefersReducedMotion","shouldReduceMotion","reducer","TOAST_LIMIT","t","toast","toastId","diff","memoryState","defaultTimeouts","useStore","toastOptions","useState","initial","_a","_b","useEffect","mergedToasts","_c","createToast","opts","createHandler","msgs","successMessage","errorMessage","updateHeight","height","startPause","toastTimeouts","REMOVE_DELAY","addToRemoveQueue","removeDelay","timeout","useToaster","toasts","pausedAt","styled","now","timeouts","durationLeft","endPause","LoaderIcon","calculateOffset","reverseOrder","gutter","defaultPosition","relevantToasts","toastIndex","toastsBefore","circleAnimation","position","keyframes","firstLineAnimation","secondLineAnimation","ErrorIcon","getAnimationStyle","rotate","css","animationStyle","checkmarkAnimation","CheckmarkIcon","onHeightUpdate","StatusWrapper","horizontalStyle","IndicatorWrapper","enter","Toaster","AnimatedIconWrapper","ToastIcon","icon","iconTheme","enterAnimation","factor","exitAnimation","ToastBarBase","fadeInAnimation","Message","visible","exit","fadeOutAnimation","ToastBar","style","ToastWrapper","className","el","getPositionStyle","top","verticalStyle","activeClass","DEFAULT_OFFSET","containerStyle","containerClassName","handlers","toastPosition","positionStyle","lowercasedLocales","PromiseQueue","promiseFn","taskResolve","taskReject","taskPromise","task","enqueueResult","bump","findIndex","bumpedItem","maxConcurrency","forced","shift","prefetchQueue","prefetchReducer","prefetchReducerImpl","prunePrefetchCache","identityReducerWhenSegmentCacheIsEnabled","getOrCreatePrefetchCacheEntry","allowAliasing","LayoutGroupContext","reHasRegExp","reReplaceRegExp","styles","fontFamily","textAlign","display","flexDirection","alignItems","justifyContent","desc","h1","margin","padding","fontSize","fontWeight","verticalAlign","lineHeight","h2","title","div","dangerouslySetInnerHTML","__html","COMPILER_NAMES","client","server","edgeServer","UNDERSCORE_NOT_FOUND_ROUTE","STATIC_STATUS_PAGES","normalizePathSep","denormalizePagePath","_page","UrlNode","insert","urlPath","_insert","smoosh","_smoosh","childrenPaths","sort","slugName","restSlugName","optionalRestSlugName","routes","prev","curr","placeholder","urlPaths","slugNames","isCatchAll","nextSegment","isOptional","handleSlug","previousSlug","nextSlug","slug","getSortedRoutes","normalizedPages","pagePath","escapeEncoded","char","getRouteFromAssetPath","ext","assetPath","addSearchParamsIfPageSegment","isPageSegment","stringifiedQuery","bailoutToClientRendering","forceStatic","isStaticGeneration","BailoutToCSRError","HTTPAccessFallbackErrorBoundary","componentDidCatch","triggeredStatus","getAccessFallbackHTTPStatus","getDerivedStateFromProps","previousPathname","notFound","forbidden","unauthorized","errorComponents","HTTPAccessErrorStatus","isNotFound","isForbidden","isUnauthorized","meta","content","HTTPAccessFallbackBoundary","missingSlots","MissingSlotContext","hasErrorFallback","PresenceContext","useServerInsertedMetadata","setMetadataResolver","ServerInsertedMetadataContext","metadataResolver","ServerInsertMetadata","AsyncMetadata","AsyncMetadataOutlet","Suspense","fallback","MetadataOutlet","unstable_rethrow","isNextRouterError","isBailoutToCSRError","isDynamicPostpone","isPostpone","isHangingPromiseRejectionError","text","HandleISRError","isRevalidate","console","ErrorBoundaryHandler","errorStyles","errorScripts","this","errorComponent","GlobalError","html","NotFound","RouterContext","AmpStateContext","ImageConfigContext","imageConfigDefault","deviceSizes","imageSizes","loader","loaderFile","domains","disableStaticImages","minimumCacheTTL","formats","dangerouslyAllowSVG","contentSecurityPolicy","contentDispositionType","localPatterns","remotePatterns","qualities","unoptimized","djb2Hash","RedirectType","matchSegment","existingSegment","linkForMostRecentNavigation","PENDING_LINK_STATUS","pending","setLinkForCurrentNavigation","prefetchable","prefetchableAndVisible","observer","IntersectionObserver","handleIntersect","isVisible","intersectionRatio","instance","add","rescheduleLinkPrefetch","rootMargin","prefetchURL","coercePrefetchableUrl","createPrefetchURL","reportErrorFn","reportError","wasHoveredOrTouched","prefetchTask","cacheVersion","prefetchHref","existingInstance","observe","unobserve","unstable_upgradeToDynamicPrefetch","existingPrefetchTask","RenderFromTemplateContext","TemplateContext","MODERN_BROWSERSLIST_TARGET","ReadonlyURLSearchParamsError","ReadonlyURLSearchParams","useDynamicRouteParams","useSearchParams","SearchParamsContext","readonlySearchParams","useMemo","usePathname","createPrefetchCacheKeyImpl","includeSearchParams","pathnameFromUrl","INTERCEPTION_CACHE_KEY_MARKER","createPrefetchCacheKey","existingCacheEntry","getExistingCacheEntry","maybeNextUrl","cacheKeyWithParams","cacheKeyWithoutParams","cacheKeyToUse","existingEntry","isAliased","aliased","entryWithoutParams","cacheEntry","getPrefetchEntryCacheStatus","isFullPrefetch","prefetchResponse","isRootRender","createLazyPrefetchEntry","prefetchCacheKey","prefetchEntry","treeAtTimeOfPrefetch","prefetchTime","lastUsedTime","PrefetchCacheEntryStatus","fresh","newCacheKey","prefixExistingPrefetchCacheEntry","existingCacheKey","prefetchCacheEntry","expired","DYNAMIC_STALETIME_MS","stale","reusable","newCache","existingCache","routerState","cacheNodeSeedData","isLastSegment","newCacheNode","parallelRouteState","segmentForParallelRoute","cacheKey","createRouterCacheKey","parallelSeedData","existingParallelRoutesCacheNode","hasReusablePrefetch","parallelRouteCacheNode","existingCacheNode","seedNode","existingParallelRoutes","REACT_LEGACY_ELEMENT_TYPE","REACT_FRAGMENT_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_MEMO_CACHE_SENTINEL","handleErrorInNextTick","setTimeoutOrImmediate","LocalPromise","scheduleMicrotask","queueMicrotask","currentView","writtenBytes","writeChunkAndReturn","allowableBytes","subarray","textEncoder","TextEncoder","stringToChunk","encode","byteLengthOfChunk","closeWithError","CLIENT_REFERENCE_TAG$1","SERVER_REFERENCE_TAG","registerClientReferenceImpl","proxyImplementation","$$id","$$async","$$bound","configurable","PROMISE_PROTOTYPE","deepProxyHandlers","toPrimitive","toStringTag","getReference","moduleId","proxy","Proxy","proxyHandlers$1","defineProperty","getOwnPropertyDescriptor","descriptor","writable","enumerable","previousDispatcher","trimOptions","hasProperties","trimmed","prefetchDNS","request","resolveRequest","hints","emitHint","preconnect","preload","imageSrcSet","uniquePart","preloadModule$1","preinitScript","src","preinitStyle","precedence","preinitModuleScript","supportsRequestStorage","AsyncLocalStorage","requestStorage","async_hooks","createHook","executionAsyncId","TEMPORARY_REFERENCE_TAG","proxyHandlers","SuspenseException","noop$1","suspendedThenable","getSuspendedThenable","currentRequest$1","thenableIndexCounter","thenableState","getThenableStateAfterSuspending","HooksDispatcher","readContext","unsupportedContext","usable","fulfilledValue","fulfilledThenable","rejectedThenable","unsupportedHook","useImperativeHandle","useLayoutEffect","useInsertionEffect","nextCreate","useReducer","useDebugValue","useDeferredValue","useTransition","useSyncExternalStore","useId","identifierCount","useHostTransitionStatus","useFormState","useActionState","useMemoCache","useCacheRefresh","unsupportedRefresh","DefaultAsyncDispatcher","getCacheForType","resourceType","ReactSharedInternalsServer","__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","objectName","object","p0","describeValueForErrorMessage","CLIENT_REFERENCE_TAG","displayName","describeObjectForErrorMessage","objectOrArray","expandedName","objKind","describeElementType","payload","encodedKey","defaultErrorHandler","defaultPostponeHandler","RequestInstance","onError","onPostpone","environmentName","filterStackFrame","onAllReady","onFatalError","A","flushScheduled","fatalError","pendingChunks","nextChunkId","abortListeners","abortableTasks","pingedTasks","completedImportChunks","completedHintChunks","completedRegularChunks","completedErrorChunks","writtenSymbols","writtenClientReferences","writtenServerReferences","taintCleanupQueue","createTask","noop","currentRequest","serializeThenable","newTask","keyPath","implicitSlot","pingTask","erroredTask","serializeByValueID","emitModelChunk","enqueueFlush","readThenable","voidHandler","renderFunctionComponent","prevThenableState","processServerComponentReturnValue","wakeable","iteratorFn","renderModelDestructive","emptyRoot","renderFragment","performWork","abortSet","ping","toJSON","parentPropertyName","prevKeyPath","prevImplicitSlot","thrownValue","logRecoverableError","emitErrorChunk","encodeReferenceChunk","serializeClientReference","clientReferenceKey","existingId","config","modulePath","importId","processedChunk","outlineModel","retryTask","bufferId","emitTypedArrayChunk","elementReference","existingReference","renderElement","serializeBlob","blob","abortBlob","cancel","abortStream","streamTask","supportsBYOB","releaseLock","emitChunk","x$7","abortIterable","throw","endStreamRow","x$8","emitTextChunk","prevRequest","errorDigest","run","binaryLength","prevDispatcher","H","hadAbortableTasks","flushCompletedChunks","importsChunks","hintChunks","regularChunks","errorChunks","startWork","startFlowing","errorId","clear","error$22","error$23","resolveServerReference","Chunk","initializingChunk","initializingChunkBlockedModel","prevChunk","prevBlocked","rootReference","rawModel","reviveModel","parentObj","parentKey","obj","loadServerReference$1","parentChunk","fn","createModelResolver","createModelReject","_temporaryReferences","formPrefix","_prefix","_formData","entryKey","parseTypedArray","parseReadableStream","parseAsyncIterable","cyclic","blocked","arrayBuffer","getAll","chunk$26","$jscomp$compprop2","createResponse","backingFormData","decodeBoundActionMetaData","serverManifest","actionResult","webpackMap","form","exportName","propertyIsEnumerable","setTimeout","highWaterMark","prelude","SwitchLayoutGroupContext","hasTakenAnySnapshot","MeasureLayoutWithContext","componentDidMount","visualElement","layoutGroup","switchLayoutGroup","layoutId","projection","register","didUpdate","safeToRemove","setOptions","onExitComplete","globalProjectionState","hasEverUpdated","prevProps","layoutDependency","drag","isPresent","willUpdate","promote","relegate","postRender","frame","getStack","members","componentDidUpdate","microtask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","usePresence","jsx","defaultScaleCorrectors","borderRadius","correctBorderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","correctBoxShadow","LazyContext","MotionContext","preloadedFeatures","createVisualElement","useRender","useVisualState","MotionComponent","externalRef","configAndProps","useLayoutId","layoutGroupId","context","useCreateMotionContext","visualState","isBrowser","layoutProjection","getProjectionFunctionality","layout","featureDefinitions","combined","isEnabled","ProjectionNode","useVisualElement","jsxs","useMotionRef","loadFeatures","ForwardRefMotionComponent","forwardRef","motionComponentSymbol","PARAMETER_PATTERN","parseMatchedParameter","optional","getSafeKeyFromSegment","pattern","interceptionMarker","getSafeRouteKey","routeKeys","keyPrefix","backreferenceDuplicateKeys","cleanedKey","invalidKey","duplicateKey","interceptionPrefix","performance","getNamedRouteRegex","getNamedParametrizedRoute","prefixRouteKeys","includeSuffix","includePrefix","routeKey","buildGetSafeRouteKey","j","fromCharCode","Math","floor","hasInterceptionMarker","paramMatches","NEXT_INTERCEPTION_MARKER_PREFIX","s","NEXT_QUERY_PARAM_PREFIX","namedParameterizedRoute","normalizedRoute","namedRegex","excludeOptionalTrailingSlash","getRouteRegex","parameterizedRoute","getParametrizedRoute","groupIndex","markerMatch","normalizePathTrailingSlash","required","SERVER_ACTION_MANIFESTS_SINGLETON","setReferenceManifestsSingleton","clientReferenceManifest","serverActionsManifest","clientReferenceManifestsPerPage","NameSpace","METADATA_BOUNDARY_NAME","VIEWPORT_BOUNDARY_NAME","OUTLET_BOUNDARY_NAME","MetadataBoundary","OutletBoundary","rectProperties","topOfElementInViewport","viewportHeight","rect","getBoundingClientRect","InnerScrollAndFocusHandler","handlePotentialScroll","segmentPath","scrollRefSegmentPath","domNode","getHashFragmentDomNode","document","getElementById","getElementsByName","findDOMNode","Element","HTMLElement","shouldSkipElement","getComputedStyle","nextElementSibling","handleSmoothScroll","htmlElement","documentElement","scrollBehavior","dontForceLayout","getClientRects","scrollIntoView","clientHeight","scrollTop","focus","ScrollAndFocusHandler","GlobalLayoutRouterContext","InnerLayoutRouter","cacheNode","fullTree","resolvedPrefetchRsc","resolvedRsc","refetchTree","walkAddRefetch","segmentPathToWalk","treeToRecreate","isLast","subTree","includeNextUrl","hasInterceptionRouteInCurrentTree","ACTION_SERVER_PATCH","previousTree","serverResponse","subtree","LayoutRouterContext","parentTree","parentCacheNode","parentSegmentPath","LoadingBoundary","loadingModuleData","promiseForLoading","loadingRsc","loadingStyles","loadingScripts","OuterLayoutRouter","parallelRouterKey","templateStyles","templateScripts","template","parentParallelRoutes","segmentMap","parentTreeSegment","treeSegment","stateKey","newLazyCacheNode","ErrorBoundary","getRedirectStatusCodeFromError","flightDataPath","isHeadPartial","flightDataPathLength","pathToSegment","stripClientOnlyDataFromFlightRouterState","refreshMarker","_url","isRootLayout","cleanedSegment","stripSearchParamsFromPageSegment","cleanedParallelRoutes","childState","shouldPreserveRefreshMarker","execOnce","used","ABSOLUTE_URL_REGEX","normalizeRepeatedSlashes","urlParts","NormalizeError","MissingStaticPage","AppRouterAnnouncer","portalNode","setPortalNode","routeAnnouncement","setRouteAnnouncement","createPortal","globalMutable","isExternalURL","navigator","HistoryUpdater","appRouterState","historyState","history","__NA","__PRIVATE_NEXTJS_INTERNALS_TREE","pushState","replaceState","createEmptyCacheNode","Head","headCacheNode","Router","assetPrefix","globalError","removeBasePath","pendingMpaPath","matchingHead","findHeadInCacheImpl","isLastItem","parallelRoutesKeys","childParallelRoutes","childSegmentMap","pathParams","layoutRouterContext","globalLayoutRouterContext","headKey","RuntimeStyles","PathParamsContext","publicAppRouterInstance","AppRouter","globalErrorComponentAndStyles","globalErrorComponent","globalErrorStyles","DefaultGlobalError","runtimeStyles","runtimeStyleChanged","forceUpdate","rel","dplId","_N_E_STYLE_LOAD","len","cb","parsedURL","parseParameter","MPA_NAVIGATION_TASK","node","dynamicRequestTree","patchRouterStateWithNewChildren","baseRouterState","newChildren","clone","spawnPendingTask","prefetchData","isPrefetchHeadPartial","scrollableSegmentsResult","createPendingCacheNode","routerStateChildren","prefetchDataChildren","routerStateChild","prefetchDataChild","segmentChild","segmentPathChild","segmentKeyChild","newCacheNodeChild","newSegmentMapChild","isLeafSegment","maybePrefetchRsc","maybePrefetchLoading","createDeferredRsc","DEFERRED","isDeferredRsc","pendingRsc","fulfilledRsc","rejectedRsc","createFromFetch","createTemporaryReferenceSet","encodeReply","runRemainingActions","runAction","needsRefresh","ACTION_REFRESH","prevState","handleResult","nextState","discarded","createMutableActionQueue","instrumentationHooks","dispatchAction","resolvers","ACTION_RESTORE","deferredPromise","newAction","last","ACTION_NAVIGATE","onRouterTransitionStart","getCurrentAppRouterState","globalActionQueue","getProfilingHookForOnNavigationStart","navigateType","shouldScroll","isExternalUrl","locationSearch","dispatchTraverseAction","back","forward","getAppRouterActionQueue","ACTION_PREFETCH","refresh","hmrRefresh","refetchMarker","withoutSearchParameters","includeHash","serializeReader","getAccessFallbackErrorTypeByStatus"],"sourceRoot":"","ignoreList":[2,3,5,6,8,9,14,15,20,22,23,25,26,27,29,30,34,35,36,40,41,43,44,46,47,49,50,51,53,54,55,64,65,66,67,69,70,72,73,74,75,76,80,86,88,90,91,94,95,97,98,100,101,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,169,171,173,175,177,179,180,182,183,184,185,186,187,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,222,223,224,225,226,227,228,229,234,235,236,237,238,239,240,241,242,243,244,245,246,247,253,254,255,256,257,258,259,261,262,265,266,269,270,271,272,273,274,275,278,279,282,284,285,286,287,288,289,290,291,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355,357,359,360,361,362,363,365,366,367,369,370,372,373,376,377,382,383,384,386,387,388,391,394,395,396,398,399,400,402,403,404,405,407,414,415,417,418,419,420,421,422,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,679,680,681,682,688,690,692,693,694,698,699,700,701,714,718,719,720,721,722,723,724,726,727]}